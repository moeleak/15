// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gcsystemmsgs.proto

#include "gcsystemmsgs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class CMsgGCHVacVerificationChangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCHVacVerificationChange>
      _instance;
} _CMsgGCHVacVerificationChange_default_instance_;
class CMsgGCHAccountPhoneNumberChangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCHAccountPhoneNumberChange>
      _instance;
} _CMsgGCHAccountPhoneNumberChange_default_instance_;
class CMsgGCHInviteUserToLobbyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCHInviteUserToLobby>
      _instance;
} _CMsgGCHInviteUserToLobby_default_instance_;
namespace protobuf_gcsystemmsgs_2eproto {
void InitDefaultsCMsgGCHVacVerificationChangeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCHVacVerificationChange_default_instance_;
    new (ptr) ::CMsgGCHVacVerificationChange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCHVacVerificationChange::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCHVacVerificationChange() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCHVacVerificationChangeImpl);
}

void InitDefaultsCMsgGCHAccountPhoneNumberChangeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCHAccountPhoneNumberChange_default_instance_;
    new (ptr) ::CMsgGCHAccountPhoneNumberChange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCHAccountPhoneNumberChange::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCHAccountPhoneNumberChange() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCHAccountPhoneNumberChangeImpl);
}

void InitDefaultsCMsgGCHInviteUserToLobbyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCHInviteUserToLobby_default_instance_;
    new (ptr) ::CMsgGCHInviteUserToLobby();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCHInviteUserToLobby::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCHInviteUserToLobby() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCHInviteUserToLobbyImpl);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHVacVerificationChange, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHVacVerificationChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHVacVerificationChange, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHVacVerificationChange, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHVacVerificationChange, is_verified_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountPhoneNumberChange, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountPhoneNumberChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountPhoneNumberChange, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountPhoneNumberChange, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountPhoneNumberChange, phone_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountPhoneNumberChange, is_verified_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountPhoneNumberChange, is_identifying_),
  0,
  2,
  1,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHInviteUserToLobby, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHInviteUserToLobby, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHInviteUserToLobby, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHInviteUserToLobby, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHInviteUserToLobby, steamid_invited_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHInviteUserToLobby, steamid_lobby_),
  0,
  3,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::CMsgGCHVacVerificationChange)},
  { 11, 21, sizeof(::CMsgGCHAccountPhoneNumberChange)},
  { 26, 35, sizeof(::CMsgGCHInviteUserToLobby)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCHVacVerificationChange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCHAccountPhoneNumberChange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCHInviteUserToLobby_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "gcsystemmsgs.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022gcsystemmsgs.proto\"S\n\034CMsgGCHVacVerifi"
      "cationChange\022\017\n\007steamid\030\001 \001(\006\022\r\n\005appid\030\002"
      " \001(\r\022\023\n\013is_verified\030\003 \001(\010\"\200\001\n\037CMsgGCHAcc"
      "ountPhoneNumberChange\022\017\n\007steamid\030\001 \001(\006\022\r"
      "\n\005appid\030\002 \001(\r\022\020\n\010phone_id\030\003 \001(\004\022\023\n\013is_ve"
      "rified\030\004 \001(\010\022\026\n\016is_identifying\030\005 \001(\010\"j\n\030"
      "CMsgGCHInviteUserToLobby\022\017\n\007steamid\030\001 \001("
      "\006\022\r\n\005appid\030\002 \001(\r\022\027\n\017steamid_invited\030\003 \001("
      "\006\022\025\n\rsteamid_lobby\030\004 \001(\006*\221\025\n\014EGCSystemMs"
      "g\022\023\n\017k_EGCMsgInvalid\020\000\022\021\n\rk_EGCMsgMulti\020"
      "\001\022\030\n\024k_EGCMsgGenericReply\020\n\022\026\n\022k_EGCMsgS"
      "ystemBase\0202\022\036\n\032k_EGCMsgAchievementAwarde"
      "d\0203\022\026\n\022k_EGCMsgConCommand\0204\022\030\n\024k_EGCMsgS"
      "tartPlaying\0205\022\027\n\023k_EGCMsgStopPlaying\0206\022\033"
      "\n\027k_EGCMsgStartGameserver\0207\022\032\n\026k_EGCMsgS"
      "topGameserver\0208\022\025\n\021k_EGCMsgWGRequest\0209\022\026"
      "\n\022k_EGCMsgWGResponse\020:\022\"\n\036k_EGCMsgGetUse"
      "rGameStatsSchema\020;\022*\n&k_EGCMsgGetUserGam"
      "eStatsSchemaResponse\020<\022\"\n\036k_EGCMsgGetUse"
      "rStatsDEPRECATED\020=\022 \n\034k_EGCMsgGetUserSta"
      "tsResponse\020>\022\032\n\026k_EGCMsgAppInfoUpdated\020\?"
      "\022\033\n\027k_EGCMsgValidateSession\020@\022#\n\037k_EGCMs"
      "gValidateSessionResponse\020A\022\"\n\036k_EGCMsgLo"
      "okupAccountFromInput\020B\022\033\n\027k_EGCMsgSendHT"
      "TPRequest\020C\022#\n\037k_EGCMsgSendHTTPRequestRe"
      "sponse\020D\022\030\n\024k_EGCMsgPreTestSetup\020E\022\037\n\033k_"
      "EGCMsgRecordSupportAction\020F\022(\n$k_EGCMsgG"
      "etAccountDetails_DEPRECATED\020G\022\"\n\036k_EGCMs"
      "gReceiveInterAppMessage\020I\022\030\n\024k_EGCMsgFin"
      "dAccounts\020J\022\025\n\021k_EGCMsgPostAlert\020K\022\027\n\023k_"
      "EGCMsgGetLicenses\020L\022\030\n\024k_EGCMsgGetUserSt"
      "ats\020M\022\027\n\023k_EGCMsgGetCommands\020N\022\037\n\033k_EGCM"
      "sgGetCommandsResponse\020O\022\032\n\026k_EGCMsgAddFr"
      "eeLicense\020P\022\"\n\036k_EGCMsgAddFreeLicenseRes"
      "ponse\020Q\022\031\n\025k_EGCMsgGetIPLocation\020R\022!\n\035k_"
      "EGCMsgGetIPLocationResponse\020S\022\035\n\031k_EGCMs"
      "gSystemStatsSchema\020T\022\032\n\026k_EGCMsgGetSyste"
      "mStats\020U\022\"\n\036k_EGCMsgGetSystemStatsRespon"
      "se\020V\022\025\n\021k_EGCMsgSendEmail\020W\022\035\n\031k_EGCMsgS"
      "endEmailResponse\020X\022\034\n\030k_EGCMsgGetEmailTe"
      "mplate\020Y\022$\n k_EGCMsgGetEmailTemplateResp"
      "onse\020Z\022\032\n\026k_EGCMsgGrantGuestPass\020[\022\"\n\036k_"
      "EGCMsgGrantGuestPassResponse\020\\\022\035\n\031k_EGCM"
      "sgGetAccountDetails\020]\022%\n!k_EGCMsgGetAcco"
      "untDetailsResponse\020^\022\033\n\027k_EGCMsgGetPerso"
      "naNames\020_\022#\n\037k_EGCMsgGetPersonaNamesResp"
      "onse\020`\022\030\n\024k_EGCMsgMultiplexMsg\020a\022 \n\034k_EG"
      "CMsgMultiplexMsgResponse\020b\022$\n k_EGCMsgWe"
      "bAPIRegisterInterfaces\020e\022\034\n\030k_EGCMsgWebA"
      "PIJobRequest\020f\022(\n$k_EGCMsgWebAPIJobReque"
      "stHttpResponse\020h\022+\n\'k_EGCMsgWebAPIJobReq"
      "uestForwardResponse\020i\022\031\n\024k_EGCMsgMemCach"
      "edGet\020\310\001\022!\n\034k_EGCMsgMemCachedGetResponse"
      "\020\311\001\022\031\n\024k_EGCMsgMemCachedSet\020\312\001\022\034\n\027k_EGCM"
      "sgMemCachedDelete\020\313\001\022\033\n\026k_EGCMsgMemCache"
      "dStats\020\314\001\022#\n\036k_EGCMsgMemCachedStatsRespo"
      "nse\020\315\001\022\037\n\032k_EGCMsgMasterSetDirectory\020\334\001\022"
      "\'\n\"k_EGCMsgMasterSetDirectoryResponse\020\335\001"
      "\022#\n\036k_EGCMsgMasterSetWebAPIRouting\020\336\001\022+\n"
      "&k_EGCMsgMasterSetWebAPIRoutingResponse\020"
      "\337\001\022&\n!k_EGCMsgMasterSetClientMsgRouting\020"
      "\340\001\022.\n)k_EGCMsgMasterSetClientMsgRoutingR"
      "esponse\020\341\001\022\027\n\022k_EGCMsgSetOptions\020\342\001\022\037\n\032k"
      "_EGCMsgSetOptionsResponse\020\343\001\022\030\n\023k_EGCMsg"
      "SystemBase2\020\364\003\022#\n\036k_EGCMsgGetPurchaseTru"
      "stStatus\020\365\003\022+\n&k_EGCMsgGetPurchaseTrustS"
      "tatusResponse\020\366\003\022\032\n\025k_EGCMsgUpdateSessio"
      "n\020\367\003\022%\n k_EGCMsgGCAccountVacStatusChange"
      "\020\370\003\022\034\n\027k_EGCMsgCheckFriendship\020\371\003\022$\n\037k_E"
      "GCMsgCheckFriendshipResponse\020\372\003\022\"\n\035k_EGC"
      "MsgGetPartnerAccountLink\020\373\003\022*\n%k_EGCMsgG"
      "etPartnerAccountLinkResponse\020\374\003\022\037\n\032k_EGC"
      "MsgDPPartnerMicroTxns\020\200\004\022\'\n\"k_EGCMsgDPPa"
      "rtnerMicroTxnsResponse\020\201\004\022\"\n\035k_EGCMsgVac"
      "VerificationChange\020\206\004\022%\n k_EGCMsgAccount"
      "PhoneNumberChange\020\207\004\022\036\n\031k_EGCMsgInviteUs"
      "erToLobby\020\213\004*\357\001\n\006ESOMsg\022\023\n\017k_ESOMsg_Crea"
      "te\020\025\022\023\n\017k_ESOMsg_Update\020\026\022\024\n\020k_ESOMsg_De"
      "stroy\020\027\022\034\n\030k_ESOMsg_CacheSubscribed\020\030\022\036\n"
      "\032k_ESOMsg_CacheUnsubscribed\020\031\022\033\n\027k_ESOMs"
      "g_UpdateMultiple\020\032\022#\n\037k_ESOMsg_CacheSubs"
      "criptionCheck\020\033\022%\n!k_ESOMsg_CacheSubscri"
      "ptionRefresh\020\034*\331\002\n\020EGCBaseClientMsg\022\032\n\025k"
      "_EMsgGCClientWelcome\020\244\037\022\032\n\025k_EMsgGCServe"
      "rWelcome\020\245\037\022\030\n\023k_EMsgGCClientHello\020\246\037\022\030\n"
      "\023k_EMsgGCServerHello\020\247\037\022#\n\036k_EMsgGCClien"
      "tConnectionStatus\020\251\037\022#\n\036k_EMsgGCServerCo"
      "nnectionStatus\020\252\037\022\037\n\032k_EMsgGCClientHello"
      "Partner\020\253\037\022\032\n\025k_EMsgGCClientHelloPW\020\254\037\022\032"
      "\n\025k_EMsgGCClientHelloR2\020\255\037\022\032\n\025k_EMsgGCCl"
      "ientHelloR3\020\256\037\022\032\n\025k_EMsgGCClientHelloR4\020"
      "\257\037*\211\002\n\nEGCToGCMsg\022\032\n\025k_EGCToGCMsgMasterA"
      "ck\020\226\001\022\"\n\035k_EGCToGCMsgMasterAckResponse\020\227"
      "\001\022\027\n\022k_EGCToGCMsgRouted\020\230\001\022\034\n\027k_EGCToGCM"
      "sgRoutedReply\020\231\001\022\032\n\025k_EMsgUpdateSessionI"
      "P\020\232\001\022\033\n\026k_EMsgRequestSessionIP\020\233\001\022#\n\036k_E"
      "MsgRequestSessionIPResponse\020\234\001\022&\n!k_EGCT"
      "oGCMsgMasterStartupComplete\020\235\001B\005H\001\200\001\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3917);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gcsystemmsgs.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_gcsystemmsgs_2eproto
const ::google::protobuf::EnumDescriptor* EGCSystemMsg_descriptor() {
  protobuf_gcsystemmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsystemmsgs_2eproto::file_level_enum_descriptors[0];
}
bool EGCSystemMsg_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 10:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 101:
    case 102:
    case 104:
    case 105:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 220:
    case 221:
    case 222:
    case 223:
    case 224:
    case 225:
    case 226:
    case 227:
    case 500:
    case 501:
    case 502:
    case 503:
    case 504:
    case 505:
    case 506:
    case 507:
    case 508:
    case 512:
    case 513:
    case 518:
    case 519:
    case 523:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ESOMsg_descriptor() {
  protobuf_gcsystemmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsystemmsgs_2eproto::file_level_enum_descriptors[1];
}
bool ESOMsg_IsValid(int value) {
  switch (value) {
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EGCBaseClientMsg_descriptor() {
  protobuf_gcsystemmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsystemmsgs_2eproto::file_level_enum_descriptors[2];
}
bool EGCBaseClientMsg_IsValid(int value) {
  switch (value) {
    case 4004:
    case 4005:
    case 4006:
    case 4007:
    case 4009:
    case 4010:
    case 4011:
    case 4012:
    case 4013:
    case 4014:
    case 4015:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EGCToGCMsg_descriptor() {
  protobuf_gcsystemmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsystemmsgs_2eproto::file_level_enum_descriptors[3];
}
bool EGCToGCMsg_IsValid(int value) {
  switch (value) {
    case 150:
    case 151:
    case 152:
    case 153:
    case 154:
    case 155:
    case 156:
    case 157:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CMsgGCHVacVerificationChange::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCHVacVerificationChange::kSteamidFieldNumber;
const int CMsgGCHVacVerificationChange::kAppidFieldNumber;
const int CMsgGCHVacVerificationChange::kIsVerifiedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCHVacVerificationChange::CMsgGCHVacVerificationChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsystemmsgs_2eproto::InitDefaultsCMsgGCHVacVerificationChange();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCHVacVerificationChange)
}
CMsgGCHVacVerificationChange::CMsgGCHVacVerificationChange(const CMsgGCHVacVerificationChange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_verified_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(is_verified_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCHVacVerificationChange)
}

void CMsgGCHVacVerificationChange::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_verified_) -
      reinterpret_cast<char*>(&steamid_)) + sizeof(is_verified_));
}

CMsgGCHVacVerificationChange::~CMsgGCHVacVerificationChange() {
  // @@protoc_insertion_point(destructor:CMsgGCHVacVerificationChange)
  SharedDtor();
}

void CMsgGCHVacVerificationChange::SharedDtor() {
}

void CMsgGCHVacVerificationChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCHVacVerificationChange::descriptor() {
  ::protobuf_gcsystemmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsystemmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCHVacVerificationChange& CMsgGCHVacVerificationChange::default_instance() {
  ::protobuf_gcsystemmsgs_2eproto::InitDefaultsCMsgGCHVacVerificationChange();
  return *internal_default_instance();
}

CMsgGCHVacVerificationChange* CMsgGCHVacVerificationChange::New(::google::protobuf::Arena* arena) const {
  CMsgGCHVacVerificationChange* n = new CMsgGCHVacVerificationChange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCHVacVerificationChange::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCHVacVerificationChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_verified_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(is_verified_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCHVacVerificationChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCHVacVerificationChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 appid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_verified = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_is_verified();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_verified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCHVacVerificationChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCHVacVerificationChange)
  return false;
#undef DO_
}

void CMsgGCHVacVerificationChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCHVacVerificationChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appid(), output);
  }

  // optional bool is_verified = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_verified(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCHVacVerificationChange)
}

::google::protobuf::uint8* CMsgGCHVacVerificationChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCHVacVerificationChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appid(), target);
  }

  // optional bool is_verified = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_verified(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCHVacVerificationChange)
  return target;
}

size_t CMsgGCHVacVerificationChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCHVacVerificationChange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional uint32 appid = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional bool is_verified = 3;
    if (has_is_verified()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCHVacVerificationChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCHVacVerificationChange)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCHVacVerificationChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCHVacVerificationChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCHVacVerificationChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCHVacVerificationChange)
    MergeFrom(*source);
  }
}

void CMsgGCHVacVerificationChange::MergeFrom(const CMsgGCHVacVerificationChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCHVacVerificationChange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000004u) {
      is_verified_ = from.is_verified_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCHVacVerificationChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCHVacVerificationChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCHVacVerificationChange::CopyFrom(const CMsgGCHVacVerificationChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCHVacVerificationChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCHVacVerificationChange::IsInitialized() const {
  return true;
}

void CMsgGCHVacVerificationChange::Swap(CMsgGCHVacVerificationChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCHVacVerificationChange::InternalSwap(CMsgGCHVacVerificationChange* other) {
  using std::swap;
  swap(steamid_, other->steamid_);
  swap(appid_, other->appid_);
  swap(is_verified_, other->is_verified_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCHVacVerificationChange::GetMetadata() const {
  protobuf_gcsystemmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsystemmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCHAccountPhoneNumberChange::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCHAccountPhoneNumberChange::kSteamidFieldNumber;
const int CMsgGCHAccountPhoneNumberChange::kAppidFieldNumber;
const int CMsgGCHAccountPhoneNumberChange::kPhoneIdFieldNumber;
const int CMsgGCHAccountPhoneNumberChange::kIsVerifiedFieldNumber;
const int CMsgGCHAccountPhoneNumberChange::kIsIdentifyingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCHAccountPhoneNumberChange::CMsgGCHAccountPhoneNumberChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsystemmsgs_2eproto::InitDefaultsCMsgGCHAccountPhoneNumberChange();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCHAccountPhoneNumberChange)
}
CMsgGCHAccountPhoneNumberChange::CMsgGCHAccountPhoneNumberChange(const CMsgGCHAccountPhoneNumberChange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_identifying_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(is_identifying_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCHAccountPhoneNumberChange)
}

void CMsgGCHAccountPhoneNumberChange::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_identifying_) -
      reinterpret_cast<char*>(&steamid_)) + sizeof(is_identifying_));
}

CMsgGCHAccountPhoneNumberChange::~CMsgGCHAccountPhoneNumberChange() {
  // @@protoc_insertion_point(destructor:CMsgGCHAccountPhoneNumberChange)
  SharedDtor();
}

void CMsgGCHAccountPhoneNumberChange::SharedDtor() {
}

void CMsgGCHAccountPhoneNumberChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCHAccountPhoneNumberChange::descriptor() {
  ::protobuf_gcsystemmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsystemmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCHAccountPhoneNumberChange& CMsgGCHAccountPhoneNumberChange::default_instance() {
  ::protobuf_gcsystemmsgs_2eproto::InitDefaultsCMsgGCHAccountPhoneNumberChange();
  return *internal_default_instance();
}

CMsgGCHAccountPhoneNumberChange* CMsgGCHAccountPhoneNumberChange::New(::google::protobuf::Arena* arena) const {
  CMsgGCHAccountPhoneNumberChange* n = new CMsgGCHAccountPhoneNumberChange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCHAccountPhoneNumberChange::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCHAccountPhoneNumberChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_identifying_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(is_identifying_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCHAccountPhoneNumberChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCHAccountPhoneNumberChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 appid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 phone_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_phone_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &phone_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_verified = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_is_verified();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_verified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_identifying = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_is_identifying();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_identifying_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCHAccountPhoneNumberChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCHAccountPhoneNumberChange)
  return false;
#undef DO_
}

void CMsgGCHAccountPhoneNumberChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCHAccountPhoneNumberChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appid(), output);
  }

  // optional uint64 phone_id = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->phone_id(), output);
  }

  // optional bool is_verified = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_verified(), output);
  }

  // optional bool is_identifying = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_identifying(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCHAccountPhoneNumberChange)
}

::google::protobuf::uint8* CMsgGCHAccountPhoneNumberChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCHAccountPhoneNumberChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appid(), target);
  }

  // optional uint64 phone_id = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->phone_id(), target);
  }

  // optional bool is_verified = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_verified(), target);
  }

  // optional bool is_identifying = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_identifying(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCHAccountPhoneNumberChange)
  return target;
}

size_t CMsgGCHAccountPhoneNumberChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCHAccountPhoneNumberChange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional uint64 phone_id = 3;
    if (has_phone_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->phone_id());
    }

    // optional uint32 appid = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional bool is_verified = 4;
    if (has_is_verified()) {
      total_size += 1 + 1;
    }

    // optional bool is_identifying = 5;
    if (has_is_identifying()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCHAccountPhoneNumberChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCHAccountPhoneNumberChange)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCHAccountPhoneNumberChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCHAccountPhoneNumberChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCHAccountPhoneNumberChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCHAccountPhoneNumberChange)
    MergeFrom(*source);
  }
}

void CMsgGCHAccountPhoneNumberChange::MergeFrom(const CMsgGCHAccountPhoneNumberChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCHAccountPhoneNumberChange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      phone_id_ = from.phone_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000008u) {
      is_verified_ = from.is_verified_;
    }
    if (cached_has_bits & 0x00000010u) {
      is_identifying_ = from.is_identifying_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCHAccountPhoneNumberChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCHAccountPhoneNumberChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCHAccountPhoneNumberChange::CopyFrom(const CMsgGCHAccountPhoneNumberChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCHAccountPhoneNumberChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCHAccountPhoneNumberChange::IsInitialized() const {
  return true;
}

void CMsgGCHAccountPhoneNumberChange::Swap(CMsgGCHAccountPhoneNumberChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCHAccountPhoneNumberChange::InternalSwap(CMsgGCHAccountPhoneNumberChange* other) {
  using std::swap;
  swap(steamid_, other->steamid_);
  swap(phone_id_, other->phone_id_);
  swap(appid_, other->appid_);
  swap(is_verified_, other->is_verified_);
  swap(is_identifying_, other->is_identifying_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCHAccountPhoneNumberChange::GetMetadata() const {
  protobuf_gcsystemmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsystemmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCHInviteUserToLobby::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCHInviteUserToLobby::kSteamidFieldNumber;
const int CMsgGCHInviteUserToLobby::kAppidFieldNumber;
const int CMsgGCHInviteUserToLobby::kSteamidInvitedFieldNumber;
const int CMsgGCHInviteUserToLobby::kSteamidLobbyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCHInviteUserToLobby::CMsgGCHInviteUserToLobby()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsystemmsgs_2eproto::InitDefaultsCMsgGCHInviteUserToLobby();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCHInviteUserToLobby)
}
CMsgGCHInviteUserToLobby::CMsgGCHInviteUserToLobby(const CMsgGCHInviteUserToLobby& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&appid_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(appid_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCHInviteUserToLobby)
}

void CMsgGCHInviteUserToLobby::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&appid_) -
      reinterpret_cast<char*>(&steamid_)) + sizeof(appid_));
}

CMsgGCHInviteUserToLobby::~CMsgGCHInviteUserToLobby() {
  // @@protoc_insertion_point(destructor:CMsgGCHInviteUserToLobby)
  SharedDtor();
}

void CMsgGCHInviteUserToLobby::SharedDtor() {
}

void CMsgGCHInviteUserToLobby::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCHInviteUserToLobby::descriptor() {
  ::protobuf_gcsystemmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsystemmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCHInviteUserToLobby& CMsgGCHInviteUserToLobby::default_instance() {
  ::protobuf_gcsystemmsgs_2eproto::InitDefaultsCMsgGCHInviteUserToLobby();
  return *internal_default_instance();
}

CMsgGCHInviteUserToLobby* CMsgGCHInviteUserToLobby::New(::google::protobuf::Arena* arena) const {
  CMsgGCHInviteUserToLobby* n = new CMsgGCHInviteUserToLobby;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCHInviteUserToLobby::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCHInviteUserToLobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&appid_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(appid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCHInviteUserToLobby::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCHInviteUserToLobby)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 appid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steamid_invited = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_steamid_invited();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_invited_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steamid_lobby = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_steamid_lobby();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_lobby_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCHInviteUserToLobby)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCHInviteUserToLobby)
  return false;
#undef DO_
}

void CMsgGCHInviteUserToLobby::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCHInviteUserToLobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appid(), output);
  }

  // optional fixed64 steamid_invited = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->steamid_invited(), output);
  }

  // optional fixed64 steamid_lobby = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->steamid_lobby(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCHInviteUserToLobby)
}

::google::protobuf::uint8* CMsgGCHInviteUserToLobby::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCHInviteUserToLobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appid(), target);
  }

  // optional fixed64 steamid_invited = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->steamid_invited(), target);
  }

  // optional fixed64 steamid_lobby = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->steamid_lobby(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCHInviteUserToLobby)
  return target;
}

size_t CMsgGCHInviteUserToLobby::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCHInviteUserToLobby)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional fixed64 steamid_invited = 3;
    if (has_steamid_invited()) {
      total_size += 1 + 8;
    }

    // optional fixed64 steamid_lobby = 4;
    if (has_steamid_lobby()) {
      total_size += 1 + 8;
    }

    // optional uint32 appid = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCHInviteUserToLobby::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCHInviteUserToLobby)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCHInviteUserToLobby* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCHInviteUserToLobby>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCHInviteUserToLobby)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCHInviteUserToLobby)
    MergeFrom(*source);
  }
}

void CMsgGCHInviteUserToLobby::MergeFrom(const CMsgGCHInviteUserToLobby& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCHInviteUserToLobby)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_invited_ = from.steamid_invited_;
    }
    if (cached_has_bits & 0x00000004u) {
      steamid_lobby_ = from.steamid_lobby_;
    }
    if (cached_has_bits & 0x00000008u) {
      appid_ = from.appid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCHInviteUserToLobby::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCHInviteUserToLobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCHInviteUserToLobby::CopyFrom(const CMsgGCHInviteUserToLobby& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCHInviteUserToLobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCHInviteUserToLobby::IsInitialized() const {
  return true;
}

void CMsgGCHInviteUserToLobby::Swap(CMsgGCHInviteUserToLobby* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCHInviteUserToLobby::InternalSwap(CMsgGCHInviteUserToLobby* other) {
  using std::swap;
  swap(steamid_, other->steamid_);
  swap(steamid_invited_, other->steamid_invited_);
  swap(steamid_lobby_, other->steamid_lobby_);
  swap(appid_, other->appid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCHInviteUserToLobby::GetMetadata() const {
  protobuf_gcsystemmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsystemmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
