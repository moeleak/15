// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: base_gcmessages.proto

#include "base_gcmessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class CGCStorePurchaseInit_LineItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGCStorePurchaseInit_LineItem>
      _instance;
} _CGCStorePurchaseInit_LineItem_default_instance_;
class CMsgGCStorePurchaseInitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCStorePurchaseInit>
      _instance;
} _CMsgGCStorePurchaseInit_default_instance_;
class CMsgGCStorePurchaseInitResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCStorePurchaseInitResponse>
      _instance;
} _CMsgGCStorePurchaseInitResponse_default_instance_;
class CSOPartyInviteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSOPartyInvite>
      _instance;
} _CSOPartyInvite_default_instance_;
class CSOLobbyInviteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSOLobbyInvite>
      _instance;
} _CSOLobbyInvite_default_instance_;
class CMsgSystemBroadcastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSystemBroadcast>
      _instance;
} _CMsgSystemBroadcast_default_instance_;
class CMsgInviteToPartyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgInviteToParty>
      _instance;
} _CMsgInviteToParty_default_instance_;
class CMsgInvitationCreatedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgInvitationCreated>
      _instance;
} _CMsgInvitationCreated_default_instance_;
class CMsgPartyInviteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgPartyInviteResponse>
      _instance;
} _CMsgPartyInviteResponse_default_instance_;
class CMsgKickFromPartyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgKickFromParty>
      _instance;
} _CMsgKickFromParty_default_instance_;
class CMsgLeavePartyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgLeaveParty>
      _instance;
} _CMsgLeaveParty_default_instance_;
class CMsgServerAvailableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgServerAvailable>
      _instance;
} _CMsgServerAvailable_default_instance_;
class CMsgLANServerAvailableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgLANServerAvailable>
      _instance;
} _CMsgLANServerAvailable_default_instance_;
class CSOEconGameAccountClientDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSOEconGameAccountClient>
      _instance;
} _CSOEconGameAccountClient_default_instance_;
class CSOItemCriteriaConditionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSOItemCriteriaCondition>
      _instance;
} _CSOItemCriteriaCondition_default_instance_;
class CSOItemCriteriaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSOItemCriteria>
      _instance;
} _CSOItemCriteria_default_instance_;
class CSOItemRecipeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSOItemRecipe>
      _instance;
} _CSOItemRecipe_default_instance_;
class CMsgDevNewItemRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDevNewItemRequest>
      _instance;
} _CMsgDevNewItemRequest_default_instance_;
class CMsgIncrementKillCountAttributeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgIncrementKillCountAttribute>
      _instance;
} _CMsgIncrementKillCountAttribute_default_instance_;
class CMsgApplyStickerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgApplySticker>
      _instance;
} _CMsgApplySticker_default_instance_;
class CMsgApplyStatTrakSwapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgApplyStatTrakSwap>
      _instance;
} _CMsgApplyStatTrakSwap_default_instance_;
class CMsgApplyStrangePartDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgApplyStrangePart>
      _instance;
} _CMsgApplyStrangePart_default_instance_;
class CMsgApplyPennantUpgradeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgApplyPennantUpgrade>
      _instance;
} _CMsgApplyPennantUpgrade_default_instance_;
class CMsgApplyEggEssenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgApplyEggEssence>
      _instance;
} _CMsgApplyEggEssence_default_instance_;
class CSOEconItemAttributeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSOEconItemAttribute>
      _instance;
} _CSOEconItemAttribute_default_instance_;
class CSOEconItemEquippedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSOEconItemEquipped>
      _instance;
} _CSOEconItemEquipped_default_instance_;
class CSOEconItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSOEconItem>
      _instance;
} _CSOEconItem_default_instance_;
class CMsgAdjustItemEquippedStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAdjustItemEquippedState>
      _instance;
} _CMsgAdjustItemEquippedState_default_instance_;
class CMsgSortItemsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSortItems>
      _instance;
} _CMsgSortItems_default_instance_;
class CSOEconClaimCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSOEconClaimCode>
      _instance;
} _CSOEconClaimCode_default_instance_;
class CMsgStoreGetUserDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgStoreGetUserData>
      _instance;
} _CMsgStoreGetUserData_default_instance_;
class CMsgStoreGetUserDataResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgStoreGetUserDataResponse>
      _instance;
} _CMsgStoreGetUserDataResponse_default_instance_;
class CMsgUpdateItemSchemaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgUpdateItemSchema>
      _instance;
} _CMsgUpdateItemSchema_default_instance_;
class CMsgGCErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCError>
      _instance;
} _CMsgGCError_default_instance_;
class CMsgRequestInventoryRefreshDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgRequestInventoryRefresh>
      _instance;
} _CMsgRequestInventoryRefresh_default_instance_;
class CMsgConVarValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgConVarValue>
      _instance;
} _CMsgConVarValue_default_instance_;
class CMsgReplicateConVarsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgReplicateConVars>
      _instance;
} _CMsgReplicateConVars_default_instance_;
class CMsgUseItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgUseItem>
      _instance;
} _CMsgUseItem_default_instance_;
class CMsgReplayUploadedToYouTubeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgReplayUploadedToYouTube>
      _instance;
} _CMsgReplayUploadedToYouTube_default_instance_;
class CMsgConsumableExhaustedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgConsumableExhausted>
      _instance;
} _CMsgConsumableExhausted_default_instance_;
class CMsgItemAcknowledged__DEPRECATEDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgItemAcknowledged__DEPRECATED>
      _instance;
} _CMsgItemAcknowledged__DEPRECATED_default_instance_;
class CMsgSetItemPositions_ItemPositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSetItemPositions_ItemPosition>
      _instance;
} _CMsgSetItemPositions_ItemPosition_default_instance_;
class CMsgSetItemPositionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSetItemPositions>
      _instance;
} _CMsgSetItemPositions_default_instance_;
class CMsgGCReportAbuseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCReportAbuse>
      _instance;
} _CMsgGCReportAbuse_default_instance_;
class CMsgGCReportAbuseResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCReportAbuseResponse>
      _instance;
} _CMsgGCReportAbuseResponse_default_instance_;
class CMsgGCNameItemNotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCNameItemNotification>
      _instance;
} _CMsgGCNameItemNotification_default_instance_;
class CMsgGCClientDisplayNotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCClientDisplayNotification>
      _instance;
} _CMsgGCClientDisplayNotification_default_instance_;
class CMsgGCShowItemsPickedUpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCShowItemsPickedUp>
      _instance;
} _CMsgGCShowItemsPickedUp_default_instance_;
class CMsgGCIncrementKillCountResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCIncrementKillCountResponse>
      _instance;
} _CMsgGCIncrementKillCountResponse_default_instance_;
class CSOEconItemDropRateBonusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSOEconItemDropRateBonus>
      _instance;
} _CSOEconItemDropRateBonus_default_instance_;
class CSOEconItemLeagueViewPassDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSOEconItemLeagueViewPass>
      _instance;
} _CSOEconItemLeagueViewPass_default_instance_;
class CSOEconItemEventTicketDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSOEconItemEventTicket>
      _instance;
} _CSOEconItemEventTicket_default_instance_;
class CMsgGCItemPreviewItemBoughtNotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCItemPreviewItemBoughtNotification>
      _instance;
} _CMsgGCItemPreviewItemBoughtNotification_default_instance_;
class CMsgGCStorePurchaseCancelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCStorePurchaseCancel>
      _instance;
} _CMsgGCStorePurchaseCancel_default_instance_;
class CMsgGCStorePurchaseCancelResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCStorePurchaseCancelResponse>
      _instance;
} _CMsgGCStorePurchaseCancelResponse_default_instance_;
class CMsgGCStorePurchaseFinalizeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCStorePurchaseFinalize>
      _instance;
} _CMsgGCStorePurchaseFinalize_default_instance_;
class CMsgGCStorePurchaseFinalizeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCStorePurchaseFinalizeResponse>
      _instance;
} _CMsgGCStorePurchaseFinalizeResponse_default_instance_;
class CMsgGCBannedWordListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCBannedWordListRequest>
      _instance;
} _CMsgGCBannedWordListRequest_default_instance_;
class CMsgGCRequestAnnouncementsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCRequestAnnouncements>
      _instance;
} _CMsgGCRequestAnnouncements_default_instance_;
class CMsgGCRequestAnnouncementsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCRequestAnnouncementsResponse>
      _instance;
} _CMsgGCRequestAnnouncementsResponse_default_instance_;
class CMsgGCBannedWordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCBannedWord>
      _instance;
} _CMsgGCBannedWord_default_instance_;
class CMsgGCBannedWordListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCBannedWordListResponse>
      _instance;
} _CMsgGCBannedWordListResponse_default_instance_;
class CMsgGCToGCBannedWordListBroadcastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCBannedWordListBroadcast>
      _instance;
} _CMsgGCToGCBannedWordListBroadcast_default_instance_;
class CMsgGCToGCBannedWordListUpdatedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCBannedWordListUpdated>
      _instance;
} _CMsgGCToGCBannedWordListUpdated_default_instance_;
class CSOEconDefaultEquippedDefinitionInstanceClientDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSOEconDefaultEquippedDefinitionInstanceClient>
      _instance;
} _CSOEconDefaultEquippedDefinitionInstanceClient_default_instance_;
class CMsgGCToGCDirtySDOCacheDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCDirtySDOCache>
      _instance;
} _CMsgGCToGCDirtySDOCache_default_instance_;
class CMsgGCToGCDirtyMultipleSDOCacheDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCDirtyMultipleSDOCache>
      _instance;
} _CMsgGCToGCDirtyMultipleSDOCache_default_instance_;
class CMsgGCCollectItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCCollectItem>
      _instance;
} _CMsgGCCollectItem_default_instance_;
class CMsgSDONoMemcachedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSDONoMemcached>
      _instance;
} _CMsgSDONoMemcached_default_instance_;
class CMsgGCToGCUpdateSQLKeyValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCUpdateSQLKeyValue>
      _instance;
} _CMsgGCToGCUpdateSQLKeyValue_default_instance_;
class CMsgGCToGCIsTrustedServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCIsTrustedServer>
      _instance;
} _CMsgGCToGCIsTrustedServer_default_instance_;
class CMsgGCToGCIsTrustedServerResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCIsTrustedServerResponse>
      _instance;
} _CMsgGCToGCIsTrustedServerResponse_default_instance_;
class CMsgGCToGCBroadcastConsoleCommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCBroadcastConsoleCommand>
      _instance;
} _CMsgGCToGCBroadcastConsoleCommand_default_instance_;
class CMsgGCServerVersionUpdatedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCServerVersionUpdated>
      _instance;
} _CMsgGCServerVersionUpdated_default_instance_;
class CMsgGCClientVersionUpdatedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCClientVersionUpdated>
      _instance;
} _CMsgGCClientVersionUpdated_default_instance_;
class CMsgGCToGCWebAPIAccountChangedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCWebAPIAccountChanged>
      _instance;
} _CMsgGCToGCWebAPIAccountChanged_default_instance_;
class CMsgGCToGCRequestPassportItemGrantDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCRequestPassportItemGrant>
      _instance;
} _CMsgGCToGCRequestPassportItemGrant_default_instance_;
class CMsgGameServerInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGameServerInfo>
      _instance;
} _CMsgGameServerInfo_default_instance_;
namespace protobuf_base_5fgcmessages_2eproto {
void InitDefaultsCGCStorePurchaseInit_LineItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CGCStorePurchaseInit_LineItem_default_instance_;
    new (ptr) ::CGCStorePurchaseInit_LineItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGCStorePurchaseInit_LineItem::InitAsDefaultInstance();
}

void InitDefaultsCGCStorePurchaseInit_LineItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGCStorePurchaseInit_LineItemImpl);
}

void InitDefaultsCMsgGCStorePurchaseInitImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_base_5fgcmessages_2eproto::InitDefaultsCGCStorePurchaseInit_LineItem();
  {
    void* ptr = &::_CMsgGCStorePurchaseInit_default_instance_;
    new (ptr) ::CMsgGCStorePurchaseInit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCStorePurchaseInit::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCStorePurchaseInit() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCStorePurchaseInitImpl);
}

void InitDefaultsCMsgGCStorePurchaseInitResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCStorePurchaseInitResponse_default_instance_;
    new (ptr) ::CMsgGCStorePurchaseInitResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCStorePurchaseInitResponse::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCStorePurchaseInitResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCStorePurchaseInitResponseImpl);
}

void InitDefaultsCSOPartyInviteImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CSOPartyInvite_default_instance_;
    new (ptr) ::CSOPartyInvite();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSOPartyInvite::InitAsDefaultInstance();
}

void InitDefaultsCSOPartyInvite() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCSOPartyInviteImpl);
}

void InitDefaultsCSOLobbyInviteImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CSOLobbyInvite_default_instance_;
    new (ptr) ::CSOLobbyInvite();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSOLobbyInvite::InitAsDefaultInstance();
}

void InitDefaultsCSOLobbyInvite() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCSOLobbyInviteImpl);
}

void InitDefaultsCMsgSystemBroadcastImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgSystemBroadcast_default_instance_;
    new (ptr) ::CMsgSystemBroadcast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSystemBroadcast::InitAsDefaultInstance();
}

void InitDefaultsCMsgSystemBroadcast() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgSystemBroadcastImpl);
}

void InitDefaultsCMsgInviteToPartyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgInviteToParty_default_instance_;
    new (ptr) ::CMsgInviteToParty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgInviteToParty::InitAsDefaultInstance();
}

void InitDefaultsCMsgInviteToParty() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgInviteToPartyImpl);
}

void InitDefaultsCMsgInvitationCreatedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgInvitationCreated_default_instance_;
    new (ptr) ::CMsgInvitationCreated();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgInvitationCreated::InitAsDefaultInstance();
}

void InitDefaultsCMsgInvitationCreated() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgInvitationCreatedImpl);
}

void InitDefaultsCMsgPartyInviteResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgPartyInviteResponse_default_instance_;
    new (ptr) ::CMsgPartyInviteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgPartyInviteResponse::InitAsDefaultInstance();
}

void InitDefaultsCMsgPartyInviteResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgPartyInviteResponseImpl);
}

void InitDefaultsCMsgKickFromPartyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgKickFromParty_default_instance_;
    new (ptr) ::CMsgKickFromParty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgKickFromParty::InitAsDefaultInstance();
}

void InitDefaultsCMsgKickFromParty() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgKickFromPartyImpl);
}

void InitDefaultsCMsgLeavePartyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgLeaveParty_default_instance_;
    new (ptr) ::CMsgLeaveParty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgLeaveParty::InitAsDefaultInstance();
}

void InitDefaultsCMsgLeaveParty() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgLeavePartyImpl);
}

void InitDefaultsCMsgServerAvailableImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgServerAvailable_default_instance_;
    new (ptr) ::CMsgServerAvailable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgServerAvailable::InitAsDefaultInstance();
}

void InitDefaultsCMsgServerAvailable() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgServerAvailableImpl);
}

void InitDefaultsCMsgLANServerAvailableImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgLANServerAvailable_default_instance_;
    new (ptr) ::CMsgLANServerAvailable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgLANServerAvailable::InitAsDefaultInstance();
}

void InitDefaultsCMsgLANServerAvailable() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgLANServerAvailableImpl);
}

void InitDefaultsCSOEconGameAccountClientImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CSOEconGameAccountClient_default_instance_;
    new (ptr) ::CSOEconGameAccountClient();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSOEconGameAccountClient::InitAsDefaultInstance();
}

void InitDefaultsCSOEconGameAccountClient() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCSOEconGameAccountClientImpl);
}

void InitDefaultsCSOItemCriteriaConditionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CSOItemCriteriaCondition_default_instance_;
    new (ptr) ::CSOItemCriteriaCondition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSOItemCriteriaCondition::InitAsDefaultInstance();
}

void InitDefaultsCSOItemCriteriaCondition() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCSOItemCriteriaConditionImpl);
}

void InitDefaultsCSOItemCriteriaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOItemCriteriaCondition();
  {
    void* ptr = &::_CSOItemCriteria_default_instance_;
    new (ptr) ::CSOItemCriteria();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSOItemCriteria::InitAsDefaultInstance();
}

void InitDefaultsCSOItemCriteria() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCSOItemCriteriaImpl);
}

void InitDefaultsCSOItemRecipeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOItemCriteria();
  {
    void* ptr = &::_CSOItemRecipe_default_instance_;
    new (ptr) ::CSOItemRecipe();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSOItemRecipe::InitAsDefaultInstance();
}

void InitDefaultsCSOItemRecipe() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCSOItemRecipeImpl);
}

void InitDefaultsCMsgDevNewItemRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOItemCriteria();
  {
    void* ptr = &::_CMsgDevNewItemRequest_default_instance_;
    new (ptr) ::CMsgDevNewItemRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgDevNewItemRequest::InitAsDefaultInstance();
}

void InitDefaultsCMsgDevNewItemRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgDevNewItemRequestImpl);
}

void InitDefaultsCMsgIncrementKillCountAttributeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgIncrementKillCountAttribute_default_instance_;
    new (ptr) ::CMsgIncrementKillCountAttribute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgIncrementKillCountAttribute::InitAsDefaultInstance();
}

void InitDefaultsCMsgIncrementKillCountAttribute() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgIncrementKillCountAttributeImpl);
}

void InitDefaultsCMsgApplyStickerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgApplySticker_default_instance_;
    new (ptr) ::CMsgApplySticker();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgApplySticker::InitAsDefaultInstance();
}

void InitDefaultsCMsgApplySticker() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgApplyStickerImpl);
}

void InitDefaultsCMsgApplyStatTrakSwapImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgApplyStatTrakSwap_default_instance_;
    new (ptr) ::CMsgApplyStatTrakSwap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgApplyStatTrakSwap::InitAsDefaultInstance();
}

void InitDefaultsCMsgApplyStatTrakSwap() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgApplyStatTrakSwapImpl);
}

void InitDefaultsCMsgApplyStrangePartImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgApplyStrangePart_default_instance_;
    new (ptr) ::CMsgApplyStrangePart();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgApplyStrangePart::InitAsDefaultInstance();
}

void InitDefaultsCMsgApplyStrangePart() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgApplyStrangePartImpl);
}

void InitDefaultsCMsgApplyPennantUpgradeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgApplyPennantUpgrade_default_instance_;
    new (ptr) ::CMsgApplyPennantUpgrade();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgApplyPennantUpgrade::InitAsDefaultInstance();
}

void InitDefaultsCMsgApplyPennantUpgrade() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgApplyPennantUpgradeImpl);
}

void InitDefaultsCMsgApplyEggEssenceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgApplyEggEssence_default_instance_;
    new (ptr) ::CMsgApplyEggEssence();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgApplyEggEssence::InitAsDefaultInstance();
}

void InitDefaultsCMsgApplyEggEssence() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgApplyEggEssenceImpl);
}

void InitDefaultsCSOEconItemAttributeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CSOEconItemAttribute_default_instance_;
    new (ptr) ::CSOEconItemAttribute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSOEconItemAttribute::InitAsDefaultInstance();
}

void InitDefaultsCSOEconItemAttribute() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCSOEconItemAttributeImpl);
}

void InitDefaultsCSOEconItemEquippedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CSOEconItemEquipped_default_instance_;
    new (ptr) ::CSOEconItemEquipped();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSOEconItemEquipped::InitAsDefaultInstance();
}

void InitDefaultsCSOEconItemEquipped() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCSOEconItemEquippedImpl);
}

void InitDefaultsCSOEconItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOEconItemAttribute();
  protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOEconItemEquipped();
  {
    void* ptr = &::_CSOEconItem_default_instance_;
    new (ptr) ::CSOEconItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSOEconItem::InitAsDefaultInstance();
}

void InitDefaultsCSOEconItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCSOEconItemImpl);
}

void InitDefaultsCMsgAdjustItemEquippedStateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgAdjustItemEquippedState_default_instance_;
    new (ptr) ::CMsgAdjustItemEquippedState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgAdjustItemEquippedState::InitAsDefaultInstance();
}

void InitDefaultsCMsgAdjustItemEquippedState() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgAdjustItemEquippedStateImpl);
}

void InitDefaultsCMsgSortItemsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgSortItems_default_instance_;
    new (ptr) ::CMsgSortItems();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSortItems::InitAsDefaultInstance();
}

void InitDefaultsCMsgSortItems() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgSortItemsImpl);
}

void InitDefaultsCSOEconClaimCodeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CSOEconClaimCode_default_instance_;
    new (ptr) ::CSOEconClaimCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSOEconClaimCode::InitAsDefaultInstance();
}

void InitDefaultsCSOEconClaimCode() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCSOEconClaimCodeImpl);
}

void InitDefaultsCMsgStoreGetUserDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgStoreGetUserData_default_instance_;
    new (ptr) ::CMsgStoreGetUserData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgStoreGetUserData::InitAsDefaultInstance();
}

void InitDefaultsCMsgStoreGetUserData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgStoreGetUserDataImpl);
}

void InitDefaultsCMsgStoreGetUserDataResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgStoreGetUserDataResponse_default_instance_;
    new (ptr) ::CMsgStoreGetUserDataResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgStoreGetUserDataResponse::InitAsDefaultInstance();
}

void InitDefaultsCMsgStoreGetUserDataResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgStoreGetUserDataResponseImpl);
}

void InitDefaultsCMsgUpdateItemSchemaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgUpdateItemSchema_default_instance_;
    new (ptr) ::CMsgUpdateItemSchema();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgUpdateItemSchema::InitAsDefaultInstance();
}

void InitDefaultsCMsgUpdateItemSchema() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgUpdateItemSchemaImpl);
}

void InitDefaultsCMsgGCErrorImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCError_default_instance_;
    new (ptr) ::CMsgGCError();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCError::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCError() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCErrorImpl);
}

void InitDefaultsCMsgRequestInventoryRefreshImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgRequestInventoryRefresh_default_instance_;
    new (ptr) ::CMsgRequestInventoryRefresh();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgRequestInventoryRefresh::InitAsDefaultInstance();
}

void InitDefaultsCMsgRequestInventoryRefresh() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgRequestInventoryRefreshImpl);
}

void InitDefaultsCMsgConVarValueImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgConVarValue_default_instance_;
    new (ptr) ::CMsgConVarValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgConVarValue::InitAsDefaultInstance();
}

void InitDefaultsCMsgConVarValue() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgConVarValueImpl);
}

void InitDefaultsCMsgReplicateConVarsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgConVarValue();
  {
    void* ptr = &::_CMsgReplicateConVars_default_instance_;
    new (ptr) ::CMsgReplicateConVars();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgReplicateConVars::InitAsDefaultInstance();
}

void InitDefaultsCMsgReplicateConVars() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgReplicateConVarsImpl);
}

void InitDefaultsCMsgUseItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgUseItem_default_instance_;
    new (ptr) ::CMsgUseItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgUseItem::InitAsDefaultInstance();
}

void InitDefaultsCMsgUseItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgUseItemImpl);
}

void InitDefaultsCMsgReplayUploadedToYouTubeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgReplayUploadedToYouTube_default_instance_;
    new (ptr) ::CMsgReplayUploadedToYouTube();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgReplayUploadedToYouTube::InitAsDefaultInstance();
}

void InitDefaultsCMsgReplayUploadedToYouTube() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgReplayUploadedToYouTubeImpl);
}

void InitDefaultsCMsgConsumableExhaustedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgConsumableExhausted_default_instance_;
    new (ptr) ::CMsgConsumableExhausted();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgConsumableExhausted::InitAsDefaultInstance();
}

void InitDefaultsCMsgConsumableExhausted() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgConsumableExhaustedImpl);
}

void InitDefaultsCMsgItemAcknowledged__DEPRECATEDImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgItemAcknowledged__DEPRECATED_default_instance_;
    new (ptr) ::CMsgItemAcknowledged__DEPRECATED();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgItemAcknowledged__DEPRECATED::InitAsDefaultInstance();
}

void InitDefaultsCMsgItemAcknowledged__DEPRECATED() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgItemAcknowledged__DEPRECATEDImpl);
}

void InitDefaultsCMsgSetItemPositions_ItemPositionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgSetItemPositions_ItemPosition_default_instance_;
    new (ptr) ::CMsgSetItemPositions_ItemPosition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSetItemPositions_ItemPosition::InitAsDefaultInstance();
}

void InitDefaultsCMsgSetItemPositions_ItemPosition() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgSetItemPositions_ItemPositionImpl);
}

void InitDefaultsCMsgSetItemPositionsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgSetItemPositions_ItemPosition();
  {
    void* ptr = &::_CMsgSetItemPositions_default_instance_;
    new (ptr) ::CMsgSetItemPositions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSetItemPositions::InitAsDefaultInstance();
}

void InitDefaultsCMsgSetItemPositions() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgSetItemPositionsImpl);
}

void InitDefaultsCMsgGCReportAbuseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCReportAbuse_default_instance_;
    new (ptr) ::CMsgGCReportAbuse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCReportAbuse::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCReportAbuse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCReportAbuseImpl);
}

void InitDefaultsCMsgGCReportAbuseResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCReportAbuseResponse_default_instance_;
    new (ptr) ::CMsgGCReportAbuseResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCReportAbuseResponse::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCReportAbuseResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCReportAbuseResponseImpl);
}

void InitDefaultsCMsgGCNameItemNotificationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCNameItemNotification_default_instance_;
    new (ptr) ::CMsgGCNameItemNotification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCNameItemNotification::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCNameItemNotification() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCNameItemNotificationImpl);
}

void InitDefaultsCMsgGCClientDisplayNotificationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCClientDisplayNotification_default_instance_;
    new (ptr) ::CMsgGCClientDisplayNotification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCClientDisplayNotification::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCClientDisplayNotification() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCClientDisplayNotificationImpl);
}

void InitDefaultsCMsgGCShowItemsPickedUpImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCShowItemsPickedUp_default_instance_;
    new (ptr) ::CMsgGCShowItemsPickedUp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCShowItemsPickedUp::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCShowItemsPickedUp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCShowItemsPickedUpImpl);
}

void InitDefaultsCMsgGCIncrementKillCountResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCIncrementKillCountResponse_default_instance_;
    new (ptr) ::CMsgGCIncrementKillCountResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCIncrementKillCountResponse::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCIncrementKillCountResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCIncrementKillCountResponseImpl);
}

void InitDefaultsCSOEconItemDropRateBonusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CSOEconItemDropRateBonus_default_instance_;
    new (ptr) ::CSOEconItemDropRateBonus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSOEconItemDropRateBonus::InitAsDefaultInstance();
}

void InitDefaultsCSOEconItemDropRateBonus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCSOEconItemDropRateBonusImpl);
}

void InitDefaultsCSOEconItemLeagueViewPassImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CSOEconItemLeagueViewPass_default_instance_;
    new (ptr) ::CSOEconItemLeagueViewPass();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSOEconItemLeagueViewPass::InitAsDefaultInstance();
}

void InitDefaultsCSOEconItemLeagueViewPass() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCSOEconItemLeagueViewPassImpl);
}

void InitDefaultsCSOEconItemEventTicketImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CSOEconItemEventTicket_default_instance_;
    new (ptr) ::CSOEconItemEventTicket();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSOEconItemEventTicket::InitAsDefaultInstance();
}

void InitDefaultsCSOEconItemEventTicket() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCSOEconItemEventTicketImpl);
}

void InitDefaultsCMsgGCItemPreviewItemBoughtNotificationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCItemPreviewItemBoughtNotification_default_instance_;
    new (ptr) ::CMsgGCItemPreviewItemBoughtNotification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCItemPreviewItemBoughtNotification::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCItemPreviewItemBoughtNotification() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCItemPreviewItemBoughtNotificationImpl);
}

void InitDefaultsCMsgGCStorePurchaseCancelImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCStorePurchaseCancel_default_instance_;
    new (ptr) ::CMsgGCStorePurchaseCancel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCStorePurchaseCancel::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCStorePurchaseCancel() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCStorePurchaseCancelImpl);
}

void InitDefaultsCMsgGCStorePurchaseCancelResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCStorePurchaseCancelResponse_default_instance_;
    new (ptr) ::CMsgGCStorePurchaseCancelResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCStorePurchaseCancelResponse::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCStorePurchaseCancelResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCStorePurchaseCancelResponseImpl);
}

void InitDefaultsCMsgGCStorePurchaseFinalizeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCStorePurchaseFinalize_default_instance_;
    new (ptr) ::CMsgGCStorePurchaseFinalize();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCStorePurchaseFinalize::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCStorePurchaseFinalize() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCStorePurchaseFinalizeImpl);
}

void InitDefaultsCMsgGCStorePurchaseFinalizeResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCStorePurchaseFinalizeResponse_default_instance_;
    new (ptr) ::CMsgGCStorePurchaseFinalizeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCStorePurchaseFinalizeResponse::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCStorePurchaseFinalizeResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCStorePurchaseFinalizeResponseImpl);
}

void InitDefaultsCMsgGCBannedWordListRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCBannedWordListRequest_default_instance_;
    new (ptr) ::CMsgGCBannedWordListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCBannedWordListRequest::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCBannedWordListRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCBannedWordListRequestImpl);
}

void InitDefaultsCMsgGCRequestAnnouncementsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCRequestAnnouncements_default_instance_;
    new (ptr) ::CMsgGCRequestAnnouncements();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCRequestAnnouncements::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCRequestAnnouncements() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCRequestAnnouncementsImpl);
}

void InitDefaultsCMsgGCRequestAnnouncementsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCRequestAnnouncementsResponse_default_instance_;
    new (ptr) ::CMsgGCRequestAnnouncementsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCRequestAnnouncementsResponse::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCRequestAnnouncementsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCRequestAnnouncementsResponseImpl);
}

void InitDefaultsCMsgGCBannedWordImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCBannedWord_default_instance_;
    new (ptr) ::CMsgGCBannedWord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCBannedWord::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCBannedWord() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCBannedWordImpl);
}

void InitDefaultsCMsgGCBannedWordListResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCBannedWord();
  {
    void* ptr = &::_CMsgGCBannedWordListResponse_default_instance_;
    new (ptr) ::CMsgGCBannedWordListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCBannedWordListResponse::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCBannedWordListResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCBannedWordListResponseImpl);
}

void InitDefaultsCMsgGCToGCBannedWordListBroadcastImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCBannedWordListResponse();
  {
    void* ptr = &::_CMsgGCToGCBannedWordListBroadcast_default_instance_;
    new (ptr) ::CMsgGCToGCBannedWordListBroadcast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCToGCBannedWordListBroadcast::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCToGCBannedWordListBroadcast() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCToGCBannedWordListBroadcastImpl);
}

void InitDefaultsCMsgGCToGCBannedWordListUpdatedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCToGCBannedWordListUpdated_default_instance_;
    new (ptr) ::CMsgGCToGCBannedWordListUpdated();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCToGCBannedWordListUpdated::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCToGCBannedWordListUpdated() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCToGCBannedWordListUpdatedImpl);
}

void InitDefaultsCSOEconDefaultEquippedDefinitionInstanceClientImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CSOEconDefaultEquippedDefinitionInstanceClient_default_instance_;
    new (ptr) ::CSOEconDefaultEquippedDefinitionInstanceClient();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSOEconDefaultEquippedDefinitionInstanceClient::InitAsDefaultInstance();
}

void InitDefaultsCSOEconDefaultEquippedDefinitionInstanceClient() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCSOEconDefaultEquippedDefinitionInstanceClientImpl);
}

void InitDefaultsCMsgGCToGCDirtySDOCacheImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCToGCDirtySDOCache_default_instance_;
    new (ptr) ::CMsgGCToGCDirtySDOCache();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCToGCDirtySDOCache::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCToGCDirtySDOCache() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCToGCDirtySDOCacheImpl);
}

void InitDefaultsCMsgGCToGCDirtyMultipleSDOCacheImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCToGCDirtyMultipleSDOCache_default_instance_;
    new (ptr) ::CMsgGCToGCDirtyMultipleSDOCache();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCToGCDirtyMultipleSDOCache::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCToGCDirtyMultipleSDOCache() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCToGCDirtyMultipleSDOCacheImpl);
}

void InitDefaultsCMsgGCCollectItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCCollectItem_default_instance_;
    new (ptr) ::CMsgGCCollectItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCCollectItem::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCCollectItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCCollectItemImpl);
}

void InitDefaultsCMsgSDONoMemcachedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgSDONoMemcached_default_instance_;
    new (ptr) ::CMsgSDONoMemcached();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSDONoMemcached::InitAsDefaultInstance();
}

void InitDefaultsCMsgSDONoMemcached() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgSDONoMemcachedImpl);
}

void InitDefaultsCMsgGCToGCUpdateSQLKeyValueImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCToGCUpdateSQLKeyValue_default_instance_;
    new (ptr) ::CMsgGCToGCUpdateSQLKeyValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCToGCUpdateSQLKeyValue::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCToGCUpdateSQLKeyValue() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCToGCUpdateSQLKeyValueImpl);
}

void InitDefaultsCMsgGCToGCIsTrustedServerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCToGCIsTrustedServer_default_instance_;
    new (ptr) ::CMsgGCToGCIsTrustedServer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCToGCIsTrustedServer::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCToGCIsTrustedServer() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCToGCIsTrustedServerImpl);
}

void InitDefaultsCMsgGCToGCIsTrustedServerResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCToGCIsTrustedServerResponse_default_instance_;
    new (ptr) ::CMsgGCToGCIsTrustedServerResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCToGCIsTrustedServerResponse::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCToGCIsTrustedServerResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCToGCIsTrustedServerResponseImpl);
}

void InitDefaultsCMsgGCToGCBroadcastConsoleCommandImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCToGCBroadcastConsoleCommand_default_instance_;
    new (ptr) ::CMsgGCToGCBroadcastConsoleCommand();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCToGCBroadcastConsoleCommand::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCToGCBroadcastConsoleCommand() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCToGCBroadcastConsoleCommandImpl);
}

void InitDefaultsCMsgGCServerVersionUpdatedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCServerVersionUpdated_default_instance_;
    new (ptr) ::CMsgGCServerVersionUpdated();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCServerVersionUpdated::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCServerVersionUpdated() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCServerVersionUpdatedImpl);
}

void InitDefaultsCMsgGCClientVersionUpdatedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCClientVersionUpdated_default_instance_;
    new (ptr) ::CMsgGCClientVersionUpdated();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCClientVersionUpdated::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCClientVersionUpdated() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCClientVersionUpdatedImpl);
}

void InitDefaultsCMsgGCToGCWebAPIAccountChangedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCToGCWebAPIAccountChanged_default_instance_;
    new (ptr) ::CMsgGCToGCWebAPIAccountChanged();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCToGCWebAPIAccountChanged::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCToGCWebAPIAccountChanged() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCToGCWebAPIAccountChangedImpl);
}

void InitDefaultsCMsgGCToGCRequestPassportItemGrantImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCToGCRequestPassportItemGrant_default_instance_;
    new (ptr) ::CMsgGCToGCRequestPassportItemGrant();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCToGCRequestPassportItemGrant::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCToGCRequestPassportItemGrant() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCToGCRequestPassportItemGrantImpl);
}

void InitDefaultsCMsgGameServerInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGameServerInfo_default_instance_;
    new (ptr) ::CMsgGameServerInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGameServerInfo::InitAsDefaultInstance();
}

void InitDefaultsCMsgGameServerInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGameServerInfoImpl);
}

::google::protobuf::Metadata file_level_metadata[78];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCStorePurchaseInit_LineItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCStorePurchaseInit_LineItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCStorePurchaseInit_LineItem, item_def_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCStorePurchaseInit_LineItem, quantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCStorePurchaseInit_LineItem, cost_in_local_currency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCStorePurchaseInit_LineItem, purchase_type_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCStorePurchaseInit, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCStorePurchaseInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCStorePurchaseInit, country_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCStorePurchaseInit, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCStorePurchaseInit, currency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCStorePurchaseInit, line_items_),
  0,
  1,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCStorePurchaseInitResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCStorePurchaseInitResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCStorePurchaseInitResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCStorePurchaseInitResponse, txn_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCStorePurchaseInitResponse, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCStorePurchaseInitResponse, item_ids_),
  2,
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOPartyInvite, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOPartyInvite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOPartyInvite, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOPartyInvite, sender_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOPartyInvite, sender_name_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOLobbyInvite, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOLobbyInvite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOLobbyInvite, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOLobbyInvite, sender_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOLobbyInvite, sender_name_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSystemBroadcast, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSystemBroadcast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSystemBroadcast, message_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgInviteToParty, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgInviteToParty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgInviteToParty, steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgInviteToParty, client_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgInviteToParty, team_invite_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgInvitationCreated, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgInvitationCreated, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgInvitationCreated, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgInvitationCreated, steam_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPartyInviteResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPartyInviteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPartyInviteResponse, party_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPartyInviteResponse, accept_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPartyInviteResponse, client_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPartyInviteResponse, team_invite_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgKickFromParty, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgKickFromParty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgKickFromParty, steam_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLeaveParty, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLeaveParty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerAvailable, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerAvailable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLANServerAvailable, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLANServerAvailable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgLANServerAvailable, lobby_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconGameAccountClient, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconGameAccountClient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconGameAccountClient, additional_backpack_slots_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconGameAccountClient, bonus_xp_timestamp_refresh_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconGameAccountClient, bonus_xp_usedflags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconGameAccountClient, elevated_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconGameAccountClient, elevated_timestamp_),
  1,
  2,
  3,
  4,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemCriteriaCondition, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemCriteriaCondition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemCriteriaCondition, op_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemCriteriaCondition, field_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemCriteriaCondition, required_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemCriteriaCondition, float_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemCriteriaCondition, string_value_),
  2,
  0,
  3,
  4,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemCriteria, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemCriteria, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemCriteria, item_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemCriteria, item_quality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemCriteria, item_level_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemCriteria, item_quality_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemCriteria, initial_inventory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemCriteria, initial_quantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemCriteria, ignore_enabled_flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemCriteria, conditions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemCriteria, item_rarity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemCriteria, item_rarity_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemCriteria, recent_only_),
  0,
  1,
  4,
  5,
  2,
  3,
  6,
  ~0u,
  8,
  7,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemRecipe, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemRecipe, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemRecipe, def_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemRecipe, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemRecipe, n_a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemRecipe, desc_inputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemRecipe, desc_outputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemRecipe, di_a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemRecipe, di_b_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemRecipe, di_c_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemRecipe, do_a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemRecipe, do_b_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemRecipe, do_c_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemRecipe, requires_all_same_class_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemRecipe, requires_all_same_slot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemRecipe, class_usage_for_output_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemRecipe, slot_usage_for_output_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemRecipe, set_for_output_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemRecipe, input_items_criteria_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemRecipe, output_items_criteria_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOItemRecipe, input_item_dupe_counts_),
  10,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  11,
  12,
  13,
  14,
  15,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDevNewItemRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDevNewItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDevNewItemRequest, receiver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgDevNewItemRequest, criteria_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgIncrementKillCountAttribute, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgIncrementKillCountAttribute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgIncrementKillCountAttribute, killer_account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgIncrementKillCountAttribute, victim_account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgIncrementKillCountAttribute, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgIncrementKillCountAttribute, event_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgIncrementKillCountAttribute, amount_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgApplySticker, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgApplySticker, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgApplySticker, sticker_item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgApplySticker, item_item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgApplySticker, sticker_slot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgApplySticker, baseitem_defidx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgApplySticker, sticker_wear_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgApplyStatTrakSwap, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgApplyStatTrakSwap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgApplyStatTrakSwap, tool_item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgApplyStatTrakSwap, item_1_item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgApplyStatTrakSwap, item_2_item_id_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgApplyStrangePart, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgApplyStrangePart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgApplyStrangePart, strange_part_item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgApplyStrangePart, item_item_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgApplyPennantUpgrade, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgApplyPennantUpgrade, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgApplyPennantUpgrade, upgrade_item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgApplyPennantUpgrade, pennant_item_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgApplyEggEssence, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgApplyEggEssence, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgApplyEggEssence, essence_item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgApplyEggEssence, egg_item_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemAttribute, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemAttribute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemAttribute, def_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemAttribute, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemAttribute, value_bytes_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemEquipped, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemEquipped, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemEquipped, new_class_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemEquipped, new_slot_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItem, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItem, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItem, inventory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItem, def_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItem, quantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItem, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItem, quality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItem, flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItem, origin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItem, custom_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItem, custom_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItem, attribute_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItem, interior_item_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItem, in_use_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItem, style_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItem, original_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItem, equipped_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItem, rarity_),
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  0,
  1,
  ~0u,
  2,
  12,
  13,
  14,
  ~0u,
  15,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAdjustItemEquippedState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAdjustItemEquippedState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAdjustItemEquippedState, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAdjustItemEquippedState, new_class_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAdjustItemEquippedState, new_slot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAdjustItemEquippedState, swap_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSortItems, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSortItems, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSortItems, sort_type_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconClaimCode, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconClaimCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconClaimCode, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconClaimCode, code_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconClaimCode, time_acquired_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconClaimCode, code_),
  1,
  2,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStoreGetUserData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStoreGetUserData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStoreGetUserData, price_sheet_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStoreGetUserData, currency_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStoreGetUserDataResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStoreGetUserDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStoreGetUserDataResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStoreGetUserDataResponse, currency_deprecated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStoreGetUserDataResponse, country_deprecated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStoreGetUserDataResponse, price_sheet_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgStoreGetUserDataResponse, price_sheet_),
  2,
  3,
  0,
  4,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgUpdateItemSchema, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgUpdateItemSchema, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgUpdateItemSchema, items_game_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgUpdateItemSchema, item_schema_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgUpdateItemSchema, items_game_url_deprecated2013_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgUpdateItemSchema, items_game_url_),
  0,
  3,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCError, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCError, error_text_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRequestInventoryRefresh, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgRequestInventoryRefresh, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgConVarValue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgConVarValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgConVarValue, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgConVarValue, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgReplicateConVars, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgReplicateConVars, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgReplicateConVars, convars_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgUseItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgUseItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgUseItem, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgUseItem, target_steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgUseItem, gift__potential_targets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgUseItem, duel__class_lock_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgUseItem, initiator_steam_id_),
  0,
  1,
  ~0u,
  3,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgReplayUploadedToYouTube, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgReplayUploadedToYouTube, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgReplayUploadedToYouTube, youtube_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgReplayUploadedToYouTube, youtube_account_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgReplayUploadedToYouTube, session_id_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgConsumableExhausted, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgConsumableExhausted, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgConsumableExhausted, item_def_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgItemAcknowledged__DEPRECATED, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgItemAcknowledged__DEPRECATED, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgItemAcknowledged__DEPRECATED, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgItemAcknowledged__DEPRECATED, inventory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgItemAcknowledged__DEPRECATED, def_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgItemAcknowledged__DEPRECATED, quality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgItemAcknowledged__DEPRECATED, rarity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgItemAcknowledged__DEPRECATED, origin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgItemAcknowledged__DEPRECATED, item_id_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetItemPositions_ItemPosition, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetItemPositions_ItemPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetItemPositions_ItemPosition, legacy_item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetItemPositions_ItemPosition, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetItemPositions_ItemPosition, item_id_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetItemPositions, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetItemPositions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSetItemPositions, item_positions_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCReportAbuse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCReportAbuse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCReportAbuse, target_steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCReportAbuse, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCReportAbuse, gid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCReportAbuse, abuse_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCReportAbuse, content_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCReportAbuse, target_game_server_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCReportAbuse, target_game_server_port_),
  1,
  0,
  4,
  2,
  3,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCReportAbuseResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCReportAbuseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCReportAbuseResponse, target_steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCReportAbuseResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCReportAbuseResponse, error_message_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCNameItemNotification, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCNameItemNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCNameItemNotification, player_steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCNameItemNotification, item_def_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCNameItemNotification, item_name_custom_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCClientDisplayNotification, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCClientDisplayNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCClientDisplayNotification, notification_title_localization_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCClientDisplayNotification, notification_body_localization_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCClientDisplayNotification, body_substring_keys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCClientDisplayNotification, body_substring_values_),
  0,
  1,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCShowItemsPickedUp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCShowItemsPickedUp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCShowItemsPickedUp, player_steamid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCIncrementKillCountResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCIncrementKillCountResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCIncrementKillCountResponse, killer_account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCIncrementKillCountResponse, num_kills_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCIncrementKillCountResponse, item_def_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCIncrementKillCountResponse, level_type_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemDropRateBonus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemDropRateBonus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemDropRateBonus, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemDropRateBonus, expiration_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemDropRateBonus, bonus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemDropRateBonus, bonus_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemDropRateBonus, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemDropRateBonus, def_index_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemLeagueViewPass, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemLeagueViewPass, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemLeagueViewPass, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemLeagueViewPass, league_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemLeagueViewPass, admin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemLeagueViewPass, itemindex_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemEventTicket, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemEventTicket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemEventTicket, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemEventTicket, event_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconItemEventTicket, item_id_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCItemPreviewItemBoughtNotification, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCItemPreviewItemBoughtNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCItemPreviewItemBoughtNotification, item_def_index_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCStorePurchaseCancel, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCStorePurchaseCancel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCStorePurchaseCancel, txn_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCStorePurchaseCancelResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCStorePurchaseCancelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCStorePurchaseCancelResponse, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCStorePurchaseFinalize, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCStorePurchaseFinalize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCStorePurchaseFinalize, txn_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCStorePurchaseFinalizeResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCStorePurchaseFinalizeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCStorePurchaseFinalizeResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCStorePurchaseFinalizeResponse, item_ids_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCBannedWordListRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCBannedWordListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCBannedWordListRequest, ban_list_group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCBannedWordListRequest, word_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCRequestAnnouncements, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCRequestAnnouncements, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCRequestAnnouncementsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCRequestAnnouncementsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCRequestAnnouncementsResponse, announcement_title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCRequestAnnouncementsResponse, announcement_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCRequestAnnouncementsResponse, nextmatch_title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCRequestAnnouncementsResponse, nextmatch_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCBannedWord, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCBannedWord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCBannedWord, word_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCBannedWord, word_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCBannedWord, word_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCBannedWordListResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCBannedWordListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCBannedWordListResponse, ban_list_group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCBannedWordListResponse, word_list_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCBannedWordListBroadcast, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCBannedWordListBroadcast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCBannedWordListBroadcast, broadcast_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCBannedWordListUpdated, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCBannedWordListUpdated, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCBannedWordListUpdated, group_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconDefaultEquippedDefinitionInstanceClient, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconDefaultEquippedDefinitionInstanceClient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconDefaultEquippedDefinitionInstanceClient, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconDefaultEquippedDefinitionInstanceClient, item_definition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconDefaultEquippedDefinitionInstanceClient, class_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSOEconDefaultEquippedDefinitionInstanceClient, slot_id_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCDirtySDOCache, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCDirtySDOCache, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCDirtySDOCache, sdo_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCDirtySDOCache, key_uint64_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCDirtyMultipleSDOCache, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCDirtyMultipleSDOCache, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCDirtyMultipleSDOCache, sdo_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCDirtyMultipleSDOCache, key_uint64_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCCollectItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCCollectItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCCollectItem, collection_item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCCollectItem, subject_item_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSDONoMemcached, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSDONoMemcached, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCUpdateSQLKeyValue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCUpdateSQLKeyValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCUpdateSQLKeyValue, key_name_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCIsTrustedServer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCIsTrustedServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCIsTrustedServer, steam_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCIsTrustedServerResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCIsTrustedServerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCIsTrustedServerResponse, is_trusted_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCBroadcastConsoleCommand, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCBroadcastConsoleCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCBroadcastConsoleCommand, con_command_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCServerVersionUpdated, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCServerVersionUpdated, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCServerVersionUpdated, server_version_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCClientVersionUpdated, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCClientVersionUpdated, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCClientVersionUpdated, client_version_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCWebAPIAccountChanged, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCWebAPIAccountChanged, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCRequestPassportItemGrant, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCRequestPassportItemGrant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCRequestPassportItemGrant, steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCRequestPassportItemGrant, league_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCToGCRequestPassportItemGrant, reward_flag_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerInfo, server_public_ip_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerInfo, server_private_ip_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerInfo, server_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerInfo, server_tv_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerInfo, server_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerInfo, server_hibernation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerInfo, server_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerInfo, server_region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerInfo, server_loadavg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerInfo, server_tv_broadcast_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerInfo, server_game_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerInfo, server_relay_connected_steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerInfo, relay_slots_max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerInfo, relays_connected_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerInfo, relay_clients_connected_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerInfo, relayed_game_server_steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerInfo, parent_relay_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGameServerInfo, tv_secret_code_),
  1,
  2,
  3,
  4,
  0,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  15,
  14,
  16,
  17,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::CGCStorePurchaseInit_LineItem)},
  { 13, 22, sizeof(::CMsgGCStorePurchaseInit)},
  { 26, 35, sizeof(::CMsgGCStorePurchaseInitResponse)},
  { 39, 47, sizeof(::CSOPartyInvite)},
  { 50, 58, sizeof(::CSOLobbyInvite)},
  { 61, 67, sizeof(::CMsgSystemBroadcast)},
  { 68, 76, sizeof(::CMsgInviteToParty)},
  { 79, 86, sizeof(::CMsgInvitationCreated)},
  { 88, 97, sizeof(::CMsgPartyInviteResponse)},
  { 101, 107, sizeof(::CMsgKickFromParty)},
  { 108, 113, sizeof(::CMsgLeaveParty)},
  { 113, 118, sizeof(::CMsgServerAvailable)},
  { 118, 124, sizeof(::CMsgLANServerAvailable)},
  { 125, 135, sizeof(::CSOEconGameAccountClient)},
  { 140, 150, sizeof(::CSOItemCriteriaCondition)},
  { 155, 171, sizeof(::CSOItemCriteria)},
  { 182, 206, sizeof(::CSOItemRecipe)},
  { 225, 232, sizeof(::CMsgDevNewItemRequest)},
  { 234, 244, sizeof(::CMsgIncrementKillCountAttribute)},
  { 249, 259, sizeof(::CMsgApplySticker)},
  { 264, 272, sizeof(::CMsgApplyStatTrakSwap)},
  { 275, 282, sizeof(::CMsgApplyStrangePart)},
  { 284, 291, sizeof(::CMsgApplyPennantUpgrade)},
  { 293, 300, sizeof(::CMsgApplyEggEssence)},
  { 302, 310, sizeof(::CSOEconItemAttribute)},
  { 313, 320, sizeof(::CSOEconItemEquipped)},
  { 322, 345, sizeof(::CSOEconItem)},
  { 363, 372, sizeof(::CMsgAdjustItemEquippedState)},
  { 376, 382, sizeof(::CMsgSortItems)},
  { 383, 392, sizeof(::CSOEconClaimCode)},
  { 396, 403, sizeof(::CMsgStoreGetUserData)},
  { 405, 415, sizeof(::CMsgStoreGetUserDataResponse)},
  { 420, 429, sizeof(::CMsgUpdateItemSchema)},
  { 433, 439, sizeof(::CMsgGCError)},
  { 440, 445, sizeof(::CMsgRequestInventoryRefresh)},
  { 445, 452, sizeof(::CMsgConVarValue)},
  { 454, 460, sizeof(::CMsgReplicateConVars)},
  { 461, 471, sizeof(::CMsgUseItem)},
  { 476, 484, sizeof(::CMsgReplayUploadedToYouTube)},
  { 487, 493, sizeof(::CMsgConsumableExhausted)},
  { 494, 506, sizeof(::CMsgItemAcknowledged__DEPRECATED)},
  { 513, 521, sizeof(::CMsgSetItemPositions_ItemPosition)},
  { 524, 530, sizeof(::CMsgSetItemPositions)},
  { 531, 543, sizeof(::CMsgGCReportAbuse)},
  { 550, 558, sizeof(::CMsgGCReportAbuseResponse)},
  { 561, 569, sizeof(::CMsgGCNameItemNotification)},
  { 572, 581, sizeof(::CMsgGCClientDisplayNotification)},
  { 585, 591, sizeof(::CMsgGCShowItemsPickedUp)},
  { 592, 601, sizeof(::CMsgGCIncrementKillCountResponse)},
  { 605, 616, sizeof(::CSOEconItemDropRateBonus)},
  { 622, 631, sizeof(::CSOEconItemLeagueViewPass)},
  { 635, 643, sizeof(::CSOEconItemEventTicket)},
  { 646, 652, sizeof(::CMsgGCItemPreviewItemBoughtNotification)},
  { 653, 659, sizeof(::CMsgGCStorePurchaseCancel)},
  { 660, 666, sizeof(::CMsgGCStorePurchaseCancelResponse)},
  { 667, 673, sizeof(::CMsgGCStorePurchaseFinalize)},
  { 674, 681, sizeof(::CMsgGCStorePurchaseFinalizeResponse)},
  { 683, 690, sizeof(::CMsgGCBannedWordListRequest)},
  { 692, 697, sizeof(::CMsgGCRequestAnnouncements)},
  { 697, 706, sizeof(::CMsgGCRequestAnnouncementsResponse)},
  { 710, 718, sizeof(::CMsgGCBannedWord)},
  { 721, 728, sizeof(::CMsgGCBannedWordListResponse)},
  { 730, 736, sizeof(::CMsgGCToGCBannedWordListBroadcast)},
  { 737, 743, sizeof(::CMsgGCToGCBannedWordListUpdated)},
  { 744, 753, sizeof(::CSOEconDefaultEquippedDefinitionInstanceClient)},
  { 757, 764, sizeof(::CMsgGCToGCDirtySDOCache)},
  { 766, 773, sizeof(::CMsgGCToGCDirtyMultipleSDOCache)},
  { 775, 782, sizeof(::CMsgGCCollectItem)},
  { 784, 789, sizeof(::CMsgSDONoMemcached)},
  { 789, 795, sizeof(::CMsgGCToGCUpdateSQLKeyValue)},
  { 796, 802, sizeof(::CMsgGCToGCIsTrustedServer)},
  { 803, 809, sizeof(::CMsgGCToGCIsTrustedServerResponse)},
  { 810, 816, sizeof(::CMsgGCToGCBroadcastConsoleCommand)},
  { 817, 823, sizeof(::CMsgGCServerVersionUpdated)},
  { 824, 830, sizeof(::CMsgGCClientVersionUpdated)},
  { 831, 836, sizeof(::CMsgGCToGCWebAPIAccountChanged)},
  { 836, 844, sizeof(::CMsgGCToGCRequestPassportItemGrant)},
  { 847, 870, sizeof(::CMsgGameServerInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGCStorePurchaseInit_LineItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCStorePurchaseInit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCStorePurchaseInitResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSOPartyInvite_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSOLobbyInvite_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSystemBroadcast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgInviteToParty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgInvitationCreated_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgPartyInviteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgKickFromParty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgLeaveParty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgServerAvailable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgLANServerAvailable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSOEconGameAccountClient_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSOItemCriteriaCondition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSOItemCriteria_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSOItemRecipe_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgDevNewItemRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgIncrementKillCountAttribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgApplySticker_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgApplyStatTrakSwap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgApplyStrangePart_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgApplyPennantUpgrade_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgApplyEggEssence_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSOEconItemAttribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSOEconItemEquipped_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSOEconItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgAdjustItemEquippedState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSortItems_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSOEconClaimCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgStoreGetUserData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgStoreGetUserDataResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgUpdateItemSchema_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCError_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgRequestInventoryRefresh_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgConVarValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgReplicateConVars_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgUseItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgReplayUploadedToYouTube_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgConsumableExhausted_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgItemAcknowledged__DEPRECATED_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSetItemPositions_ItemPosition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSetItemPositions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCReportAbuse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCReportAbuseResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCNameItemNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCClientDisplayNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCShowItemsPickedUp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCIncrementKillCountResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSOEconItemDropRateBonus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSOEconItemLeagueViewPass_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSOEconItemEventTicket_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCItemPreviewItemBoughtNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCStorePurchaseCancel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCStorePurchaseCancelResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCStorePurchaseFinalize_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCStorePurchaseFinalizeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCBannedWordListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCRequestAnnouncements_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCRequestAnnouncementsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCBannedWord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCBannedWordListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCToGCBannedWordListBroadcast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCToGCBannedWordListUpdated_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSOEconDefaultEquippedDefinitionInstanceClient_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCToGCDirtySDOCache_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCToGCDirtyMultipleSDOCache_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCCollectItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSDONoMemcached_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCToGCUpdateSQLKeyValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCToGCIsTrustedServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCToGCIsTrustedServerResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCToGCBroadcastConsoleCommand_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCServerVersionUpdated_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCClientVersionUpdated_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCToGCWebAPIAccountChanged_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCToGCRequestPassportItemGrant_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGameServerInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "base_gcmessages.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 78);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025base_gcmessages.proto\032\023steammessages.p"
      "roto\"}\n\035CGCStorePurchaseInit_LineItem\022\023\n"
      "\013item_def_id\030\001 \001(\r\022\020\n\010quantity\030\002 \001(\r\022\036\n\026"
      "cost_in_local_currency\030\003 \001(\r\022\025\n\rpurchase"
      "_type\030\004 \001(\r\"\202\001\n\027CMsgGCStorePurchaseInit\022"
      "\017\n\007country\030\001 \001(\t\022\020\n\010language\030\002 \001(\005\022\020\n\010cu"
      "rrency\030\003 \001(\005\0222\n\nline_items\030\004 \003(\0132\036.CGCSt"
      "orePurchaseInit_LineItem\"`\n\037CMsgGCStoreP"
      "urchaseInitResponse\022\016\n\006result\030\001 \001(\005\022\016\n\006t"
      "xn_id\030\002 \001(\004\022\013\n\003url\030\003 \001(\t\022\020\n\010item_ids\030\004 \003"
      "(\004\"P\n\016CSOPartyInvite\022\026\n\010group_id\030\001 \001(\004B\004"
      "\200\246\035\001\022\021\n\tsender_id\030\002 \001(\006\022\023\n\013sender_name\030\003"
      " \001(\t\"P\n\016CSOLobbyInvite\022\026\n\010group_id\030\001 \001(\004"
      "B\004\200\246\035\001\022\021\n\tsender_id\030\002 \001(\006\022\023\n\013sender_name"
      "\030\003 \001(\t\"&\n\023CMsgSystemBroadcast\022\017\n\007message"
      "\030\001 \001(\t\"R\n\021CMsgInviteToParty\022\020\n\010steam_id\030"
      "\001 \001(\006\022\026\n\016client_version\030\002 \001(\r\022\023\n\013team_in"
      "vite\030\003 \001(\r\";\n\025CMsgInvitationCreated\022\020\n\010g"
      "roup_id\030\001 \001(\004\022\020\n\010steam_id\030\002 \001(\006\"h\n\027CMsgP"
      "artyInviteResponse\022\020\n\010party_id\030\001 \001(\004\022\016\n\006"
      "accept\030\002 \001(\010\022\026\n\016client_version\030\003 \001(\r\022\023\n\013"
      "team_invite\030\004 \001(\r\"%\n\021CMsgKickFromParty\022\020"
      "\n\010steam_id\030\001 \001(\006\"\020\n\016CMsgLeaveParty\"\025\n\023CM"
      "sgServerAvailable\"*\n\026CMsgLANServerAvaila"
      "ble\022\020\n\010lobby_id\030\001 \001(\006\"\264\001\n\030CSOEconGameAcc"
      "ountClient\022$\n\031additional_backpack_slots\030"
      "\001 \001(\r:\0010\022\"\n\032bonus_xp_timestamp_refresh\030\014"
      " \001(\007\022\032\n\022bonus_xp_usedflags\030\r \001(\r\022\026\n\016elev"
      "ated_state\030\016 \001(\r\022\032\n\022elevated_timestamp\030\017"
      " \001(\r\"r\n\030CSOItemCriteriaCondition\022\n\n\002op\030\001"
      " \001(\005\022\r\n\005field\030\002 \001(\t\022\020\n\010required\030\003 \001(\010\022\023\n"
      "\013float_value\030\004 \001(\002\022\024\n\014string_value\030\005 \001(\t"
      "\"\261\002\n\017CSOItemCriteria\022\022\n\nitem_level\030\001 \001(\r"
      "\022\024\n\014item_quality\030\002 \001(\005\022\026\n\016item_level_set"
      "\030\003 \001(\010\022\030\n\020item_quality_set\030\004 \001(\010\022\031\n\021init"
      "ial_inventory\030\005 \001(\r\022\030\n\020initial_quantity\030"
      "\006 \001(\r\022\033\n\023ignore_enabled_flag\030\010 \001(\010\022-\n\nco"
      "nditions\030\t \003(\0132\031.CSOItemCriteriaConditio"
      "n\022\023\n\013item_rarity\030\n \001(\005\022\027\n\017item_rarity_se"
      "t\030\013 \001(\010\022\023\n\013recent_only\030\014 \001(\010\"\325\003\n\rCSOItem"
      "Recipe\022\021\n\tdef_index\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022"
      "\013\n\003n_a\030\003 \001(\t\022\023\n\013desc_inputs\030\004 \001(\t\022\024\n\014des"
      "c_outputs\030\005 \001(\t\022\014\n\004di_a\030\006 \001(\t\022\014\n\004di_b\030\007 "
      "\001(\t\022\014\n\004di_c\030\010 \001(\t\022\014\n\004do_a\030\t \001(\t\022\014\n\004do_b\030"
      "\n \001(\t\022\014\n\004do_c\030\013 \001(\t\022\037\n\027requires_all_same"
      "_class\030\014 \001(\010\022\036\n\026requires_all_same_slot\030\r"
      " \001(\010\022\036\n\026class_usage_for_output\030\016 \001(\005\022\035\n\025"
      "slot_usage_for_output\030\017 \001(\005\022\026\n\016set_for_o"
      "utput\030\020 \001(\005\022.\n\024input_items_criteria\030\024 \003("
      "\0132\020.CSOItemCriteria\022/\n\025output_items_crit"
      "eria\030\025 \003(\0132\020.CSOItemCriteria\022\036\n\026input_it"
      "em_dupe_counts\030\026 \003(\r\"M\n\025CMsgDevNewItemRe"
      "quest\022\020\n\010receiver\030\001 \001(\006\022\"\n\010criteria\030\002 \001("
      "\0132\020.CSOItemCriteria\"\214\001\n\037CMsgIncrementKil"
      "lCountAttribute\022\031\n\021killer_account_id\030\001 \001"
      "(\007\022\031\n\021victim_account_id\030\002 \001(\007\022\017\n\007item_id"
      "\030\003 \001(\004\022\022\n\nevent_type\030\004 \001(\r\022\016\n\006amount\030\005 \001"
      "(\r\"\206\001\n\020CMsgApplySticker\022\027\n\017sticker_item_"
      "id\030\001 \001(\004\022\024\n\014item_item_id\030\002 \001(\004\022\024\n\014sticke"
      "r_slot\030\003 \001(\r\022\027\n\017baseitem_defidx\030\004 \001(\r\022\024\n"
      "\014sticker_wear\030\005 \001(\002\"]\n\025CMsgApplyStatTrak"
      "Swap\022\024\n\014tool_item_id\030\001 \001(\004\022\026\n\016item_1_ite"
      "m_id\030\002 \001(\004\022\026\n\016item_2_item_id\030\003 \001(\004\"J\n\024CM"
      "sgApplyStrangePart\022\034\n\024strange_part_item_"
      "id\030\001 \001(\004\022\024\n\014item_item_id\030\002 \001(\004\"K\n\027CMsgAp"
      "plyPennantUpgrade\022\027\n\017upgrade_item_id\030\001 \001"
      "(\004\022\027\n\017pennant_item_id\030\002 \001(\004\"C\n\023CMsgApply"
      "EggEssence\022\027\n\017essence_item_id\030\001 \001(\004\022\023\n\013e"
      "gg_item_id\030\002 \001(\004\"M\n\024CSOEconItemAttribute"
      "\022\021\n\tdef_index\030\001 \001(\r\022\r\n\005value\030\002 \001(\r\022\023\n\013va"
      "lue_bytes\030\003 \001(\014\":\n\023CSOEconItemEquipped\022\021"
      "\n\tnew_class\030\001 \001(\r\022\020\n\010new_slot\030\002 \001(\r\"\237\003\n\013"
      "CSOEconItem\022\n\n\002id\030\001 \001(\004\022\022\n\naccount_id\030\002 "
      "\001(\r\022\021\n\tinventory\030\003 \001(\r\022\021\n\tdef_index\030\004 \001("
      "\r\022\020\n\010quantity\030\005 \001(\r\022\r\n\005level\030\006 \001(\r\022\017\n\007qu"
      "ality\030\007 \001(\r\022\020\n\005flags\030\010 \001(\r:\0010\022\016\n\006origin\030"
      "\t \001(\r\022\023\n\013custom_name\030\n \001(\t\022\023\n\013custom_des"
      "c\030\013 \001(\t\022(\n\tattribute\030\014 \003(\0132\025.CSOEconItem"
      "Attribute\022#\n\rinterior_item\030\r \001(\0132\014.CSOEc"
      "onItem\022\025\n\006in_use\030\016 \001(\010:\005false\022\020\n\005style\030\017"
      " \001(\r:\0010\022\026\n\013original_id\030\020 \001(\004:\0010\022,\n\016equip"
      "ped_state\030\022 \003(\0132\024.CSOEconItemEquipped\022\016\n"
      "\006rarity\030\023 \001(\r\"a\n\033CMsgAdjustItemEquippedS"
      "tate\022\017\n\007item_id\030\001 \001(\004\022\021\n\tnew_class\030\002 \001(\r"
      "\022\020\n\010new_slot\030\003 \001(\r\022\014\n\004swap\030\004 \001(\010\"\"\n\rCMsg"
      "SortItems\022\021\n\tsort_type\030\001 \001(\r\"^\n\020CSOEconC"
      "laimCode\022\022\n\naccount_id\030\001 \001(\r\022\021\n\tcode_typ"
      "e\030\002 \001(\r\022\025\n\rtime_acquired\030\003 \001(\r\022\014\n\004code\030\004"
      " \001(\t\"E\n\024CMsgStoreGetUserData\022\033\n\023price_sh"
      "eet_version\030\001 \001(\007\022\020\n\010currency\030\002 \001(\005\"\231\001\n\034"
      "CMsgStoreGetUserDataResponse\022\016\n\006result\030\001"
      " \001(\005\022\033\n\023currency_deprecated\030\002 \001(\005\022\032\n\022cou"
      "ntry_deprecated\030\003 \001(\t\022\033\n\023price_sheet_ver"
      "sion\030\004 \001(\007\022\023\n\013price_sheet\030\010 \001(\014\"\206\001\n\024CMsg"
      "UpdateItemSchema\022\022\n\nitems_game\030\001 \001(\014\022\033\n\023"
      "item_schema_version\030\002 \001(\007\022%\n\035items_game_"
      "url_DEPRECATED2013\030\003 \001(\t\022\026\n\016items_game_u"
      "rl\030\004 \001(\t\"!\n\013CMsgGCError\022\022\n\nerror_text\030\001 "
      "\001(\t\"\035\n\033CMsgRequestInventoryRefresh\".\n\017CM"
      "sgConVarValue\022\014\n\004name\030\001 \001(\t\022\r\n\005value\030\002 \001"
      "(\t\"9\n\024CMsgReplicateConVars\022!\n\007convars\030\001 "
      "\003(\0132\020.CMsgConVarValue\"\216\001\n\013CMsgUseItem\022\017\n"
      "\007item_id\030\001 \001(\004\022\027\n\017target_steam_id\030\002 \001(\006\022"
      "\037\n\027gift__potential_targets\030\003 \003(\r\022\030\n\020duel"
      "__class_lock\030\004 \001(\r\022\032\n\022initiator_steam_id"
      "\030\005 \001(\006\"d\n\033CMsgReplayUploadedToYouTube\022\023\n"
      "\013youtube_url\030\001 \001(\t\022\034\n\024youtube_account_na"
      "me\030\002 \001(\t\022\022\n\nsession_id\030\003 \001(\004\".\n\027CMsgCons"
      "umableExhausted\022\023\n\013item_def_id\030\001 \001(\005\"\236\001\n"
      " CMsgItemAcknowledged__DEPRECATED\022\022\n\nacc"
      "ount_id\030\001 \001(\r\022\021\n\tinventory\030\002 \001(\r\022\021\n\tdef_"
      "index\030\003 \001(\r\022\017\n\007quality\030\004 \001(\r\022\016\n\006rarity\030\005"
      " \001(\r\022\016\n\006origin\030\006 \001(\r\022\017\n\007item_id\030\007 \001(\004\"\235\001"
      "\n\024CMsgSetItemPositions\022:\n\016item_positions"
      "\030\001 \003(\0132\".CMsgSetItemPositions.ItemPositi"
      "on\032I\n\014ItemPosition\022\026\n\016legacy_item_id\030\001 \001"
      "(\r\022\020\n\010position\030\002 \001(\r\022\017\n\007item_id\030\003 \001(\004\"\270\001"
      "\n\021CMsgGCReportAbuse\022\027\n\017target_steam_id\030\001"
      " \001(\006\022\023\n\013description\030\004 \001(\t\022\013\n\003gid\030\005 \001(\004\022\022"
      "\n\nabuse_type\030\002 \001(\r\022\024\n\014content_type\030\003 \001(\r"
      "\022\035\n\025target_game_server_ip\030\006 \001(\007\022\037\n\027targe"
      "t_game_server_port\030\007 \001(\r\"[\n\031CMsgGCReport"
      "AbuseResponse\022\027\n\017target_steam_id\030\001 \001(\006\022\016"
      "\n\006result\030\002 \001(\r\022\025\n\rerror_message\030\003 \001(\t\"f\n"
      "\032CMsgGCNameItemNotification\022\026\n\016player_st"
      "eamid\030\001 \001(\006\022\026\n\016item_def_index\030\002 \001(\r\022\030\n\020i"
      "tem_name_custom\030\003 \001(\t\"\266\001\n\037CMsgGCClientDi"
      "splayNotification\022+\n#notification_title_"
      "localization_key\030\001 \001(\t\022*\n\"notification_b"
      "ody_localization_key\030\002 \001(\t\022\033\n\023body_subst"
      "ring_keys\030\003 \003(\t\022\035\n\025body_substring_values"
      "\030\004 \003(\t\"1\n\027CMsgGCShowItemsPickedUp\022\026\n\016pla"
      "yer_steamid\030\001 \001(\006\"|\n CMsgGCIncrementKill"
      "CountResponse\022\037\n\021killer_account_id\030\001 \001(\r"
      "B\004\200\246\035\001\022\021\n\tnum_kills\030\002 \001(\r\022\020\n\010item_def\030\003 "
      "\001(\r\022\022\n\nlevel_type\030\004 \001(\r\"\217\001\n\030CSOEconItemD"
      "ropRateBonus\022\022\n\naccount_id\030\001 \001(\r\022\027\n\017expi"
      "ration_date\030\002 \001(\007\022\r\n\005bonus\030\003 \001(\002\022\023\n\013bonu"
      "s_count\030\004 \001(\r\022\017\n\007item_id\030\005 \001(\004\022\021\n\tdef_in"
      "dex\030\006 \001(\r\"p\n\031CSOEconItemLeagueViewPass\022\030"
      "\n\naccount_id\030\001 \001(\rB\004\200\246\035\001\022\027\n\tleague_id\030\002 "
      "\001(\rB\004\200\246\035\001\022\r\n\005admin\030\003 \001(\r\022\021\n\titemindex\030\004 "
      "\001(\r\"O\n\026CSOEconItemEventTicket\022\022\n\naccount"
      "_id\030\001 \001(\r\022\020\n\010event_id\030\002 \001(\r\022\017\n\007item_id\030\003"
      " \001(\004\"A\n\'CMsgGCItemPreviewItemBoughtNotif"
      "ication\022\026\n\016item_def_index\030\001 \001(\r\"+\n\031CMsgG"
      "CStorePurchaseCancel\022\016\n\006txn_id\030\001 \001(\004\"3\n!"
      "CMsgGCStorePurchaseCancelResponse\022\016\n\006res"
      "ult\030\001 \001(\r\"-\n\033CMsgGCStorePurchaseFinalize"
      "\022\016\n\006txn_id\030\001 \001(\004\"G\n#CMsgGCStorePurchaseF"
      "inalizeResponse\022\016\n\006result\030\001 \001(\r\022\020\n\010item_"
      "ids\030\002 \003(\004\"I\n\033CMsgGCBannedWordListRequest"
      "\022\031\n\021ban_list_group_id\030\001 \001(\r\022\017\n\007word_id\030\002"
      " \001(\r\"\034\n\032CMsgGCRequestAnnouncements\"\202\001\n\"C"
      "MsgGCRequestAnnouncementsResponse\022\032\n\022ann"
      "ouncement_title\030\001 \001(\t\022\024\n\014announcement\030\002 "
      "\001(\t\022\027\n\017nextmatch_title\030\003 \001(\t\022\021\n\tnextmatc"
      "h\030\004 \001(\t\"u\n\020CMsgGCBannedWord\022\017\n\007word_id\030\001"
      " \001(\r\022B\n\tword_type\030\002 \001(\0162\022.GC_BannedWordT"
      "ype:\033GC_BANNED_WORD_DISABLE_WORD\022\014\n\004word"
      "\030\003 \001(\t\"_\n\034CMsgGCBannedWordListResponse\022\031"
      "\n\021ban_list_group_id\030\001 \001(\r\022$\n\tword_list\030\002"
      " \003(\0132\021.CMsgGCBannedWord\"U\n!CMsgGCToGCBan"
      "nedWordListBroadcast\0220\n\tbroadcast\030\001 \001(\0132"
      "\035.CMsgGCBannedWordListResponse\"3\n\037CMsgGC"
      "ToGCBannedWordListUpdated\022\020\n\010group_id\030\001 "
      "\001(\r\"\222\001\n.CSOEconDefaultEquippedDefinition"
      "InstanceClient\022\030\n\naccount_id\030\001 \001(\rB\004\200\246\035\001"
      "\022\027\n\017item_definition\030\002 \001(\r\022\026\n\010class_id\030\003 "
      "\001(\rB\004\200\246\035\001\022\025\n\007slot_id\030\004 \001(\rB\004\200\246\035\001\"\?\n\027CMsg"
      "GCToGCDirtySDOCache\022\020\n\010sdo_type\030\001 \001(\r\022\022\n"
      "\nkey_uint64\030\002 \001(\004\"G\n\037CMsgGCToGCDirtyMult"
      "ipleSDOCache\022\020\n\010sdo_type\030\001 \001(\r\022\022\n\nkey_ui"
      "nt64\030\002 \003(\004\"H\n\021CMsgGCCollectItem\022\032\n\022colle"
      "ction_item_id\030\001 \001(\004\022\027\n\017subject_item_id\030\002"
      " \001(\004\"\024\n\022CMsgSDONoMemcached\"/\n\033CMsgGCToGC"
      "UpdateSQLKeyValue\022\020\n\010key_name\030\001 \001(\t\"-\n\031C"
      "MsgGCToGCIsTrustedServer\022\020\n\010steam_id\030\001 \001"
      "(\006\"7\n!CMsgGCToGCIsTrustedServerResponse\022"
      "\022\n\nis_trusted\030\001 \001(\010\"8\n!CMsgGCToGCBroadca"
      "stConsoleCommand\022\023\n\013con_command\030\001 \001(\t\"4\n"
      "\032CMsgGCServerVersionUpdated\022\026\n\016server_ve"
      "rsion\030\001 \001(\r\"4\n\032CMsgGCClientVersionUpdate"
      "d\022\026\n\016client_version\030\001 \001(\r\" \n\036CMsgGCToGCW"
      "ebAPIAccountChanged\"^\n\"CMsgGCToGCRequest"
      "PassportItemGrant\022\020\n\010steam_id\030\001 \001(\006\022\021\n\tl"
      "eague_id\030\002 \001(\r\022\023\n\013reward_flag\030\003 \001(\005\"\350\004\n\022"
      "CMsgGameServerInfo\022\035\n\025server_public_ip_a"
      "ddr\030\001 \001(\007\022\036\n\026server_private_ip_addr\030\002 \001("
      "\007\022\023\n\013server_port\030\003 \001(\r\022\026\n\016server_tv_port"
      "\030\004 \001(\r\022\022\n\nserver_key\030\005 \001(\t\022\032\n\022server_hib"
      "ernation\030\006 \001(\010\022@\n\013server_type\030\007 \001(\0162\036.CM"
      "sgGameServerInfo.ServerType:\013UNSPECIFIED"
      "\022\025\n\rserver_region\030\010 \001(\r\022\026\n\016server_loadav"
      "g\030\t \001(\002\022 \n\030server_tv_broadcast_time\030\n \001("
      "\002\022\030\n\020server_game_time\030\013 \001(\002\022\'\n\037server_re"
      "lay_connected_steam_id\030\014 \001(\006\022\027\n\017relay_sl"
      "ots_max\030\r \001(\r\022\030\n\020relays_connected\030\016 \001(\005\022"
      "\037\n\027relay_clients_connected\030\017 \001(\005\022$\n\034rela"
      "yed_game_server_steam_id\030\020 \001(\006\022\032\n\022parent"
      "_relay_count\030\021 \001(\r\022\026\n\016tv_secret_code\030\022 \001"
      "(\006\"2\n\nServerType\022\017\n\013UNSPECIFIED\020\000\022\010\n\004GAM"
      "E\020\001\022\t\n\005PROXY\020\002*\307\003\n\nEGCBaseMsg\022\032\n\025k_EMsgG"
      "CSystemMessage\020\241\037\022\035\n\030k_EMsgGCReplicateCo"
      "nVars\020\242\037\022\032\n\025k_EMsgGCConVarUpdated\020\243\037\022\024\n\017"
      "k_EMsgGCInQueue\020\250\037\022\032\n\025k_EMsgGCInviteToPa"
      "rty\020\225#\022\036\n\031k_EMsgGCInvitationCreated\020\226#\022 "
      "\n\033k_EMsgGCPartyInviteResponse\020\227#\022\032\n\025k_EM"
      "sgGCKickFromParty\020\230#\022\027\n\022k_EMsgGCLeavePar"
      "ty\020\231#\022\034\n\027k_EMsgGCServerAvailable\020\232#\022\"\n\035k"
      "_EMsgGCClientConnectToServer\020\233#\022\033\n\026k_EMs"
      "gGCGameServerInfo\020\234#\022\022\n\rk_EMsgGCError\020\235#"
      "\022%\n k_EMsgGCReplay_UploadedToYouTube\020\236#\022"
      "\037\n\032k_EMsgGCLANServerAvailable\020\237#*Y\n\027EGCB"
      "aseProtoObjectTypes\022\036\n\031k_EProtoObjectPar"
      "tyInvite\020\351\007\022\036\n\031k_EProtoObjectLobbyInvite"
      "\020\352\007*T\n\021GC_BannedWordType\022\037\n\033GC_BANNED_WO"
      "RD_DISABLE_WORD\020\000\022\036\n\032GC_BANNED_WORD_ENAB"
      "LE_WORD\020\001B\005H\001\200\001\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 8736);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "base_gcmessages.proto", &protobuf_RegisterTypes);
  ::protobuf_steammessages_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_base_5fgcmessages_2eproto
const ::google::protobuf::EnumDescriptor* CMsgGameServerInfo_ServerType_descriptor() {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_base_5fgcmessages_2eproto::file_level_enum_descriptors[0];
}
bool CMsgGameServerInfo_ServerType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgGameServerInfo_ServerType CMsgGameServerInfo::UNSPECIFIED;
const CMsgGameServerInfo_ServerType CMsgGameServerInfo::GAME;
const CMsgGameServerInfo_ServerType CMsgGameServerInfo::PROXY;
const CMsgGameServerInfo_ServerType CMsgGameServerInfo::ServerType_MIN;
const CMsgGameServerInfo_ServerType CMsgGameServerInfo::ServerType_MAX;
const int CMsgGameServerInfo::ServerType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EGCBaseMsg_descriptor() {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_base_5fgcmessages_2eproto::file_level_enum_descriptors[1];
}
bool EGCBaseMsg_IsValid(int value) {
  switch (value) {
    case 4001:
    case 4002:
    case 4003:
    case 4008:
    case 4501:
    case 4502:
    case 4503:
    case 4504:
    case 4505:
    case 4506:
    case 4507:
    case 4508:
    case 4509:
    case 4510:
    case 4511:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EGCBaseProtoObjectTypes_descriptor() {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_base_5fgcmessages_2eproto::file_level_enum_descriptors[2];
}
bool EGCBaseProtoObjectTypes_IsValid(int value) {
  switch (value) {
    case 1001:
    case 1002:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GC_BannedWordType_descriptor() {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_base_5fgcmessages_2eproto::file_level_enum_descriptors[3];
}
bool GC_BannedWordType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CGCStorePurchaseInit_LineItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCStorePurchaseInit_LineItem::kItemDefIdFieldNumber;
const int CGCStorePurchaseInit_LineItem::kQuantityFieldNumber;
const int CGCStorePurchaseInit_LineItem::kCostInLocalCurrencyFieldNumber;
const int CGCStorePurchaseInit_LineItem::kPurchaseTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCStorePurchaseInit_LineItem::CGCStorePurchaseInit_LineItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCGCStorePurchaseInit_LineItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCStorePurchaseInit_LineItem)
}
CGCStorePurchaseInit_LineItem::CGCStorePurchaseInit_LineItem(const CGCStorePurchaseInit_LineItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_def_id_, &from.item_def_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&purchase_type_) -
    reinterpret_cast<char*>(&item_def_id_)) + sizeof(purchase_type_));
  // @@protoc_insertion_point(copy_constructor:CGCStorePurchaseInit_LineItem)
}

void CGCStorePurchaseInit_LineItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_def_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&purchase_type_) -
      reinterpret_cast<char*>(&item_def_id_)) + sizeof(purchase_type_));
}

CGCStorePurchaseInit_LineItem::~CGCStorePurchaseInit_LineItem() {
  // @@protoc_insertion_point(destructor:CGCStorePurchaseInit_LineItem)
  SharedDtor();
}

void CGCStorePurchaseInit_LineItem::SharedDtor() {
}

void CGCStorePurchaseInit_LineItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCStorePurchaseInit_LineItem::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGCStorePurchaseInit_LineItem& CGCStorePurchaseInit_LineItem::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCGCStorePurchaseInit_LineItem();
  return *internal_default_instance();
}

CGCStorePurchaseInit_LineItem* CGCStorePurchaseInit_LineItem::New(::google::protobuf::Arena* arena) const {
  CGCStorePurchaseInit_LineItem* n = new CGCStorePurchaseInit_LineItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCStorePurchaseInit_LineItem::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCStorePurchaseInit_LineItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&item_def_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&purchase_type_) -
        reinterpret_cast<char*>(&item_def_id_)) + sizeof(purchase_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCStorePurchaseInit_LineItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCStorePurchaseInit_LineItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 item_def_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_item_def_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 quantity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_quantity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cost_in_local_currency = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_cost_in_local_currency();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cost_in_local_currency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 purchase_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_purchase_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &purchase_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCStorePurchaseInit_LineItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCStorePurchaseInit_LineItem)
  return false;
#undef DO_
}

void CGCStorePurchaseInit_LineItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCStorePurchaseInit_LineItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_def_id(), output);
  }

  // optional uint32 quantity = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->quantity(), output);
  }

  // optional uint32 cost_in_local_currency = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->cost_in_local_currency(), output);
  }

  // optional uint32 purchase_type = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->purchase_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCStorePurchaseInit_LineItem)
}

::google::protobuf::uint8* CGCStorePurchaseInit_LineItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCStorePurchaseInit_LineItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_def_id(), target);
  }

  // optional uint32 quantity = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->quantity(), target);
  }

  // optional uint32 cost_in_local_currency = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->cost_in_local_currency(), target);
  }

  // optional uint32 purchase_type = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->purchase_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCStorePurchaseInit_LineItem)
  return target;
}

size_t CGCStorePurchaseInit_LineItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCStorePurchaseInit_LineItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 item_def_id = 1;
    if (has_item_def_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def_id());
    }

    // optional uint32 quantity = 2;
    if (has_quantity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->quantity());
    }

    // optional uint32 cost_in_local_currency = 3;
    if (has_cost_in_local_currency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cost_in_local_currency());
    }

    // optional uint32 purchase_type = 4;
    if (has_purchase_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->purchase_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCStorePurchaseInit_LineItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCStorePurchaseInit_LineItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCStorePurchaseInit_LineItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCStorePurchaseInit_LineItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCStorePurchaseInit_LineItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCStorePurchaseInit_LineItem)
    MergeFrom(*source);
  }
}

void CGCStorePurchaseInit_LineItem::MergeFrom(const CGCStorePurchaseInit_LineItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCStorePurchaseInit_LineItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      item_def_id_ = from.item_def_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      quantity_ = from.quantity_;
    }
    if (cached_has_bits & 0x00000004u) {
      cost_in_local_currency_ = from.cost_in_local_currency_;
    }
    if (cached_has_bits & 0x00000008u) {
      purchase_type_ = from.purchase_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CGCStorePurchaseInit_LineItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCStorePurchaseInit_LineItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCStorePurchaseInit_LineItem::CopyFrom(const CGCStorePurchaseInit_LineItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCStorePurchaseInit_LineItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCStorePurchaseInit_LineItem::IsInitialized() const {
  return true;
}

void CGCStorePurchaseInit_LineItem::Swap(CGCStorePurchaseInit_LineItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCStorePurchaseInit_LineItem::InternalSwap(CGCStorePurchaseInit_LineItem* other) {
  using std::swap;
  swap(item_def_id_, other->item_def_id_);
  swap(quantity_, other->quantity_);
  swap(cost_in_local_currency_, other->cost_in_local_currency_);
  swap(purchase_type_, other->purchase_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCStorePurchaseInit_LineItem::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCStorePurchaseInit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCStorePurchaseInit::kCountryFieldNumber;
const int CMsgGCStorePurchaseInit::kLanguageFieldNumber;
const int CMsgGCStorePurchaseInit::kCurrencyFieldNumber;
const int CMsgGCStorePurchaseInit::kLineItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCStorePurchaseInit::CMsgGCStorePurchaseInit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCStorePurchaseInit();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCStorePurchaseInit)
}
CMsgGCStorePurchaseInit::CMsgGCStorePurchaseInit(const CMsgGCStorePurchaseInit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      line_items_(from.line_items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_country()) {
    country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
  }
  ::memcpy(&language_, &from.language_,
    static_cast<size_t>(reinterpret_cast<char*>(&currency_) -
    reinterpret_cast<char*>(&language_)) + sizeof(currency_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCStorePurchaseInit)
}

void CMsgGCStorePurchaseInit::SharedCtor() {
  _cached_size_ = 0;
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&language_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&currency_) -
      reinterpret_cast<char*>(&language_)) + sizeof(currency_));
}

CMsgGCStorePurchaseInit::~CMsgGCStorePurchaseInit() {
  // @@protoc_insertion_point(destructor:CMsgGCStorePurchaseInit)
  SharedDtor();
}

void CMsgGCStorePurchaseInit::SharedDtor() {
  country_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCStorePurchaseInit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCStorePurchaseInit::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCStorePurchaseInit& CMsgGCStorePurchaseInit::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCStorePurchaseInit();
  return *internal_default_instance();
}

CMsgGCStorePurchaseInit* CMsgGCStorePurchaseInit::New(::google::protobuf::Arena* arena) const {
  CMsgGCStorePurchaseInit* n = new CMsgGCStorePurchaseInit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCStorePurchaseInit::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCStorePurchaseInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  line_items_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!country_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*country_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&language_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&currency_) -
        reinterpret_cast<char*>(&language_)) + sizeof(currency_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCStorePurchaseInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCStorePurchaseInit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string country = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->country().data(), static_cast<int>(this->country().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCStorePurchaseInit.country");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 language = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_language();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &language_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 currency = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_currency();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CGCStorePurchaseInit_LineItem line_items = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_line_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCStorePurchaseInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCStorePurchaseInit)
  return false;
#undef DO_
}

void CMsgGCStorePurchaseInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCStorePurchaseInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string country = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country().data(), static_cast<int>(this->country().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCStorePurchaseInit.country");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->country(), output);
  }

  // optional int32 language = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->language(), output);
  }

  // optional int32 currency = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->currency(), output);
  }

  // repeated .CGCStorePurchaseInit_LineItem line_items = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->line_items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->line_items(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCStorePurchaseInit)
}

::google::protobuf::uint8* CMsgGCStorePurchaseInit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCStorePurchaseInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string country = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country().data(), static_cast<int>(this->country().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCStorePurchaseInit.country");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->country(), target);
  }

  // optional int32 language = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->language(), target);
  }

  // optional int32 currency = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->currency(), target);
  }

  // repeated .CGCStorePurchaseInit_LineItem line_items = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->line_items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->line_items(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCStorePurchaseInit)
  return target;
}

size_t CMsgGCStorePurchaseInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCStorePurchaseInit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CGCStorePurchaseInit_LineItem line_items = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->line_items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->line_items(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string country = 1;
    if (has_country()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country());
    }

    // optional int32 language = 2;
    if (has_language()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->language());
    }

    // optional int32 currency = 3;
    if (has_currency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->currency());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCStorePurchaseInit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCStorePurchaseInit)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCStorePurchaseInit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCStorePurchaseInit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCStorePurchaseInit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCStorePurchaseInit)
    MergeFrom(*source);
  }
}

void CMsgGCStorePurchaseInit::MergeFrom(const CMsgGCStorePurchaseInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCStorePurchaseInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  line_items_.MergeFrom(from.line_items_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_country();
      country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
    }
    if (cached_has_bits & 0x00000002u) {
      language_ = from.language_;
    }
    if (cached_has_bits & 0x00000004u) {
      currency_ = from.currency_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCStorePurchaseInit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCStorePurchaseInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCStorePurchaseInit::CopyFrom(const CMsgGCStorePurchaseInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCStorePurchaseInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCStorePurchaseInit::IsInitialized() const {
  return true;
}

void CMsgGCStorePurchaseInit::Swap(CMsgGCStorePurchaseInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCStorePurchaseInit::InternalSwap(CMsgGCStorePurchaseInit* other) {
  using std::swap;
  line_items_.InternalSwap(&other->line_items_);
  country_.Swap(&other->country_);
  swap(language_, other->language_);
  swap(currency_, other->currency_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCStorePurchaseInit::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCStorePurchaseInitResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCStorePurchaseInitResponse::kResultFieldNumber;
const int CMsgGCStorePurchaseInitResponse::kTxnIdFieldNumber;
const int CMsgGCStorePurchaseInitResponse::kUrlFieldNumber;
const int CMsgGCStorePurchaseInitResponse::kItemIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCStorePurchaseInitResponse::CMsgGCStorePurchaseInitResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCStorePurchaseInitResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCStorePurchaseInitResponse)
}
CMsgGCStorePurchaseInitResponse::CMsgGCStorePurchaseInitResponse(const CMsgGCStorePurchaseInitResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      item_ids_(from.item_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  ::memcpy(&txn_id_, &from.txn_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&txn_id_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCStorePurchaseInitResponse)
}

void CMsgGCStorePurchaseInitResponse::SharedCtor() {
  _cached_size_ = 0;
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&txn_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&txn_id_)) + sizeof(result_));
}

CMsgGCStorePurchaseInitResponse::~CMsgGCStorePurchaseInitResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCStorePurchaseInitResponse)
  SharedDtor();
}

void CMsgGCStorePurchaseInitResponse::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCStorePurchaseInitResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCStorePurchaseInitResponse::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCStorePurchaseInitResponse& CMsgGCStorePurchaseInitResponse::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCStorePurchaseInitResponse();
  return *internal_default_instance();
}

CMsgGCStorePurchaseInitResponse* CMsgGCStorePurchaseInitResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCStorePurchaseInitResponse* n = new CMsgGCStorePurchaseInitResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCStorePurchaseInitResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCStorePurchaseInitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_ids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*url_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&txn_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&result_) -
        reinterpret_cast<char*>(&txn_id_)) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCStorePurchaseInitResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCStorePurchaseInitResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 txn_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_txn_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &txn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCStorePurchaseInitResponse.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 item_ids = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 32u, input, this->mutable_item_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCStorePurchaseInitResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCStorePurchaseInitResponse)
  return false;
#undef DO_
}

void CMsgGCStorePurchaseInitResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCStorePurchaseInitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional uint64 txn_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->txn_id(), output);
  }

  // optional string url = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCStorePurchaseInitResponse.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->url(), output);
  }

  // repeated uint64 item_ids = 4;
  for (int i = 0, n = this->item_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      4, this->item_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCStorePurchaseInitResponse)
}

::google::protobuf::uint8* CMsgGCStorePurchaseInitResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCStorePurchaseInitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional uint64 txn_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->txn_id(), target);
  }

  // optional string url = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCStorePurchaseInitResponse.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->url(), target);
  }

  // repeated uint64 item_ids = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(4, this->item_ids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCStorePurchaseInitResponse)
  return target;
}

size_t CMsgGCStorePurchaseInitResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCStorePurchaseInitResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint64 item_ids = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->item_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->item_ids_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string url = 3;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional uint64 txn_id = 2;
    if (has_txn_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->txn_id());
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCStorePurchaseInitResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCStorePurchaseInitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCStorePurchaseInitResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCStorePurchaseInitResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCStorePurchaseInitResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCStorePurchaseInitResponse)
    MergeFrom(*source);
  }
}

void CMsgGCStorePurchaseInitResponse::MergeFrom(const CMsgGCStorePurchaseInitResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCStorePurchaseInitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_ids_.MergeFrom(from.item_ids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000002u) {
      txn_id_ = from.txn_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCStorePurchaseInitResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCStorePurchaseInitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCStorePurchaseInitResponse::CopyFrom(const CMsgGCStorePurchaseInitResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCStorePurchaseInitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCStorePurchaseInitResponse::IsInitialized() const {
  return true;
}

void CMsgGCStorePurchaseInitResponse::Swap(CMsgGCStorePurchaseInitResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCStorePurchaseInitResponse::InternalSwap(CMsgGCStorePurchaseInitResponse* other) {
  using std::swap;
  item_ids_.InternalSwap(&other->item_ids_);
  url_.Swap(&other->url_);
  swap(txn_id_, other->txn_id_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCStorePurchaseInitResponse::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSOPartyInvite::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSOPartyInvite::kGroupIdFieldNumber;
const int CSOPartyInvite::kSenderIdFieldNumber;
const int CSOPartyInvite::kSenderNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSOPartyInvite::CSOPartyInvite()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOPartyInvite();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSOPartyInvite)
}
CSOPartyInvite::CSOPartyInvite(const CSOPartyInvite& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sender_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sender_name()) {
    sender_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_name_);
  }
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&sender_id_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(sender_id_));
  // @@protoc_insertion_point(copy_constructor:CSOPartyInvite)
}

void CSOPartyInvite::SharedCtor() {
  _cached_size_ = 0;
  sender_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sender_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(sender_id_));
}

CSOPartyInvite::~CSOPartyInvite() {
  // @@protoc_insertion_point(destructor:CSOPartyInvite)
  SharedDtor();
}

void CSOPartyInvite::SharedDtor() {
  sender_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSOPartyInvite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSOPartyInvite::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSOPartyInvite& CSOPartyInvite::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOPartyInvite();
  return *internal_default_instance();
}

CSOPartyInvite* CSOPartyInvite::New(::google::protobuf::Arena* arena) const {
  CSOPartyInvite* n = new CSOPartyInvite;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CSOPartyInvite::Clear() {
// @@protoc_insertion_point(message_clear_start:CSOPartyInvite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!sender_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*sender_name_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&group_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sender_id_) -
        reinterpret_cast<char*>(&group_id_)) + sizeof(sender_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSOPartyInvite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSOPartyInvite)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 group_id = 1 [(.key_field) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 sender_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_sender_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &sender_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sender_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sender_name().data(), static_cast<int>(this->sender_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSOPartyInvite.sender_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSOPartyInvite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSOPartyInvite)
  return false;
#undef DO_
}

void CSOPartyInvite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSOPartyInvite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 group_id = 1 [(.key_field) = true];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->group_id(), output);
  }

  // optional fixed64 sender_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->sender_id(), output);
  }

  // optional string sender_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender_name().data(), static_cast<int>(this->sender_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOPartyInvite.sender_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sender_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSOPartyInvite)
}

::google::protobuf::uint8* CSOPartyInvite::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSOPartyInvite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 group_id = 1 [(.key_field) = true];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->group_id(), target);
  }

  // optional fixed64 sender_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->sender_id(), target);
  }

  // optional string sender_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender_name().data(), static_cast<int>(this->sender_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOPartyInvite.sender_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sender_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSOPartyInvite)
  return target;
}

size_t CSOPartyInvite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSOPartyInvite)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string sender_name = 3;
    if (has_sender_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sender_name());
    }

    // optional uint64 group_id = 1 [(.key_field) = true];
    if (has_group_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->group_id());
    }

    // optional fixed64 sender_id = 2;
    if (has_sender_id()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSOPartyInvite::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSOPartyInvite)
  GOOGLE_DCHECK_NE(&from, this);
  const CSOPartyInvite* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSOPartyInvite>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSOPartyInvite)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSOPartyInvite)
    MergeFrom(*source);
  }
}

void CSOPartyInvite::MergeFrom(const CSOPartyInvite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSOPartyInvite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sender_name();
      sender_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      group_id_ = from.group_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      sender_id_ = from.sender_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSOPartyInvite::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSOPartyInvite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSOPartyInvite::CopyFrom(const CSOPartyInvite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSOPartyInvite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSOPartyInvite::IsInitialized() const {
  return true;
}

void CSOPartyInvite::Swap(CSOPartyInvite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSOPartyInvite::InternalSwap(CSOPartyInvite* other) {
  using std::swap;
  sender_name_.Swap(&other->sender_name_);
  swap(group_id_, other->group_id_);
  swap(sender_id_, other->sender_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CSOPartyInvite::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSOLobbyInvite::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSOLobbyInvite::kGroupIdFieldNumber;
const int CSOLobbyInvite::kSenderIdFieldNumber;
const int CSOLobbyInvite::kSenderNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSOLobbyInvite::CSOLobbyInvite()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOLobbyInvite();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSOLobbyInvite)
}
CSOLobbyInvite::CSOLobbyInvite(const CSOLobbyInvite& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sender_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sender_name()) {
    sender_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_name_);
  }
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&sender_id_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(sender_id_));
  // @@protoc_insertion_point(copy_constructor:CSOLobbyInvite)
}

void CSOLobbyInvite::SharedCtor() {
  _cached_size_ = 0;
  sender_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sender_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(sender_id_));
}

CSOLobbyInvite::~CSOLobbyInvite() {
  // @@protoc_insertion_point(destructor:CSOLobbyInvite)
  SharedDtor();
}

void CSOLobbyInvite::SharedDtor() {
  sender_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSOLobbyInvite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSOLobbyInvite::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSOLobbyInvite& CSOLobbyInvite::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOLobbyInvite();
  return *internal_default_instance();
}

CSOLobbyInvite* CSOLobbyInvite::New(::google::protobuf::Arena* arena) const {
  CSOLobbyInvite* n = new CSOLobbyInvite;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CSOLobbyInvite::Clear() {
// @@protoc_insertion_point(message_clear_start:CSOLobbyInvite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!sender_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*sender_name_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&group_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sender_id_) -
        reinterpret_cast<char*>(&group_id_)) + sizeof(sender_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSOLobbyInvite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSOLobbyInvite)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 group_id = 1 [(.key_field) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 sender_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_sender_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &sender_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sender_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sender_name().data(), static_cast<int>(this->sender_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSOLobbyInvite.sender_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSOLobbyInvite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSOLobbyInvite)
  return false;
#undef DO_
}

void CSOLobbyInvite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSOLobbyInvite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 group_id = 1 [(.key_field) = true];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->group_id(), output);
  }

  // optional fixed64 sender_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->sender_id(), output);
  }

  // optional string sender_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender_name().data(), static_cast<int>(this->sender_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOLobbyInvite.sender_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sender_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSOLobbyInvite)
}

::google::protobuf::uint8* CSOLobbyInvite::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSOLobbyInvite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 group_id = 1 [(.key_field) = true];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->group_id(), target);
  }

  // optional fixed64 sender_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->sender_id(), target);
  }

  // optional string sender_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender_name().data(), static_cast<int>(this->sender_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOLobbyInvite.sender_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sender_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSOLobbyInvite)
  return target;
}

size_t CSOLobbyInvite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSOLobbyInvite)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string sender_name = 3;
    if (has_sender_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sender_name());
    }

    // optional uint64 group_id = 1 [(.key_field) = true];
    if (has_group_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->group_id());
    }

    // optional fixed64 sender_id = 2;
    if (has_sender_id()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSOLobbyInvite::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSOLobbyInvite)
  GOOGLE_DCHECK_NE(&from, this);
  const CSOLobbyInvite* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSOLobbyInvite>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSOLobbyInvite)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSOLobbyInvite)
    MergeFrom(*source);
  }
}

void CSOLobbyInvite::MergeFrom(const CSOLobbyInvite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSOLobbyInvite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sender_name();
      sender_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      group_id_ = from.group_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      sender_id_ = from.sender_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSOLobbyInvite::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSOLobbyInvite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSOLobbyInvite::CopyFrom(const CSOLobbyInvite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSOLobbyInvite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSOLobbyInvite::IsInitialized() const {
  return true;
}

void CSOLobbyInvite::Swap(CSOLobbyInvite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSOLobbyInvite::InternalSwap(CSOLobbyInvite* other) {
  using std::swap;
  sender_name_.Swap(&other->sender_name_);
  swap(group_id_, other->group_id_);
  swap(sender_id_, other->sender_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CSOLobbyInvite::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSystemBroadcast::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSystemBroadcast::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSystemBroadcast::CMsgSystemBroadcast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgSystemBroadcast();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSystemBroadcast)
}
CMsgSystemBroadcast::CMsgSystemBroadcast(const CMsgSystemBroadcast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgSystemBroadcast)
}

void CMsgSystemBroadcast::SharedCtor() {
  _cached_size_ = 0;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgSystemBroadcast::~CMsgSystemBroadcast() {
  // @@protoc_insertion_point(destructor:CMsgSystemBroadcast)
  SharedDtor();
}

void CMsgSystemBroadcast::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgSystemBroadcast::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSystemBroadcast::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSystemBroadcast& CMsgSystemBroadcast::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgSystemBroadcast();
  return *internal_default_instance();
}

CMsgSystemBroadcast* CMsgSystemBroadcast::New(::google::protobuf::Arena* arena) const {
  CMsgSystemBroadcast* n = new CMsgSystemBroadcast;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSystemBroadcast::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSystemBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!message_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*message_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSystemBroadcast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSystemBroadcast)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgSystemBroadcast.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSystemBroadcast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSystemBroadcast)
  return false;
#undef DO_
}

void CMsgSystemBroadcast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSystemBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSystemBroadcast.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSystemBroadcast)
}

::google::protobuf::uint8* CMsgSystemBroadcast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSystemBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgSystemBroadcast.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSystemBroadcast)
  return target;
}

size_t CMsgSystemBroadcast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSystemBroadcast)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string message = 1;
  if (has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSystemBroadcast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSystemBroadcast)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSystemBroadcast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSystemBroadcast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSystemBroadcast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSystemBroadcast)
    MergeFrom(*source);
  }
}

void CMsgSystemBroadcast::MergeFrom(const CMsgSystemBroadcast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSystemBroadcast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_message()) {
    set_has_message();
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void CMsgSystemBroadcast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSystemBroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSystemBroadcast::CopyFrom(const CMsgSystemBroadcast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSystemBroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSystemBroadcast::IsInitialized() const {
  return true;
}

void CMsgSystemBroadcast::Swap(CMsgSystemBroadcast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSystemBroadcast::InternalSwap(CMsgSystemBroadcast* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSystemBroadcast::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgInviteToParty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgInviteToParty::kSteamIdFieldNumber;
const int CMsgInviteToParty::kClientVersionFieldNumber;
const int CMsgInviteToParty::kTeamInviteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgInviteToParty::CMsgInviteToParty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgInviteToParty();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgInviteToParty)
}
CMsgInviteToParty::CMsgInviteToParty(const CMsgInviteToParty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_, &from.steam_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&team_invite_) -
    reinterpret_cast<char*>(&steam_id_)) + sizeof(team_invite_));
  // @@protoc_insertion_point(copy_constructor:CMsgInviteToParty)
}

void CMsgInviteToParty::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&steam_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&team_invite_) -
      reinterpret_cast<char*>(&steam_id_)) + sizeof(team_invite_));
}

CMsgInviteToParty::~CMsgInviteToParty() {
  // @@protoc_insertion_point(destructor:CMsgInviteToParty)
  SharedDtor();
}

void CMsgInviteToParty::SharedDtor() {
}

void CMsgInviteToParty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgInviteToParty::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgInviteToParty& CMsgInviteToParty::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgInviteToParty();
  return *internal_default_instance();
}

CMsgInviteToParty* CMsgInviteToParty::New(::google::protobuf::Arena* arena) const {
  CMsgInviteToParty* n = new CMsgInviteToParty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgInviteToParty::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgInviteToParty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&steam_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&team_invite_) -
        reinterpret_cast<char*>(&steam_id_)) + sizeof(team_invite_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgInviteToParty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgInviteToParty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 client_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_client_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 team_invite = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_team_invite();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &team_invite_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgInviteToParty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgInviteToParty)
  return false;
#undef DO_
}

void CMsgInviteToParty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgInviteToParty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  // optional uint32 client_version = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->client_version(), output);
  }

  // optional uint32 team_invite = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->team_invite(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgInviteToParty)
}

::google::protobuf::uint8* CMsgInviteToParty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgInviteToParty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  // optional uint32 client_version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->client_version(), target);
  }

  // optional uint32 team_invite = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->team_invite(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgInviteToParty)
  return target;
}

size_t CMsgInviteToParty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgInviteToParty)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 steam_id = 1;
    if (has_steam_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 client_version = 2;
    if (has_client_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->client_version());
    }

    // optional uint32 team_invite = 3;
    if (has_team_invite()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->team_invite());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgInviteToParty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgInviteToParty)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgInviteToParty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgInviteToParty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgInviteToParty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgInviteToParty)
    MergeFrom(*source);
  }
}

void CMsgInviteToParty::MergeFrom(const CMsgInviteToParty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgInviteToParty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_ = from.steam_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      client_version_ = from.client_version_;
    }
    if (cached_has_bits & 0x00000004u) {
      team_invite_ = from.team_invite_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgInviteToParty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgInviteToParty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgInviteToParty::CopyFrom(const CMsgInviteToParty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgInviteToParty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgInviteToParty::IsInitialized() const {
  return true;
}

void CMsgInviteToParty::Swap(CMsgInviteToParty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgInviteToParty::InternalSwap(CMsgInviteToParty* other) {
  using std::swap;
  swap(steam_id_, other->steam_id_);
  swap(client_version_, other->client_version_);
  swap(team_invite_, other->team_invite_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgInviteToParty::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgInvitationCreated::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgInvitationCreated::kGroupIdFieldNumber;
const int CMsgInvitationCreated::kSteamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgInvitationCreated::CMsgInvitationCreated()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgInvitationCreated();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgInvitationCreated)
}
CMsgInvitationCreated::CMsgInvitationCreated(const CMsgInvitationCreated& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&steam_id_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(steam_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgInvitationCreated)
}

void CMsgInvitationCreated::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&steam_id_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(steam_id_));
}

CMsgInvitationCreated::~CMsgInvitationCreated() {
  // @@protoc_insertion_point(destructor:CMsgInvitationCreated)
  SharedDtor();
}

void CMsgInvitationCreated::SharedDtor() {
}

void CMsgInvitationCreated::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgInvitationCreated::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgInvitationCreated& CMsgInvitationCreated::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgInvitationCreated();
  return *internal_default_instance();
}

CMsgInvitationCreated* CMsgInvitationCreated::New(::google::protobuf::Arena* arena) const {
  CMsgInvitationCreated* n = new CMsgInvitationCreated;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgInvitationCreated::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgInvitationCreated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&group_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&steam_id_) -
        reinterpret_cast<char*>(&group_id_)) + sizeof(steam_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgInvitationCreated::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgInvitationCreated)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgInvitationCreated)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgInvitationCreated)
  return false;
#undef DO_
}

void CMsgInvitationCreated::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgInvitationCreated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->group_id(), output);
  }

  // optional fixed64 steam_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steam_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgInvitationCreated)
}

::google::protobuf::uint8* CMsgInvitationCreated::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgInvitationCreated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->group_id(), target);
  }

  // optional fixed64 steam_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steam_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgInvitationCreated)
  return target;
}

size_t CMsgInvitationCreated::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgInvitationCreated)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 group_id = 1;
    if (has_group_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->group_id());
    }

    // optional fixed64 steam_id = 2;
    if (has_steam_id()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgInvitationCreated::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgInvitationCreated)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgInvitationCreated* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgInvitationCreated>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgInvitationCreated)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgInvitationCreated)
    MergeFrom(*source);
  }
}

void CMsgInvitationCreated::MergeFrom(const CMsgInvitationCreated& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgInvitationCreated)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      group_id_ = from.group_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      steam_id_ = from.steam_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgInvitationCreated::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgInvitationCreated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgInvitationCreated::CopyFrom(const CMsgInvitationCreated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgInvitationCreated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgInvitationCreated::IsInitialized() const {
  return true;
}

void CMsgInvitationCreated::Swap(CMsgInvitationCreated* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgInvitationCreated::InternalSwap(CMsgInvitationCreated* other) {
  using std::swap;
  swap(group_id_, other->group_id_);
  swap(steam_id_, other->steam_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgInvitationCreated::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgPartyInviteResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgPartyInviteResponse::kPartyIdFieldNumber;
const int CMsgPartyInviteResponse::kAcceptFieldNumber;
const int CMsgPartyInviteResponse::kClientVersionFieldNumber;
const int CMsgPartyInviteResponse::kTeamInviteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgPartyInviteResponse::CMsgPartyInviteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgPartyInviteResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgPartyInviteResponse)
}
CMsgPartyInviteResponse::CMsgPartyInviteResponse(const CMsgPartyInviteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&party_id_, &from.party_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&team_invite_) -
    reinterpret_cast<char*>(&party_id_)) + sizeof(team_invite_));
  // @@protoc_insertion_point(copy_constructor:CMsgPartyInviteResponse)
}

void CMsgPartyInviteResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&party_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&team_invite_) -
      reinterpret_cast<char*>(&party_id_)) + sizeof(team_invite_));
}

CMsgPartyInviteResponse::~CMsgPartyInviteResponse() {
  // @@protoc_insertion_point(destructor:CMsgPartyInviteResponse)
  SharedDtor();
}

void CMsgPartyInviteResponse::SharedDtor() {
}

void CMsgPartyInviteResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgPartyInviteResponse::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgPartyInviteResponse& CMsgPartyInviteResponse::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgPartyInviteResponse();
  return *internal_default_instance();
}

CMsgPartyInviteResponse* CMsgPartyInviteResponse::New(::google::protobuf::Arena* arena) const {
  CMsgPartyInviteResponse* n = new CMsgPartyInviteResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgPartyInviteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgPartyInviteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&party_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&team_invite_) -
        reinterpret_cast<char*>(&party_id_)) + sizeof(team_invite_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgPartyInviteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgPartyInviteResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 party_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_party_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &party_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool accept = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_accept();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &accept_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 client_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_client_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 team_invite = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_team_invite();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &team_invite_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgPartyInviteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgPartyInviteResponse)
  return false;
#undef DO_
}

void CMsgPartyInviteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgPartyInviteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 party_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->party_id(), output);
  }

  // optional bool accept = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->accept(), output);
  }

  // optional uint32 client_version = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->client_version(), output);
  }

  // optional uint32 team_invite = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->team_invite(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgPartyInviteResponse)
}

::google::protobuf::uint8* CMsgPartyInviteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPartyInviteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 party_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->party_id(), target);
  }

  // optional bool accept = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->accept(), target);
  }

  // optional uint32 client_version = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->client_version(), target);
  }

  // optional uint32 team_invite = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->team_invite(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPartyInviteResponse)
  return target;
}

size_t CMsgPartyInviteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgPartyInviteResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint64 party_id = 1;
    if (has_party_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->party_id());
    }

    // optional bool accept = 2;
    if (has_accept()) {
      total_size += 1 + 1;
    }

    // optional uint32 client_version = 3;
    if (has_client_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->client_version());
    }

    // optional uint32 team_invite = 4;
    if (has_team_invite()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->team_invite());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgPartyInviteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgPartyInviteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgPartyInviteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgPartyInviteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgPartyInviteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgPartyInviteResponse)
    MergeFrom(*source);
  }
}

void CMsgPartyInviteResponse::MergeFrom(const CMsgPartyInviteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgPartyInviteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      party_id_ = from.party_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      accept_ = from.accept_;
    }
    if (cached_has_bits & 0x00000004u) {
      client_version_ = from.client_version_;
    }
    if (cached_has_bits & 0x00000008u) {
      team_invite_ = from.team_invite_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgPartyInviteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgPartyInviteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgPartyInviteResponse::CopyFrom(const CMsgPartyInviteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgPartyInviteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgPartyInviteResponse::IsInitialized() const {
  return true;
}

void CMsgPartyInviteResponse::Swap(CMsgPartyInviteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgPartyInviteResponse::InternalSwap(CMsgPartyInviteResponse* other) {
  using std::swap;
  swap(party_id_, other->party_id_);
  swap(accept_, other->accept_);
  swap(client_version_, other->client_version_);
  swap(team_invite_, other->team_invite_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgPartyInviteResponse::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgKickFromParty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgKickFromParty::kSteamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgKickFromParty::CMsgKickFromParty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgKickFromParty();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgKickFromParty)
}
CMsgKickFromParty::CMsgKickFromParty(const CMsgKickFromParty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steam_id_ = from.steam_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgKickFromParty)
}

void CMsgKickFromParty::SharedCtor() {
  _cached_size_ = 0;
  steam_id_ = GOOGLE_ULONGLONG(0);
}

CMsgKickFromParty::~CMsgKickFromParty() {
  // @@protoc_insertion_point(destructor:CMsgKickFromParty)
  SharedDtor();
}

void CMsgKickFromParty::SharedDtor() {
}

void CMsgKickFromParty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgKickFromParty::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgKickFromParty& CMsgKickFromParty::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgKickFromParty();
  return *internal_default_instance();
}

CMsgKickFromParty* CMsgKickFromParty::New(::google::protobuf::Arena* arena) const {
  CMsgKickFromParty* n = new CMsgKickFromParty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgKickFromParty::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgKickFromParty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steam_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgKickFromParty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgKickFromParty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgKickFromParty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgKickFromParty)
  return false;
#undef DO_
}

void CMsgKickFromParty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgKickFromParty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgKickFromParty)
}

::google::protobuf::uint8* CMsgKickFromParty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgKickFromParty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgKickFromParty)
  return target;
}

size_t CMsgKickFromParty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgKickFromParty)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 steam_id = 1;
  if (has_steam_id()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgKickFromParty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgKickFromParty)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgKickFromParty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgKickFromParty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgKickFromParty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgKickFromParty)
    MergeFrom(*source);
  }
}

void CMsgKickFromParty::MergeFrom(const CMsgKickFromParty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgKickFromParty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steam_id()) {
    set_steam_id(from.steam_id());
  }
}

void CMsgKickFromParty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgKickFromParty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgKickFromParty::CopyFrom(const CMsgKickFromParty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgKickFromParty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgKickFromParty::IsInitialized() const {
  return true;
}

void CMsgKickFromParty::Swap(CMsgKickFromParty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgKickFromParty::InternalSwap(CMsgKickFromParty* other) {
  using std::swap;
  swap(steam_id_, other->steam_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgKickFromParty::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgLeaveParty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgLeaveParty::CMsgLeaveParty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgLeaveParty();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgLeaveParty)
}
CMsgLeaveParty::CMsgLeaveParty(const CMsgLeaveParty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgLeaveParty)
}

void CMsgLeaveParty::SharedCtor() {
  _cached_size_ = 0;
}

CMsgLeaveParty::~CMsgLeaveParty() {
  // @@protoc_insertion_point(destructor:CMsgLeaveParty)
  SharedDtor();
}

void CMsgLeaveParty::SharedDtor() {
}

void CMsgLeaveParty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgLeaveParty::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgLeaveParty& CMsgLeaveParty::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgLeaveParty();
  return *internal_default_instance();
}

CMsgLeaveParty* CMsgLeaveParty::New(::google::protobuf::Arena* arena) const {
  CMsgLeaveParty* n = new CMsgLeaveParty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgLeaveParty::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgLeaveParty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgLeaveParty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgLeaveParty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgLeaveParty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgLeaveParty)
  return false;
#undef DO_
}

void CMsgLeaveParty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgLeaveParty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgLeaveParty)
}

::google::protobuf::uint8* CMsgLeaveParty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgLeaveParty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgLeaveParty)
  return target;
}

size_t CMsgLeaveParty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgLeaveParty)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgLeaveParty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgLeaveParty)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgLeaveParty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgLeaveParty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgLeaveParty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgLeaveParty)
    MergeFrom(*source);
  }
}

void CMsgLeaveParty::MergeFrom(const CMsgLeaveParty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgLeaveParty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgLeaveParty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgLeaveParty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLeaveParty::CopyFrom(const CMsgLeaveParty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgLeaveParty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLeaveParty::IsInitialized() const {
  return true;
}

void CMsgLeaveParty::Swap(CMsgLeaveParty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgLeaveParty::InternalSwap(CMsgLeaveParty* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgLeaveParty::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgServerAvailable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgServerAvailable::CMsgServerAvailable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgServerAvailable();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgServerAvailable)
}
CMsgServerAvailable::CMsgServerAvailable(const CMsgServerAvailable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgServerAvailable)
}

void CMsgServerAvailable::SharedCtor() {
  _cached_size_ = 0;
}

CMsgServerAvailable::~CMsgServerAvailable() {
  // @@protoc_insertion_point(destructor:CMsgServerAvailable)
  SharedDtor();
}

void CMsgServerAvailable::SharedDtor() {
}

void CMsgServerAvailable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgServerAvailable::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgServerAvailable& CMsgServerAvailable::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgServerAvailable();
  return *internal_default_instance();
}

CMsgServerAvailable* CMsgServerAvailable::New(::google::protobuf::Arena* arena) const {
  CMsgServerAvailable* n = new CMsgServerAvailable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgServerAvailable::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgServerAvailable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgServerAvailable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgServerAvailable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgServerAvailable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgServerAvailable)
  return false;
#undef DO_
}

void CMsgServerAvailable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgServerAvailable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgServerAvailable)
}

::google::protobuf::uint8* CMsgServerAvailable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgServerAvailable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgServerAvailable)
  return target;
}

size_t CMsgServerAvailable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgServerAvailable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgServerAvailable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgServerAvailable)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgServerAvailable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgServerAvailable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgServerAvailable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgServerAvailable)
    MergeFrom(*source);
  }
}

void CMsgServerAvailable::MergeFrom(const CMsgServerAvailable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgServerAvailable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgServerAvailable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgServerAvailable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgServerAvailable::CopyFrom(const CMsgServerAvailable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgServerAvailable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgServerAvailable::IsInitialized() const {
  return true;
}

void CMsgServerAvailable::Swap(CMsgServerAvailable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgServerAvailable::InternalSwap(CMsgServerAvailable* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgServerAvailable::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgLANServerAvailable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgLANServerAvailable::kLobbyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgLANServerAvailable::CMsgLANServerAvailable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgLANServerAvailable();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgLANServerAvailable)
}
CMsgLANServerAvailable::CMsgLANServerAvailable(const CMsgLANServerAvailable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lobby_id_ = from.lobby_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgLANServerAvailable)
}

void CMsgLANServerAvailable::SharedCtor() {
  _cached_size_ = 0;
  lobby_id_ = GOOGLE_ULONGLONG(0);
}

CMsgLANServerAvailable::~CMsgLANServerAvailable() {
  // @@protoc_insertion_point(destructor:CMsgLANServerAvailable)
  SharedDtor();
}

void CMsgLANServerAvailable::SharedDtor() {
}

void CMsgLANServerAvailable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgLANServerAvailable::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgLANServerAvailable& CMsgLANServerAvailable::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgLANServerAvailable();
  return *internal_default_instance();
}

CMsgLANServerAvailable* CMsgLANServerAvailable::New(::google::protobuf::Arena* arena) const {
  CMsgLANServerAvailable* n = new CMsgLANServerAvailable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgLANServerAvailable::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgLANServerAvailable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lobby_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgLANServerAvailable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgLANServerAvailable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 lobby_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_lobby_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &lobby_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgLANServerAvailable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgLANServerAvailable)
  return false;
#undef DO_
}

void CMsgLANServerAvailable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgLANServerAvailable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 lobby_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->lobby_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgLANServerAvailable)
}

::google::protobuf::uint8* CMsgLANServerAvailable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgLANServerAvailable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 lobby_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->lobby_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgLANServerAvailable)
  return target;
}

size_t CMsgLANServerAvailable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgLANServerAvailable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 lobby_id = 1;
  if (has_lobby_id()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgLANServerAvailable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgLANServerAvailable)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgLANServerAvailable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgLANServerAvailable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgLANServerAvailable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgLANServerAvailable)
    MergeFrom(*source);
  }
}

void CMsgLANServerAvailable::MergeFrom(const CMsgLANServerAvailable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgLANServerAvailable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_lobby_id()) {
    set_lobby_id(from.lobby_id());
  }
}

void CMsgLANServerAvailable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgLANServerAvailable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLANServerAvailable::CopyFrom(const CMsgLANServerAvailable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgLANServerAvailable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLANServerAvailable::IsInitialized() const {
  return true;
}

void CMsgLANServerAvailable::Swap(CMsgLANServerAvailable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgLANServerAvailable::InternalSwap(CMsgLANServerAvailable* other) {
  using std::swap;
  swap(lobby_id_, other->lobby_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgLANServerAvailable::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSOEconGameAccountClient::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSOEconGameAccountClient::kAdditionalBackpackSlotsFieldNumber;
const int CSOEconGameAccountClient::kBonusXpTimestampRefreshFieldNumber;
const int CSOEconGameAccountClient::kBonusXpUsedflagsFieldNumber;
const int CSOEconGameAccountClient::kElevatedStateFieldNumber;
const int CSOEconGameAccountClient::kElevatedTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSOEconGameAccountClient::CSOEconGameAccountClient()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOEconGameAccountClient();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSOEconGameAccountClient)
}
CSOEconGameAccountClient::CSOEconGameAccountClient(const CSOEconGameAccountClient& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&elevated_timestamp_, &from.elevated_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&elevated_state_) -
    reinterpret_cast<char*>(&elevated_timestamp_)) + sizeof(elevated_state_));
  // @@protoc_insertion_point(copy_constructor:CSOEconGameAccountClient)
}

void CSOEconGameAccountClient::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&elevated_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&elevated_state_) -
      reinterpret_cast<char*>(&elevated_timestamp_)) + sizeof(elevated_state_));
}

CSOEconGameAccountClient::~CSOEconGameAccountClient() {
  // @@protoc_insertion_point(destructor:CSOEconGameAccountClient)
  SharedDtor();
}

void CSOEconGameAccountClient::SharedDtor() {
}

void CSOEconGameAccountClient::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSOEconGameAccountClient::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSOEconGameAccountClient& CSOEconGameAccountClient::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOEconGameAccountClient();
  return *internal_default_instance();
}

CSOEconGameAccountClient* CSOEconGameAccountClient::New(::google::protobuf::Arena* arena) const {
  CSOEconGameAccountClient* n = new CSOEconGameAccountClient;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CSOEconGameAccountClient::Clear() {
// @@protoc_insertion_point(message_clear_start:CSOEconGameAccountClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&elevated_timestamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&elevated_state_) -
        reinterpret_cast<char*>(&elevated_timestamp_)) + sizeof(elevated_state_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSOEconGameAccountClient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSOEconGameAccountClient)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 additional_backpack_slots = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_additional_backpack_slots();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &additional_backpack_slots_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 bonus_xp_timestamp_refresh = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {
          set_has_bonus_xp_timestamp_refresh();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &bonus_xp_timestamp_refresh_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 bonus_xp_usedflags = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_bonus_xp_usedflags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bonus_xp_usedflags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 elevated_state = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_elevated_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &elevated_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 elevated_timestamp = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_elevated_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &elevated_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSOEconGameAccountClient)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSOEconGameAccountClient)
  return false;
#undef DO_
}

void CSOEconGameAccountClient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSOEconGameAccountClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 additional_backpack_slots = 1 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->additional_backpack_slots(), output);
  }

  // optional fixed32 bonus_xp_timestamp_refresh = 12;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(12, this->bonus_xp_timestamp_refresh(), output);
  }

  // optional uint32 bonus_xp_usedflags = 13;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->bonus_xp_usedflags(), output);
  }

  // optional uint32 elevated_state = 14;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->elevated_state(), output);
  }

  // optional uint32 elevated_timestamp = 15;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->elevated_timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSOEconGameAccountClient)
}

::google::protobuf::uint8* CSOEconGameAccountClient::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSOEconGameAccountClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 additional_backpack_slots = 1 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->additional_backpack_slots(), target);
  }

  // optional fixed32 bonus_xp_timestamp_refresh = 12;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(12, this->bonus_xp_timestamp_refresh(), target);
  }

  // optional uint32 bonus_xp_usedflags = 13;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->bonus_xp_usedflags(), target);
  }

  // optional uint32 elevated_state = 14;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->elevated_state(), target);
  }

  // optional uint32 elevated_timestamp = 15;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->elevated_timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSOEconGameAccountClient)
  return target;
}

size_t CSOEconGameAccountClient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSOEconGameAccountClient)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 elevated_timestamp = 15;
    if (has_elevated_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->elevated_timestamp());
    }

    // optional uint32 additional_backpack_slots = 1 [default = 0];
    if (has_additional_backpack_slots()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->additional_backpack_slots());
    }

    // optional fixed32 bonus_xp_timestamp_refresh = 12;
    if (has_bonus_xp_timestamp_refresh()) {
      total_size += 1 + 4;
    }

    // optional uint32 bonus_xp_usedflags = 13;
    if (has_bonus_xp_usedflags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bonus_xp_usedflags());
    }

    // optional uint32 elevated_state = 14;
    if (has_elevated_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->elevated_state());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSOEconGameAccountClient::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSOEconGameAccountClient)
  GOOGLE_DCHECK_NE(&from, this);
  const CSOEconGameAccountClient* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSOEconGameAccountClient>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSOEconGameAccountClient)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSOEconGameAccountClient)
    MergeFrom(*source);
  }
}

void CSOEconGameAccountClient::MergeFrom(const CSOEconGameAccountClient& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSOEconGameAccountClient)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      elevated_timestamp_ = from.elevated_timestamp_;
    }
    if (cached_has_bits & 0x00000002u) {
      additional_backpack_slots_ = from.additional_backpack_slots_;
    }
    if (cached_has_bits & 0x00000004u) {
      bonus_xp_timestamp_refresh_ = from.bonus_xp_timestamp_refresh_;
    }
    if (cached_has_bits & 0x00000008u) {
      bonus_xp_usedflags_ = from.bonus_xp_usedflags_;
    }
    if (cached_has_bits & 0x00000010u) {
      elevated_state_ = from.elevated_state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSOEconGameAccountClient::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSOEconGameAccountClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSOEconGameAccountClient::CopyFrom(const CSOEconGameAccountClient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSOEconGameAccountClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSOEconGameAccountClient::IsInitialized() const {
  return true;
}

void CSOEconGameAccountClient::Swap(CSOEconGameAccountClient* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSOEconGameAccountClient::InternalSwap(CSOEconGameAccountClient* other) {
  using std::swap;
  swap(elevated_timestamp_, other->elevated_timestamp_);
  swap(additional_backpack_slots_, other->additional_backpack_slots_);
  swap(bonus_xp_timestamp_refresh_, other->bonus_xp_timestamp_refresh_);
  swap(bonus_xp_usedflags_, other->bonus_xp_usedflags_);
  swap(elevated_state_, other->elevated_state_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CSOEconGameAccountClient::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSOItemCriteriaCondition::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSOItemCriteriaCondition::kOpFieldNumber;
const int CSOItemCriteriaCondition::kFieldFieldNumber;
const int CSOItemCriteriaCondition::kRequiredFieldNumber;
const int CSOItemCriteriaCondition::kFloatValueFieldNumber;
const int CSOItemCriteriaCondition::kStringValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSOItemCriteriaCondition::CSOItemCriteriaCondition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOItemCriteriaCondition();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSOItemCriteriaCondition)
}
CSOItemCriteriaCondition::CSOItemCriteriaCondition(const CSOItemCriteriaCondition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_field()) {
    field_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_);
  }
  string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_string_value()) {
    string_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_value_);
  }
  ::memcpy(&op_, &from.op_,
    static_cast<size_t>(reinterpret_cast<char*>(&float_value_) -
    reinterpret_cast<char*>(&op_)) + sizeof(float_value_));
  // @@protoc_insertion_point(copy_constructor:CSOItemCriteriaCondition)
}

void CSOItemCriteriaCondition::SharedCtor() {
  _cached_size_ = 0;
  field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&op_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&float_value_) -
      reinterpret_cast<char*>(&op_)) + sizeof(float_value_));
}

CSOItemCriteriaCondition::~CSOItemCriteriaCondition() {
  // @@protoc_insertion_point(destructor:CSOItemCriteriaCondition)
  SharedDtor();
}

void CSOItemCriteriaCondition::SharedDtor() {
  field_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSOItemCriteriaCondition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSOItemCriteriaCondition::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSOItemCriteriaCondition& CSOItemCriteriaCondition::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOItemCriteriaCondition();
  return *internal_default_instance();
}

CSOItemCriteriaCondition* CSOItemCriteriaCondition::New(::google::protobuf::Arena* arena) const {
  CSOItemCriteriaCondition* n = new CSOItemCriteriaCondition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CSOItemCriteriaCondition::Clear() {
// @@protoc_insertion_point(message_clear_start:CSOItemCriteriaCondition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!field_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*field_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!string_value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*string_value_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&op_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&float_value_) -
        reinterpret_cast<char*>(&op_)) + sizeof(float_value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSOItemCriteriaCondition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSOItemCriteriaCondition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 op = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_op();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &op_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string field = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field().data(), static_cast<int>(this->field().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSOItemCriteriaCondition.field");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool required = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_required();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &required_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float float_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_float_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &float_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string string_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string_value().data(), static_cast<int>(this->string_value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSOItemCriteriaCondition.string_value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSOItemCriteriaCondition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSOItemCriteriaCondition)
  return false;
#undef DO_
}

void CSOItemCriteriaCondition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSOItemCriteriaCondition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 op = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->op(), output);
  }

  // optional string field = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field().data(), static_cast<int>(this->field().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOItemCriteriaCondition.field");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->field(), output);
  }

  // optional bool required = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->required(), output);
  }

  // optional float float_value = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->float_value(), output);
  }

  // optional string string_value = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOItemCriteriaCondition.string_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->string_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSOItemCriteriaCondition)
}

::google::protobuf::uint8* CSOItemCriteriaCondition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSOItemCriteriaCondition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 op = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->op(), target);
  }

  // optional string field = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field().data(), static_cast<int>(this->field().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOItemCriteriaCondition.field");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->field(), target);
  }

  // optional bool required = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->required(), target);
  }

  // optional float float_value = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->float_value(), target);
  }

  // optional string string_value = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOItemCriteriaCondition.string_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->string_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSOItemCriteriaCondition)
  return target;
}

size_t CSOItemCriteriaCondition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSOItemCriteriaCondition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string field = 2;
    if (has_field()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field());
    }

    // optional string string_value = 5;
    if (has_string_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value());
    }

    // optional int32 op = 1;
    if (has_op()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->op());
    }

    // optional bool required = 3;
    if (has_required()) {
      total_size += 1 + 1;
    }

    // optional float float_value = 4;
    if (has_float_value()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSOItemCriteriaCondition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSOItemCriteriaCondition)
  GOOGLE_DCHECK_NE(&from, this);
  const CSOItemCriteriaCondition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSOItemCriteriaCondition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSOItemCriteriaCondition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSOItemCriteriaCondition)
    MergeFrom(*source);
  }
}

void CSOItemCriteriaCondition::MergeFrom(const CSOItemCriteriaCondition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSOItemCriteriaCondition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_field();
      field_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_string_value();
      string_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_value_);
    }
    if (cached_has_bits & 0x00000004u) {
      op_ = from.op_;
    }
    if (cached_has_bits & 0x00000008u) {
      required_ = from.required_;
    }
    if (cached_has_bits & 0x00000010u) {
      float_value_ = from.float_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSOItemCriteriaCondition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSOItemCriteriaCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSOItemCriteriaCondition::CopyFrom(const CSOItemCriteriaCondition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSOItemCriteriaCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSOItemCriteriaCondition::IsInitialized() const {
  return true;
}

void CSOItemCriteriaCondition::Swap(CSOItemCriteriaCondition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSOItemCriteriaCondition::InternalSwap(CSOItemCriteriaCondition* other) {
  using std::swap;
  field_.Swap(&other->field_);
  string_value_.Swap(&other->string_value_);
  swap(op_, other->op_);
  swap(required_, other->required_);
  swap(float_value_, other->float_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CSOItemCriteriaCondition::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSOItemCriteria::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSOItemCriteria::kItemLevelFieldNumber;
const int CSOItemCriteria::kItemQualityFieldNumber;
const int CSOItemCriteria::kItemLevelSetFieldNumber;
const int CSOItemCriteria::kItemQualitySetFieldNumber;
const int CSOItemCriteria::kInitialInventoryFieldNumber;
const int CSOItemCriteria::kInitialQuantityFieldNumber;
const int CSOItemCriteria::kIgnoreEnabledFlagFieldNumber;
const int CSOItemCriteria::kConditionsFieldNumber;
const int CSOItemCriteria::kItemRarityFieldNumber;
const int CSOItemCriteria::kItemRaritySetFieldNumber;
const int CSOItemCriteria::kRecentOnlyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSOItemCriteria::CSOItemCriteria()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOItemCriteria();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSOItemCriteria)
}
CSOItemCriteria::CSOItemCriteria(const CSOItemCriteria& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      conditions_(from.conditions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_level_, &from.item_level_,
    static_cast<size_t>(reinterpret_cast<char*>(&recent_only_) -
    reinterpret_cast<char*>(&item_level_)) + sizeof(recent_only_));
  // @@protoc_insertion_point(copy_constructor:CSOItemCriteria)
}

void CSOItemCriteria::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&recent_only_) -
      reinterpret_cast<char*>(&item_level_)) + sizeof(recent_only_));
}

CSOItemCriteria::~CSOItemCriteria() {
  // @@protoc_insertion_point(destructor:CSOItemCriteria)
  SharedDtor();
}

void CSOItemCriteria::SharedDtor() {
}

void CSOItemCriteria::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSOItemCriteria::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSOItemCriteria& CSOItemCriteria::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOItemCriteria();
  return *internal_default_instance();
}

CSOItemCriteria* CSOItemCriteria::New(::google::protobuf::Arena* arena) const {
  CSOItemCriteria* n = new CSOItemCriteria;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CSOItemCriteria::Clear() {
// @@protoc_insertion_point(message_clear_start:CSOItemCriteria)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  conditions_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&item_level_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&item_rarity_set_) -
        reinterpret_cast<char*>(&item_level_)) + sizeof(item_rarity_set_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&item_rarity_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&recent_only_) -
        reinterpret_cast<char*>(&item_rarity_)) + sizeof(recent_only_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSOItemCriteria::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSOItemCriteria)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 item_level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_item_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 item_quality = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_item_quality();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_quality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool item_level_set = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_item_level_set();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &item_level_set_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool item_quality_set = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_item_quality_set();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &item_quality_set_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 initial_inventory = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_initial_inventory();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &initial_inventory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 initial_quantity = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_initial_quantity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &initial_quantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool ignore_enabled_flag = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_ignore_enabled_flag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ignore_enabled_flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CSOItemCriteriaCondition conditions = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_conditions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 item_rarity = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_item_rarity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_rarity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool item_rarity_set = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_item_rarity_set();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &item_rarity_set_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool recent_only = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_recent_only();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &recent_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSOItemCriteria)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSOItemCriteria)
  return false;
#undef DO_
}

void CSOItemCriteria::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSOItemCriteria)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_level = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_level(), output);
  }

  // optional int32 item_quality = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_quality(), output);
  }

  // optional bool item_level_set = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->item_level_set(), output);
  }

  // optional bool item_quality_set = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->item_quality_set(), output);
  }

  // optional uint32 initial_inventory = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->initial_inventory(), output);
  }

  // optional uint32 initial_quantity = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->initial_quantity(), output);
  }

  // optional bool ignore_enabled_flag = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->ignore_enabled_flag(), output);
  }

  // repeated .CSOItemCriteriaCondition conditions = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->conditions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->conditions(static_cast<int>(i)), output);
  }

  // optional int32 item_rarity = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->item_rarity(), output);
  }

  // optional bool item_rarity_set = 11;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->item_rarity_set(), output);
  }

  // optional bool recent_only = 12;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->recent_only(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSOItemCriteria)
}

::google::protobuf::uint8* CSOItemCriteria::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSOItemCriteria)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_level = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_level(), target);
  }

  // optional int32 item_quality = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_quality(), target);
  }

  // optional bool item_level_set = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->item_level_set(), target);
  }

  // optional bool item_quality_set = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->item_quality_set(), target);
  }

  // optional uint32 initial_inventory = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->initial_inventory(), target);
  }

  // optional uint32 initial_quantity = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->initial_quantity(), target);
  }

  // optional bool ignore_enabled_flag = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->ignore_enabled_flag(), target);
  }

  // repeated .CSOItemCriteriaCondition conditions = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->conditions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->conditions(static_cast<int>(i)), deterministic, target);
  }

  // optional int32 item_rarity = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->item_rarity(), target);
  }

  // optional bool item_rarity_set = 11;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->item_rarity_set(), target);
  }

  // optional bool recent_only = 12;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->recent_only(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSOItemCriteria)
  return target;
}

size_t CSOItemCriteria::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSOItemCriteria)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CSOItemCriteriaCondition conditions = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->conditions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->conditions(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 item_level = 1;
    if (has_item_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_level());
    }

    // optional int32 item_quality = 2;
    if (has_item_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_quality());
    }

    // optional uint32 initial_inventory = 5;
    if (has_initial_inventory()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->initial_inventory());
    }

    // optional uint32 initial_quantity = 6;
    if (has_initial_quantity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->initial_quantity());
    }

    // optional bool item_level_set = 3;
    if (has_item_level_set()) {
      total_size += 1 + 1;
    }

    // optional bool item_quality_set = 4;
    if (has_item_quality_set()) {
      total_size += 1 + 1;
    }

    // optional bool ignore_enabled_flag = 8;
    if (has_ignore_enabled_flag()) {
      total_size += 1 + 1;
    }

    // optional bool item_rarity_set = 11;
    if (has_item_rarity_set()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional int32 item_rarity = 10;
    if (has_item_rarity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_rarity());
    }

    // optional bool recent_only = 12;
    if (has_recent_only()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSOItemCriteria::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSOItemCriteria)
  GOOGLE_DCHECK_NE(&from, this);
  const CSOItemCriteria* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSOItemCriteria>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSOItemCriteria)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSOItemCriteria)
    MergeFrom(*source);
  }
}

void CSOItemCriteria::MergeFrom(const CSOItemCriteria& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSOItemCriteria)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  conditions_.MergeFrom(from.conditions_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      item_level_ = from.item_level_;
    }
    if (cached_has_bits & 0x00000002u) {
      item_quality_ = from.item_quality_;
    }
    if (cached_has_bits & 0x00000004u) {
      initial_inventory_ = from.initial_inventory_;
    }
    if (cached_has_bits & 0x00000008u) {
      initial_quantity_ = from.initial_quantity_;
    }
    if (cached_has_bits & 0x00000010u) {
      item_level_set_ = from.item_level_set_;
    }
    if (cached_has_bits & 0x00000020u) {
      item_quality_set_ = from.item_quality_set_;
    }
    if (cached_has_bits & 0x00000040u) {
      ignore_enabled_flag_ = from.ignore_enabled_flag_;
    }
    if (cached_has_bits & 0x00000080u) {
      item_rarity_set_ = from.item_rarity_set_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      item_rarity_ = from.item_rarity_;
    }
    if (cached_has_bits & 0x00000200u) {
      recent_only_ = from.recent_only_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSOItemCriteria::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSOItemCriteria)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSOItemCriteria::CopyFrom(const CSOItemCriteria& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSOItemCriteria)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSOItemCriteria::IsInitialized() const {
  return true;
}

void CSOItemCriteria::Swap(CSOItemCriteria* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSOItemCriteria::InternalSwap(CSOItemCriteria* other) {
  using std::swap;
  conditions_.InternalSwap(&other->conditions_);
  swap(item_level_, other->item_level_);
  swap(item_quality_, other->item_quality_);
  swap(initial_inventory_, other->initial_inventory_);
  swap(initial_quantity_, other->initial_quantity_);
  swap(item_level_set_, other->item_level_set_);
  swap(item_quality_set_, other->item_quality_set_);
  swap(ignore_enabled_flag_, other->ignore_enabled_flag_);
  swap(item_rarity_set_, other->item_rarity_set_);
  swap(item_rarity_, other->item_rarity_);
  swap(recent_only_, other->recent_only_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CSOItemCriteria::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSOItemRecipe::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSOItemRecipe::kDefIndexFieldNumber;
const int CSOItemRecipe::kNameFieldNumber;
const int CSOItemRecipe::kNAFieldNumber;
const int CSOItemRecipe::kDescInputsFieldNumber;
const int CSOItemRecipe::kDescOutputsFieldNumber;
const int CSOItemRecipe::kDiAFieldNumber;
const int CSOItemRecipe::kDiBFieldNumber;
const int CSOItemRecipe::kDiCFieldNumber;
const int CSOItemRecipe::kDoAFieldNumber;
const int CSOItemRecipe::kDoBFieldNumber;
const int CSOItemRecipe::kDoCFieldNumber;
const int CSOItemRecipe::kRequiresAllSameClassFieldNumber;
const int CSOItemRecipe::kRequiresAllSameSlotFieldNumber;
const int CSOItemRecipe::kClassUsageForOutputFieldNumber;
const int CSOItemRecipe::kSlotUsageForOutputFieldNumber;
const int CSOItemRecipe::kSetForOutputFieldNumber;
const int CSOItemRecipe::kInputItemsCriteriaFieldNumber;
const int CSOItemRecipe::kOutputItemsCriteriaFieldNumber;
const int CSOItemRecipe::kInputItemDupeCountsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSOItemRecipe::CSOItemRecipe()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOItemRecipe();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSOItemRecipe)
}
CSOItemRecipe::CSOItemRecipe(const CSOItemRecipe& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      input_items_criteria_(from.input_items_criteria_),
      output_items_criteria_(from.output_items_criteria_),
      input_item_dupe_counts_(from.input_item_dupe_counts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  n_a_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_n_a()) {
    n_a_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.n_a_);
  }
  desc_inputs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_desc_inputs()) {
    desc_inputs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_inputs_);
  }
  desc_outputs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_desc_outputs()) {
    desc_outputs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_outputs_);
  }
  di_a_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_di_a()) {
    di_a_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.di_a_);
  }
  di_b_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_di_b()) {
    di_b_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.di_b_);
  }
  di_c_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_di_c()) {
    di_c_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.di_c_);
  }
  do_a_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_do_a()) {
    do_a_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.do_a_);
  }
  do_b_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_do_b()) {
    do_b_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.do_b_);
  }
  do_c_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_do_c()) {
    do_c_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.do_c_);
  }
  ::memcpy(&def_index_, &from.def_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&set_for_output_) -
    reinterpret_cast<char*>(&def_index_)) + sizeof(set_for_output_));
  // @@protoc_insertion_point(copy_constructor:CSOItemRecipe)
}

void CSOItemRecipe::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  n_a_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_inputs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_outputs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  di_a_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  di_b_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  di_c_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  do_a_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  do_b_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  do_c_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&def_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&set_for_output_) -
      reinterpret_cast<char*>(&def_index_)) + sizeof(set_for_output_));
}

CSOItemRecipe::~CSOItemRecipe() {
  // @@protoc_insertion_point(destructor:CSOItemRecipe)
  SharedDtor();
}

void CSOItemRecipe::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  n_a_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_inputs_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_outputs_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  di_a_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  di_b_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  di_c_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  do_a_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  do_b_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  do_c_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSOItemRecipe::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSOItemRecipe::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSOItemRecipe& CSOItemRecipe::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOItemRecipe();
  return *internal_default_instance();
}

CSOItemRecipe* CSOItemRecipe::New(::google::protobuf::Arena* arena) const {
  CSOItemRecipe* n = new CSOItemRecipe;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CSOItemRecipe::Clear() {
// @@protoc_insertion_point(message_clear_start:CSOItemRecipe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_items_criteria_.Clear();
  output_items_criteria_.Clear();
  input_item_dupe_counts_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!n_a_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*n_a_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!desc_inputs_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*desc_inputs_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!desc_outputs_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*desc_outputs_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!di_a_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*di_a_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(!di_b_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*di_b_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(!di_c_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*di_c_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(!do_a_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*do_a_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(!do_b_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*do_b_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(!do_c_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*do_c_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 64512u) {
    ::memset(&def_index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&set_for_output_) -
        reinterpret_cast<char*>(&def_index_)) + sizeof(set_for_output_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSOItemRecipe::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSOItemRecipe)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 def_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_def_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &def_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSOItemRecipe.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string n_a = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_n_a()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->n_a().data(), static_cast<int>(this->n_a().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSOItemRecipe.n_a");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string desc_inputs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc_inputs()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->desc_inputs().data(), static_cast<int>(this->desc_inputs().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSOItemRecipe.desc_inputs");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string desc_outputs = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc_outputs()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->desc_outputs().data(), static_cast<int>(this->desc_outputs().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSOItemRecipe.desc_outputs");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string di_a = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_di_a()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->di_a().data(), static_cast<int>(this->di_a().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSOItemRecipe.di_a");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string di_b = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_di_b()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->di_b().data(), static_cast<int>(this->di_b().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSOItemRecipe.di_b");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string di_c = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_di_c()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->di_c().data(), static_cast<int>(this->di_c().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSOItemRecipe.di_c");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string do_a = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_do_a()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->do_a().data(), static_cast<int>(this->do_a().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSOItemRecipe.do_a");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string do_b = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_do_b()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->do_b().data(), static_cast<int>(this->do_b().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSOItemRecipe.do_b");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string do_c = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_do_c()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->do_c().data(), static_cast<int>(this->do_c().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSOItemRecipe.do_c");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool requires_all_same_class = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_requires_all_same_class();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &requires_all_same_class_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool requires_all_same_slot = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_requires_all_same_slot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &requires_all_same_slot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 class_usage_for_output = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_class_usage_for_output();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &class_usage_for_output_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 slot_usage_for_output = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_slot_usage_for_output();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_usage_for_output_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 set_for_output = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_set_for_output();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &set_for_output_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CSOItemCriteria input_items_criteria = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_input_items_criteria()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CSOItemCriteria output_items_criteria = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_output_items_criteria()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 input_item_dupe_counts = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 176u, input, this->mutable_input_item_dupe_counts())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_input_item_dupe_counts())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSOItemRecipe)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSOItemRecipe)
  return false;
#undef DO_
}

void CSOItemRecipe::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSOItemRecipe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 def_index = 1;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->def_index(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOItemRecipe.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string n_a = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->n_a().data(), static_cast<int>(this->n_a().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOItemRecipe.n_a");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->n_a(), output);
  }

  // optional string desc_inputs = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->desc_inputs().data(), static_cast<int>(this->desc_inputs().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOItemRecipe.desc_inputs");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->desc_inputs(), output);
  }

  // optional string desc_outputs = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->desc_outputs().data(), static_cast<int>(this->desc_outputs().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOItemRecipe.desc_outputs");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->desc_outputs(), output);
  }

  // optional string di_a = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->di_a().data(), static_cast<int>(this->di_a().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOItemRecipe.di_a");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->di_a(), output);
  }

  // optional string di_b = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->di_b().data(), static_cast<int>(this->di_b().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOItemRecipe.di_b");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->di_b(), output);
  }

  // optional string di_c = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->di_c().data(), static_cast<int>(this->di_c().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOItemRecipe.di_c");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->di_c(), output);
  }

  // optional string do_a = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->do_a().data(), static_cast<int>(this->do_a().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOItemRecipe.do_a");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->do_a(), output);
  }

  // optional string do_b = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->do_b().data(), static_cast<int>(this->do_b().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOItemRecipe.do_b");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->do_b(), output);
  }

  // optional string do_c = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->do_c().data(), static_cast<int>(this->do_c().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOItemRecipe.do_c");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->do_c(), output);
  }

  // optional bool requires_all_same_class = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->requires_all_same_class(), output);
  }

  // optional bool requires_all_same_slot = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->requires_all_same_slot(), output);
  }

  // optional int32 class_usage_for_output = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->class_usage_for_output(), output);
  }

  // optional int32 slot_usage_for_output = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->slot_usage_for_output(), output);
  }

  // optional int32 set_for_output = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->set_for_output(), output);
  }

  // repeated .CSOItemCriteria input_items_criteria = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_items_criteria_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->input_items_criteria(static_cast<int>(i)), output);
  }

  // repeated .CSOItemCriteria output_items_criteria = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_items_criteria_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->output_items_criteria(static_cast<int>(i)), output);
  }

  // repeated uint32 input_item_dupe_counts = 22;
  for (int i = 0, n = this->input_item_dupe_counts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      22, this->input_item_dupe_counts(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSOItemRecipe)
}

::google::protobuf::uint8* CSOItemRecipe::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSOItemRecipe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 def_index = 1;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->def_index(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOItemRecipe.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string n_a = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->n_a().data(), static_cast<int>(this->n_a().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOItemRecipe.n_a");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->n_a(), target);
  }

  // optional string desc_inputs = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->desc_inputs().data(), static_cast<int>(this->desc_inputs().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOItemRecipe.desc_inputs");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->desc_inputs(), target);
  }

  // optional string desc_outputs = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->desc_outputs().data(), static_cast<int>(this->desc_outputs().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOItemRecipe.desc_outputs");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->desc_outputs(), target);
  }

  // optional string di_a = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->di_a().data(), static_cast<int>(this->di_a().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOItemRecipe.di_a");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->di_a(), target);
  }

  // optional string di_b = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->di_b().data(), static_cast<int>(this->di_b().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOItemRecipe.di_b");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->di_b(), target);
  }

  // optional string di_c = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->di_c().data(), static_cast<int>(this->di_c().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOItemRecipe.di_c");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->di_c(), target);
  }

  // optional string do_a = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->do_a().data(), static_cast<int>(this->do_a().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOItemRecipe.do_a");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->do_a(), target);
  }

  // optional string do_b = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->do_b().data(), static_cast<int>(this->do_b().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOItemRecipe.do_b");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->do_b(), target);
  }

  // optional string do_c = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->do_c().data(), static_cast<int>(this->do_c().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOItemRecipe.do_c");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->do_c(), target);
  }

  // optional bool requires_all_same_class = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->requires_all_same_class(), target);
  }

  // optional bool requires_all_same_slot = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->requires_all_same_slot(), target);
  }

  // optional int32 class_usage_for_output = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->class_usage_for_output(), target);
  }

  // optional int32 slot_usage_for_output = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->slot_usage_for_output(), target);
  }

  // optional int32 set_for_output = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->set_for_output(), target);
  }

  // repeated .CSOItemCriteria input_items_criteria = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_items_criteria_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->input_items_criteria(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CSOItemCriteria output_items_criteria = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_items_criteria_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->output_items_criteria(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint32 input_item_dupe_counts = 22;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(22, this->input_item_dupe_counts_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSOItemRecipe)
  return target;
}

size_t CSOItemRecipe::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSOItemRecipe)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CSOItemCriteria input_items_criteria = 20;
  {
    unsigned int count = static_cast<unsigned int>(this->input_items_criteria_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->input_items_criteria(static_cast<int>(i)));
    }
  }

  // repeated .CSOItemCriteria output_items_criteria = 21;
  {
    unsigned int count = static_cast<unsigned int>(this->output_items_criteria_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->output_items_criteria(static_cast<int>(i)));
    }
  }

  // repeated uint32 input_item_dupe_counts = 22;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->input_item_dupe_counts_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->input_item_dupe_counts_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string n_a = 3;
    if (has_n_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->n_a());
    }

    // optional string desc_inputs = 4;
    if (has_desc_inputs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->desc_inputs());
    }

    // optional string desc_outputs = 5;
    if (has_desc_outputs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->desc_outputs());
    }

    // optional string di_a = 6;
    if (has_di_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->di_a());
    }

    // optional string di_b = 7;
    if (has_di_b()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->di_b());
    }

    // optional string di_c = 8;
    if (has_di_c()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->di_c());
    }

    // optional string do_a = 9;
    if (has_do_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->do_a());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional string do_b = 10;
    if (has_do_b()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->do_b());
    }

    // optional string do_c = 11;
    if (has_do_c()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->do_c());
    }

    // optional uint32 def_index = 1;
    if (has_def_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->def_index());
    }

    // optional bool requires_all_same_class = 12;
    if (has_requires_all_same_class()) {
      total_size += 1 + 1;
    }

    // optional bool requires_all_same_slot = 13;
    if (has_requires_all_same_slot()) {
      total_size += 1 + 1;
    }

    // optional int32 class_usage_for_output = 14;
    if (has_class_usage_for_output()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->class_usage_for_output());
    }

    // optional int32 slot_usage_for_output = 15;
    if (has_slot_usage_for_output()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot_usage_for_output());
    }

    // optional int32 set_for_output = 16;
    if (has_set_for_output()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->set_for_output());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSOItemRecipe::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSOItemRecipe)
  GOOGLE_DCHECK_NE(&from, this);
  const CSOItemRecipe* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSOItemRecipe>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSOItemRecipe)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSOItemRecipe)
    MergeFrom(*source);
  }
}

void CSOItemRecipe::MergeFrom(const CSOItemRecipe& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSOItemRecipe)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_items_criteria_.MergeFrom(from.input_items_criteria_);
  output_items_criteria_.MergeFrom(from.output_items_criteria_);
  input_item_dupe_counts_.MergeFrom(from.input_item_dupe_counts_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_n_a();
      n_a_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.n_a_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_desc_inputs();
      desc_inputs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_inputs_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_desc_outputs();
      desc_outputs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_outputs_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_di_a();
      di_a_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.di_a_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_di_b();
      di_b_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.di_b_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_di_c();
      di_c_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.di_c_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_do_a();
      do_a_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.do_a_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_do_b();
      do_b_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.do_b_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_do_c();
      do_c_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.do_c_);
    }
    if (cached_has_bits & 0x00000400u) {
      def_index_ = from.def_index_;
    }
    if (cached_has_bits & 0x00000800u) {
      requires_all_same_class_ = from.requires_all_same_class_;
    }
    if (cached_has_bits & 0x00001000u) {
      requires_all_same_slot_ = from.requires_all_same_slot_;
    }
    if (cached_has_bits & 0x00002000u) {
      class_usage_for_output_ = from.class_usage_for_output_;
    }
    if (cached_has_bits & 0x00004000u) {
      slot_usage_for_output_ = from.slot_usage_for_output_;
    }
    if (cached_has_bits & 0x00008000u) {
      set_for_output_ = from.set_for_output_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSOItemRecipe::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSOItemRecipe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSOItemRecipe::CopyFrom(const CSOItemRecipe& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSOItemRecipe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSOItemRecipe::IsInitialized() const {
  return true;
}

void CSOItemRecipe::Swap(CSOItemRecipe* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSOItemRecipe::InternalSwap(CSOItemRecipe* other) {
  using std::swap;
  input_items_criteria_.InternalSwap(&other->input_items_criteria_);
  output_items_criteria_.InternalSwap(&other->output_items_criteria_);
  input_item_dupe_counts_.InternalSwap(&other->input_item_dupe_counts_);
  name_.Swap(&other->name_);
  n_a_.Swap(&other->n_a_);
  desc_inputs_.Swap(&other->desc_inputs_);
  desc_outputs_.Swap(&other->desc_outputs_);
  di_a_.Swap(&other->di_a_);
  di_b_.Swap(&other->di_b_);
  di_c_.Swap(&other->di_c_);
  do_a_.Swap(&other->do_a_);
  do_b_.Swap(&other->do_b_);
  do_c_.Swap(&other->do_c_);
  swap(def_index_, other->def_index_);
  swap(requires_all_same_class_, other->requires_all_same_class_);
  swap(requires_all_same_slot_, other->requires_all_same_slot_);
  swap(class_usage_for_output_, other->class_usage_for_output_);
  swap(slot_usage_for_output_, other->slot_usage_for_output_);
  swap(set_for_output_, other->set_for_output_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CSOItemRecipe::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgDevNewItemRequest::InitAsDefaultInstance() {
  ::_CMsgDevNewItemRequest_default_instance_._instance.get_mutable()->criteria_ = const_cast< ::CSOItemCriteria*>(
      ::CSOItemCriteria::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDevNewItemRequest::kReceiverFieldNumber;
const int CMsgDevNewItemRequest::kCriteriaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDevNewItemRequest::CMsgDevNewItemRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgDevNewItemRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgDevNewItemRequest)
}
CMsgDevNewItemRequest::CMsgDevNewItemRequest(const CMsgDevNewItemRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_criteria()) {
    criteria_ = new ::CSOItemCriteria(*from.criteria_);
  } else {
    criteria_ = NULL;
  }
  receiver_ = from.receiver_;
  // @@protoc_insertion_point(copy_constructor:CMsgDevNewItemRequest)
}

void CMsgDevNewItemRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&criteria_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&receiver_) -
      reinterpret_cast<char*>(&criteria_)) + sizeof(receiver_));
}

CMsgDevNewItemRequest::~CMsgDevNewItemRequest() {
  // @@protoc_insertion_point(destructor:CMsgDevNewItemRequest)
  SharedDtor();
}

void CMsgDevNewItemRequest::SharedDtor() {
  if (this != internal_default_instance()) delete criteria_;
}

void CMsgDevNewItemRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgDevNewItemRequest::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgDevNewItemRequest& CMsgDevNewItemRequest::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgDevNewItemRequest();
  return *internal_default_instance();
}

CMsgDevNewItemRequest* CMsgDevNewItemRequest::New(::google::protobuf::Arena* arena) const {
  CMsgDevNewItemRequest* n = new CMsgDevNewItemRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgDevNewItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgDevNewItemRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(criteria_ != NULL);
    criteria_->Clear();
  }
  receiver_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgDevNewItemRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgDevNewItemRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 receiver = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_receiver();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &receiver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CSOItemCriteria criteria = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_criteria()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgDevNewItemRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgDevNewItemRequest)
  return false;
#undef DO_
}

void CMsgDevNewItemRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgDevNewItemRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 receiver = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->receiver(), output);
  }

  // optional .CSOItemCriteria criteria = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->criteria_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgDevNewItemRequest)
}

::google::protobuf::uint8* CMsgDevNewItemRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgDevNewItemRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 receiver = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->receiver(), target);
  }

  // optional .CSOItemCriteria criteria = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->criteria_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgDevNewItemRequest)
  return target;
}

size_t CMsgDevNewItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgDevNewItemRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .CSOItemCriteria criteria = 2;
    if (has_criteria()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->criteria_);
    }

    // optional fixed64 receiver = 1;
    if (has_receiver()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgDevNewItemRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgDevNewItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDevNewItemRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgDevNewItemRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgDevNewItemRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgDevNewItemRequest)
    MergeFrom(*source);
  }
}

void CMsgDevNewItemRequest::MergeFrom(const CMsgDevNewItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgDevNewItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_criteria()->::CSOItemCriteria::MergeFrom(from.criteria());
    }
    if (cached_has_bits & 0x00000002u) {
      receiver_ = from.receiver_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDevNewItemRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgDevNewItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDevNewItemRequest::CopyFrom(const CMsgDevNewItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgDevNewItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDevNewItemRequest::IsInitialized() const {
  return true;
}

void CMsgDevNewItemRequest::Swap(CMsgDevNewItemRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDevNewItemRequest::InternalSwap(CMsgDevNewItemRequest* other) {
  using std::swap;
  swap(criteria_, other->criteria_);
  swap(receiver_, other->receiver_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgDevNewItemRequest::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgIncrementKillCountAttribute::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgIncrementKillCountAttribute::kKillerAccountIdFieldNumber;
const int CMsgIncrementKillCountAttribute::kVictimAccountIdFieldNumber;
const int CMsgIncrementKillCountAttribute::kItemIdFieldNumber;
const int CMsgIncrementKillCountAttribute::kEventTypeFieldNumber;
const int CMsgIncrementKillCountAttribute::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgIncrementKillCountAttribute::CMsgIncrementKillCountAttribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgIncrementKillCountAttribute();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgIncrementKillCountAttribute)
}
CMsgIncrementKillCountAttribute::CMsgIncrementKillCountAttribute(const CMsgIncrementKillCountAttribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&killer_account_id_, &from.killer_account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&amount_) -
    reinterpret_cast<char*>(&killer_account_id_)) + sizeof(amount_));
  // @@protoc_insertion_point(copy_constructor:CMsgIncrementKillCountAttribute)
}

void CMsgIncrementKillCountAttribute::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&killer_account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&amount_) -
      reinterpret_cast<char*>(&killer_account_id_)) + sizeof(amount_));
}

CMsgIncrementKillCountAttribute::~CMsgIncrementKillCountAttribute() {
  // @@protoc_insertion_point(destructor:CMsgIncrementKillCountAttribute)
  SharedDtor();
}

void CMsgIncrementKillCountAttribute::SharedDtor() {
}

void CMsgIncrementKillCountAttribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgIncrementKillCountAttribute::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgIncrementKillCountAttribute& CMsgIncrementKillCountAttribute::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgIncrementKillCountAttribute();
  return *internal_default_instance();
}

CMsgIncrementKillCountAttribute* CMsgIncrementKillCountAttribute::New(::google::protobuf::Arena* arena) const {
  CMsgIncrementKillCountAttribute* n = new CMsgIncrementKillCountAttribute;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgIncrementKillCountAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgIncrementKillCountAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&killer_account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&amount_) -
        reinterpret_cast<char*>(&killer_account_id_)) + sizeof(amount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgIncrementKillCountAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgIncrementKillCountAttribute)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed32 killer_account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_killer_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &killer_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 victim_account_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_victim_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &victim_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 item_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 event_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_event_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &event_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 amount = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgIncrementKillCountAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgIncrementKillCountAttribute)
  return false;
#undef DO_
}

void CMsgIncrementKillCountAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgIncrementKillCountAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 killer_account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->killer_account_id(), output);
  }

  // optional fixed32 victim_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->victim_account_id(), output);
  }

  // optional uint64 item_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->item_id(), output);
  }

  // optional uint32 event_type = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->event_type(), output);
  }

  // optional uint32 amount = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->amount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgIncrementKillCountAttribute)
}

::google::protobuf::uint8* CMsgIncrementKillCountAttribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgIncrementKillCountAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 killer_account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->killer_account_id(), target);
  }

  // optional fixed32 victim_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->victim_account_id(), target);
  }

  // optional uint64 item_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->item_id(), target);
  }

  // optional uint32 event_type = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->event_type(), target);
  }

  // optional uint32 amount = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->amount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgIncrementKillCountAttribute)
  return target;
}

size_t CMsgIncrementKillCountAttribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgIncrementKillCountAttribute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional fixed32 killer_account_id = 1;
    if (has_killer_account_id()) {
      total_size += 1 + 4;
    }

    // optional fixed32 victim_account_id = 2;
    if (has_victim_account_id()) {
      total_size += 1 + 4;
    }

    // optional uint64 item_id = 3;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 event_type = 4;
    if (has_event_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->event_type());
    }

    // optional uint32 amount = 5;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->amount());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgIncrementKillCountAttribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgIncrementKillCountAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgIncrementKillCountAttribute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgIncrementKillCountAttribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgIncrementKillCountAttribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgIncrementKillCountAttribute)
    MergeFrom(*source);
  }
}

void CMsgIncrementKillCountAttribute::MergeFrom(const CMsgIncrementKillCountAttribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgIncrementKillCountAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      killer_account_id_ = from.killer_account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      victim_account_id_ = from.victim_account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      event_type_ = from.event_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      amount_ = from.amount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgIncrementKillCountAttribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgIncrementKillCountAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgIncrementKillCountAttribute::CopyFrom(const CMsgIncrementKillCountAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgIncrementKillCountAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgIncrementKillCountAttribute::IsInitialized() const {
  return true;
}

void CMsgIncrementKillCountAttribute::Swap(CMsgIncrementKillCountAttribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgIncrementKillCountAttribute::InternalSwap(CMsgIncrementKillCountAttribute* other) {
  using std::swap;
  swap(killer_account_id_, other->killer_account_id_);
  swap(victim_account_id_, other->victim_account_id_);
  swap(item_id_, other->item_id_);
  swap(event_type_, other->event_type_);
  swap(amount_, other->amount_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgIncrementKillCountAttribute::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgApplySticker::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgApplySticker::kStickerItemIdFieldNumber;
const int CMsgApplySticker::kItemItemIdFieldNumber;
const int CMsgApplySticker::kStickerSlotFieldNumber;
const int CMsgApplySticker::kBaseitemDefidxFieldNumber;
const int CMsgApplySticker::kStickerWearFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgApplySticker::CMsgApplySticker()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgApplySticker();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgApplySticker)
}
CMsgApplySticker::CMsgApplySticker(const CMsgApplySticker& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sticker_item_id_, &from.sticker_item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&sticker_wear_) -
    reinterpret_cast<char*>(&sticker_item_id_)) + sizeof(sticker_wear_));
  // @@protoc_insertion_point(copy_constructor:CMsgApplySticker)
}

void CMsgApplySticker::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&sticker_item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sticker_wear_) -
      reinterpret_cast<char*>(&sticker_item_id_)) + sizeof(sticker_wear_));
}

CMsgApplySticker::~CMsgApplySticker() {
  // @@protoc_insertion_point(destructor:CMsgApplySticker)
  SharedDtor();
}

void CMsgApplySticker::SharedDtor() {
}

void CMsgApplySticker::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgApplySticker::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgApplySticker& CMsgApplySticker::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgApplySticker();
  return *internal_default_instance();
}

CMsgApplySticker* CMsgApplySticker::New(::google::protobuf::Arena* arena) const {
  CMsgApplySticker* n = new CMsgApplySticker;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgApplySticker::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgApplySticker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&sticker_item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sticker_wear_) -
        reinterpret_cast<char*>(&sticker_item_id_)) + sizeof(sticker_wear_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgApplySticker::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgApplySticker)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 sticker_item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_sticker_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sticker_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 item_item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_item_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sticker_slot = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_sticker_slot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sticker_slot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 baseitem_defidx = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_baseitem_defidx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &baseitem_defidx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float sticker_wear = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_sticker_wear();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &sticker_wear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgApplySticker)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgApplySticker)
  return false;
#undef DO_
}

void CMsgApplySticker::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgApplySticker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 sticker_item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->sticker_item_id(), output);
  }

  // optional uint64 item_item_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_item_id(), output);
  }

  // optional uint32 sticker_slot = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sticker_slot(), output);
  }

  // optional uint32 baseitem_defidx = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->baseitem_defidx(), output);
  }

  // optional float sticker_wear = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->sticker_wear(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgApplySticker)
}

::google::protobuf::uint8* CMsgApplySticker::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgApplySticker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 sticker_item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->sticker_item_id(), target);
  }

  // optional uint64 item_item_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_item_id(), target);
  }

  // optional uint32 sticker_slot = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sticker_slot(), target);
  }

  // optional uint32 baseitem_defidx = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->baseitem_defidx(), target);
  }

  // optional float sticker_wear = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->sticker_wear(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgApplySticker)
  return target;
}

size_t CMsgApplySticker::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgApplySticker)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint64 sticker_item_id = 1;
    if (has_sticker_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->sticker_item_id());
    }

    // optional uint64 item_item_id = 2;
    if (has_item_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_item_id());
    }

    // optional uint32 sticker_slot = 3;
    if (has_sticker_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sticker_slot());
    }

    // optional uint32 baseitem_defidx = 4;
    if (has_baseitem_defidx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->baseitem_defidx());
    }

    // optional float sticker_wear = 5;
    if (has_sticker_wear()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgApplySticker::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgApplySticker)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgApplySticker* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgApplySticker>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgApplySticker)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgApplySticker)
    MergeFrom(*source);
  }
}

void CMsgApplySticker::MergeFrom(const CMsgApplySticker& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgApplySticker)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      sticker_item_id_ = from.sticker_item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      item_item_id_ = from.item_item_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      sticker_slot_ = from.sticker_slot_;
    }
    if (cached_has_bits & 0x00000008u) {
      baseitem_defidx_ = from.baseitem_defidx_;
    }
    if (cached_has_bits & 0x00000010u) {
      sticker_wear_ = from.sticker_wear_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgApplySticker::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgApplySticker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgApplySticker::CopyFrom(const CMsgApplySticker& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgApplySticker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgApplySticker::IsInitialized() const {
  return true;
}

void CMsgApplySticker::Swap(CMsgApplySticker* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgApplySticker::InternalSwap(CMsgApplySticker* other) {
  using std::swap;
  swap(sticker_item_id_, other->sticker_item_id_);
  swap(item_item_id_, other->item_item_id_);
  swap(sticker_slot_, other->sticker_slot_);
  swap(baseitem_defidx_, other->baseitem_defidx_);
  swap(sticker_wear_, other->sticker_wear_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgApplySticker::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgApplyStatTrakSwap::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgApplyStatTrakSwap::kToolItemIdFieldNumber;
const int CMsgApplyStatTrakSwap::kItem1ItemIdFieldNumber;
const int CMsgApplyStatTrakSwap::kItem2ItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgApplyStatTrakSwap::CMsgApplyStatTrakSwap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgApplyStatTrakSwap();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgApplyStatTrakSwap)
}
CMsgApplyStatTrakSwap::CMsgApplyStatTrakSwap(const CMsgApplyStatTrakSwap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tool_item_id_, &from.tool_item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&item_2_item_id_) -
    reinterpret_cast<char*>(&tool_item_id_)) + sizeof(item_2_item_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgApplyStatTrakSwap)
}

void CMsgApplyStatTrakSwap::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&tool_item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_2_item_id_) -
      reinterpret_cast<char*>(&tool_item_id_)) + sizeof(item_2_item_id_));
}

CMsgApplyStatTrakSwap::~CMsgApplyStatTrakSwap() {
  // @@protoc_insertion_point(destructor:CMsgApplyStatTrakSwap)
  SharedDtor();
}

void CMsgApplyStatTrakSwap::SharedDtor() {
}

void CMsgApplyStatTrakSwap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgApplyStatTrakSwap::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgApplyStatTrakSwap& CMsgApplyStatTrakSwap::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgApplyStatTrakSwap();
  return *internal_default_instance();
}

CMsgApplyStatTrakSwap* CMsgApplyStatTrakSwap::New(::google::protobuf::Arena* arena) const {
  CMsgApplyStatTrakSwap* n = new CMsgApplyStatTrakSwap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgApplyStatTrakSwap::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgApplyStatTrakSwap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&tool_item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&item_2_item_id_) -
        reinterpret_cast<char*>(&tool_item_id_)) + sizeof(item_2_item_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgApplyStatTrakSwap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgApplyStatTrakSwap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 tool_item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_tool_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tool_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 item_1_item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_item_1_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_1_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 item_2_item_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_item_2_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_2_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgApplyStatTrakSwap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgApplyStatTrakSwap)
  return false;
#undef DO_
}

void CMsgApplyStatTrakSwap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgApplyStatTrakSwap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 tool_item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->tool_item_id(), output);
  }

  // optional uint64 item_1_item_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_1_item_id(), output);
  }

  // optional uint64 item_2_item_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->item_2_item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgApplyStatTrakSwap)
}

::google::protobuf::uint8* CMsgApplyStatTrakSwap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgApplyStatTrakSwap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 tool_item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->tool_item_id(), target);
  }

  // optional uint64 item_1_item_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_1_item_id(), target);
  }

  // optional uint64 item_2_item_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->item_2_item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgApplyStatTrakSwap)
  return target;
}

size_t CMsgApplyStatTrakSwap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgApplyStatTrakSwap)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 tool_item_id = 1;
    if (has_tool_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->tool_item_id());
    }

    // optional uint64 item_1_item_id = 2;
    if (has_item_1_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_1_item_id());
    }

    // optional uint64 item_2_item_id = 3;
    if (has_item_2_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_2_item_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgApplyStatTrakSwap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgApplyStatTrakSwap)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgApplyStatTrakSwap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgApplyStatTrakSwap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgApplyStatTrakSwap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgApplyStatTrakSwap)
    MergeFrom(*source);
  }
}

void CMsgApplyStatTrakSwap::MergeFrom(const CMsgApplyStatTrakSwap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgApplyStatTrakSwap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      tool_item_id_ = from.tool_item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      item_1_item_id_ = from.item_1_item_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      item_2_item_id_ = from.item_2_item_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgApplyStatTrakSwap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgApplyStatTrakSwap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgApplyStatTrakSwap::CopyFrom(const CMsgApplyStatTrakSwap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgApplyStatTrakSwap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgApplyStatTrakSwap::IsInitialized() const {
  return true;
}

void CMsgApplyStatTrakSwap::Swap(CMsgApplyStatTrakSwap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgApplyStatTrakSwap::InternalSwap(CMsgApplyStatTrakSwap* other) {
  using std::swap;
  swap(tool_item_id_, other->tool_item_id_);
  swap(item_1_item_id_, other->item_1_item_id_);
  swap(item_2_item_id_, other->item_2_item_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgApplyStatTrakSwap::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgApplyStrangePart::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgApplyStrangePart::kStrangePartItemIdFieldNumber;
const int CMsgApplyStrangePart::kItemItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgApplyStrangePart::CMsgApplyStrangePart()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgApplyStrangePart();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgApplyStrangePart)
}
CMsgApplyStrangePart::CMsgApplyStrangePart(const CMsgApplyStrangePart& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&strange_part_item_id_, &from.strange_part_item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&item_item_id_) -
    reinterpret_cast<char*>(&strange_part_item_id_)) + sizeof(item_item_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgApplyStrangePart)
}

void CMsgApplyStrangePart::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&strange_part_item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_item_id_) -
      reinterpret_cast<char*>(&strange_part_item_id_)) + sizeof(item_item_id_));
}

CMsgApplyStrangePart::~CMsgApplyStrangePart() {
  // @@protoc_insertion_point(destructor:CMsgApplyStrangePart)
  SharedDtor();
}

void CMsgApplyStrangePart::SharedDtor() {
}

void CMsgApplyStrangePart::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgApplyStrangePart::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgApplyStrangePart& CMsgApplyStrangePart::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgApplyStrangePart();
  return *internal_default_instance();
}

CMsgApplyStrangePart* CMsgApplyStrangePart::New(::google::protobuf::Arena* arena) const {
  CMsgApplyStrangePart* n = new CMsgApplyStrangePart;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgApplyStrangePart::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgApplyStrangePart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&strange_part_item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&item_item_id_) -
        reinterpret_cast<char*>(&strange_part_item_id_)) + sizeof(item_item_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgApplyStrangePart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgApplyStrangePart)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 strange_part_item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_strange_part_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &strange_part_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 item_item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_item_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgApplyStrangePart)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgApplyStrangePart)
  return false;
#undef DO_
}

void CMsgApplyStrangePart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgApplyStrangePart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 strange_part_item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->strange_part_item_id(), output);
  }

  // optional uint64 item_item_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgApplyStrangePart)
}

::google::protobuf::uint8* CMsgApplyStrangePart::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgApplyStrangePart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 strange_part_item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->strange_part_item_id(), target);
  }

  // optional uint64 item_item_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgApplyStrangePart)
  return target;
}

size_t CMsgApplyStrangePart::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgApplyStrangePart)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 strange_part_item_id = 1;
    if (has_strange_part_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->strange_part_item_id());
    }

    // optional uint64 item_item_id = 2;
    if (has_item_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_item_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgApplyStrangePart::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgApplyStrangePart)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgApplyStrangePart* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgApplyStrangePart>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgApplyStrangePart)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgApplyStrangePart)
    MergeFrom(*source);
  }
}

void CMsgApplyStrangePart::MergeFrom(const CMsgApplyStrangePart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgApplyStrangePart)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      strange_part_item_id_ = from.strange_part_item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      item_item_id_ = from.item_item_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgApplyStrangePart::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgApplyStrangePart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgApplyStrangePart::CopyFrom(const CMsgApplyStrangePart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgApplyStrangePart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgApplyStrangePart::IsInitialized() const {
  return true;
}

void CMsgApplyStrangePart::Swap(CMsgApplyStrangePart* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgApplyStrangePart::InternalSwap(CMsgApplyStrangePart* other) {
  using std::swap;
  swap(strange_part_item_id_, other->strange_part_item_id_);
  swap(item_item_id_, other->item_item_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgApplyStrangePart::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgApplyPennantUpgrade::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgApplyPennantUpgrade::kUpgradeItemIdFieldNumber;
const int CMsgApplyPennantUpgrade::kPennantItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgApplyPennantUpgrade::CMsgApplyPennantUpgrade()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgApplyPennantUpgrade();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgApplyPennantUpgrade)
}
CMsgApplyPennantUpgrade::CMsgApplyPennantUpgrade(const CMsgApplyPennantUpgrade& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&upgrade_item_id_, &from.upgrade_item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&pennant_item_id_) -
    reinterpret_cast<char*>(&upgrade_item_id_)) + sizeof(pennant_item_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgApplyPennantUpgrade)
}

void CMsgApplyPennantUpgrade::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&upgrade_item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pennant_item_id_) -
      reinterpret_cast<char*>(&upgrade_item_id_)) + sizeof(pennant_item_id_));
}

CMsgApplyPennantUpgrade::~CMsgApplyPennantUpgrade() {
  // @@protoc_insertion_point(destructor:CMsgApplyPennantUpgrade)
  SharedDtor();
}

void CMsgApplyPennantUpgrade::SharedDtor() {
}

void CMsgApplyPennantUpgrade::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgApplyPennantUpgrade::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgApplyPennantUpgrade& CMsgApplyPennantUpgrade::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgApplyPennantUpgrade();
  return *internal_default_instance();
}

CMsgApplyPennantUpgrade* CMsgApplyPennantUpgrade::New(::google::protobuf::Arena* arena) const {
  CMsgApplyPennantUpgrade* n = new CMsgApplyPennantUpgrade;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgApplyPennantUpgrade::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgApplyPennantUpgrade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&upgrade_item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pennant_item_id_) -
        reinterpret_cast<char*>(&upgrade_item_id_)) + sizeof(pennant_item_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgApplyPennantUpgrade::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgApplyPennantUpgrade)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 upgrade_item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_upgrade_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &upgrade_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 pennant_item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pennant_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pennant_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgApplyPennantUpgrade)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgApplyPennantUpgrade)
  return false;
#undef DO_
}

void CMsgApplyPennantUpgrade::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgApplyPennantUpgrade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 upgrade_item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->upgrade_item_id(), output);
  }

  // optional uint64 pennant_item_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->pennant_item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgApplyPennantUpgrade)
}

::google::protobuf::uint8* CMsgApplyPennantUpgrade::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgApplyPennantUpgrade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 upgrade_item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->upgrade_item_id(), target);
  }

  // optional uint64 pennant_item_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->pennant_item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgApplyPennantUpgrade)
  return target;
}

size_t CMsgApplyPennantUpgrade::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgApplyPennantUpgrade)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 upgrade_item_id = 1;
    if (has_upgrade_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->upgrade_item_id());
    }

    // optional uint64 pennant_item_id = 2;
    if (has_pennant_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->pennant_item_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgApplyPennantUpgrade::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgApplyPennantUpgrade)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgApplyPennantUpgrade* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgApplyPennantUpgrade>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgApplyPennantUpgrade)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgApplyPennantUpgrade)
    MergeFrom(*source);
  }
}

void CMsgApplyPennantUpgrade::MergeFrom(const CMsgApplyPennantUpgrade& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgApplyPennantUpgrade)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      upgrade_item_id_ = from.upgrade_item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      pennant_item_id_ = from.pennant_item_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgApplyPennantUpgrade::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgApplyPennantUpgrade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgApplyPennantUpgrade::CopyFrom(const CMsgApplyPennantUpgrade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgApplyPennantUpgrade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgApplyPennantUpgrade::IsInitialized() const {
  return true;
}

void CMsgApplyPennantUpgrade::Swap(CMsgApplyPennantUpgrade* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgApplyPennantUpgrade::InternalSwap(CMsgApplyPennantUpgrade* other) {
  using std::swap;
  swap(upgrade_item_id_, other->upgrade_item_id_);
  swap(pennant_item_id_, other->pennant_item_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgApplyPennantUpgrade::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgApplyEggEssence::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgApplyEggEssence::kEssenceItemIdFieldNumber;
const int CMsgApplyEggEssence::kEggItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgApplyEggEssence::CMsgApplyEggEssence()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgApplyEggEssence();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgApplyEggEssence)
}
CMsgApplyEggEssence::CMsgApplyEggEssence(const CMsgApplyEggEssence& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&essence_item_id_, &from.essence_item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&egg_item_id_) -
    reinterpret_cast<char*>(&essence_item_id_)) + sizeof(egg_item_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgApplyEggEssence)
}

void CMsgApplyEggEssence::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&essence_item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&egg_item_id_) -
      reinterpret_cast<char*>(&essence_item_id_)) + sizeof(egg_item_id_));
}

CMsgApplyEggEssence::~CMsgApplyEggEssence() {
  // @@protoc_insertion_point(destructor:CMsgApplyEggEssence)
  SharedDtor();
}

void CMsgApplyEggEssence::SharedDtor() {
}

void CMsgApplyEggEssence::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgApplyEggEssence::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgApplyEggEssence& CMsgApplyEggEssence::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgApplyEggEssence();
  return *internal_default_instance();
}

CMsgApplyEggEssence* CMsgApplyEggEssence::New(::google::protobuf::Arena* arena) const {
  CMsgApplyEggEssence* n = new CMsgApplyEggEssence;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgApplyEggEssence::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgApplyEggEssence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&essence_item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&egg_item_id_) -
        reinterpret_cast<char*>(&essence_item_id_)) + sizeof(egg_item_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgApplyEggEssence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgApplyEggEssence)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 essence_item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_essence_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &essence_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 egg_item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_egg_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &egg_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgApplyEggEssence)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgApplyEggEssence)
  return false;
#undef DO_
}

void CMsgApplyEggEssence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgApplyEggEssence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 essence_item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->essence_item_id(), output);
  }

  // optional uint64 egg_item_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->egg_item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgApplyEggEssence)
}

::google::protobuf::uint8* CMsgApplyEggEssence::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgApplyEggEssence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 essence_item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->essence_item_id(), target);
  }

  // optional uint64 egg_item_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->egg_item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgApplyEggEssence)
  return target;
}

size_t CMsgApplyEggEssence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgApplyEggEssence)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 essence_item_id = 1;
    if (has_essence_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->essence_item_id());
    }

    // optional uint64 egg_item_id = 2;
    if (has_egg_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->egg_item_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgApplyEggEssence::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgApplyEggEssence)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgApplyEggEssence* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgApplyEggEssence>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgApplyEggEssence)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgApplyEggEssence)
    MergeFrom(*source);
  }
}

void CMsgApplyEggEssence::MergeFrom(const CMsgApplyEggEssence& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgApplyEggEssence)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      essence_item_id_ = from.essence_item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      egg_item_id_ = from.egg_item_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgApplyEggEssence::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgApplyEggEssence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgApplyEggEssence::CopyFrom(const CMsgApplyEggEssence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgApplyEggEssence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgApplyEggEssence::IsInitialized() const {
  return true;
}

void CMsgApplyEggEssence::Swap(CMsgApplyEggEssence* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgApplyEggEssence::InternalSwap(CMsgApplyEggEssence* other) {
  using std::swap;
  swap(essence_item_id_, other->essence_item_id_);
  swap(egg_item_id_, other->egg_item_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgApplyEggEssence::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSOEconItemAttribute::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSOEconItemAttribute::kDefIndexFieldNumber;
const int CSOEconItemAttribute::kValueFieldNumber;
const int CSOEconItemAttribute::kValueBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSOEconItemAttribute::CSOEconItemAttribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOEconItemAttribute();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSOEconItemAttribute)
}
CSOEconItemAttribute::CSOEconItemAttribute(const CSOEconItemAttribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value_bytes()) {
    value_bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_bytes_);
  }
  ::memcpy(&def_index_, &from.def_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&def_index_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:CSOEconItemAttribute)
}

void CSOEconItemAttribute::SharedCtor() {
  _cached_size_ = 0;
  value_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&def_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&def_index_)) + sizeof(value_));
}

CSOEconItemAttribute::~CSOEconItemAttribute() {
  // @@protoc_insertion_point(destructor:CSOEconItemAttribute)
  SharedDtor();
}

void CSOEconItemAttribute::SharedDtor() {
  value_bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSOEconItemAttribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSOEconItemAttribute::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSOEconItemAttribute& CSOEconItemAttribute::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOEconItemAttribute();
  return *internal_default_instance();
}

CSOEconItemAttribute* CSOEconItemAttribute::New(::google::protobuf::Arena* arena) const {
  CSOEconItemAttribute* n = new CSOEconItemAttribute;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CSOEconItemAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:CSOEconItemAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!value_bytes_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*value_bytes_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&def_index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&value_) -
        reinterpret_cast<char*>(&def_index_)) + sizeof(value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSOEconItemAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSOEconItemAttribute)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 def_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_def_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &def_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value_bytes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSOEconItemAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSOEconItemAttribute)
  return false;
#undef DO_
}

void CSOEconItemAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSOEconItemAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 def_index = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->def_index(), output);
  }

  // optional uint32 value = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->value(), output);
  }

  // optional bytes value_bytes = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->value_bytes(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSOEconItemAttribute)
}

::google::protobuf::uint8* CSOEconItemAttribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSOEconItemAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 def_index = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->def_index(), target);
  }

  // optional uint32 value = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->value(), target);
  }

  // optional bytes value_bytes = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->value_bytes(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSOEconItemAttribute)
  return target;
}

size_t CSOEconItemAttribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSOEconItemAttribute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes value_bytes = 3;
    if (has_value_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value_bytes());
    }

    // optional uint32 def_index = 1;
    if (has_def_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->def_index());
    }

    // optional uint32 value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSOEconItemAttribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSOEconItemAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  const CSOEconItemAttribute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSOEconItemAttribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSOEconItemAttribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSOEconItemAttribute)
    MergeFrom(*source);
  }
}

void CSOEconItemAttribute::MergeFrom(const CSOEconItemAttribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSOEconItemAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_value_bytes();
      value_bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_bytes_);
    }
    if (cached_has_bits & 0x00000002u) {
      def_index_ = from.def_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSOEconItemAttribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSOEconItemAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSOEconItemAttribute::CopyFrom(const CSOEconItemAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSOEconItemAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSOEconItemAttribute::IsInitialized() const {
  return true;
}

void CSOEconItemAttribute::Swap(CSOEconItemAttribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSOEconItemAttribute::InternalSwap(CSOEconItemAttribute* other) {
  using std::swap;
  value_bytes_.Swap(&other->value_bytes_);
  swap(def_index_, other->def_index_);
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CSOEconItemAttribute::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSOEconItemEquipped::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSOEconItemEquipped::kNewClassFieldNumber;
const int CSOEconItemEquipped::kNewSlotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSOEconItemEquipped::CSOEconItemEquipped()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOEconItemEquipped();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSOEconItemEquipped)
}
CSOEconItemEquipped::CSOEconItemEquipped(const CSOEconItemEquipped& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&new_class_, &from.new_class_,
    static_cast<size_t>(reinterpret_cast<char*>(&new_slot_) -
    reinterpret_cast<char*>(&new_class_)) + sizeof(new_slot_));
  // @@protoc_insertion_point(copy_constructor:CSOEconItemEquipped)
}

void CSOEconItemEquipped::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&new_class_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&new_slot_) -
      reinterpret_cast<char*>(&new_class_)) + sizeof(new_slot_));
}

CSOEconItemEquipped::~CSOEconItemEquipped() {
  // @@protoc_insertion_point(destructor:CSOEconItemEquipped)
  SharedDtor();
}

void CSOEconItemEquipped::SharedDtor() {
}

void CSOEconItemEquipped::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSOEconItemEquipped::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSOEconItemEquipped& CSOEconItemEquipped::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOEconItemEquipped();
  return *internal_default_instance();
}

CSOEconItemEquipped* CSOEconItemEquipped::New(::google::protobuf::Arena* arena) const {
  CSOEconItemEquipped* n = new CSOEconItemEquipped;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CSOEconItemEquipped::Clear() {
// @@protoc_insertion_point(message_clear_start:CSOEconItemEquipped)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&new_class_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&new_slot_) -
        reinterpret_cast<char*>(&new_class_)) + sizeof(new_slot_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSOEconItemEquipped::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSOEconItemEquipped)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 new_class = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_new_class();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &new_class_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 new_slot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_new_slot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &new_slot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSOEconItemEquipped)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSOEconItemEquipped)
  return false;
#undef DO_
}

void CSOEconItemEquipped::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSOEconItemEquipped)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 new_class = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->new_class(), output);
  }

  // optional uint32 new_slot = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->new_slot(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSOEconItemEquipped)
}

::google::protobuf::uint8* CSOEconItemEquipped::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSOEconItemEquipped)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 new_class = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->new_class(), target);
  }

  // optional uint32 new_slot = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->new_slot(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSOEconItemEquipped)
  return target;
}

size_t CSOEconItemEquipped::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSOEconItemEquipped)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 new_class = 1;
    if (has_new_class()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->new_class());
    }

    // optional uint32 new_slot = 2;
    if (has_new_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->new_slot());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSOEconItemEquipped::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSOEconItemEquipped)
  GOOGLE_DCHECK_NE(&from, this);
  const CSOEconItemEquipped* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSOEconItemEquipped>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSOEconItemEquipped)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSOEconItemEquipped)
    MergeFrom(*source);
  }
}

void CSOEconItemEquipped::MergeFrom(const CSOEconItemEquipped& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSOEconItemEquipped)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      new_class_ = from.new_class_;
    }
    if (cached_has_bits & 0x00000002u) {
      new_slot_ = from.new_slot_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSOEconItemEquipped::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSOEconItemEquipped)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSOEconItemEquipped::CopyFrom(const CSOEconItemEquipped& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSOEconItemEquipped)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSOEconItemEquipped::IsInitialized() const {
  return true;
}

void CSOEconItemEquipped::Swap(CSOEconItemEquipped* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSOEconItemEquipped::InternalSwap(CSOEconItemEquipped* other) {
  using std::swap;
  swap(new_class_, other->new_class_);
  swap(new_slot_, other->new_slot_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CSOEconItemEquipped::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSOEconItem::InitAsDefaultInstance() {
  ::_CSOEconItem_default_instance_._instance.get_mutable()->interior_item_ = const_cast< ::CSOEconItem*>(
      ::CSOEconItem::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSOEconItem::kIdFieldNumber;
const int CSOEconItem::kAccountIdFieldNumber;
const int CSOEconItem::kInventoryFieldNumber;
const int CSOEconItem::kDefIndexFieldNumber;
const int CSOEconItem::kQuantityFieldNumber;
const int CSOEconItem::kLevelFieldNumber;
const int CSOEconItem::kQualityFieldNumber;
const int CSOEconItem::kFlagsFieldNumber;
const int CSOEconItem::kOriginFieldNumber;
const int CSOEconItem::kCustomNameFieldNumber;
const int CSOEconItem::kCustomDescFieldNumber;
const int CSOEconItem::kAttributeFieldNumber;
const int CSOEconItem::kInteriorItemFieldNumber;
const int CSOEconItem::kInUseFieldNumber;
const int CSOEconItem::kStyleFieldNumber;
const int CSOEconItem::kOriginalIdFieldNumber;
const int CSOEconItem::kEquippedStateFieldNumber;
const int CSOEconItem::kRarityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSOEconItem::CSOEconItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOEconItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSOEconItem)
}
CSOEconItem::CSOEconItem(const CSOEconItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      attribute_(from.attribute_),
      equipped_state_(from.equipped_state_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  custom_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_custom_name()) {
    custom_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_name_);
  }
  custom_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_custom_desc()) {
    custom_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_desc_);
  }
  if (from.has_interior_item()) {
    interior_item_ = new ::CSOEconItem(*from.interior_item_);
  } else {
    interior_item_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&rarity_) -
    reinterpret_cast<char*>(&id_)) + sizeof(rarity_));
  // @@protoc_insertion_point(copy_constructor:CSOEconItem)
}

void CSOEconItem::SharedCtor() {
  _cached_size_ = 0;
  custom_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  custom_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&interior_item_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rarity_) -
      reinterpret_cast<char*>(&interior_item_)) + sizeof(rarity_));
}

CSOEconItem::~CSOEconItem() {
  // @@protoc_insertion_point(destructor:CSOEconItem)
  SharedDtor();
}

void CSOEconItem::SharedDtor() {
  custom_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  custom_desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete interior_item_;
}

void CSOEconItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSOEconItem::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSOEconItem& CSOEconItem::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOEconItem();
  return *internal_default_instance();
}

CSOEconItem* CSOEconItem::New(::google::protobuf::Arena* arena) const {
  CSOEconItem* n = new CSOEconItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CSOEconItem::Clear() {
// @@protoc_insertion_point(message_clear_start:CSOEconItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attribute_.Clear();
  equipped_state_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!custom_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*custom_name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!custom_desc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*custom_desc_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(interior_item_ != NULL);
      interior_item_->Clear();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&quantity_) -
        reinterpret_cast<char*>(&id_)) + sizeof(quantity_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&level_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rarity_) -
        reinterpret_cast<char*>(&level_)) + sizeof(rarity_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSOEconItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSOEconItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 account_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 inventory = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_inventory();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &inventory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 def_index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_def_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &def_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 quantity = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_quantity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 level = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 quality = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_quality();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 flags = 8 [default = 0];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 origin = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_origin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &origin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string custom_name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_custom_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->custom_name().data(), static_cast<int>(this->custom_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSOEconItem.custom_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string custom_desc = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_custom_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->custom_desc().data(), static_cast<int>(this->custom_desc().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSOEconItem.custom_desc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CSOEconItemAttribute attribute = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_attribute()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CSOEconItem interior_item = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interior_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool in_use = 14 [default = false];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_in_use();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &in_use_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 style = 15 [default = 0];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_style();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &style_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 original_id = 16 [default = 0];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_original_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &original_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CSOEconItemEquipped equipped_state = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_equipped_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 rarity = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_rarity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rarity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSOEconItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSOEconItem)
  return false;
#undef DO_
}

void CSOEconItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSOEconItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional uint32 account_id = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->account_id(), output);
  }

  // optional uint32 inventory = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->inventory(), output);
  }

  // optional uint32 def_index = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->def_index(), output);
  }

  // optional uint32 quantity = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->quantity(), output);
  }

  // optional uint32 level = 6;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->level(), output);
  }

  // optional uint32 quality = 7;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->quality(), output);
  }

  // optional uint32 flags = 8 [default = 0];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->flags(), output);
  }

  // optional uint32 origin = 9;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->origin(), output);
  }

  // optional string custom_name = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->custom_name().data(), static_cast<int>(this->custom_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOEconItem.custom_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->custom_name(), output);
  }

  // optional string custom_desc = 11;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->custom_desc().data(), static_cast<int>(this->custom_desc().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOEconItem.custom_desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->custom_desc(), output);
  }

  // repeated .CSOEconItemAttribute attribute = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attribute_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->attribute(static_cast<int>(i)), output);
  }

  // optional .CSOEconItem interior_item = 13;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->interior_item_, output);
  }

  // optional bool in_use = 14 [default = false];
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->in_use(), output);
  }

  // optional uint32 style = 15 [default = 0];
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->style(), output);
  }

  // optional uint64 original_id = 16 [default = 0];
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(16, this->original_id(), output);
  }

  // repeated .CSOEconItemEquipped equipped_state = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->equipped_state_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->equipped_state(static_cast<int>(i)), output);
  }

  // optional uint32 rarity = 19;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->rarity(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSOEconItem)
}

::google::protobuf::uint8* CSOEconItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSOEconItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional uint32 account_id = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->account_id(), target);
  }

  // optional uint32 inventory = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->inventory(), target);
  }

  // optional uint32 def_index = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->def_index(), target);
  }

  // optional uint32 quantity = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->quantity(), target);
  }

  // optional uint32 level = 6;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->level(), target);
  }

  // optional uint32 quality = 7;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->quality(), target);
  }

  // optional uint32 flags = 8 [default = 0];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->flags(), target);
  }

  // optional uint32 origin = 9;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->origin(), target);
  }

  // optional string custom_name = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->custom_name().data(), static_cast<int>(this->custom_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOEconItem.custom_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->custom_name(), target);
  }

  // optional string custom_desc = 11;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->custom_desc().data(), static_cast<int>(this->custom_desc().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOEconItem.custom_desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->custom_desc(), target);
  }

  // repeated .CSOEconItemAttribute attribute = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attribute_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->attribute(static_cast<int>(i)), deterministic, target);
  }

  // optional .CSOEconItem interior_item = 13;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, *this->interior_item_, deterministic, target);
  }

  // optional bool in_use = 14 [default = false];
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->in_use(), target);
  }

  // optional uint32 style = 15 [default = 0];
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->style(), target);
  }

  // optional uint64 original_id = 16 [default = 0];
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(16, this->original_id(), target);
  }

  // repeated .CSOEconItemEquipped equipped_state = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->equipped_state_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->equipped_state(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 rarity = 19;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->rarity(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSOEconItem)
  return target;
}

size_t CSOEconItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSOEconItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CSOEconItemAttribute attribute = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->attribute_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attribute(static_cast<int>(i)));
    }
  }

  // repeated .CSOEconItemEquipped equipped_state = 18;
  {
    unsigned int count = static_cast<unsigned int>(this->equipped_state_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->equipped_state(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string custom_name = 10;
    if (has_custom_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->custom_name());
    }

    // optional string custom_desc = 11;
    if (has_custom_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->custom_desc());
    }

    // optional .CSOEconItem interior_item = 13;
    if (has_interior_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->interior_item_);
    }

    // optional uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional uint32 account_id = 2;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 inventory = 3;
    if (has_inventory()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->inventory());
    }

    // optional uint32 def_index = 4;
    if (has_def_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->def_index());
    }

    // optional uint32 quantity = 5;
    if (has_quantity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->quantity());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional uint32 level = 6;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // optional uint32 quality = 7;
    if (has_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->quality());
    }

    // optional uint32 flags = 8 [default = 0];
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flags());
    }

    // optional uint32 origin = 9;
    if (has_origin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->origin());
    }

    // optional bool in_use = 14 [default = false];
    if (has_in_use()) {
      total_size += 1 + 1;
    }

    // optional uint32 style = 15 [default = 0];
    if (has_style()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->style());
    }

    // optional uint64 original_id = 16 [default = 0];
    if (has_original_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->original_id());
    }

    // optional uint32 rarity = 19;
    if (has_rarity()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rarity());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSOEconItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSOEconItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CSOEconItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSOEconItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSOEconItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSOEconItem)
    MergeFrom(*source);
  }
}

void CSOEconItem::MergeFrom(const CSOEconItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSOEconItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attribute_.MergeFrom(from.attribute_);
  equipped_state_.MergeFrom(from.equipped_state_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_custom_name();
      custom_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_custom_desc();
      custom_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_desc_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_interior_item()->::CSOEconItem::MergeFrom(from.interior_item());
    }
    if (cached_has_bits & 0x00000008u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000010u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      inventory_ = from.inventory_;
    }
    if (cached_has_bits & 0x00000040u) {
      def_index_ = from.def_index_;
    }
    if (cached_has_bits & 0x00000080u) {
      quantity_ = from.quantity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000200u) {
      quality_ = from.quality_;
    }
    if (cached_has_bits & 0x00000400u) {
      flags_ = from.flags_;
    }
    if (cached_has_bits & 0x00000800u) {
      origin_ = from.origin_;
    }
    if (cached_has_bits & 0x00001000u) {
      in_use_ = from.in_use_;
    }
    if (cached_has_bits & 0x00002000u) {
      style_ = from.style_;
    }
    if (cached_has_bits & 0x00004000u) {
      original_id_ = from.original_id_;
    }
    if (cached_has_bits & 0x00008000u) {
      rarity_ = from.rarity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSOEconItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSOEconItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSOEconItem::CopyFrom(const CSOEconItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSOEconItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSOEconItem::IsInitialized() const {
  return true;
}

void CSOEconItem::Swap(CSOEconItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSOEconItem::InternalSwap(CSOEconItem* other) {
  using std::swap;
  attribute_.InternalSwap(&other->attribute_);
  equipped_state_.InternalSwap(&other->equipped_state_);
  custom_name_.Swap(&other->custom_name_);
  custom_desc_.Swap(&other->custom_desc_);
  swap(interior_item_, other->interior_item_);
  swap(id_, other->id_);
  swap(account_id_, other->account_id_);
  swap(inventory_, other->inventory_);
  swap(def_index_, other->def_index_);
  swap(quantity_, other->quantity_);
  swap(level_, other->level_);
  swap(quality_, other->quality_);
  swap(flags_, other->flags_);
  swap(origin_, other->origin_);
  swap(in_use_, other->in_use_);
  swap(style_, other->style_);
  swap(original_id_, other->original_id_);
  swap(rarity_, other->rarity_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CSOEconItem::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgAdjustItemEquippedState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAdjustItemEquippedState::kItemIdFieldNumber;
const int CMsgAdjustItemEquippedState::kNewClassFieldNumber;
const int CMsgAdjustItemEquippedState::kNewSlotFieldNumber;
const int CMsgAdjustItemEquippedState::kSwapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAdjustItemEquippedState::CMsgAdjustItemEquippedState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgAdjustItemEquippedState();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAdjustItemEquippedState)
}
CMsgAdjustItemEquippedState::CMsgAdjustItemEquippedState(const CMsgAdjustItemEquippedState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&swap_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(swap_));
  // @@protoc_insertion_point(copy_constructor:CMsgAdjustItemEquippedState)
}

void CMsgAdjustItemEquippedState::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&swap_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(swap_));
}

CMsgAdjustItemEquippedState::~CMsgAdjustItemEquippedState() {
  // @@protoc_insertion_point(destructor:CMsgAdjustItemEquippedState)
  SharedDtor();
}

void CMsgAdjustItemEquippedState::SharedDtor() {
}

void CMsgAdjustItemEquippedState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAdjustItemEquippedState::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAdjustItemEquippedState& CMsgAdjustItemEquippedState::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgAdjustItemEquippedState();
  return *internal_default_instance();
}

CMsgAdjustItemEquippedState* CMsgAdjustItemEquippedState::New(::google::protobuf::Arena* arena) const {
  CMsgAdjustItemEquippedState* n = new CMsgAdjustItemEquippedState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAdjustItemEquippedState::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAdjustItemEquippedState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&swap_) -
        reinterpret_cast<char*>(&item_id_)) + sizeof(swap_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAdjustItemEquippedState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAdjustItemEquippedState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 new_class = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_new_class();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &new_class_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 new_slot = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_new_slot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &new_slot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool swap = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_swap();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &swap_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAdjustItemEquippedState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAdjustItemEquippedState)
  return false;
#undef DO_
}

void CMsgAdjustItemEquippedState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAdjustItemEquippedState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional uint32 new_class = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->new_class(), output);
  }

  // optional uint32 new_slot = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->new_slot(), output);
  }

  // optional bool swap = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->swap(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAdjustItemEquippedState)
}

::google::protobuf::uint8* CMsgAdjustItemEquippedState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAdjustItemEquippedState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional uint32 new_class = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->new_class(), target);
  }

  // optional uint32 new_slot = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->new_slot(), target);
  }

  // optional bool swap = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->swap(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAdjustItemEquippedState)
  return target;
}

size_t CMsgAdjustItemEquippedState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAdjustItemEquippedState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 new_class = 2;
    if (has_new_class()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->new_class());
    }

    // optional uint32 new_slot = 3;
    if (has_new_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->new_slot());
    }

    // optional bool swap = 4;
    if (has_swap()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAdjustItemEquippedState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAdjustItemEquippedState)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAdjustItemEquippedState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAdjustItemEquippedState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAdjustItemEquippedState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAdjustItemEquippedState)
    MergeFrom(*source);
  }
}

void CMsgAdjustItemEquippedState::MergeFrom(const CMsgAdjustItemEquippedState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAdjustItemEquippedState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      new_class_ = from.new_class_;
    }
    if (cached_has_bits & 0x00000004u) {
      new_slot_ = from.new_slot_;
    }
    if (cached_has_bits & 0x00000008u) {
      swap_ = from.swap_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgAdjustItemEquippedState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAdjustItemEquippedState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAdjustItemEquippedState::CopyFrom(const CMsgAdjustItemEquippedState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAdjustItemEquippedState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAdjustItemEquippedState::IsInitialized() const {
  return true;
}

void CMsgAdjustItemEquippedState::Swap(CMsgAdjustItemEquippedState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAdjustItemEquippedState::InternalSwap(CMsgAdjustItemEquippedState* other) {
  using std::swap;
  swap(item_id_, other->item_id_);
  swap(new_class_, other->new_class_);
  swap(new_slot_, other->new_slot_);
  swap(swap_, other->swap_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAdjustItemEquippedState::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSortItems::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSortItems::kSortTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSortItems::CMsgSortItems()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgSortItems();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSortItems)
}
CMsgSortItems::CMsgSortItems(const CMsgSortItems& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sort_type_ = from.sort_type_;
  // @@protoc_insertion_point(copy_constructor:CMsgSortItems)
}

void CMsgSortItems::SharedCtor() {
  _cached_size_ = 0;
  sort_type_ = 0u;
}

CMsgSortItems::~CMsgSortItems() {
  // @@protoc_insertion_point(destructor:CMsgSortItems)
  SharedDtor();
}

void CMsgSortItems::SharedDtor() {
}

void CMsgSortItems::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSortItems::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSortItems& CMsgSortItems::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgSortItems();
  return *internal_default_instance();
}

CMsgSortItems* CMsgSortItems::New(::google::protobuf::Arena* arena) const {
  CMsgSortItems* n = new CMsgSortItems;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSortItems::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSortItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sort_type_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSortItems::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSortItems)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 sort_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_sort_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sort_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSortItems)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSortItems)
  return false;
#undef DO_
}

void CMsgSortItems::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSortItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 sort_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->sort_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSortItems)
}

::google::protobuf::uint8* CMsgSortItems::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSortItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 sort_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->sort_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSortItems)
  return target;
}

size_t CMsgSortItems::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSortItems)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 sort_type = 1;
  if (has_sort_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sort_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSortItems::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSortItems)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSortItems* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSortItems>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSortItems)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSortItems)
    MergeFrom(*source);
  }
}

void CMsgSortItems::MergeFrom(const CMsgSortItems& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSortItems)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sort_type()) {
    set_sort_type(from.sort_type());
  }
}

void CMsgSortItems::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSortItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSortItems::CopyFrom(const CMsgSortItems& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSortItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSortItems::IsInitialized() const {
  return true;
}

void CMsgSortItems::Swap(CMsgSortItems* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSortItems::InternalSwap(CMsgSortItems* other) {
  using std::swap;
  swap(sort_type_, other->sort_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSortItems::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSOEconClaimCode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSOEconClaimCode::kAccountIdFieldNumber;
const int CSOEconClaimCode::kCodeTypeFieldNumber;
const int CSOEconClaimCode::kTimeAcquiredFieldNumber;
const int CSOEconClaimCode::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSOEconClaimCode::CSOEconClaimCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOEconClaimCode();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSOEconClaimCode)
}
CSOEconClaimCode::CSOEconClaimCode(const CSOEconClaimCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_code()) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  ::memcpy(&account_id_, &from.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_acquired_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(time_acquired_));
  // @@protoc_insertion_point(copy_constructor:CSOEconClaimCode)
}

void CSOEconClaimCode::SharedCtor() {
  _cached_size_ = 0;
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_acquired_) -
      reinterpret_cast<char*>(&account_id_)) + sizeof(time_acquired_));
}

CSOEconClaimCode::~CSOEconClaimCode() {
  // @@protoc_insertion_point(destructor:CSOEconClaimCode)
  SharedDtor();
}

void CSOEconClaimCode::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSOEconClaimCode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSOEconClaimCode::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSOEconClaimCode& CSOEconClaimCode::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOEconClaimCode();
  return *internal_default_instance();
}

CSOEconClaimCode* CSOEconClaimCode::New(::google::protobuf::Arena* arena) const {
  CSOEconClaimCode* n = new CSOEconClaimCode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CSOEconClaimCode::Clear() {
// @@protoc_insertion_point(message_clear_start:CSOEconClaimCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*code_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&time_acquired_) -
        reinterpret_cast<char*>(&account_id_)) + sizeof(time_acquired_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSOEconClaimCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSOEconClaimCode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 code_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_code_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &code_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_acquired = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_time_acquired();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_acquired_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CSOEconClaimCode.code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSOEconClaimCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSOEconClaimCode)
  return false;
#undef DO_
}

void CSOEconClaimCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSOEconClaimCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint32 code_type = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->code_type(), output);
  }

  // optional uint32 time_acquired = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->time_acquired(), output);
  }

  // optional string code = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOEconClaimCode.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSOEconClaimCode)
}

::google::protobuf::uint8* CSOEconClaimCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSOEconClaimCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint32 code_type = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->code_type(), target);
  }

  // optional uint32 time_acquired = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->time_acquired(), target);
  }

  // optional string code = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CSOEconClaimCode.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSOEconClaimCode)
  return target;
}

size_t CSOEconClaimCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSOEconClaimCode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string code = 4;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code());
    }

    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 code_type = 2;
    if (has_code_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->code_type());
    }

    // optional uint32 time_acquired = 3;
    if (has_time_acquired()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_acquired());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSOEconClaimCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSOEconClaimCode)
  GOOGLE_DCHECK_NE(&from, this);
  const CSOEconClaimCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSOEconClaimCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSOEconClaimCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSOEconClaimCode)
    MergeFrom(*source);
  }
}

void CSOEconClaimCode::MergeFrom(const CSOEconClaimCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSOEconClaimCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_code();
      code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
    }
    if (cached_has_bits & 0x00000002u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      code_type_ = from.code_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      time_acquired_ = from.time_acquired_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSOEconClaimCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSOEconClaimCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSOEconClaimCode::CopyFrom(const CSOEconClaimCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSOEconClaimCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSOEconClaimCode::IsInitialized() const {
  return true;
}

void CSOEconClaimCode::Swap(CSOEconClaimCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSOEconClaimCode::InternalSwap(CSOEconClaimCode* other) {
  using std::swap;
  code_.Swap(&other->code_);
  swap(account_id_, other->account_id_);
  swap(code_type_, other->code_type_);
  swap(time_acquired_, other->time_acquired_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CSOEconClaimCode::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgStoreGetUserData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgStoreGetUserData::kPriceSheetVersionFieldNumber;
const int CMsgStoreGetUserData::kCurrencyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgStoreGetUserData::CMsgStoreGetUserData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgStoreGetUserData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgStoreGetUserData)
}
CMsgStoreGetUserData::CMsgStoreGetUserData(const CMsgStoreGetUserData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&price_sheet_version_, &from.price_sheet_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&currency_) -
    reinterpret_cast<char*>(&price_sheet_version_)) + sizeof(currency_));
  // @@protoc_insertion_point(copy_constructor:CMsgStoreGetUserData)
}

void CMsgStoreGetUserData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&price_sheet_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&currency_) -
      reinterpret_cast<char*>(&price_sheet_version_)) + sizeof(currency_));
}

CMsgStoreGetUserData::~CMsgStoreGetUserData() {
  // @@protoc_insertion_point(destructor:CMsgStoreGetUserData)
  SharedDtor();
}

void CMsgStoreGetUserData::SharedDtor() {
}

void CMsgStoreGetUserData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgStoreGetUserData::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgStoreGetUserData& CMsgStoreGetUserData::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgStoreGetUserData();
  return *internal_default_instance();
}

CMsgStoreGetUserData* CMsgStoreGetUserData::New(::google::protobuf::Arena* arena) const {
  CMsgStoreGetUserData* n = new CMsgStoreGetUserData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgStoreGetUserData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgStoreGetUserData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&price_sheet_version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&currency_) -
        reinterpret_cast<char*>(&price_sheet_version_)) + sizeof(currency_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgStoreGetUserData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgStoreGetUserData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed32 price_sheet_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_price_sheet_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &price_sheet_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 currency = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_currency();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgStoreGetUserData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgStoreGetUserData)
  return false;
#undef DO_
}

void CMsgStoreGetUserData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgStoreGetUserData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 price_sheet_version = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->price_sheet_version(), output);
  }

  // optional int32 currency = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->currency(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgStoreGetUserData)
}

::google::protobuf::uint8* CMsgStoreGetUserData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgStoreGetUserData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 price_sheet_version = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->price_sheet_version(), target);
  }

  // optional int32 currency = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->currency(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgStoreGetUserData)
  return target;
}

size_t CMsgStoreGetUserData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgStoreGetUserData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed32 price_sheet_version = 1;
    if (has_price_sheet_version()) {
      total_size += 1 + 4;
    }

    // optional int32 currency = 2;
    if (has_currency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->currency());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgStoreGetUserData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgStoreGetUserData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgStoreGetUserData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgStoreGetUserData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgStoreGetUserData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgStoreGetUserData)
    MergeFrom(*source);
  }
}

void CMsgStoreGetUserData::MergeFrom(const CMsgStoreGetUserData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgStoreGetUserData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      price_sheet_version_ = from.price_sheet_version_;
    }
    if (cached_has_bits & 0x00000002u) {
      currency_ = from.currency_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgStoreGetUserData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgStoreGetUserData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgStoreGetUserData::CopyFrom(const CMsgStoreGetUserData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgStoreGetUserData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgStoreGetUserData::IsInitialized() const {
  return true;
}

void CMsgStoreGetUserData::Swap(CMsgStoreGetUserData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgStoreGetUserData::InternalSwap(CMsgStoreGetUserData* other) {
  using std::swap;
  swap(price_sheet_version_, other->price_sheet_version_);
  swap(currency_, other->currency_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgStoreGetUserData::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgStoreGetUserDataResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgStoreGetUserDataResponse::kResultFieldNumber;
const int CMsgStoreGetUserDataResponse::kCurrencyDeprecatedFieldNumber;
const int CMsgStoreGetUserDataResponse::kCountryDeprecatedFieldNumber;
const int CMsgStoreGetUserDataResponse::kPriceSheetVersionFieldNumber;
const int CMsgStoreGetUserDataResponse::kPriceSheetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgStoreGetUserDataResponse::CMsgStoreGetUserDataResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgStoreGetUserDataResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgStoreGetUserDataResponse)
}
CMsgStoreGetUserDataResponse::CMsgStoreGetUserDataResponse(const CMsgStoreGetUserDataResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  country_deprecated_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_country_deprecated()) {
    country_deprecated_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_deprecated_);
  }
  price_sheet_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_price_sheet()) {
    price_sheet_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.price_sheet_);
  }
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&price_sheet_version_) -
    reinterpret_cast<char*>(&result_)) + sizeof(price_sheet_version_));
  // @@protoc_insertion_point(copy_constructor:CMsgStoreGetUserDataResponse)
}

void CMsgStoreGetUserDataResponse::SharedCtor() {
  _cached_size_ = 0;
  country_deprecated_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_sheet_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_sheet_version_) -
      reinterpret_cast<char*>(&result_)) + sizeof(price_sheet_version_));
}

CMsgStoreGetUserDataResponse::~CMsgStoreGetUserDataResponse() {
  // @@protoc_insertion_point(destructor:CMsgStoreGetUserDataResponse)
  SharedDtor();
}

void CMsgStoreGetUserDataResponse::SharedDtor() {
  country_deprecated_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_sheet_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgStoreGetUserDataResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgStoreGetUserDataResponse::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgStoreGetUserDataResponse& CMsgStoreGetUserDataResponse::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgStoreGetUserDataResponse();
  return *internal_default_instance();
}

CMsgStoreGetUserDataResponse* CMsgStoreGetUserDataResponse::New(::google::protobuf::Arena* arena) const {
  CMsgStoreGetUserDataResponse* n = new CMsgStoreGetUserDataResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgStoreGetUserDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgStoreGetUserDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!country_deprecated_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*country_deprecated_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!price_sheet_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*price_sheet_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&price_sheet_version_) -
        reinterpret_cast<char*>(&result_)) + sizeof(price_sheet_version_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgStoreGetUserDataResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgStoreGetUserDataResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 currency_deprecated = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_currency_deprecated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currency_deprecated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string country_deprecated = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country_deprecated()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->country_deprecated().data(), static_cast<int>(this->country_deprecated().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgStoreGetUserDataResponse.country_deprecated");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 price_sheet_version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_price_sheet_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &price_sheet_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes price_sheet = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_price_sheet()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgStoreGetUserDataResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgStoreGetUserDataResponse)
  return false;
#undef DO_
}

void CMsgStoreGetUserDataResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgStoreGetUserDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 currency_deprecated = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->currency_deprecated(), output);
  }

  // optional string country_deprecated = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country_deprecated().data(), static_cast<int>(this->country_deprecated().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgStoreGetUserDataResponse.country_deprecated");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->country_deprecated(), output);
  }

  // optional fixed32 price_sheet_version = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(4, this->price_sheet_version(), output);
  }

  // optional bytes price_sheet = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->price_sheet(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgStoreGetUserDataResponse)
}

::google::protobuf::uint8* CMsgStoreGetUserDataResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgStoreGetUserDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 currency_deprecated = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->currency_deprecated(), target);
  }

  // optional string country_deprecated = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country_deprecated().data(), static_cast<int>(this->country_deprecated().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgStoreGetUserDataResponse.country_deprecated");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->country_deprecated(), target);
  }

  // optional fixed32 price_sheet_version = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(4, this->price_sheet_version(), target);
  }

  // optional bytes price_sheet = 8;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->price_sheet(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgStoreGetUserDataResponse)
  return target;
}

size_t CMsgStoreGetUserDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgStoreGetUserDataResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string country_deprecated = 3;
    if (has_country_deprecated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country_deprecated());
    }

    // optional bytes price_sheet = 8;
    if (has_price_sheet()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->price_sheet());
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 currency_deprecated = 2;
    if (has_currency_deprecated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->currency_deprecated());
    }

    // optional fixed32 price_sheet_version = 4;
    if (has_price_sheet_version()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgStoreGetUserDataResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgStoreGetUserDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgStoreGetUserDataResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgStoreGetUserDataResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgStoreGetUserDataResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgStoreGetUserDataResponse)
    MergeFrom(*source);
  }
}

void CMsgStoreGetUserDataResponse::MergeFrom(const CMsgStoreGetUserDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgStoreGetUserDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_country_deprecated();
      country_deprecated_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_deprecated_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_price_sheet();
      price_sheet_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.price_sheet_);
    }
    if (cached_has_bits & 0x00000004u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000008u) {
      currency_deprecated_ = from.currency_deprecated_;
    }
    if (cached_has_bits & 0x00000010u) {
      price_sheet_version_ = from.price_sheet_version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgStoreGetUserDataResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgStoreGetUserDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgStoreGetUserDataResponse::CopyFrom(const CMsgStoreGetUserDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgStoreGetUserDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgStoreGetUserDataResponse::IsInitialized() const {
  return true;
}

void CMsgStoreGetUserDataResponse::Swap(CMsgStoreGetUserDataResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgStoreGetUserDataResponse::InternalSwap(CMsgStoreGetUserDataResponse* other) {
  using std::swap;
  country_deprecated_.Swap(&other->country_deprecated_);
  price_sheet_.Swap(&other->price_sheet_);
  swap(result_, other->result_);
  swap(currency_deprecated_, other->currency_deprecated_);
  swap(price_sheet_version_, other->price_sheet_version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgStoreGetUserDataResponse::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgUpdateItemSchema::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgUpdateItemSchema::kItemsGameFieldNumber;
const int CMsgUpdateItemSchema::kItemSchemaVersionFieldNumber;
const int CMsgUpdateItemSchema::kItemsGameUrlDEPRECATED2013FieldNumber;
const int CMsgUpdateItemSchema::kItemsGameUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgUpdateItemSchema::CMsgUpdateItemSchema()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgUpdateItemSchema();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgUpdateItemSchema)
}
CMsgUpdateItemSchema::CMsgUpdateItemSchema(const CMsgUpdateItemSchema& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  items_game_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_items_game()) {
    items_game_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.items_game_);
  }
  items_game_url_deprecated2013_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_items_game_url_deprecated2013()) {
    items_game_url_deprecated2013_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.items_game_url_deprecated2013_);
  }
  items_game_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_items_game_url()) {
    items_game_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.items_game_url_);
  }
  item_schema_version_ = from.item_schema_version_;
  // @@protoc_insertion_point(copy_constructor:CMsgUpdateItemSchema)
}

void CMsgUpdateItemSchema::SharedCtor() {
  _cached_size_ = 0;
  items_game_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  items_game_url_deprecated2013_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  items_game_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_schema_version_ = 0u;
}

CMsgUpdateItemSchema::~CMsgUpdateItemSchema() {
  // @@protoc_insertion_point(destructor:CMsgUpdateItemSchema)
  SharedDtor();
}

void CMsgUpdateItemSchema::SharedDtor() {
  items_game_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  items_game_url_deprecated2013_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  items_game_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgUpdateItemSchema::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgUpdateItemSchema::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgUpdateItemSchema& CMsgUpdateItemSchema::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgUpdateItemSchema();
  return *internal_default_instance();
}

CMsgUpdateItemSchema* CMsgUpdateItemSchema::New(::google::protobuf::Arena* arena) const {
  CMsgUpdateItemSchema* n = new CMsgUpdateItemSchema;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgUpdateItemSchema::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgUpdateItemSchema)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!items_game_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*items_game_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!items_game_url_deprecated2013_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*items_game_url_deprecated2013_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!items_game_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*items_game_url_.UnsafeRawStringPointer())->clear();
    }
  }
  item_schema_version_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgUpdateItemSchema::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgUpdateItemSchema)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes items_game = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_items_game()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 item_schema_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_item_schema_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &item_schema_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string items_game_url_DEPRECATED2013 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_items_game_url_deprecated2013()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->items_game_url_deprecated2013().data(), static_cast<int>(this->items_game_url_deprecated2013().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgUpdateItemSchema.items_game_url_DEPRECATED2013");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string items_game_url = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_items_game_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->items_game_url().data(), static_cast<int>(this->items_game_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgUpdateItemSchema.items_game_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgUpdateItemSchema)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgUpdateItemSchema)
  return false;
#undef DO_
}

void CMsgUpdateItemSchema::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgUpdateItemSchema)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes items_game = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->items_game(), output);
  }

  // optional fixed32 item_schema_version = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->item_schema_version(), output);
  }

  // optional string items_game_url_DEPRECATED2013 = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->items_game_url_deprecated2013().data(), static_cast<int>(this->items_game_url_deprecated2013().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgUpdateItemSchema.items_game_url_DEPRECATED2013");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->items_game_url_deprecated2013(), output);
  }

  // optional string items_game_url = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->items_game_url().data(), static_cast<int>(this->items_game_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgUpdateItemSchema.items_game_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->items_game_url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgUpdateItemSchema)
}

::google::protobuf::uint8* CMsgUpdateItemSchema::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgUpdateItemSchema)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes items_game = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->items_game(), target);
  }

  // optional fixed32 item_schema_version = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->item_schema_version(), target);
  }

  // optional string items_game_url_DEPRECATED2013 = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->items_game_url_deprecated2013().data(), static_cast<int>(this->items_game_url_deprecated2013().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgUpdateItemSchema.items_game_url_DEPRECATED2013");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->items_game_url_deprecated2013(), target);
  }

  // optional string items_game_url = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->items_game_url().data(), static_cast<int>(this->items_game_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgUpdateItemSchema.items_game_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->items_game_url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgUpdateItemSchema)
  return target;
}

size_t CMsgUpdateItemSchema::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgUpdateItemSchema)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes items_game = 1;
    if (has_items_game()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->items_game());
    }

    // optional string items_game_url_DEPRECATED2013 = 3;
    if (has_items_game_url_deprecated2013()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->items_game_url_deprecated2013());
    }

    // optional string items_game_url = 4;
    if (has_items_game_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->items_game_url());
    }

    // optional fixed32 item_schema_version = 2;
    if (has_item_schema_version()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgUpdateItemSchema::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgUpdateItemSchema)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgUpdateItemSchema* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgUpdateItemSchema>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgUpdateItemSchema)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgUpdateItemSchema)
    MergeFrom(*source);
  }
}

void CMsgUpdateItemSchema::MergeFrom(const CMsgUpdateItemSchema& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgUpdateItemSchema)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_items_game();
      items_game_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.items_game_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_items_game_url_deprecated2013();
      items_game_url_deprecated2013_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.items_game_url_deprecated2013_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_items_game_url();
      items_game_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.items_game_url_);
    }
    if (cached_has_bits & 0x00000008u) {
      item_schema_version_ = from.item_schema_version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgUpdateItemSchema::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgUpdateItemSchema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgUpdateItemSchema::CopyFrom(const CMsgUpdateItemSchema& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgUpdateItemSchema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgUpdateItemSchema::IsInitialized() const {
  return true;
}

void CMsgUpdateItemSchema::Swap(CMsgUpdateItemSchema* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgUpdateItemSchema::InternalSwap(CMsgUpdateItemSchema* other) {
  using std::swap;
  items_game_.Swap(&other->items_game_);
  items_game_url_deprecated2013_.Swap(&other->items_game_url_deprecated2013_);
  items_game_url_.Swap(&other->items_game_url_);
  swap(item_schema_version_, other->item_schema_version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgUpdateItemSchema::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCError::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCError::kErrorTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCError::CMsgGCError()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCError();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCError)
}
CMsgGCError::CMsgGCError(const CMsgGCError& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error_text()) {
    error_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_text_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgGCError)
}

void CMsgGCError::SharedCtor() {
  _cached_size_ = 0;
  error_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgGCError::~CMsgGCError() {
  // @@protoc_insertion_point(destructor:CMsgGCError)
  SharedDtor();
}

void CMsgGCError::SharedDtor() {
  error_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCError::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCError::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCError& CMsgGCError::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCError();
  return *internal_default_instance();
}

CMsgGCError* CMsgGCError::New(::google::protobuf::Arena* arena) const {
  CMsgGCError* n = new CMsgGCError;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCError::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!error_text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*error_text_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCError)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string error_text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error_text().data(), static_cast<int>(this->error_text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCError.error_text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCError)
  return false;
#undef DO_
}

void CMsgGCError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string error_text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_text().data(), static_cast<int>(this->error_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCError.error_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->error_text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCError)
}

::google::protobuf::uint8* CMsgGCError::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string error_text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_text().data(), static_cast<int>(this->error_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCError.error_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->error_text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCError)
  return target;
}

size_t CMsgGCError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCError)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string error_text = 1;
  if (has_error_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCError)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCError* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCError>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCError)
    MergeFrom(*source);
  }
}

void CMsgGCError::MergeFrom(const CMsgGCError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_error_text()) {
    set_has_error_text();
    error_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_text_);
  }
}

void CMsgGCError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCError::CopyFrom(const CMsgGCError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCError::IsInitialized() const {
  return true;
}

void CMsgGCError::Swap(CMsgGCError* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCError::InternalSwap(CMsgGCError* other) {
  using std::swap;
  error_text_.Swap(&other->error_text_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCError::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgRequestInventoryRefresh::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRequestInventoryRefresh::CMsgRequestInventoryRefresh()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgRequestInventoryRefresh();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRequestInventoryRefresh)
}
CMsgRequestInventoryRefresh::CMsgRequestInventoryRefresh(const CMsgRequestInventoryRefresh& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgRequestInventoryRefresh)
}

void CMsgRequestInventoryRefresh::SharedCtor() {
  _cached_size_ = 0;
}

CMsgRequestInventoryRefresh::~CMsgRequestInventoryRefresh() {
  // @@protoc_insertion_point(destructor:CMsgRequestInventoryRefresh)
  SharedDtor();
}

void CMsgRequestInventoryRefresh::SharedDtor() {
}

void CMsgRequestInventoryRefresh::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgRequestInventoryRefresh::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgRequestInventoryRefresh& CMsgRequestInventoryRefresh::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgRequestInventoryRefresh();
  return *internal_default_instance();
}

CMsgRequestInventoryRefresh* CMsgRequestInventoryRefresh::New(::google::protobuf::Arena* arena) const {
  CMsgRequestInventoryRefresh* n = new CMsgRequestInventoryRefresh;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgRequestInventoryRefresh::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgRequestInventoryRefresh)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgRequestInventoryRefresh::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgRequestInventoryRefresh)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRequestInventoryRefresh)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRequestInventoryRefresh)
  return false;
#undef DO_
}

void CMsgRequestInventoryRefresh::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRequestInventoryRefresh)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgRequestInventoryRefresh)
}

::google::protobuf::uint8* CMsgRequestInventoryRefresh::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRequestInventoryRefresh)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRequestInventoryRefresh)
  return target;
}

size_t CMsgRequestInventoryRefresh::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgRequestInventoryRefresh)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRequestInventoryRefresh::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgRequestInventoryRefresh)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRequestInventoryRefresh* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgRequestInventoryRefresh>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgRequestInventoryRefresh)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgRequestInventoryRefresh)
    MergeFrom(*source);
  }
}

void CMsgRequestInventoryRefresh::MergeFrom(const CMsgRequestInventoryRefresh& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgRequestInventoryRefresh)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgRequestInventoryRefresh::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgRequestInventoryRefresh)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestInventoryRefresh::CopyFrom(const CMsgRequestInventoryRefresh& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgRequestInventoryRefresh)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestInventoryRefresh::IsInitialized() const {
  return true;
}

void CMsgRequestInventoryRefresh::Swap(CMsgRequestInventoryRefresh* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRequestInventoryRefresh::InternalSwap(CMsgRequestInventoryRefresh* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgRequestInventoryRefresh::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgConVarValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgConVarValue::kNameFieldNumber;
const int CMsgConVarValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgConVarValue::CMsgConVarValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgConVarValue();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgConVarValue)
}
CMsgConVarValue::CMsgConVarValue(const CMsgConVarValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgConVarValue)
}

void CMsgConVarValue::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgConVarValue::~CMsgConVarValue() {
  // @@protoc_insertion_point(destructor:CMsgConVarValue)
  SharedDtor();
}

void CMsgConVarValue::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgConVarValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgConVarValue::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgConVarValue& CMsgConVarValue::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgConVarValue();
  return *internal_default_instance();
}

CMsgConVarValue* CMsgConVarValue::New(::google::protobuf::Arena* arena) const {
  CMsgConVarValue* n = new CMsgConVarValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgConVarValue::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgConVarValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgConVarValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgConVarValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgConVarValue.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgConVarValue.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgConVarValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgConVarValue)
  return false;
#undef DO_
}

void CMsgConVarValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgConVarValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgConVarValue.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgConVarValue.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgConVarValue)
}

::google::protobuf::uint8* CMsgConVarValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgConVarValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgConVarValue.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgConVarValue.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgConVarValue)
  return target;
}

size_t CMsgConVarValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgConVarValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgConVarValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgConVarValue)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgConVarValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgConVarValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgConVarValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgConVarValue)
    MergeFrom(*source);
  }
}

void CMsgConVarValue::MergeFrom(const CMsgConVarValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgConVarValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void CMsgConVarValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgConVarValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgConVarValue::CopyFrom(const CMsgConVarValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgConVarValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgConVarValue::IsInitialized() const {
  return true;
}

void CMsgConVarValue::Swap(CMsgConVarValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgConVarValue::InternalSwap(CMsgConVarValue* other) {
  using std::swap;
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgConVarValue::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgReplicateConVars::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgReplicateConVars::kConvarsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgReplicateConVars::CMsgReplicateConVars()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgReplicateConVars();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgReplicateConVars)
}
CMsgReplicateConVars::CMsgReplicateConVars(const CMsgReplicateConVars& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      convars_(from.convars_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgReplicateConVars)
}

void CMsgReplicateConVars::SharedCtor() {
  _cached_size_ = 0;
}

CMsgReplicateConVars::~CMsgReplicateConVars() {
  // @@protoc_insertion_point(destructor:CMsgReplicateConVars)
  SharedDtor();
}

void CMsgReplicateConVars::SharedDtor() {
}

void CMsgReplicateConVars::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgReplicateConVars::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgReplicateConVars& CMsgReplicateConVars::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgReplicateConVars();
  return *internal_default_instance();
}

CMsgReplicateConVars* CMsgReplicateConVars::New(::google::protobuf::Arena* arena) const {
  CMsgReplicateConVars* n = new CMsgReplicateConVars;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgReplicateConVars::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgReplicateConVars)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  convars_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgReplicateConVars::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgReplicateConVars)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgConVarValue convars = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_convars()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgReplicateConVars)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgReplicateConVars)
  return false;
#undef DO_
}

void CMsgReplicateConVars::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgReplicateConVars)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgConVarValue convars = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->convars_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->convars(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgReplicateConVars)
}

::google::protobuf::uint8* CMsgReplicateConVars::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgReplicateConVars)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgConVarValue convars = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->convars_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->convars(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgReplicateConVars)
  return target;
}

size_t CMsgReplicateConVars::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgReplicateConVars)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgConVarValue convars = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->convars_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->convars(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgReplicateConVars::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgReplicateConVars)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgReplicateConVars* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgReplicateConVars>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgReplicateConVars)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgReplicateConVars)
    MergeFrom(*source);
  }
}

void CMsgReplicateConVars::MergeFrom(const CMsgReplicateConVars& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgReplicateConVars)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  convars_.MergeFrom(from.convars_);
}

void CMsgReplicateConVars::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgReplicateConVars)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgReplicateConVars::CopyFrom(const CMsgReplicateConVars& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgReplicateConVars)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgReplicateConVars::IsInitialized() const {
  return true;
}

void CMsgReplicateConVars::Swap(CMsgReplicateConVars* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgReplicateConVars::InternalSwap(CMsgReplicateConVars* other) {
  using std::swap;
  convars_.InternalSwap(&other->convars_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgReplicateConVars::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgUseItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgUseItem::kItemIdFieldNumber;
const int CMsgUseItem::kTargetSteamIdFieldNumber;
const int CMsgUseItem::kGiftPotentialTargetsFieldNumber;
const int CMsgUseItem::kDuelClassLockFieldNumber;
const int CMsgUseItem::kInitiatorSteamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgUseItem::CMsgUseItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgUseItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgUseItem)
}
CMsgUseItem::CMsgUseItem(const CMsgUseItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      gift__potential_targets_(from.gift__potential_targets_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&duel__class_lock_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(duel__class_lock_));
  // @@protoc_insertion_point(copy_constructor:CMsgUseItem)
}

void CMsgUseItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duel__class_lock_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(duel__class_lock_));
}

CMsgUseItem::~CMsgUseItem() {
  // @@protoc_insertion_point(destructor:CMsgUseItem)
  SharedDtor();
}

void CMsgUseItem::SharedDtor() {
}

void CMsgUseItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgUseItem::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgUseItem& CMsgUseItem::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgUseItem();
  return *internal_default_instance();
}

CMsgUseItem* CMsgUseItem::New(::google::protobuf::Arena* arena) const {
  CMsgUseItem* n = new CMsgUseItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgUseItem::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgUseItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gift__potential_targets_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&duel__class_lock_) -
        reinterpret_cast<char*>(&item_id_)) + sizeof(duel__class_lock_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgUseItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgUseItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 target_steam_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_target_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &target_steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 gift__potential_targets = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24u, input, this->mutable_gift__potential_targets())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_gift__potential_targets())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 duel__class_lock = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_duel__class_lock();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &duel__class_lock_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 initiator_steam_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_initiator_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &initiator_steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgUseItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgUseItem)
  return false;
#undef DO_
}

void CMsgUseItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgUseItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional fixed64 target_steam_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->target_steam_id(), output);
  }

  // repeated uint32 gift__potential_targets = 3;
  for (int i = 0, n = this->gift__potential_targets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->gift__potential_targets(i), output);
  }

  // optional uint32 duel__class_lock = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->duel__class_lock(), output);
  }

  // optional fixed64 initiator_steam_id = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(5, this->initiator_steam_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgUseItem)
}

::google::protobuf::uint8* CMsgUseItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgUseItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional fixed64 target_steam_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->target_steam_id(), target);
  }

  // repeated uint32 gift__potential_targets = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(3, this->gift__potential_targets_, target);

  // optional uint32 duel__class_lock = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->duel__class_lock(), target);
  }

  // optional fixed64 initiator_steam_id = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(5, this->initiator_steam_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgUseItem)
  return target;
}

size_t CMsgUseItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgUseItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 gift__potential_targets = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->gift__potential_targets_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->gift__potential_targets_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional fixed64 target_steam_id = 2;
    if (has_target_steam_id()) {
      total_size += 1 + 8;
    }

    // optional fixed64 initiator_steam_id = 5;
    if (has_initiator_steam_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 duel__class_lock = 4;
    if (has_duel__class_lock()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->duel__class_lock());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgUseItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgUseItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgUseItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgUseItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgUseItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgUseItem)
    MergeFrom(*source);
  }
}

void CMsgUseItem::MergeFrom(const CMsgUseItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgUseItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gift__potential_targets_.MergeFrom(from.gift__potential_targets_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      target_steam_id_ = from.target_steam_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      initiator_steam_id_ = from.initiator_steam_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      duel__class_lock_ = from.duel__class_lock_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgUseItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgUseItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgUseItem::CopyFrom(const CMsgUseItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgUseItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgUseItem::IsInitialized() const {
  return true;
}

void CMsgUseItem::Swap(CMsgUseItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgUseItem::InternalSwap(CMsgUseItem* other) {
  using std::swap;
  gift__potential_targets_.InternalSwap(&other->gift__potential_targets_);
  swap(item_id_, other->item_id_);
  swap(target_steam_id_, other->target_steam_id_);
  swap(initiator_steam_id_, other->initiator_steam_id_);
  swap(duel__class_lock_, other->duel__class_lock_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgUseItem::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgReplayUploadedToYouTube::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgReplayUploadedToYouTube::kYoutubeUrlFieldNumber;
const int CMsgReplayUploadedToYouTube::kYoutubeAccountNameFieldNumber;
const int CMsgReplayUploadedToYouTube::kSessionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgReplayUploadedToYouTube::CMsgReplayUploadedToYouTube()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgReplayUploadedToYouTube();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgReplayUploadedToYouTube)
}
CMsgReplayUploadedToYouTube::CMsgReplayUploadedToYouTube(const CMsgReplayUploadedToYouTube& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  youtube_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_youtube_url()) {
    youtube_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.youtube_url_);
  }
  youtube_account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_youtube_account_name()) {
    youtube_account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.youtube_account_name_);
  }
  session_id_ = from.session_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgReplayUploadedToYouTube)
}

void CMsgReplayUploadedToYouTube::SharedCtor() {
  _cached_size_ = 0;
  youtube_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  youtube_account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_ = GOOGLE_ULONGLONG(0);
}

CMsgReplayUploadedToYouTube::~CMsgReplayUploadedToYouTube() {
  // @@protoc_insertion_point(destructor:CMsgReplayUploadedToYouTube)
  SharedDtor();
}

void CMsgReplayUploadedToYouTube::SharedDtor() {
  youtube_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  youtube_account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgReplayUploadedToYouTube::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgReplayUploadedToYouTube::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgReplayUploadedToYouTube& CMsgReplayUploadedToYouTube::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgReplayUploadedToYouTube();
  return *internal_default_instance();
}

CMsgReplayUploadedToYouTube* CMsgReplayUploadedToYouTube::New(::google::protobuf::Arena* arena) const {
  CMsgReplayUploadedToYouTube* n = new CMsgReplayUploadedToYouTube;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgReplayUploadedToYouTube::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgReplayUploadedToYouTube)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!youtube_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*youtube_url_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!youtube_account_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*youtube_account_name_.UnsafeRawStringPointer())->clear();
    }
  }
  session_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgReplayUploadedToYouTube::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgReplayUploadedToYouTube)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string youtube_url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_youtube_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->youtube_url().data(), static_cast<int>(this->youtube_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgReplayUploadedToYouTube.youtube_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string youtube_account_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_youtube_account_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->youtube_account_name().data(), static_cast<int>(this->youtube_account_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgReplayUploadedToYouTube.youtube_account_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 session_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_session_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgReplayUploadedToYouTube)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgReplayUploadedToYouTube)
  return false;
#undef DO_
}

void CMsgReplayUploadedToYouTube::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgReplayUploadedToYouTube)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string youtube_url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->youtube_url().data(), static_cast<int>(this->youtube_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgReplayUploadedToYouTube.youtube_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->youtube_url(), output);
  }

  // optional string youtube_account_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->youtube_account_name().data(), static_cast<int>(this->youtube_account_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgReplayUploadedToYouTube.youtube_account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->youtube_account_name(), output);
  }

  // optional uint64 session_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->session_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgReplayUploadedToYouTube)
}

::google::protobuf::uint8* CMsgReplayUploadedToYouTube::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgReplayUploadedToYouTube)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string youtube_url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->youtube_url().data(), static_cast<int>(this->youtube_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgReplayUploadedToYouTube.youtube_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->youtube_url(), target);
  }

  // optional string youtube_account_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->youtube_account_name().data(), static_cast<int>(this->youtube_account_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgReplayUploadedToYouTube.youtube_account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->youtube_account_name(), target);
  }

  // optional uint64 session_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->session_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgReplayUploadedToYouTube)
  return target;
}

size_t CMsgReplayUploadedToYouTube::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgReplayUploadedToYouTube)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string youtube_url = 1;
    if (has_youtube_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->youtube_url());
    }

    // optional string youtube_account_name = 2;
    if (has_youtube_account_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->youtube_account_name());
    }

    // optional uint64 session_id = 3;
    if (has_session_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->session_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgReplayUploadedToYouTube::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgReplayUploadedToYouTube)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgReplayUploadedToYouTube* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgReplayUploadedToYouTube>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgReplayUploadedToYouTube)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgReplayUploadedToYouTube)
    MergeFrom(*source);
  }
}

void CMsgReplayUploadedToYouTube::MergeFrom(const CMsgReplayUploadedToYouTube& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgReplayUploadedToYouTube)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_youtube_url();
      youtube_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.youtube_url_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_youtube_account_name();
      youtube_account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.youtube_account_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      session_id_ = from.session_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgReplayUploadedToYouTube::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgReplayUploadedToYouTube)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgReplayUploadedToYouTube::CopyFrom(const CMsgReplayUploadedToYouTube& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgReplayUploadedToYouTube)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgReplayUploadedToYouTube::IsInitialized() const {
  return true;
}

void CMsgReplayUploadedToYouTube::Swap(CMsgReplayUploadedToYouTube* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgReplayUploadedToYouTube::InternalSwap(CMsgReplayUploadedToYouTube* other) {
  using std::swap;
  youtube_url_.Swap(&other->youtube_url_);
  youtube_account_name_.Swap(&other->youtube_account_name_);
  swap(session_id_, other->session_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgReplayUploadedToYouTube::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgConsumableExhausted::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgConsumableExhausted::kItemDefIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgConsumableExhausted::CMsgConsumableExhausted()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgConsumableExhausted();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgConsumableExhausted)
}
CMsgConsumableExhausted::CMsgConsumableExhausted(const CMsgConsumableExhausted& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  item_def_id_ = from.item_def_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgConsumableExhausted)
}

void CMsgConsumableExhausted::SharedCtor() {
  _cached_size_ = 0;
  item_def_id_ = 0;
}

CMsgConsumableExhausted::~CMsgConsumableExhausted() {
  // @@protoc_insertion_point(destructor:CMsgConsumableExhausted)
  SharedDtor();
}

void CMsgConsumableExhausted::SharedDtor() {
}

void CMsgConsumableExhausted::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgConsumableExhausted::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgConsumableExhausted& CMsgConsumableExhausted::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgConsumableExhausted();
  return *internal_default_instance();
}

CMsgConsumableExhausted* CMsgConsumableExhausted::New(::google::protobuf::Arena* arena) const {
  CMsgConsumableExhausted* n = new CMsgConsumableExhausted;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgConsumableExhausted::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgConsumableExhausted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_def_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgConsumableExhausted::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgConsumableExhausted)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_def_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_item_def_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_def_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgConsumableExhausted)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgConsumableExhausted)
  return false;
#undef DO_
}

void CMsgConsumableExhausted::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgConsumableExhausted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item_def_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_def_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgConsumableExhausted)
}

::google::protobuf::uint8* CMsgConsumableExhausted::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgConsumableExhausted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item_def_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_def_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgConsumableExhausted)
  return target;
}

size_t CMsgConsumableExhausted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgConsumableExhausted)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 item_def_id = 1;
  if (has_item_def_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->item_def_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgConsumableExhausted::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgConsumableExhausted)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgConsumableExhausted* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgConsumableExhausted>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgConsumableExhausted)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgConsumableExhausted)
    MergeFrom(*source);
  }
}

void CMsgConsumableExhausted::MergeFrom(const CMsgConsumableExhausted& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgConsumableExhausted)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item_def_id()) {
    set_item_def_id(from.item_def_id());
  }
}

void CMsgConsumableExhausted::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgConsumableExhausted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgConsumableExhausted::CopyFrom(const CMsgConsumableExhausted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgConsumableExhausted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgConsumableExhausted::IsInitialized() const {
  return true;
}

void CMsgConsumableExhausted::Swap(CMsgConsumableExhausted* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgConsumableExhausted::InternalSwap(CMsgConsumableExhausted* other) {
  using std::swap;
  swap(item_def_id_, other->item_def_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgConsumableExhausted::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgItemAcknowledged__DEPRECATED::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgItemAcknowledged__DEPRECATED::kAccountIdFieldNumber;
const int CMsgItemAcknowledged__DEPRECATED::kInventoryFieldNumber;
const int CMsgItemAcknowledged__DEPRECATED::kDefIndexFieldNumber;
const int CMsgItemAcknowledged__DEPRECATED::kQualityFieldNumber;
const int CMsgItemAcknowledged__DEPRECATED::kRarityFieldNumber;
const int CMsgItemAcknowledged__DEPRECATED::kOriginFieldNumber;
const int CMsgItemAcknowledged__DEPRECATED::kItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgItemAcknowledged__DEPRECATED::CMsgItemAcknowledged__DEPRECATED()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgItemAcknowledged__DEPRECATED();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgItemAcknowledged__DEPRECATED)
}
CMsgItemAcknowledged__DEPRECATED::CMsgItemAcknowledged__DEPRECATED(const CMsgItemAcknowledged__DEPRECATED& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&item_id_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(item_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgItemAcknowledged__DEPRECATED)
}

void CMsgItemAcknowledged__DEPRECATED::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_id_) -
      reinterpret_cast<char*>(&account_id_)) + sizeof(item_id_));
}

CMsgItemAcknowledged__DEPRECATED::~CMsgItemAcknowledged__DEPRECATED() {
  // @@protoc_insertion_point(destructor:CMsgItemAcknowledged__DEPRECATED)
  SharedDtor();
}

void CMsgItemAcknowledged__DEPRECATED::SharedDtor() {
}

void CMsgItemAcknowledged__DEPRECATED::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgItemAcknowledged__DEPRECATED::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgItemAcknowledged__DEPRECATED& CMsgItemAcknowledged__DEPRECATED::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgItemAcknowledged__DEPRECATED();
  return *internal_default_instance();
}

CMsgItemAcknowledged__DEPRECATED* CMsgItemAcknowledged__DEPRECATED::New(::google::protobuf::Arena* arena) const {
  CMsgItemAcknowledged__DEPRECATED* n = new CMsgItemAcknowledged__DEPRECATED;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgItemAcknowledged__DEPRECATED::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgItemAcknowledged__DEPRECATED)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    ::memset(&account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&item_id_) -
        reinterpret_cast<char*>(&account_id_)) + sizeof(item_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgItemAcknowledged__DEPRECATED::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgItemAcknowledged__DEPRECATED)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 inventory = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_inventory();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &inventory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 def_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_def_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &def_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 quality = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_quality();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 rarity = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_rarity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rarity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 origin = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_origin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &origin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 item_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgItemAcknowledged__DEPRECATED)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgItemAcknowledged__DEPRECATED)
  return false;
#undef DO_
}

void CMsgItemAcknowledged__DEPRECATED::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgItemAcknowledged__DEPRECATED)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint32 inventory = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->inventory(), output);
  }

  // optional uint32 def_index = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->def_index(), output);
  }

  // optional uint32 quality = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->quality(), output);
  }

  // optional uint32 rarity = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->rarity(), output);
  }

  // optional uint32 origin = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->origin(), output);
  }

  // optional uint64 item_id = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgItemAcknowledged__DEPRECATED)
}

::google::protobuf::uint8* CMsgItemAcknowledged__DEPRECATED::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgItemAcknowledged__DEPRECATED)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint32 inventory = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->inventory(), target);
  }

  // optional uint32 def_index = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->def_index(), target);
  }

  // optional uint32 quality = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->quality(), target);
  }

  // optional uint32 rarity = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->rarity(), target);
  }

  // optional uint32 origin = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->origin(), target);
  }

  // optional uint64 item_id = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgItemAcknowledged__DEPRECATED)
  return target;
}

size_t CMsgItemAcknowledged__DEPRECATED::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgItemAcknowledged__DEPRECATED)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 inventory = 2;
    if (has_inventory()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->inventory());
    }

    // optional uint32 def_index = 3;
    if (has_def_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->def_index());
    }

    // optional uint32 quality = 4;
    if (has_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->quality());
    }

    // optional uint32 rarity = 5;
    if (has_rarity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rarity());
    }

    // optional uint32 origin = 6;
    if (has_origin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->origin());
    }

    // optional uint64 item_id = 7;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgItemAcknowledged__DEPRECATED::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgItemAcknowledged__DEPRECATED)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgItemAcknowledged__DEPRECATED* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgItemAcknowledged__DEPRECATED>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgItemAcknowledged__DEPRECATED)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgItemAcknowledged__DEPRECATED)
    MergeFrom(*source);
  }
}

void CMsgItemAcknowledged__DEPRECATED::MergeFrom(const CMsgItemAcknowledged__DEPRECATED& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgItemAcknowledged__DEPRECATED)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      inventory_ = from.inventory_;
    }
    if (cached_has_bits & 0x00000004u) {
      def_index_ = from.def_index_;
    }
    if (cached_has_bits & 0x00000008u) {
      quality_ = from.quality_;
    }
    if (cached_has_bits & 0x00000010u) {
      rarity_ = from.rarity_;
    }
    if (cached_has_bits & 0x00000020u) {
      origin_ = from.origin_;
    }
    if (cached_has_bits & 0x00000040u) {
      item_id_ = from.item_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgItemAcknowledged__DEPRECATED::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgItemAcknowledged__DEPRECATED)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgItemAcknowledged__DEPRECATED::CopyFrom(const CMsgItemAcknowledged__DEPRECATED& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgItemAcknowledged__DEPRECATED)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgItemAcknowledged__DEPRECATED::IsInitialized() const {
  return true;
}

void CMsgItemAcknowledged__DEPRECATED::Swap(CMsgItemAcknowledged__DEPRECATED* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgItemAcknowledged__DEPRECATED::InternalSwap(CMsgItemAcknowledged__DEPRECATED* other) {
  using std::swap;
  swap(account_id_, other->account_id_);
  swap(inventory_, other->inventory_);
  swap(def_index_, other->def_index_);
  swap(quality_, other->quality_);
  swap(rarity_, other->rarity_);
  swap(origin_, other->origin_);
  swap(item_id_, other->item_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgItemAcknowledged__DEPRECATED::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSetItemPositions_ItemPosition::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSetItemPositions_ItemPosition::kLegacyItemIdFieldNumber;
const int CMsgSetItemPositions_ItemPosition::kPositionFieldNumber;
const int CMsgSetItemPositions_ItemPosition::kItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSetItemPositions_ItemPosition::CMsgSetItemPositions_ItemPosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgSetItemPositions_ItemPosition();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSetItemPositions.ItemPosition)
}
CMsgSetItemPositions_ItemPosition::CMsgSetItemPositions_ItemPosition(const CMsgSetItemPositions_ItemPosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&legacy_item_id_, &from.legacy_item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&item_id_) -
    reinterpret_cast<char*>(&legacy_item_id_)) + sizeof(item_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgSetItemPositions.ItemPosition)
}

void CMsgSetItemPositions_ItemPosition::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&legacy_item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_id_) -
      reinterpret_cast<char*>(&legacy_item_id_)) + sizeof(item_id_));
}

CMsgSetItemPositions_ItemPosition::~CMsgSetItemPositions_ItemPosition() {
  // @@protoc_insertion_point(destructor:CMsgSetItemPositions.ItemPosition)
  SharedDtor();
}

void CMsgSetItemPositions_ItemPosition::SharedDtor() {
}

void CMsgSetItemPositions_ItemPosition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSetItemPositions_ItemPosition::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSetItemPositions_ItemPosition& CMsgSetItemPositions_ItemPosition::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgSetItemPositions_ItemPosition();
  return *internal_default_instance();
}

CMsgSetItemPositions_ItemPosition* CMsgSetItemPositions_ItemPosition::New(::google::protobuf::Arena* arena) const {
  CMsgSetItemPositions_ItemPosition* n = new CMsgSetItemPositions_ItemPosition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSetItemPositions_ItemPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSetItemPositions.ItemPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&legacy_item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&item_id_) -
        reinterpret_cast<char*>(&legacy_item_id_)) + sizeof(item_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSetItemPositions_ItemPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSetItemPositions.ItemPosition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 legacy_item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_legacy_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &legacy_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_position();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 item_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSetItemPositions.ItemPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSetItemPositions.ItemPosition)
  return false;
#undef DO_
}

void CMsgSetItemPositions_ItemPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSetItemPositions.ItemPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 legacy_item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->legacy_item_id(), output);
  }

  // optional uint32 position = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->position(), output);
  }

  // optional uint64 item_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSetItemPositions.ItemPosition)
}

::google::protobuf::uint8* CMsgSetItemPositions_ItemPosition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSetItemPositions.ItemPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 legacy_item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->legacy_item_id(), target);
  }

  // optional uint32 position = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->position(), target);
  }

  // optional uint64 item_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSetItemPositions.ItemPosition)
  return target;
}

size_t CMsgSetItemPositions_ItemPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSetItemPositions.ItemPosition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 legacy_item_id = 1;
    if (has_legacy_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->legacy_item_id());
    }

    // optional uint32 position = 2;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->position());
    }

    // optional uint64 item_id = 3;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSetItemPositions_ItemPosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSetItemPositions.ItemPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSetItemPositions_ItemPosition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSetItemPositions_ItemPosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSetItemPositions.ItemPosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSetItemPositions.ItemPosition)
    MergeFrom(*source);
  }
}

void CMsgSetItemPositions_ItemPosition::MergeFrom(const CMsgSetItemPositions_ItemPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSetItemPositions.ItemPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      legacy_item_id_ = from.legacy_item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      position_ = from.position_;
    }
    if (cached_has_bits & 0x00000004u) {
      item_id_ = from.item_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSetItemPositions_ItemPosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSetItemPositions.ItemPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSetItemPositions_ItemPosition::CopyFrom(const CMsgSetItemPositions_ItemPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSetItemPositions.ItemPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSetItemPositions_ItemPosition::IsInitialized() const {
  return true;
}

void CMsgSetItemPositions_ItemPosition::Swap(CMsgSetItemPositions_ItemPosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSetItemPositions_ItemPosition::InternalSwap(CMsgSetItemPositions_ItemPosition* other) {
  using std::swap;
  swap(legacy_item_id_, other->legacy_item_id_);
  swap(position_, other->position_);
  swap(item_id_, other->item_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSetItemPositions_ItemPosition::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSetItemPositions::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSetItemPositions::kItemPositionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSetItemPositions::CMsgSetItemPositions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgSetItemPositions();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSetItemPositions)
}
CMsgSetItemPositions::CMsgSetItemPositions(const CMsgSetItemPositions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      item_positions_(from.item_positions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgSetItemPositions)
}

void CMsgSetItemPositions::SharedCtor() {
  _cached_size_ = 0;
}

CMsgSetItemPositions::~CMsgSetItemPositions() {
  // @@protoc_insertion_point(destructor:CMsgSetItemPositions)
  SharedDtor();
}

void CMsgSetItemPositions::SharedDtor() {
}

void CMsgSetItemPositions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSetItemPositions::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSetItemPositions& CMsgSetItemPositions::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgSetItemPositions();
  return *internal_default_instance();
}

CMsgSetItemPositions* CMsgSetItemPositions::New(::google::protobuf::Arena* arena) const {
  CMsgSetItemPositions* n = new CMsgSetItemPositions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSetItemPositions::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSetItemPositions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_positions_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSetItemPositions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSetItemPositions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgSetItemPositions.ItemPosition item_positions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_item_positions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSetItemPositions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSetItemPositions)
  return false;
#undef DO_
}

void CMsgSetItemPositions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSetItemPositions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgSetItemPositions.ItemPosition item_positions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_positions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_positions(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSetItemPositions)
}

::google::protobuf::uint8* CMsgSetItemPositions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSetItemPositions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgSetItemPositions.ItemPosition item_positions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_positions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->item_positions(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSetItemPositions)
  return target;
}

size_t CMsgSetItemPositions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSetItemPositions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgSetItemPositions.ItemPosition item_positions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->item_positions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->item_positions(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSetItemPositions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSetItemPositions)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSetItemPositions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSetItemPositions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSetItemPositions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSetItemPositions)
    MergeFrom(*source);
  }
}

void CMsgSetItemPositions::MergeFrom(const CMsgSetItemPositions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSetItemPositions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_positions_.MergeFrom(from.item_positions_);
}

void CMsgSetItemPositions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSetItemPositions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSetItemPositions::CopyFrom(const CMsgSetItemPositions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSetItemPositions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSetItemPositions::IsInitialized() const {
  return true;
}

void CMsgSetItemPositions::Swap(CMsgSetItemPositions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSetItemPositions::InternalSwap(CMsgSetItemPositions* other) {
  using std::swap;
  item_positions_.InternalSwap(&other->item_positions_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSetItemPositions::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCReportAbuse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCReportAbuse::kTargetSteamIdFieldNumber;
const int CMsgGCReportAbuse::kDescriptionFieldNumber;
const int CMsgGCReportAbuse::kGidFieldNumber;
const int CMsgGCReportAbuse::kAbuseTypeFieldNumber;
const int CMsgGCReportAbuse::kContentTypeFieldNumber;
const int CMsgGCReportAbuse::kTargetGameServerIpFieldNumber;
const int CMsgGCReportAbuse::kTargetGameServerPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCReportAbuse::CMsgGCReportAbuse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCReportAbuse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCReportAbuse)
}
CMsgGCReportAbuse::CMsgGCReportAbuse(const CMsgGCReportAbuse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&target_steam_id_, &from.target_steam_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_game_server_port_) -
    reinterpret_cast<char*>(&target_steam_id_)) + sizeof(target_game_server_port_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCReportAbuse)
}

void CMsgGCReportAbuse::SharedCtor() {
  _cached_size_ = 0;
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&target_steam_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_game_server_port_) -
      reinterpret_cast<char*>(&target_steam_id_)) + sizeof(target_game_server_port_));
}

CMsgGCReportAbuse::~CMsgGCReportAbuse() {
  // @@protoc_insertion_point(destructor:CMsgGCReportAbuse)
  SharedDtor();
}

void CMsgGCReportAbuse::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCReportAbuse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCReportAbuse::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCReportAbuse& CMsgGCReportAbuse::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCReportAbuse();
  return *internal_default_instance();
}

CMsgGCReportAbuse* CMsgGCReportAbuse::New(::google::protobuf::Arena* arena) const {
  CMsgGCReportAbuse* n = new CMsgGCReportAbuse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCReportAbuse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCReportAbuse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!description_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*description_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 126u) {
    ::memset(&target_steam_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&target_game_server_port_) -
        reinterpret_cast<char*>(&target_steam_id_)) + sizeof(target_game_server_port_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCReportAbuse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCReportAbuse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 target_steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_target_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &target_steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 abuse_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_abuse_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &abuse_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 content_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_content_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &content_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string description = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCReportAbuse.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 gid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_gid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 target_game_server_ip = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          set_has_target_game_server_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &target_game_server_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 target_game_server_port = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_target_game_server_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_game_server_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCReportAbuse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCReportAbuse)
  return false;
#undef DO_
}

void CMsgGCReportAbuse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCReportAbuse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 target_steam_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->target_steam_id(), output);
  }

  // optional uint32 abuse_type = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->abuse_type(), output);
  }

  // optional uint32 content_type = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->content_type(), output);
  }

  // optional string description = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCReportAbuse.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->description(), output);
  }

  // optional uint64 gid = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->gid(), output);
  }

  // optional fixed32 target_game_server_ip = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(6, this->target_game_server_ip(), output);
  }

  // optional uint32 target_game_server_port = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->target_game_server_port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCReportAbuse)
}

::google::protobuf::uint8* CMsgGCReportAbuse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCReportAbuse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 target_steam_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->target_steam_id(), target);
  }

  // optional uint32 abuse_type = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->abuse_type(), target);
  }

  // optional uint32 content_type = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->content_type(), target);
  }

  // optional string description = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCReportAbuse.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->description(), target);
  }

  // optional uint64 gid = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->gid(), target);
  }

  // optional fixed32 target_game_server_ip = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(6, this->target_game_server_ip(), target);
  }

  // optional uint32 target_game_server_port = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->target_game_server_port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCReportAbuse)
  return target;
}

size_t CMsgGCReportAbuse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCReportAbuse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string description = 4;
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional fixed64 target_steam_id = 1;
    if (has_target_steam_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 abuse_type = 2;
    if (has_abuse_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->abuse_type());
    }

    // optional uint32 content_type = 3;
    if (has_content_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->content_type());
    }

    // optional uint64 gid = 5;
    if (has_gid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->gid());
    }

    // optional fixed32 target_game_server_ip = 6;
    if (has_target_game_server_ip()) {
      total_size += 1 + 4;
    }

    // optional uint32 target_game_server_port = 7;
    if (has_target_game_server_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->target_game_server_port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCReportAbuse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCReportAbuse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCReportAbuse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCReportAbuse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCReportAbuse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCReportAbuse)
    MergeFrom(*source);
  }
}

void CMsgGCReportAbuse::MergeFrom(const CMsgGCReportAbuse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCReportAbuse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000002u) {
      target_steam_id_ = from.target_steam_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      abuse_type_ = from.abuse_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      content_type_ = from.content_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      gid_ = from.gid_;
    }
    if (cached_has_bits & 0x00000020u) {
      target_game_server_ip_ = from.target_game_server_ip_;
    }
    if (cached_has_bits & 0x00000040u) {
      target_game_server_port_ = from.target_game_server_port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCReportAbuse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCReportAbuse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCReportAbuse::CopyFrom(const CMsgGCReportAbuse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCReportAbuse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCReportAbuse::IsInitialized() const {
  return true;
}

void CMsgGCReportAbuse::Swap(CMsgGCReportAbuse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCReportAbuse::InternalSwap(CMsgGCReportAbuse* other) {
  using std::swap;
  description_.Swap(&other->description_);
  swap(target_steam_id_, other->target_steam_id_);
  swap(abuse_type_, other->abuse_type_);
  swap(content_type_, other->content_type_);
  swap(gid_, other->gid_);
  swap(target_game_server_ip_, other->target_game_server_ip_);
  swap(target_game_server_port_, other->target_game_server_port_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCReportAbuse::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCReportAbuseResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCReportAbuseResponse::kTargetSteamIdFieldNumber;
const int CMsgGCReportAbuseResponse::kResultFieldNumber;
const int CMsgGCReportAbuseResponse::kErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCReportAbuseResponse::CMsgGCReportAbuseResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCReportAbuseResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCReportAbuseResponse)
}
CMsgGCReportAbuseResponse::CMsgGCReportAbuseResponse(const CMsgGCReportAbuseResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error_message()) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  ::memcpy(&target_steam_id_, &from.target_steam_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&target_steam_id_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCReportAbuseResponse)
}

void CMsgGCReportAbuseResponse::SharedCtor() {
  _cached_size_ = 0;
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&target_steam_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&target_steam_id_)) + sizeof(result_));
}

CMsgGCReportAbuseResponse::~CMsgGCReportAbuseResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCReportAbuseResponse)
  SharedDtor();
}

void CMsgGCReportAbuseResponse::SharedDtor() {
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCReportAbuseResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCReportAbuseResponse::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCReportAbuseResponse& CMsgGCReportAbuseResponse::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCReportAbuseResponse();
  return *internal_default_instance();
}

CMsgGCReportAbuseResponse* CMsgGCReportAbuseResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCReportAbuseResponse* n = new CMsgGCReportAbuseResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCReportAbuseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCReportAbuseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!error_message_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*error_message_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&target_steam_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&result_) -
        reinterpret_cast<char*>(&target_steam_id_)) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCReportAbuseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCReportAbuseResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 target_steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_target_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &target_steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error_message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCReportAbuseResponse.error_message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCReportAbuseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCReportAbuseResponse)
  return false;
#undef DO_
}

void CMsgGCReportAbuseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCReportAbuseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 target_steam_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->target_steam_id(), output);
  }

  // optional uint32 result = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->result(), output);
  }

  // optional string error_message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCReportAbuseResponse.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error_message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCReportAbuseResponse)
}

::google::protobuf::uint8* CMsgGCReportAbuseResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCReportAbuseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 target_steam_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->target_steam_id(), target);
  }

  // optional uint32 result = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->result(), target);
  }

  // optional string error_message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCReportAbuseResponse.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error_message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCReportAbuseResponse)
  return target;
}

size_t CMsgGCReportAbuseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCReportAbuseResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string error_message = 3;
    if (has_error_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error_message());
    }

    // optional fixed64 target_steam_id = 1;
    if (has_target_steam_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCReportAbuseResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCReportAbuseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCReportAbuseResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCReportAbuseResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCReportAbuseResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCReportAbuseResponse)
    MergeFrom(*source);
  }
}

void CMsgGCReportAbuseResponse::MergeFrom(const CMsgGCReportAbuseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCReportAbuseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_error_message();
      error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
    }
    if (cached_has_bits & 0x00000002u) {
      target_steam_id_ = from.target_steam_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCReportAbuseResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCReportAbuseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCReportAbuseResponse::CopyFrom(const CMsgGCReportAbuseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCReportAbuseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCReportAbuseResponse::IsInitialized() const {
  return true;
}

void CMsgGCReportAbuseResponse::Swap(CMsgGCReportAbuseResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCReportAbuseResponse::InternalSwap(CMsgGCReportAbuseResponse* other) {
  using std::swap;
  error_message_.Swap(&other->error_message_);
  swap(target_steam_id_, other->target_steam_id_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCReportAbuseResponse::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCNameItemNotification::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCNameItemNotification::kPlayerSteamidFieldNumber;
const int CMsgGCNameItemNotification::kItemDefIndexFieldNumber;
const int CMsgGCNameItemNotification::kItemNameCustomFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCNameItemNotification::CMsgGCNameItemNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCNameItemNotification();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCNameItemNotification)
}
CMsgGCNameItemNotification::CMsgGCNameItemNotification(const CMsgGCNameItemNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  item_name_custom_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_item_name_custom()) {
    item_name_custom_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_name_custom_);
  }
  ::memcpy(&player_steamid_, &from.player_steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&item_def_index_) -
    reinterpret_cast<char*>(&player_steamid_)) + sizeof(item_def_index_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCNameItemNotification)
}

void CMsgGCNameItemNotification::SharedCtor() {
  _cached_size_ = 0;
  item_name_custom_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_def_index_) -
      reinterpret_cast<char*>(&player_steamid_)) + sizeof(item_def_index_));
}

CMsgGCNameItemNotification::~CMsgGCNameItemNotification() {
  // @@protoc_insertion_point(destructor:CMsgGCNameItemNotification)
  SharedDtor();
}

void CMsgGCNameItemNotification::SharedDtor() {
  item_name_custom_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCNameItemNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCNameItemNotification::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCNameItemNotification& CMsgGCNameItemNotification::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCNameItemNotification();
  return *internal_default_instance();
}

CMsgGCNameItemNotification* CMsgGCNameItemNotification::New(::google::protobuf::Arena* arena) const {
  CMsgGCNameItemNotification* n = new CMsgGCNameItemNotification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCNameItemNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCNameItemNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!item_name_custom_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*item_name_custom_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&player_steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&item_def_index_) -
        reinterpret_cast<char*>(&player_steamid_)) + sizeof(item_def_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCNameItemNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCNameItemNotification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 player_steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_player_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &player_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 item_def_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_item_def_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string item_name_custom = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_name_custom()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_name_custom().data(), static_cast<int>(this->item_name_custom().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCNameItemNotification.item_name_custom");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCNameItemNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCNameItemNotification)
  return false;
#undef DO_
}

void CMsgGCNameItemNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCNameItemNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 player_steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->player_steamid(), output);
  }

  // optional uint32 item_def_index = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->item_def_index(), output);
  }

  // optional string item_name_custom = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_name_custom().data(), static_cast<int>(this->item_name_custom().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCNameItemNotification.item_name_custom");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->item_name_custom(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCNameItemNotification)
}

::google::protobuf::uint8* CMsgGCNameItemNotification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCNameItemNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 player_steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->player_steamid(), target);
  }

  // optional uint32 item_def_index = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->item_def_index(), target);
  }

  // optional string item_name_custom = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_name_custom().data(), static_cast<int>(this->item_name_custom().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCNameItemNotification.item_name_custom");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->item_name_custom(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCNameItemNotification)
  return target;
}

size_t CMsgGCNameItemNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCNameItemNotification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string item_name_custom = 3;
    if (has_item_name_custom()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_name_custom());
    }

    // optional fixed64 player_steamid = 1;
    if (has_player_steamid()) {
      total_size += 1 + 8;
    }

    // optional uint32 item_def_index = 2;
    if (has_item_def_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCNameItemNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCNameItemNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCNameItemNotification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCNameItemNotification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCNameItemNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCNameItemNotification)
    MergeFrom(*source);
  }
}

void CMsgGCNameItemNotification::MergeFrom(const CMsgGCNameItemNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCNameItemNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_item_name_custom();
      item_name_custom_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_name_custom_);
    }
    if (cached_has_bits & 0x00000002u) {
      player_steamid_ = from.player_steamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      item_def_index_ = from.item_def_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCNameItemNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCNameItemNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCNameItemNotification::CopyFrom(const CMsgGCNameItemNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCNameItemNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCNameItemNotification::IsInitialized() const {
  return true;
}

void CMsgGCNameItemNotification::Swap(CMsgGCNameItemNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCNameItemNotification::InternalSwap(CMsgGCNameItemNotification* other) {
  using std::swap;
  item_name_custom_.Swap(&other->item_name_custom_);
  swap(player_steamid_, other->player_steamid_);
  swap(item_def_index_, other->item_def_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCNameItemNotification::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCClientDisplayNotification::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCClientDisplayNotification::kNotificationTitleLocalizationKeyFieldNumber;
const int CMsgGCClientDisplayNotification::kNotificationBodyLocalizationKeyFieldNumber;
const int CMsgGCClientDisplayNotification::kBodySubstringKeysFieldNumber;
const int CMsgGCClientDisplayNotification::kBodySubstringValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCClientDisplayNotification::CMsgGCClientDisplayNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCClientDisplayNotification();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCClientDisplayNotification)
}
CMsgGCClientDisplayNotification::CMsgGCClientDisplayNotification(const CMsgGCClientDisplayNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      body_substring_keys_(from.body_substring_keys_),
      body_substring_values_(from.body_substring_values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  notification_title_localization_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_notification_title_localization_key()) {
    notification_title_localization_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.notification_title_localization_key_);
  }
  notification_body_localization_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_notification_body_localization_key()) {
    notification_body_localization_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.notification_body_localization_key_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgGCClientDisplayNotification)
}

void CMsgGCClientDisplayNotification::SharedCtor() {
  _cached_size_ = 0;
  notification_title_localization_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notification_body_localization_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgGCClientDisplayNotification::~CMsgGCClientDisplayNotification() {
  // @@protoc_insertion_point(destructor:CMsgGCClientDisplayNotification)
  SharedDtor();
}

void CMsgGCClientDisplayNotification::SharedDtor() {
  notification_title_localization_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notification_body_localization_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCClientDisplayNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCClientDisplayNotification::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCClientDisplayNotification& CMsgGCClientDisplayNotification::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCClientDisplayNotification();
  return *internal_default_instance();
}

CMsgGCClientDisplayNotification* CMsgGCClientDisplayNotification::New(::google::protobuf::Arena* arena) const {
  CMsgGCClientDisplayNotification* n = new CMsgGCClientDisplayNotification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCClientDisplayNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCClientDisplayNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  body_substring_keys_.Clear();
  body_substring_values_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!notification_title_localization_key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*notification_title_localization_key_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!notification_body_localization_key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*notification_body_localization_key_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCClientDisplayNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCClientDisplayNotification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string notification_title_localization_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_notification_title_localization_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->notification_title_localization_key().data(), static_cast<int>(this->notification_title_localization_key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCClientDisplayNotification.notification_title_localization_key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string notification_body_localization_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_notification_body_localization_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->notification_body_localization_key().data(), static_cast<int>(this->notification_body_localization_key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCClientDisplayNotification.notification_body_localization_key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string body_substring_keys = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_body_substring_keys()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->body_substring_keys(this->body_substring_keys_size() - 1).data(),
            static_cast<int>(this->body_substring_keys(this->body_substring_keys_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCClientDisplayNotification.body_substring_keys");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string body_substring_values = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_body_substring_values()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->body_substring_values(this->body_substring_values_size() - 1).data(),
            static_cast<int>(this->body_substring_values(this->body_substring_values_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCClientDisplayNotification.body_substring_values");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCClientDisplayNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCClientDisplayNotification)
  return false;
#undef DO_
}

void CMsgGCClientDisplayNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCClientDisplayNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string notification_title_localization_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->notification_title_localization_key().data(), static_cast<int>(this->notification_title_localization_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCClientDisplayNotification.notification_title_localization_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->notification_title_localization_key(), output);
  }

  // optional string notification_body_localization_key = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->notification_body_localization_key().data(), static_cast<int>(this->notification_body_localization_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCClientDisplayNotification.notification_body_localization_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->notification_body_localization_key(), output);
  }

  // repeated string body_substring_keys = 3;
  for (int i = 0, n = this->body_substring_keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body_substring_keys(i).data(), static_cast<int>(this->body_substring_keys(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCClientDisplayNotification.body_substring_keys");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->body_substring_keys(i), output);
  }

  // repeated string body_substring_values = 4;
  for (int i = 0, n = this->body_substring_values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body_substring_values(i).data(), static_cast<int>(this->body_substring_values(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCClientDisplayNotification.body_substring_values");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->body_substring_values(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCClientDisplayNotification)
}

::google::protobuf::uint8* CMsgGCClientDisplayNotification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCClientDisplayNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string notification_title_localization_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->notification_title_localization_key().data(), static_cast<int>(this->notification_title_localization_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCClientDisplayNotification.notification_title_localization_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->notification_title_localization_key(), target);
  }

  // optional string notification_body_localization_key = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->notification_body_localization_key().data(), static_cast<int>(this->notification_body_localization_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCClientDisplayNotification.notification_body_localization_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->notification_body_localization_key(), target);
  }

  // repeated string body_substring_keys = 3;
  for (int i = 0, n = this->body_substring_keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body_substring_keys(i).data(), static_cast<int>(this->body_substring_keys(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCClientDisplayNotification.body_substring_keys");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->body_substring_keys(i), target);
  }

  // repeated string body_substring_values = 4;
  for (int i = 0, n = this->body_substring_values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body_substring_values(i).data(), static_cast<int>(this->body_substring_values(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCClientDisplayNotification.body_substring_values");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->body_substring_values(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCClientDisplayNotification)
  return target;
}

size_t CMsgGCClientDisplayNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCClientDisplayNotification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string body_substring_keys = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->body_substring_keys_size());
  for (int i = 0, n = this->body_substring_keys_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->body_substring_keys(i));
  }

  // repeated string body_substring_values = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->body_substring_values_size());
  for (int i = 0, n = this->body_substring_values_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->body_substring_values(i));
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string notification_title_localization_key = 1;
    if (has_notification_title_localization_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->notification_title_localization_key());
    }

    // optional string notification_body_localization_key = 2;
    if (has_notification_body_localization_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->notification_body_localization_key());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCClientDisplayNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCClientDisplayNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCClientDisplayNotification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCClientDisplayNotification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCClientDisplayNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCClientDisplayNotification)
    MergeFrom(*source);
  }
}

void CMsgGCClientDisplayNotification::MergeFrom(const CMsgGCClientDisplayNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCClientDisplayNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  body_substring_keys_.MergeFrom(from.body_substring_keys_);
  body_substring_values_.MergeFrom(from.body_substring_values_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_notification_title_localization_key();
      notification_title_localization_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.notification_title_localization_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_notification_body_localization_key();
      notification_body_localization_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.notification_body_localization_key_);
    }
  }
}

void CMsgGCClientDisplayNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCClientDisplayNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCClientDisplayNotification::CopyFrom(const CMsgGCClientDisplayNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCClientDisplayNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCClientDisplayNotification::IsInitialized() const {
  return true;
}

void CMsgGCClientDisplayNotification::Swap(CMsgGCClientDisplayNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCClientDisplayNotification::InternalSwap(CMsgGCClientDisplayNotification* other) {
  using std::swap;
  body_substring_keys_.InternalSwap(&other->body_substring_keys_);
  body_substring_values_.InternalSwap(&other->body_substring_values_);
  notification_title_localization_key_.Swap(&other->notification_title_localization_key_);
  notification_body_localization_key_.Swap(&other->notification_body_localization_key_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCClientDisplayNotification::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCShowItemsPickedUp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCShowItemsPickedUp::kPlayerSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCShowItemsPickedUp::CMsgGCShowItemsPickedUp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCShowItemsPickedUp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCShowItemsPickedUp)
}
CMsgGCShowItemsPickedUp::CMsgGCShowItemsPickedUp(const CMsgGCShowItemsPickedUp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  player_steamid_ = from.player_steamid_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCShowItemsPickedUp)
}

void CMsgGCShowItemsPickedUp::SharedCtor() {
  _cached_size_ = 0;
  player_steamid_ = GOOGLE_ULONGLONG(0);
}

CMsgGCShowItemsPickedUp::~CMsgGCShowItemsPickedUp() {
  // @@protoc_insertion_point(destructor:CMsgGCShowItemsPickedUp)
  SharedDtor();
}

void CMsgGCShowItemsPickedUp::SharedDtor() {
}

void CMsgGCShowItemsPickedUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCShowItemsPickedUp::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCShowItemsPickedUp& CMsgGCShowItemsPickedUp::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCShowItemsPickedUp();
  return *internal_default_instance();
}

CMsgGCShowItemsPickedUp* CMsgGCShowItemsPickedUp::New(::google::protobuf::Arena* arena) const {
  CMsgGCShowItemsPickedUp* n = new CMsgGCShowItemsPickedUp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCShowItemsPickedUp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCShowItemsPickedUp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_steamid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCShowItemsPickedUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCShowItemsPickedUp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 player_steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_player_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &player_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCShowItemsPickedUp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCShowItemsPickedUp)
  return false;
#undef DO_
}

void CMsgGCShowItemsPickedUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCShowItemsPickedUp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 player_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->player_steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCShowItemsPickedUp)
}

::google::protobuf::uint8* CMsgGCShowItemsPickedUp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCShowItemsPickedUp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 player_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->player_steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCShowItemsPickedUp)
  return target;
}

size_t CMsgGCShowItemsPickedUp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCShowItemsPickedUp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 player_steamid = 1;
  if (has_player_steamid()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCShowItemsPickedUp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCShowItemsPickedUp)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCShowItemsPickedUp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCShowItemsPickedUp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCShowItemsPickedUp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCShowItemsPickedUp)
    MergeFrom(*source);
  }
}

void CMsgGCShowItemsPickedUp::MergeFrom(const CMsgGCShowItemsPickedUp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCShowItemsPickedUp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_player_steamid()) {
    set_player_steamid(from.player_steamid());
  }
}

void CMsgGCShowItemsPickedUp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCShowItemsPickedUp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCShowItemsPickedUp::CopyFrom(const CMsgGCShowItemsPickedUp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCShowItemsPickedUp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCShowItemsPickedUp::IsInitialized() const {
  return true;
}

void CMsgGCShowItemsPickedUp::Swap(CMsgGCShowItemsPickedUp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCShowItemsPickedUp::InternalSwap(CMsgGCShowItemsPickedUp* other) {
  using std::swap;
  swap(player_steamid_, other->player_steamid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCShowItemsPickedUp::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCIncrementKillCountResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCIncrementKillCountResponse::kKillerAccountIdFieldNumber;
const int CMsgGCIncrementKillCountResponse::kNumKillsFieldNumber;
const int CMsgGCIncrementKillCountResponse::kItemDefFieldNumber;
const int CMsgGCIncrementKillCountResponse::kLevelTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCIncrementKillCountResponse::CMsgGCIncrementKillCountResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCIncrementKillCountResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCIncrementKillCountResponse)
}
CMsgGCIncrementKillCountResponse::CMsgGCIncrementKillCountResponse(const CMsgGCIncrementKillCountResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&killer_account_id_, &from.killer_account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_type_) -
    reinterpret_cast<char*>(&killer_account_id_)) + sizeof(level_type_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCIncrementKillCountResponse)
}

void CMsgGCIncrementKillCountResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&killer_account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_type_) -
      reinterpret_cast<char*>(&killer_account_id_)) + sizeof(level_type_));
}

CMsgGCIncrementKillCountResponse::~CMsgGCIncrementKillCountResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCIncrementKillCountResponse)
  SharedDtor();
}

void CMsgGCIncrementKillCountResponse::SharedDtor() {
}

void CMsgGCIncrementKillCountResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCIncrementKillCountResponse::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCIncrementKillCountResponse& CMsgGCIncrementKillCountResponse::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCIncrementKillCountResponse();
  return *internal_default_instance();
}

CMsgGCIncrementKillCountResponse* CMsgGCIncrementKillCountResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCIncrementKillCountResponse* n = new CMsgGCIncrementKillCountResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCIncrementKillCountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCIncrementKillCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&killer_account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&level_type_) -
        reinterpret_cast<char*>(&killer_account_id_)) + sizeof(level_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCIncrementKillCountResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCIncrementKillCountResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 killer_account_id = 1 [(.key_field) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_killer_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &killer_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_kills = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_num_kills();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_kills_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 item_def = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_item_def();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 level_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_level_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCIncrementKillCountResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCIncrementKillCountResponse)
  return false;
#undef DO_
}

void CMsgGCIncrementKillCountResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCIncrementKillCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 killer_account_id = 1 [(.key_field) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->killer_account_id(), output);
  }

  // optional uint32 num_kills = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num_kills(), output);
  }

  // optional uint32 item_def = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->item_def(), output);
  }

  // optional uint32 level_type = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->level_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCIncrementKillCountResponse)
}

::google::protobuf::uint8* CMsgGCIncrementKillCountResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCIncrementKillCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 killer_account_id = 1 [(.key_field) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->killer_account_id(), target);
  }

  // optional uint32 num_kills = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num_kills(), target);
  }

  // optional uint32 item_def = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->item_def(), target);
  }

  // optional uint32 level_type = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->level_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCIncrementKillCountResponse)
  return target;
}

size_t CMsgGCIncrementKillCountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCIncrementKillCountResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 killer_account_id = 1 [(.key_field) = true];
    if (has_killer_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->killer_account_id());
    }

    // optional uint32 num_kills = 2;
    if (has_num_kills()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_kills());
    }

    // optional uint32 item_def = 3;
    if (has_item_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def());
    }

    // optional uint32 level_type = 4;
    if (has_level_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCIncrementKillCountResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCIncrementKillCountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCIncrementKillCountResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCIncrementKillCountResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCIncrementKillCountResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCIncrementKillCountResponse)
    MergeFrom(*source);
  }
}

void CMsgGCIncrementKillCountResponse::MergeFrom(const CMsgGCIncrementKillCountResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCIncrementKillCountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      killer_account_id_ = from.killer_account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      num_kills_ = from.num_kills_;
    }
    if (cached_has_bits & 0x00000004u) {
      item_def_ = from.item_def_;
    }
    if (cached_has_bits & 0x00000008u) {
      level_type_ = from.level_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCIncrementKillCountResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCIncrementKillCountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCIncrementKillCountResponse::CopyFrom(const CMsgGCIncrementKillCountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCIncrementKillCountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCIncrementKillCountResponse::IsInitialized() const {
  return true;
}

void CMsgGCIncrementKillCountResponse::Swap(CMsgGCIncrementKillCountResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCIncrementKillCountResponse::InternalSwap(CMsgGCIncrementKillCountResponse* other) {
  using std::swap;
  swap(killer_account_id_, other->killer_account_id_);
  swap(num_kills_, other->num_kills_);
  swap(item_def_, other->item_def_);
  swap(level_type_, other->level_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCIncrementKillCountResponse::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSOEconItemDropRateBonus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSOEconItemDropRateBonus::kAccountIdFieldNumber;
const int CSOEconItemDropRateBonus::kExpirationDateFieldNumber;
const int CSOEconItemDropRateBonus::kBonusFieldNumber;
const int CSOEconItemDropRateBonus::kBonusCountFieldNumber;
const int CSOEconItemDropRateBonus::kItemIdFieldNumber;
const int CSOEconItemDropRateBonus::kDefIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSOEconItemDropRateBonus::CSOEconItemDropRateBonus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOEconItemDropRateBonus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSOEconItemDropRateBonus)
}
CSOEconItemDropRateBonus::CSOEconItemDropRateBonus(const CSOEconItemDropRateBonus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&def_index_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(def_index_));
  // @@protoc_insertion_point(copy_constructor:CSOEconItemDropRateBonus)
}

void CSOEconItemDropRateBonus::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&def_index_) -
      reinterpret_cast<char*>(&account_id_)) + sizeof(def_index_));
}

CSOEconItemDropRateBonus::~CSOEconItemDropRateBonus() {
  // @@protoc_insertion_point(destructor:CSOEconItemDropRateBonus)
  SharedDtor();
}

void CSOEconItemDropRateBonus::SharedDtor() {
}

void CSOEconItemDropRateBonus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSOEconItemDropRateBonus::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSOEconItemDropRateBonus& CSOEconItemDropRateBonus::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOEconItemDropRateBonus();
  return *internal_default_instance();
}

CSOEconItemDropRateBonus* CSOEconItemDropRateBonus::New(::google::protobuf::Arena* arena) const {
  CSOEconItemDropRateBonus* n = new CSOEconItemDropRateBonus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CSOEconItemDropRateBonus::Clear() {
// @@protoc_insertion_point(message_clear_start:CSOEconItemDropRateBonus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&def_index_) -
        reinterpret_cast<char*>(&account_id_)) + sizeof(def_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSOEconItemDropRateBonus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSOEconItemDropRateBonus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 expiration_date = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_expiration_date();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &expiration_date_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float bonus = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_bonus();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bonus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 bonus_count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_bonus_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bonus_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 item_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 def_index = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_def_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &def_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSOEconItemDropRateBonus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSOEconItemDropRateBonus)
  return false;
#undef DO_
}

void CSOEconItemDropRateBonus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSOEconItemDropRateBonus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional fixed32 expiration_date = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->expiration_date(), output);
  }

  // optional float bonus = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->bonus(), output);
  }

  // optional uint32 bonus_count = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->bonus_count(), output);
  }

  // optional uint64 item_id = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->item_id(), output);
  }

  // optional uint32 def_index = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->def_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSOEconItemDropRateBonus)
}

::google::protobuf::uint8* CSOEconItemDropRateBonus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSOEconItemDropRateBonus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional fixed32 expiration_date = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->expiration_date(), target);
  }

  // optional float bonus = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->bonus(), target);
  }

  // optional uint32 bonus_count = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->bonus_count(), target);
  }

  // optional uint64 item_id = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->item_id(), target);
  }

  // optional uint32 def_index = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->def_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSOEconItemDropRateBonus)
  return target;
}

size_t CSOEconItemDropRateBonus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSOEconItemDropRateBonus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional fixed32 expiration_date = 2;
    if (has_expiration_date()) {
      total_size += 1 + 4;
    }

    // optional float bonus = 3;
    if (has_bonus()) {
      total_size += 1 + 4;
    }

    // optional uint32 bonus_count = 4;
    if (has_bonus_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bonus_count());
    }

    // optional uint64 item_id = 5;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 def_index = 6;
    if (has_def_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->def_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSOEconItemDropRateBonus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSOEconItemDropRateBonus)
  GOOGLE_DCHECK_NE(&from, this);
  const CSOEconItemDropRateBonus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSOEconItemDropRateBonus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSOEconItemDropRateBonus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSOEconItemDropRateBonus)
    MergeFrom(*source);
  }
}

void CSOEconItemDropRateBonus::MergeFrom(const CSOEconItemDropRateBonus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSOEconItemDropRateBonus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      expiration_date_ = from.expiration_date_;
    }
    if (cached_has_bits & 0x00000004u) {
      bonus_ = from.bonus_;
    }
    if (cached_has_bits & 0x00000008u) {
      bonus_count_ = from.bonus_count_;
    }
    if (cached_has_bits & 0x00000010u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      def_index_ = from.def_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSOEconItemDropRateBonus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSOEconItemDropRateBonus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSOEconItemDropRateBonus::CopyFrom(const CSOEconItemDropRateBonus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSOEconItemDropRateBonus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSOEconItemDropRateBonus::IsInitialized() const {
  return true;
}

void CSOEconItemDropRateBonus::Swap(CSOEconItemDropRateBonus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSOEconItemDropRateBonus::InternalSwap(CSOEconItemDropRateBonus* other) {
  using std::swap;
  swap(account_id_, other->account_id_);
  swap(expiration_date_, other->expiration_date_);
  swap(bonus_, other->bonus_);
  swap(bonus_count_, other->bonus_count_);
  swap(item_id_, other->item_id_);
  swap(def_index_, other->def_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CSOEconItemDropRateBonus::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSOEconItemLeagueViewPass::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSOEconItemLeagueViewPass::kAccountIdFieldNumber;
const int CSOEconItemLeagueViewPass::kLeagueIdFieldNumber;
const int CSOEconItemLeagueViewPass::kAdminFieldNumber;
const int CSOEconItemLeagueViewPass::kItemindexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSOEconItemLeagueViewPass::CSOEconItemLeagueViewPass()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOEconItemLeagueViewPass();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSOEconItemLeagueViewPass)
}
CSOEconItemLeagueViewPass::CSOEconItemLeagueViewPass(const CSOEconItemLeagueViewPass& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&itemindex_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(itemindex_));
  // @@protoc_insertion_point(copy_constructor:CSOEconItemLeagueViewPass)
}

void CSOEconItemLeagueViewPass::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&itemindex_) -
      reinterpret_cast<char*>(&account_id_)) + sizeof(itemindex_));
}

CSOEconItemLeagueViewPass::~CSOEconItemLeagueViewPass() {
  // @@protoc_insertion_point(destructor:CSOEconItemLeagueViewPass)
  SharedDtor();
}

void CSOEconItemLeagueViewPass::SharedDtor() {
}

void CSOEconItemLeagueViewPass::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSOEconItemLeagueViewPass::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSOEconItemLeagueViewPass& CSOEconItemLeagueViewPass::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOEconItemLeagueViewPass();
  return *internal_default_instance();
}

CSOEconItemLeagueViewPass* CSOEconItemLeagueViewPass::New(::google::protobuf::Arena* arena) const {
  CSOEconItemLeagueViewPass* n = new CSOEconItemLeagueViewPass;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CSOEconItemLeagueViewPass::Clear() {
// @@protoc_insertion_point(message_clear_start:CSOEconItemLeagueViewPass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&itemindex_) -
        reinterpret_cast<char*>(&account_id_)) + sizeof(itemindex_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSOEconItemLeagueViewPass::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSOEconItemLeagueViewPass)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1 [(.key_field) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 league_id = 2 [(.key_field) = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_league_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &league_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 admin = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_admin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &admin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 itemindex = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_itemindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSOEconItemLeagueViewPass)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSOEconItemLeagueViewPass)
  return false;
#undef DO_
}

void CSOEconItemLeagueViewPass::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSOEconItemLeagueViewPass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1 [(.key_field) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint32 league_id = 2 [(.key_field) = true];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->league_id(), output);
  }

  // optional uint32 admin = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->admin(), output);
  }

  // optional uint32 itemindex = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->itemindex(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSOEconItemLeagueViewPass)
}

::google::protobuf::uint8* CSOEconItemLeagueViewPass::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSOEconItemLeagueViewPass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1 [(.key_field) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint32 league_id = 2 [(.key_field) = true];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->league_id(), target);
  }

  // optional uint32 admin = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->admin(), target);
  }

  // optional uint32 itemindex = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->itemindex(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSOEconItemLeagueViewPass)
  return target;
}

size_t CSOEconItemLeagueViewPass::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSOEconItemLeagueViewPass)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 account_id = 1 [(.key_field) = true];
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 league_id = 2 [(.key_field) = true];
    if (has_league_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->league_id());
    }

    // optional uint32 admin = 3;
    if (has_admin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->admin());
    }

    // optional uint32 itemindex = 4;
    if (has_itemindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemindex());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSOEconItemLeagueViewPass::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSOEconItemLeagueViewPass)
  GOOGLE_DCHECK_NE(&from, this);
  const CSOEconItemLeagueViewPass* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSOEconItemLeagueViewPass>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSOEconItemLeagueViewPass)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSOEconItemLeagueViewPass)
    MergeFrom(*source);
  }
}

void CSOEconItemLeagueViewPass::MergeFrom(const CSOEconItemLeagueViewPass& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSOEconItemLeagueViewPass)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      league_id_ = from.league_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      admin_ = from.admin_;
    }
    if (cached_has_bits & 0x00000008u) {
      itemindex_ = from.itemindex_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSOEconItemLeagueViewPass::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSOEconItemLeagueViewPass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSOEconItemLeagueViewPass::CopyFrom(const CSOEconItemLeagueViewPass& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSOEconItemLeagueViewPass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSOEconItemLeagueViewPass::IsInitialized() const {
  return true;
}

void CSOEconItemLeagueViewPass::Swap(CSOEconItemLeagueViewPass* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSOEconItemLeagueViewPass::InternalSwap(CSOEconItemLeagueViewPass* other) {
  using std::swap;
  swap(account_id_, other->account_id_);
  swap(league_id_, other->league_id_);
  swap(admin_, other->admin_);
  swap(itemindex_, other->itemindex_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CSOEconItemLeagueViewPass::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSOEconItemEventTicket::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSOEconItemEventTicket::kAccountIdFieldNumber;
const int CSOEconItemEventTicket::kEventIdFieldNumber;
const int CSOEconItemEventTicket::kItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSOEconItemEventTicket::CSOEconItemEventTicket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOEconItemEventTicket();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSOEconItemEventTicket)
}
CSOEconItemEventTicket::CSOEconItemEventTicket(const CSOEconItemEventTicket& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&item_id_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(item_id_));
  // @@protoc_insertion_point(copy_constructor:CSOEconItemEventTicket)
}

void CSOEconItemEventTicket::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_id_) -
      reinterpret_cast<char*>(&account_id_)) + sizeof(item_id_));
}

CSOEconItemEventTicket::~CSOEconItemEventTicket() {
  // @@protoc_insertion_point(destructor:CSOEconItemEventTicket)
  SharedDtor();
}

void CSOEconItemEventTicket::SharedDtor() {
}

void CSOEconItemEventTicket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSOEconItemEventTicket::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSOEconItemEventTicket& CSOEconItemEventTicket::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOEconItemEventTicket();
  return *internal_default_instance();
}

CSOEconItemEventTicket* CSOEconItemEventTicket::New(::google::protobuf::Arena* arena) const {
  CSOEconItemEventTicket* n = new CSOEconItemEventTicket;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CSOEconItemEventTicket::Clear() {
// @@protoc_insertion_point(message_clear_start:CSOEconItemEventTicket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&item_id_) -
        reinterpret_cast<char*>(&account_id_)) + sizeof(item_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSOEconItemEventTicket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSOEconItemEventTicket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 event_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_event_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &event_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 item_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSOEconItemEventTicket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSOEconItemEventTicket)
  return false;
#undef DO_
}

void CSOEconItemEventTicket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSOEconItemEventTicket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint32 event_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->event_id(), output);
  }

  // optional uint64 item_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSOEconItemEventTicket)
}

::google::protobuf::uint8* CSOEconItemEventTicket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSOEconItemEventTicket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint32 event_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->event_id(), target);
  }

  // optional uint64 item_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSOEconItemEventTicket)
  return target;
}

size_t CSOEconItemEventTicket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSOEconItemEventTicket)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 event_id = 2;
    if (has_event_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->event_id());
    }

    // optional uint64 item_id = 3;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSOEconItemEventTicket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSOEconItemEventTicket)
  GOOGLE_DCHECK_NE(&from, this);
  const CSOEconItemEventTicket* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSOEconItemEventTicket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSOEconItemEventTicket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSOEconItemEventTicket)
    MergeFrom(*source);
  }
}

void CSOEconItemEventTicket::MergeFrom(const CSOEconItemEventTicket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSOEconItemEventTicket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      event_id_ = from.event_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      item_id_ = from.item_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSOEconItemEventTicket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSOEconItemEventTicket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSOEconItemEventTicket::CopyFrom(const CSOEconItemEventTicket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSOEconItemEventTicket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSOEconItemEventTicket::IsInitialized() const {
  return true;
}

void CSOEconItemEventTicket::Swap(CSOEconItemEventTicket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSOEconItemEventTicket::InternalSwap(CSOEconItemEventTicket* other) {
  using std::swap;
  swap(account_id_, other->account_id_);
  swap(event_id_, other->event_id_);
  swap(item_id_, other->item_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CSOEconItemEventTicket::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCItemPreviewItemBoughtNotification::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCItemPreviewItemBoughtNotification::kItemDefIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCItemPreviewItemBoughtNotification::CMsgGCItemPreviewItemBoughtNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCItemPreviewItemBoughtNotification();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCItemPreviewItemBoughtNotification)
}
CMsgGCItemPreviewItemBoughtNotification::CMsgGCItemPreviewItemBoughtNotification(const CMsgGCItemPreviewItemBoughtNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  item_def_index_ = from.item_def_index_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCItemPreviewItemBoughtNotification)
}

void CMsgGCItemPreviewItemBoughtNotification::SharedCtor() {
  _cached_size_ = 0;
  item_def_index_ = 0u;
}

CMsgGCItemPreviewItemBoughtNotification::~CMsgGCItemPreviewItemBoughtNotification() {
  // @@protoc_insertion_point(destructor:CMsgGCItemPreviewItemBoughtNotification)
  SharedDtor();
}

void CMsgGCItemPreviewItemBoughtNotification::SharedDtor() {
}

void CMsgGCItemPreviewItemBoughtNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCItemPreviewItemBoughtNotification::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCItemPreviewItemBoughtNotification& CMsgGCItemPreviewItemBoughtNotification::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCItemPreviewItemBoughtNotification();
  return *internal_default_instance();
}

CMsgGCItemPreviewItemBoughtNotification* CMsgGCItemPreviewItemBoughtNotification::New(::google::protobuf::Arena* arena) const {
  CMsgGCItemPreviewItemBoughtNotification* n = new CMsgGCItemPreviewItemBoughtNotification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCItemPreviewItemBoughtNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCItemPreviewItemBoughtNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_def_index_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCItemPreviewItemBoughtNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCItemPreviewItemBoughtNotification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 item_def_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_item_def_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCItemPreviewItemBoughtNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCItemPreviewItemBoughtNotification)
  return false;
#undef DO_
}

void CMsgGCItemPreviewItemBoughtNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCItemPreviewItemBoughtNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def_index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_def_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCItemPreviewItemBoughtNotification)
}

::google::protobuf::uint8* CMsgGCItemPreviewItemBoughtNotification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCItemPreviewItemBoughtNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_def_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCItemPreviewItemBoughtNotification)
  return target;
}

size_t CMsgGCItemPreviewItemBoughtNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCItemPreviewItemBoughtNotification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 item_def_index = 1;
  if (has_item_def_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_def_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCItemPreviewItemBoughtNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCItemPreviewItemBoughtNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCItemPreviewItemBoughtNotification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCItemPreviewItemBoughtNotification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCItemPreviewItemBoughtNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCItemPreviewItemBoughtNotification)
    MergeFrom(*source);
  }
}

void CMsgGCItemPreviewItemBoughtNotification::MergeFrom(const CMsgGCItemPreviewItemBoughtNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCItemPreviewItemBoughtNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item_def_index()) {
    set_item_def_index(from.item_def_index());
  }
}

void CMsgGCItemPreviewItemBoughtNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCItemPreviewItemBoughtNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCItemPreviewItemBoughtNotification::CopyFrom(const CMsgGCItemPreviewItemBoughtNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCItemPreviewItemBoughtNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCItemPreviewItemBoughtNotification::IsInitialized() const {
  return true;
}

void CMsgGCItemPreviewItemBoughtNotification::Swap(CMsgGCItemPreviewItemBoughtNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCItemPreviewItemBoughtNotification::InternalSwap(CMsgGCItemPreviewItemBoughtNotification* other) {
  using std::swap;
  swap(item_def_index_, other->item_def_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCItemPreviewItemBoughtNotification::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCStorePurchaseCancel::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCStorePurchaseCancel::kTxnIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCStorePurchaseCancel::CMsgGCStorePurchaseCancel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCStorePurchaseCancel();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCStorePurchaseCancel)
}
CMsgGCStorePurchaseCancel::CMsgGCStorePurchaseCancel(const CMsgGCStorePurchaseCancel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  txn_id_ = from.txn_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCStorePurchaseCancel)
}

void CMsgGCStorePurchaseCancel::SharedCtor() {
  _cached_size_ = 0;
  txn_id_ = GOOGLE_ULONGLONG(0);
}

CMsgGCStorePurchaseCancel::~CMsgGCStorePurchaseCancel() {
  // @@protoc_insertion_point(destructor:CMsgGCStorePurchaseCancel)
  SharedDtor();
}

void CMsgGCStorePurchaseCancel::SharedDtor() {
}

void CMsgGCStorePurchaseCancel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCStorePurchaseCancel::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCStorePurchaseCancel& CMsgGCStorePurchaseCancel::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCStorePurchaseCancel();
  return *internal_default_instance();
}

CMsgGCStorePurchaseCancel* CMsgGCStorePurchaseCancel::New(::google::protobuf::Arena* arena) const {
  CMsgGCStorePurchaseCancel* n = new CMsgGCStorePurchaseCancel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCStorePurchaseCancel::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCStorePurchaseCancel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  txn_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCStorePurchaseCancel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCStorePurchaseCancel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 txn_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_txn_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &txn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCStorePurchaseCancel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCStorePurchaseCancel)
  return false;
#undef DO_
}

void CMsgGCStorePurchaseCancel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCStorePurchaseCancel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 txn_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->txn_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCStorePurchaseCancel)
}

::google::protobuf::uint8* CMsgGCStorePurchaseCancel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCStorePurchaseCancel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 txn_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->txn_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCStorePurchaseCancel)
  return target;
}

size_t CMsgGCStorePurchaseCancel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCStorePurchaseCancel)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint64 txn_id = 1;
  if (has_txn_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->txn_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCStorePurchaseCancel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCStorePurchaseCancel)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCStorePurchaseCancel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCStorePurchaseCancel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCStorePurchaseCancel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCStorePurchaseCancel)
    MergeFrom(*source);
  }
}

void CMsgGCStorePurchaseCancel::MergeFrom(const CMsgGCStorePurchaseCancel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCStorePurchaseCancel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_txn_id()) {
    set_txn_id(from.txn_id());
  }
}

void CMsgGCStorePurchaseCancel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCStorePurchaseCancel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCStorePurchaseCancel::CopyFrom(const CMsgGCStorePurchaseCancel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCStorePurchaseCancel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCStorePurchaseCancel::IsInitialized() const {
  return true;
}

void CMsgGCStorePurchaseCancel::Swap(CMsgGCStorePurchaseCancel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCStorePurchaseCancel::InternalSwap(CMsgGCStorePurchaseCancel* other) {
  using std::swap;
  swap(txn_id_, other->txn_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCStorePurchaseCancel::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCStorePurchaseCancelResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCStorePurchaseCancelResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCStorePurchaseCancelResponse::CMsgGCStorePurchaseCancelResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCStorePurchaseCancelResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCStorePurchaseCancelResponse)
}
CMsgGCStorePurchaseCancelResponse::CMsgGCStorePurchaseCancelResponse(const CMsgGCStorePurchaseCancelResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCStorePurchaseCancelResponse)
}

void CMsgGCStorePurchaseCancelResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0u;
}

CMsgGCStorePurchaseCancelResponse::~CMsgGCStorePurchaseCancelResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCStorePurchaseCancelResponse)
  SharedDtor();
}

void CMsgGCStorePurchaseCancelResponse::SharedDtor() {
}

void CMsgGCStorePurchaseCancelResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCStorePurchaseCancelResponse::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCStorePurchaseCancelResponse& CMsgGCStorePurchaseCancelResponse::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCStorePurchaseCancelResponse();
  return *internal_default_instance();
}

CMsgGCStorePurchaseCancelResponse* CMsgGCStorePurchaseCancelResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCStorePurchaseCancelResponse* n = new CMsgGCStorePurchaseCancelResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCStorePurchaseCancelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCStorePurchaseCancelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCStorePurchaseCancelResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCStorePurchaseCancelResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCStorePurchaseCancelResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCStorePurchaseCancelResponse)
  return false;
#undef DO_
}

void CMsgGCStorePurchaseCancelResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCStorePurchaseCancelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCStorePurchaseCancelResponse)
}

::google::protobuf::uint8* CMsgGCStorePurchaseCancelResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCStorePurchaseCancelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCStorePurchaseCancelResponse)
  return target;
}

size_t CMsgGCStorePurchaseCancelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCStorePurchaseCancelResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCStorePurchaseCancelResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCStorePurchaseCancelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCStorePurchaseCancelResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCStorePurchaseCancelResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCStorePurchaseCancelResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCStorePurchaseCancelResponse)
    MergeFrom(*source);
  }
}

void CMsgGCStorePurchaseCancelResponse::MergeFrom(const CMsgGCStorePurchaseCancelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCStorePurchaseCancelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void CMsgGCStorePurchaseCancelResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCStorePurchaseCancelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCStorePurchaseCancelResponse::CopyFrom(const CMsgGCStorePurchaseCancelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCStorePurchaseCancelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCStorePurchaseCancelResponse::IsInitialized() const {
  return true;
}

void CMsgGCStorePurchaseCancelResponse::Swap(CMsgGCStorePurchaseCancelResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCStorePurchaseCancelResponse::InternalSwap(CMsgGCStorePurchaseCancelResponse* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCStorePurchaseCancelResponse::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCStorePurchaseFinalize::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCStorePurchaseFinalize::kTxnIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCStorePurchaseFinalize::CMsgGCStorePurchaseFinalize()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCStorePurchaseFinalize();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCStorePurchaseFinalize)
}
CMsgGCStorePurchaseFinalize::CMsgGCStorePurchaseFinalize(const CMsgGCStorePurchaseFinalize& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  txn_id_ = from.txn_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCStorePurchaseFinalize)
}

void CMsgGCStorePurchaseFinalize::SharedCtor() {
  _cached_size_ = 0;
  txn_id_ = GOOGLE_ULONGLONG(0);
}

CMsgGCStorePurchaseFinalize::~CMsgGCStorePurchaseFinalize() {
  // @@protoc_insertion_point(destructor:CMsgGCStorePurchaseFinalize)
  SharedDtor();
}

void CMsgGCStorePurchaseFinalize::SharedDtor() {
}

void CMsgGCStorePurchaseFinalize::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCStorePurchaseFinalize::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCStorePurchaseFinalize& CMsgGCStorePurchaseFinalize::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCStorePurchaseFinalize();
  return *internal_default_instance();
}

CMsgGCStorePurchaseFinalize* CMsgGCStorePurchaseFinalize::New(::google::protobuf::Arena* arena) const {
  CMsgGCStorePurchaseFinalize* n = new CMsgGCStorePurchaseFinalize;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCStorePurchaseFinalize::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCStorePurchaseFinalize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  txn_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCStorePurchaseFinalize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCStorePurchaseFinalize)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 txn_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_txn_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &txn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCStorePurchaseFinalize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCStorePurchaseFinalize)
  return false;
#undef DO_
}

void CMsgGCStorePurchaseFinalize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCStorePurchaseFinalize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 txn_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->txn_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCStorePurchaseFinalize)
}

::google::protobuf::uint8* CMsgGCStorePurchaseFinalize::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCStorePurchaseFinalize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 txn_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->txn_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCStorePurchaseFinalize)
  return target;
}

size_t CMsgGCStorePurchaseFinalize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCStorePurchaseFinalize)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint64 txn_id = 1;
  if (has_txn_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->txn_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCStorePurchaseFinalize::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCStorePurchaseFinalize)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCStorePurchaseFinalize* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCStorePurchaseFinalize>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCStorePurchaseFinalize)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCStorePurchaseFinalize)
    MergeFrom(*source);
  }
}

void CMsgGCStorePurchaseFinalize::MergeFrom(const CMsgGCStorePurchaseFinalize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCStorePurchaseFinalize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_txn_id()) {
    set_txn_id(from.txn_id());
  }
}

void CMsgGCStorePurchaseFinalize::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCStorePurchaseFinalize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCStorePurchaseFinalize::CopyFrom(const CMsgGCStorePurchaseFinalize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCStorePurchaseFinalize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCStorePurchaseFinalize::IsInitialized() const {
  return true;
}

void CMsgGCStorePurchaseFinalize::Swap(CMsgGCStorePurchaseFinalize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCStorePurchaseFinalize::InternalSwap(CMsgGCStorePurchaseFinalize* other) {
  using std::swap;
  swap(txn_id_, other->txn_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCStorePurchaseFinalize::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCStorePurchaseFinalizeResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCStorePurchaseFinalizeResponse::kResultFieldNumber;
const int CMsgGCStorePurchaseFinalizeResponse::kItemIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCStorePurchaseFinalizeResponse::CMsgGCStorePurchaseFinalizeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCStorePurchaseFinalizeResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCStorePurchaseFinalizeResponse)
}
CMsgGCStorePurchaseFinalizeResponse::CMsgGCStorePurchaseFinalizeResponse(const CMsgGCStorePurchaseFinalizeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      item_ids_(from.item_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCStorePurchaseFinalizeResponse)
}

void CMsgGCStorePurchaseFinalizeResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0u;
}

CMsgGCStorePurchaseFinalizeResponse::~CMsgGCStorePurchaseFinalizeResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCStorePurchaseFinalizeResponse)
  SharedDtor();
}

void CMsgGCStorePurchaseFinalizeResponse::SharedDtor() {
}

void CMsgGCStorePurchaseFinalizeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCStorePurchaseFinalizeResponse::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCStorePurchaseFinalizeResponse& CMsgGCStorePurchaseFinalizeResponse::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCStorePurchaseFinalizeResponse();
  return *internal_default_instance();
}

CMsgGCStorePurchaseFinalizeResponse* CMsgGCStorePurchaseFinalizeResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCStorePurchaseFinalizeResponse* n = new CMsgGCStorePurchaseFinalizeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCStorePurchaseFinalizeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCStorePurchaseFinalizeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_ids_.Clear();
  result_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCStorePurchaseFinalizeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCStorePurchaseFinalizeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 item_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16u, input, this->mutable_item_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCStorePurchaseFinalizeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCStorePurchaseFinalizeResponse)
  return false;
#undef DO_
}

void CMsgGCStorePurchaseFinalizeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCStorePurchaseFinalizeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // repeated uint64 item_ids = 2;
  for (int i = 0, n = this->item_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->item_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCStorePurchaseFinalizeResponse)
}

::google::protobuf::uint8* CMsgGCStorePurchaseFinalizeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCStorePurchaseFinalizeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // repeated uint64 item_ids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(2, this->item_ids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCStorePurchaseFinalizeResponse)
  return target;
}

size_t CMsgGCStorePurchaseFinalizeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCStorePurchaseFinalizeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint64 item_ids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->item_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->item_ids_size());
    total_size += data_size;
  }

  // optional uint32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCStorePurchaseFinalizeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCStorePurchaseFinalizeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCStorePurchaseFinalizeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCStorePurchaseFinalizeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCStorePurchaseFinalizeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCStorePurchaseFinalizeResponse)
    MergeFrom(*source);
  }
}

void CMsgGCStorePurchaseFinalizeResponse::MergeFrom(const CMsgGCStorePurchaseFinalizeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCStorePurchaseFinalizeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_ids_.MergeFrom(from.item_ids_);
  if (from.has_result()) {
    set_result(from.result());
  }
}

void CMsgGCStorePurchaseFinalizeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCStorePurchaseFinalizeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCStorePurchaseFinalizeResponse::CopyFrom(const CMsgGCStorePurchaseFinalizeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCStorePurchaseFinalizeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCStorePurchaseFinalizeResponse::IsInitialized() const {
  return true;
}

void CMsgGCStorePurchaseFinalizeResponse::Swap(CMsgGCStorePurchaseFinalizeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCStorePurchaseFinalizeResponse::InternalSwap(CMsgGCStorePurchaseFinalizeResponse* other) {
  using std::swap;
  item_ids_.InternalSwap(&other->item_ids_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCStorePurchaseFinalizeResponse::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCBannedWordListRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCBannedWordListRequest::kBanListGroupIdFieldNumber;
const int CMsgGCBannedWordListRequest::kWordIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCBannedWordListRequest::CMsgGCBannedWordListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCBannedWordListRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCBannedWordListRequest)
}
CMsgGCBannedWordListRequest::CMsgGCBannedWordListRequest(const CMsgGCBannedWordListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ban_list_group_id_, &from.ban_list_group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&word_id_) -
    reinterpret_cast<char*>(&ban_list_group_id_)) + sizeof(word_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCBannedWordListRequest)
}

void CMsgGCBannedWordListRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&ban_list_group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&word_id_) -
      reinterpret_cast<char*>(&ban_list_group_id_)) + sizeof(word_id_));
}

CMsgGCBannedWordListRequest::~CMsgGCBannedWordListRequest() {
  // @@protoc_insertion_point(destructor:CMsgGCBannedWordListRequest)
  SharedDtor();
}

void CMsgGCBannedWordListRequest::SharedDtor() {
}

void CMsgGCBannedWordListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCBannedWordListRequest::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCBannedWordListRequest& CMsgGCBannedWordListRequest::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCBannedWordListRequest();
  return *internal_default_instance();
}

CMsgGCBannedWordListRequest* CMsgGCBannedWordListRequest::New(::google::protobuf::Arena* arena) const {
  CMsgGCBannedWordListRequest* n = new CMsgGCBannedWordListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCBannedWordListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCBannedWordListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&ban_list_group_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&word_id_) -
        reinterpret_cast<char*>(&ban_list_group_id_)) + sizeof(word_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCBannedWordListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCBannedWordListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ban_list_group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ban_list_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ban_list_group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 word_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_word_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &word_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCBannedWordListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCBannedWordListRequest)
  return false;
#undef DO_
}

void CMsgGCBannedWordListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCBannedWordListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ban_list_group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ban_list_group_id(), output);
  }

  // optional uint32 word_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->word_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCBannedWordListRequest)
}

::google::protobuf::uint8* CMsgGCBannedWordListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCBannedWordListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ban_list_group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ban_list_group_id(), target);
  }

  // optional uint32 word_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->word_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCBannedWordListRequest)
  return target;
}

size_t CMsgGCBannedWordListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCBannedWordListRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 ban_list_group_id = 1;
    if (has_ban_list_group_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ban_list_group_id());
    }

    // optional uint32 word_id = 2;
    if (has_word_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->word_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCBannedWordListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCBannedWordListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCBannedWordListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCBannedWordListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCBannedWordListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCBannedWordListRequest)
    MergeFrom(*source);
  }
}

void CMsgGCBannedWordListRequest::MergeFrom(const CMsgGCBannedWordListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCBannedWordListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      ban_list_group_id_ = from.ban_list_group_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      word_id_ = from.word_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCBannedWordListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCBannedWordListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCBannedWordListRequest::CopyFrom(const CMsgGCBannedWordListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCBannedWordListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCBannedWordListRequest::IsInitialized() const {
  return true;
}

void CMsgGCBannedWordListRequest::Swap(CMsgGCBannedWordListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCBannedWordListRequest::InternalSwap(CMsgGCBannedWordListRequest* other) {
  using std::swap;
  swap(ban_list_group_id_, other->ban_list_group_id_);
  swap(word_id_, other->word_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCBannedWordListRequest::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCRequestAnnouncements::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCRequestAnnouncements::CMsgGCRequestAnnouncements()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCRequestAnnouncements();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCRequestAnnouncements)
}
CMsgGCRequestAnnouncements::CMsgGCRequestAnnouncements(const CMsgGCRequestAnnouncements& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCRequestAnnouncements)
}

void CMsgGCRequestAnnouncements::SharedCtor() {
  _cached_size_ = 0;
}

CMsgGCRequestAnnouncements::~CMsgGCRequestAnnouncements() {
  // @@protoc_insertion_point(destructor:CMsgGCRequestAnnouncements)
  SharedDtor();
}

void CMsgGCRequestAnnouncements::SharedDtor() {
}

void CMsgGCRequestAnnouncements::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCRequestAnnouncements::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCRequestAnnouncements& CMsgGCRequestAnnouncements::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCRequestAnnouncements();
  return *internal_default_instance();
}

CMsgGCRequestAnnouncements* CMsgGCRequestAnnouncements::New(::google::protobuf::Arena* arena) const {
  CMsgGCRequestAnnouncements* n = new CMsgGCRequestAnnouncements;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCRequestAnnouncements::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCRequestAnnouncements)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCRequestAnnouncements::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCRequestAnnouncements)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCRequestAnnouncements)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCRequestAnnouncements)
  return false;
#undef DO_
}

void CMsgGCRequestAnnouncements::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCRequestAnnouncements)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCRequestAnnouncements)
}

::google::protobuf::uint8* CMsgGCRequestAnnouncements::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCRequestAnnouncements)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCRequestAnnouncements)
  return target;
}

size_t CMsgGCRequestAnnouncements::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCRequestAnnouncements)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCRequestAnnouncements::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCRequestAnnouncements)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCRequestAnnouncements* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCRequestAnnouncements>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCRequestAnnouncements)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCRequestAnnouncements)
    MergeFrom(*source);
  }
}

void CMsgGCRequestAnnouncements::MergeFrom(const CMsgGCRequestAnnouncements& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCRequestAnnouncements)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgGCRequestAnnouncements::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCRequestAnnouncements)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRequestAnnouncements::CopyFrom(const CMsgGCRequestAnnouncements& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCRequestAnnouncements)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRequestAnnouncements::IsInitialized() const {
  return true;
}

void CMsgGCRequestAnnouncements::Swap(CMsgGCRequestAnnouncements* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCRequestAnnouncements::InternalSwap(CMsgGCRequestAnnouncements* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCRequestAnnouncements::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCRequestAnnouncementsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCRequestAnnouncementsResponse::kAnnouncementTitleFieldNumber;
const int CMsgGCRequestAnnouncementsResponse::kAnnouncementFieldNumber;
const int CMsgGCRequestAnnouncementsResponse::kNextmatchTitleFieldNumber;
const int CMsgGCRequestAnnouncementsResponse::kNextmatchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCRequestAnnouncementsResponse::CMsgGCRequestAnnouncementsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCRequestAnnouncementsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCRequestAnnouncementsResponse)
}
CMsgGCRequestAnnouncementsResponse::CMsgGCRequestAnnouncementsResponse(const CMsgGCRequestAnnouncementsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  announcement_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_announcement_title()) {
    announcement_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.announcement_title_);
  }
  announcement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_announcement()) {
    announcement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.announcement_);
  }
  nextmatch_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nextmatch_title()) {
    nextmatch_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nextmatch_title_);
  }
  nextmatch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nextmatch()) {
    nextmatch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nextmatch_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgGCRequestAnnouncementsResponse)
}

void CMsgGCRequestAnnouncementsResponse::SharedCtor() {
  _cached_size_ = 0;
  announcement_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  announcement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nextmatch_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nextmatch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgGCRequestAnnouncementsResponse::~CMsgGCRequestAnnouncementsResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCRequestAnnouncementsResponse)
  SharedDtor();
}

void CMsgGCRequestAnnouncementsResponse::SharedDtor() {
  announcement_title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  announcement_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nextmatch_title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nextmatch_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCRequestAnnouncementsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCRequestAnnouncementsResponse::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCRequestAnnouncementsResponse& CMsgGCRequestAnnouncementsResponse::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCRequestAnnouncementsResponse();
  return *internal_default_instance();
}

CMsgGCRequestAnnouncementsResponse* CMsgGCRequestAnnouncementsResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCRequestAnnouncementsResponse* n = new CMsgGCRequestAnnouncementsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCRequestAnnouncementsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCRequestAnnouncementsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!announcement_title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*announcement_title_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!announcement_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*announcement_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!nextmatch_title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nextmatch_title_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!nextmatch_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nextmatch_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCRequestAnnouncementsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCRequestAnnouncementsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string announcement_title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_announcement_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->announcement_title().data(), static_cast<int>(this->announcement_title().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCRequestAnnouncementsResponse.announcement_title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string announcement = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_announcement()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->announcement().data(), static_cast<int>(this->announcement().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCRequestAnnouncementsResponse.announcement");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nextmatch_title = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nextmatch_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nextmatch_title().data(), static_cast<int>(this->nextmatch_title().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCRequestAnnouncementsResponse.nextmatch_title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nextmatch = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nextmatch()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nextmatch().data(), static_cast<int>(this->nextmatch().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCRequestAnnouncementsResponse.nextmatch");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCRequestAnnouncementsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCRequestAnnouncementsResponse)
  return false;
#undef DO_
}

void CMsgGCRequestAnnouncementsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCRequestAnnouncementsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string announcement_title = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->announcement_title().data(), static_cast<int>(this->announcement_title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCRequestAnnouncementsResponse.announcement_title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->announcement_title(), output);
  }

  // optional string announcement = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->announcement().data(), static_cast<int>(this->announcement().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCRequestAnnouncementsResponse.announcement");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->announcement(), output);
  }

  // optional string nextmatch_title = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nextmatch_title().data(), static_cast<int>(this->nextmatch_title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCRequestAnnouncementsResponse.nextmatch_title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nextmatch_title(), output);
  }

  // optional string nextmatch = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nextmatch().data(), static_cast<int>(this->nextmatch().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCRequestAnnouncementsResponse.nextmatch");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->nextmatch(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCRequestAnnouncementsResponse)
}

::google::protobuf::uint8* CMsgGCRequestAnnouncementsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCRequestAnnouncementsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string announcement_title = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->announcement_title().data(), static_cast<int>(this->announcement_title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCRequestAnnouncementsResponse.announcement_title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->announcement_title(), target);
  }

  // optional string announcement = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->announcement().data(), static_cast<int>(this->announcement().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCRequestAnnouncementsResponse.announcement");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->announcement(), target);
  }

  // optional string nextmatch_title = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nextmatch_title().data(), static_cast<int>(this->nextmatch_title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCRequestAnnouncementsResponse.nextmatch_title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nextmatch_title(), target);
  }

  // optional string nextmatch = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nextmatch().data(), static_cast<int>(this->nextmatch().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCRequestAnnouncementsResponse.nextmatch");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->nextmatch(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCRequestAnnouncementsResponse)
  return target;
}

size_t CMsgGCRequestAnnouncementsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCRequestAnnouncementsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string announcement_title = 1;
    if (has_announcement_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->announcement_title());
    }

    // optional string announcement = 2;
    if (has_announcement()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->announcement());
    }

    // optional string nextmatch_title = 3;
    if (has_nextmatch_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nextmatch_title());
    }

    // optional string nextmatch = 4;
    if (has_nextmatch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nextmatch());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCRequestAnnouncementsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCRequestAnnouncementsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCRequestAnnouncementsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCRequestAnnouncementsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCRequestAnnouncementsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCRequestAnnouncementsResponse)
    MergeFrom(*source);
  }
}

void CMsgGCRequestAnnouncementsResponse::MergeFrom(const CMsgGCRequestAnnouncementsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCRequestAnnouncementsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_announcement_title();
      announcement_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.announcement_title_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_announcement();
      announcement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.announcement_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_nextmatch_title();
      nextmatch_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nextmatch_title_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_nextmatch();
      nextmatch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nextmatch_);
    }
  }
}

void CMsgGCRequestAnnouncementsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCRequestAnnouncementsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRequestAnnouncementsResponse::CopyFrom(const CMsgGCRequestAnnouncementsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCRequestAnnouncementsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRequestAnnouncementsResponse::IsInitialized() const {
  return true;
}

void CMsgGCRequestAnnouncementsResponse::Swap(CMsgGCRequestAnnouncementsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCRequestAnnouncementsResponse::InternalSwap(CMsgGCRequestAnnouncementsResponse* other) {
  using std::swap;
  announcement_title_.Swap(&other->announcement_title_);
  announcement_.Swap(&other->announcement_);
  nextmatch_title_.Swap(&other->nextmatch_title_);
  nextmatch_.Swap(&other->nextmatch_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCRequestAnnouncementsResponse::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCBannedWord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCBannedWord::kWordIdFieldNumber;
const int CMsgGCBannedWord::kWordTypeFieldNumber;
const int CMsgGCBannedWord::kWordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCBannedWord::CMsgGCBannedWord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCBannedWord();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCBannedWord)
}
CMsgGCBannedWord::CMsgGCBannedWord(const CMsgGCBannedWord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  word_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_word()) {
    word_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.word_);
  }
  ::memcpy(&word_id_, &from.word_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&word_type_) -
    reinterpret_cast<char*>(&word_id_)) + sizeof(word_type_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCBannedWord)
}

void CMsgGCBannedWord::SharedCtor() {
  _cached_size_ = 0;
  word_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&word_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&word_type_) -
      reinterpret_cast<char*>(&word_id_)) + sizeof(word_type_));
}

CMsgGCBannedWord::~CMsgGCBannedWord() {
  // @@protoc_insertion_point(destructor:CMsgGCBannedWord)
  SharedDtor();
}

void CMsgGCBannedWord::SharedDtor() {
  word_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCBannedWord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCBannedWord::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCBannedWord& CMsgGCBannedWord::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCBannedWord();
  return *internal_default_instance();
}

CMsgGCBannedWord* CMsgGCBannedWord::New(::google::protobuf::Arena* arena) const {
  CMsgGCBannedWord* n = new CMsgGCBannedWord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCBannedWord::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCBannedWord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!word_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*word_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&word_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&word_type_) -
        reinterpret_cast<char*>(&word_id_)) + sizeof(word_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCBannedWord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCBannedWord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 word_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_word_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &word_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .GC_BannedWordType word_type = 2 [default = GC_BANNED_WORD_DISABLE_WORD];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::GC_BannedWordType_IsValid(value)) {
            set_word_type(static_cast< ::GC_BannedWordType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string word = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_word()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->word().data(), static_cast<int>(this->word().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCBannedWord.word");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCBannedWord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCBannedWord)
  return false;
#undef DO_
}

void CMsgGCBannedWord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCBannedWord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 word_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->word_id(), output);
  }

  // optional .GC_BannedWordType word_type = 2 [default = GC_BANNED_WORD_DISABLE_WORD];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->word_type(), output);
  }

  // optional string word = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->word().data(), static_cast<int>(this->word().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCBannedWord.word");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->word(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCBannedWord)
}

::google::protobuf::uint8* CMsgGCBannedWord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCBannedWord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 word_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->word_id(), target);
  }

  // optional .GC_BannedWordType word_type = 2 [default = GC_BANNED_WORD_DISABLE_WORD];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->word_type(), target);
  }

  // optional string word = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->word().data(), static_cast<int>(this->word().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCBannedWord.word");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->word(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCBannedWord)
  return target;
}

size_t CMsgGCBannedWord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCBannedWord)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string word = 3;
    if (has_word()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->word());
    }

    // optional uint32 word_id = 1;
    if (has_word_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->word_id());
    }

    // optional .GC_BannedWordType word_type = 2 [default = GC_BANNED_WORD_DISABLE_WORD];
    if (has_word_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->word_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCBannedWord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCBannedWord)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCBannedWord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCBannedWord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCBannedWord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCBannedWord)
    MergeFrom(*source);
  }
}

void CMsgGCBannedWord::MergeFrom(const CMsgGCBannedWord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCBannedWord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_word();
      word_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.word_);
    }
    if (cached_has_bits & 0x00000002u) {
      word_id_ = from.word_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      word_type_ = from.word_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCBannedWord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCBannedWord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCBannedWord::CopyFrom(const CMsgGCBannedWord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCBannedWord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCBannedWord::IsInitialized() const {
  return true;
}

void CMsgGCBannedWord::Swap(CMsgGCBannedWord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCBannedWord::InternalSwap(CMsgGCBannedWord* other) {
  using std::swap;
  word_.Swap(&other->word_);
  swap(word_id_, other->word_id_);
  swap(word_type_, other->word_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCBannedWord::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCBannedWordListResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCBannedWordListResponse::kBanListGroupIdFieldNumber;
const int CMsgGCBannedWordListResponse::kWordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCBannedWordListResponse::CMsgGCBannedWordListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCBannedWordListResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCBannedWordListResponse)
}
CMsgGCBannedWordListResponse::CMsgGCBannedWordListResponse(const CMsgGCBannedWordListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      word_list_(from.word_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ban_list_group_id_ = from.ban_list_group_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCBannedWordListResponse)
}

void CMsgGCBannedWordListResponse::SharedCtor() {
  _cached_size_ = 0;
  ban_list_group_id_ = 0u;
}

CMsgGCBannedWordListResponse::~CMsgGCBannedWordListResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCBannedWordListResponse)
  SharedDtor();
}

void CMsgGCBannedWordListResponse::SharedDtor() {
}

void CMsgGCBannedWordListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCBannedWordListResponse::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCBannedWordListResponse& CMsgGCBannedWordListResponse::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCBannedWordListResponse();
  return *internal_default_instance();
}

CMsgGCBannedWordListResponse* CMsgGCBannedWordListResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCBannedWordListResponse* n = new CMsgGCBannedWordListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCBannedWordListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCBannedWordListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  word_list_.Clear();
  ban_list_group_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCBannedWordListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCBannedWordListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ban_list_group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ban_list_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ban_list_group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgGCBannedWord word_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_word_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCBannedWordListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCBannedWordListResponse)
  return false;
#undef DO_
}

void CMsgGCBannedWordListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCBannedWordListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ban_list_group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ban_list_group_id(), output);
  }

  // repeated .CMsgGCBannedWord word_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->word_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->word_list(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCBannedWordListResponse)
}

::google::protobuf::uint8* CMsgGCBannedWordListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCBannedWordListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ban_list_group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ban_list_group_id(), target);
  }

  // repeated .CMsgGCBannedWord word_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->word_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->word_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCBannedWordListResponse)
  return target;
}

size_t CMsgGCBannedWordListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCBannedWordListResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgGCBannedWord word_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->word_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->word_list(static_cast<int>(i)));
    }
  }

  // optional uint32 ban_list_group_id = 1;
  if (has_ban_list_group_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ban_list_group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCBannedWordListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCBannedWordListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCBannedWordListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCBannedWordListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCBannedWordListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCBannedWordListResponse)
    MergeFrom(*source);
  }
}

void CMsgGCBannedWordListResponse::MergeFrom(const CMsgGCBannedWordListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCBannedWordListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  word_list_.MergeFrom(from.word_list_);
  if (from.has_ban_list_group_id()) {
    set_ban_list_group_id(from.ban_list_group_id());
  }
}

void CMsgGCBannedWordListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCBannedWordListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCBannedWordListResponse::CopyFrom(const CMsgGCBannedWordListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCBannedWordListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCBannedWordListResponse::IsInitialized() const {
  return true;
}

void CMsgGCBannedWordListResponse::Swap(CMsgGCBannedWordListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCBannedWordListResponse::InternalSwap(CMsgGCBannedWordListResponse* other) {
  using std::swap;
  word_list_.InternalSwap(&other->word_list_);
  swap(ban_list_group_id_, other->ban_list_group_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCBannedWordListResponse::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCBannedWordListBroadcast::InitAsDefaultInstance() {
  ::_CMsgGCToGCBannedWordListBroadcast_default_instance_._instance.get_mutable()->broadcast_ = const_cast< ::CMsgGCBannedWordListResponse*>(
      ::CMsgGCBannedWordListResponse::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCBannedWordListBroadcast::kBroadcastFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCBannedWordListBroadcast::CMsgGCToGCBannedWordListBroadcast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCToGCBannedWordListBroadcast();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCBannedWordListBroadcast)
}
CMsgGCToGCBannedWordListBroadcast::CMsgGCToGCBannedWordListBroadcast(const CMsgGCToGCBannedWordListBroadcast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_broadcast()) {
    broadcast_ = new ::CMsgGCBannedWordListResponse(*from.broadcast_);
  } else {
    broadcast_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCBannedWordListBroadcast)
}

void CMsgGCToGCBannedWordListBroadcast::SharedCtor() {
  _cached_size_ = 0;
  broadcast_ = NULL;
}

CMsgGCToGCBannedWordListBroadcast::~CMsgGCToGCBannedWordListBroadcast() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCBannedWordListBroadcast)
  SharedDtor();
}

void CMsgGCToGCBannedWordListBroadcast::SharedDtor() {
  if (this != internal_default_instance()) delete broadcast_;
}

void CMsgGCToGCBannedWordListBroadcast::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCBannedWordListBroadcast::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCBannedWordListBroadcast& CMsgGCToGCBannedWordListBroadcast::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCToGCBannedWordListBroadcast();
  return *internal_default_instance();
}

CMsgGCToGCBannedWordListBroadcast* CMsgGCToGCBannedWordListBroadcast::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCBannedWordListBroadcast* n = new CMsgGCToGCBannedWordListBroadcast;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCBannedWordListBroadcast::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToGCBannedWordListBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(broadcast_ != NULL);
    broadcast_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCBannedWordListBroadcast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCBannedWordListBroadcast)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgGCBannedWordListResponse broadcast = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_broadcast()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCBannedWordListBroadcast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCBannedWordListBroadcast)
  return false;
#undef DO_
}

void CMsgGCToGCBannedWordListBroadcast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCBannedWordListBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgGCBannedWordListResponse broadcast = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->broadcast_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCBannedWordListBroadcast)
}

::google::protobuf::uint8* CMsgGCToGCBannedWordListBroadcast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCBannedWordListBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgGCBannedWordListResponse broadcast = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->broadcast_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCBannedWordListBroadcast)
  return target;
}

size_t CMsgGCToGCBannedWordListBroadcast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToGCBannedWordListBroadcast)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .CMsgGCBannedWordListResponse broadcast = 1;
  if (has_broadcast()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->broadcast_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCBannedWordListBroadcast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCToGCBannedWordListBroadcast)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCBannedWordListBroadcast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCBannedWordListBroadcast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCToGCBannedWordListBroadcast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCToGCBannedWordListBroadcast)
    MergeFrom(*source);
  }
}

void CMsgGCToGCBannedWordListBroadcast::MergeFrom(const CMsgGCToGCBannedWordListBroadcast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToGCBannedWordListBroadcast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_broadcast()) {
    mutable_broadcast()->::CMsgGCBannedWordListResponse::MergeFrom(from.broadcast());
  }
}

void CMsgGCToGCBannedWordListBroadcast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCToGCBannedWordListBroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCBannedWordListBroadcast::CopyFrom(const CMsgGCToGCBannedWordListBroadcast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToGCBannedWordListBroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCBannedWordListBroadcast::IsInitialized() const {
  return true;
}

void CMsgGCToGCBannedWordListBroadcast::Swap(CMsgGCToGCBannedWordListBroadcast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCBannedWordListBroadcast::InternalSwap(CMsgGCToGCBannedWordListBroadcast* other) {
  using std::swap;
  swap(broadcast_, other->broadcast_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCBannedWordListBroadcast::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCBannedWordListUpdated::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCBannedWordListUpdated::kGroupIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCBannedWordListUpdated::CMsgGCToGCBannedWordListUpdated()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCToGCBannedWordListUpdated();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCBannedWordListUpdated)
}
CMsgGCToGCBannedWordListUpdated::CMsgGCToGCBannedWordListUpdated(const CMsgGCToGCBannedWordListUpdated& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_id_ = from.group_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCBannedWordListUpdated)
}

void CMsgGCToGCBannedWordListUpdated::SharedCtor() {
  _cached_size_ = 0;
  group_id_ = 0u;
}

CMsgGCToGCBannedWordListUpdated::~CMsgGCToGCBannedWordListUpdated() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCBannedWordListUpdated)
  SharedDtor();
}

void CMsgGCToGCBannedWordListUpdated::SharedDtor() {
}

void CMsgGCToGCBannedWordListUpdated::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCBannedWordListUpdated::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCBannedWordListUpdated& CMsgGCToGCBannedWordListUpdated::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCToGCBannedWordListUpdated();
  return *internal_default_instance();
}

CMsgGCToGCBannedWordListUpdated* CMsgGCToGCBannedWordListUpdated::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCBannedWordListUpdated* n = new CMsgGCToGCBannedWordListUpdated;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCBannedWordListUpdated::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToGCBannedWordListUpdated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCBannedWordListUpdated::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCBannedWordListUpdated)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCBannedWordListUpdated)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCBannedWordListUpdated)
  return false;
#undef DO_
}

void CMsgGCToGCBannedWordListUpdated::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCBannedWordListUpdated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->group_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCBannedWordListUpdated)
}

::google::protobuf::uint8* CMsgGCToGCBannedWordListUpdated::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCBannedWordListUpdated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->group_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCBannedWordListUpdated)
  return target;
}

size_t CMsgGCToGCBannedWordListUpdated::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToGCBannedWordListUpdated)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 group_id = 1;
  if (has_group_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCBannedWordListUpdated::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCToGCBannedWordListUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCBannedWordListUpdated* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCBannedWordListUpdated>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCToGCBannedWordListUpdated)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCToGCBannedWordListUpdated)
    MergeFrom(*source);
  }
}

void CMsgGCToGCBannedWordListUpdated::MergeFrom(const CMsgGCToGCBannedWordListUpdated& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToGCBannedWordListUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_group_id()) {
    set_group_id(from.group_id());
  }
}

void CMsgGCToGCBannedWordListUpdated::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCToGCBannedWordListUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCBannedWordListUpdated::CopyFrom(const CMsgGCToGCBannedWordListUpdated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToGCBannedWordListUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCBannedWordListUpdated::IsInitialized() const {
  return true;
}

void CMsgGCToGCBannedWordListUpdated::Swap(CMsgGCToGCBannedWordListUpdated* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCBannedWordListUpdated::InternalSwap(CMsgGCToGCBannedWordListUpdated* other) {
  using std::swap;
  swap(group_id_, other->group_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCBannedWordListUpdated::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSOEconDefaultEquippedDefinitionInstanceClient::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSOEconDefaultEquippedDefinitionInstanceClient::kAccountIdFieldNumber;
const int CSOEconDefaultEquippedDefinitionInstanceClient::kItemDefinitionFieldNumber;
const int CSOEconDefaultEquippedDefinitionInstanceClient::kClassIdFieldNumber;
const int CSOEconDefaultEquippedDefinitionInstanceClient::kSlotIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSOEconDefaultEquippedDefinitionInstanceClient::CSOEconDefaultEquippedDefinitionInstanceClient()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOEconDefaultEquippedDefinitionInstanceClient();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSOEconDefaultEquippedDefinitionInstanceClient)
}
CSOEconDefaultEquippedDefinitionInstanceClient::CSOEconDefaultEquippedDefinitionInstanceClient(const CSOEconDefaultEquippedDefinitionInstanceClient& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&slot_id_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(slot_id_));
  // @@protoc_insertion_point(copy_constructor:CSOEconDefaultEquippedDefinitionInstanceClient)
}

void CSOEconDefaultEquippedDefinitionInstanceClient::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&slot_id_) -
      reinterpret_cast<char*>(&account_id_)) + sizeof(slot_id_));
}

CSOEconDefaultEquippedDefinitionInstanceClient::~CSOEconDefaultEquippedDefinitionInstanceClient() {
  // @@protoc_insertion_point(destructor:CSOEconDefaultEquippedDefinitionInstanceClient)
  SharedDtor();
}

void CSOEconDefaultEquippedDefinitionInstanceClient::SharedDtor() {
}

void CSOEconDefaultEquippedDefinitionInstanceClient::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSOEconDefaultEquippedDefinitionInstanceClient::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSOEconDefaultEquippedDefinitionInstanceClient& CSOEconDefaultEquippedDefinitionInstanceClient::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCSOEconDefaultEquippedDefinitionInstanceClient();
  return *internal_default_instance();
}

CSOEconDefaultEquippedDefinitionInstanceClient* CSOEconDefaultEquippedDefinitionInstanceClient::New(::google::protobuf::Arena* arena) const {
  CSOEconDefaultEquippedDefinitionInstanceClient* n = new CSOEconDefaultEquippedDefinitionInstanceClient;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CSOEconDefaultEquippedDefinitionInstanceClient::Clear() {
// @@protoc_insertion_point(message_clear_start:CSOEconDefaultEquippedDefinitionInstanceClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&slot_id_) -
        reinterpret_cast<char*>(&account_id_)) + sizeof(slot_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CSOEconDefaultEquippedDefinitionInstanceClient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSOEconDefaultEquippedDefinitionInstanceClient)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1 [(.key_field) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 item_definition = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_item_definition();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_definition_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 class_id = 3 [(.key_field) = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_class_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &class_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 slot_id = 4 [(.key_field) = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_slot_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSOEconDefaultEquippedDefinitionInstanceClient)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSOEconDefaultEquippedDefinitionInstanceClient)
  return false;
#undef DO_
}

void CSOEconDefaultEquippedDefinitionInstanceClient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSOEconDefaultEquippedDefinitionInstanceClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1 [(.key_field) = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint32 item_definition = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->item_definition(), output);
  }

  // optional uint32 class_id = 3 [(.key_field) = true];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->class_id(), output);
  }

  // optional uint32 slot_id = 4 [(.key_field) = true];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->slot_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CSOEconDefaultEquippedDefinitionInstanceClient)
}

::google::protobuf::uint8* CSOEconDefaultEquippedDefinitionInstanceClient::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSOEconDefaultEquippedDefinitionInstanceClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1 [(.key_field) = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint32 item_definition = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->item_definition(), target);
  }

  // optional uint32 class_id = 3 [(.key_field) = true];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->class_id(), target);
  }

  // optional uint32 slot_id = 4 [(.key_field) = true];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->slot_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSOEconDefaultEquippedDefinitionInstanceClient)
  return target;
}

size_t CSOEconDefaultEquippedDefinitionInstanceClient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSOEconDefaultEquippedDefinitionInstanceClient)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 account_id = 1 [(.key_field) = true];
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 item_definition = 2;
    if (has_item_definition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_definition());
    }

    // optional uint32 class_id = 3 [(.key_field) = true];
    if (has_class_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->class_id());
    }

    // optional uint32 slot_id = 4 [(.key_field) = true];
    if (has_slot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slot_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSOEconDefaultEquippedDefinitionInstanceClient::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSOEconDefaultEquippedDefinitionInstanceClient)
  GOOGLE_DCHECK_NE(&from, this);
  const CSOEconDefaultEquippedDefinitionInstanceClient* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSOEconDefaultEquippedDefinitionInstanceClient>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSOEconDefaultEquippedDefinitionInstanceClient)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSOEconDefaultEquippedDefinitionInstanceClient)
    MergeFrom(*source);
  }
}

void CSOEconDefaultEquippedDefinitionInstanceClient::MergeFrom(const CSOEconDefaultEquippedDefinitionInstanceClient& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSOEconDefaultEquippedDefinitionInstanceClient)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      item_definition_ = from.item_definition_;
    }
    if (cached_has_bits & 0x00000004u) {
      class_id_ = from.class_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      slot_id_ = from.slot_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CSOEconDefaultEquippedDefinitionInstanceClient::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSOEconDefaultEquippedDefinitionInstanceClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSOEconDefaultEquippedDefinitionInstanceClient::CopyFrom(const CSOEconDefaultEquippedDefinitionInstanceClient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSOEconDefaultEquippedDefinitionInstanceClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSOEconDefaultEquippedDefinitionInstanceClient::IsInitialized() const {
  return true;
}

void CSOEconDefaultEquippedDefinitionInstanceClient::Swap(CSOEconDefaultEquippedDefinitionInstanceClient* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSOEconDefaultEquippedDefinitionInstanceClient::InternalSwap(CSOEconDefaultEquippedDefinitionInstanceClient* other) {
  using std::swap;
  swap(account_id_, other->account_id_);
  swap(item_definition_, other->item_definition_);
  swap(class_id_, other->class_id_);
  swap(slot_id_, other->slot_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CSOEconDefaultEquippedDefinitionInstanceClient::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCDirtySDOCache::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCDirtySDOCache::kSdoTypeFieldNumber;
const int CMsgGCToGCDirtySDOCache::kKeyUint64FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCDirtySDOCache::CMsgGCToGCDirtySDOCache()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCToGCDirtySDOCache();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCDirtySDOCache)
}
CMsgGCToGCDirtySDOCache::CMsgGCToGCDirtySDOCache(const CMsgGCToGCDirtySDOCache& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&key_uint64_, &from.key_uint64_,
    static_cast<size_t>(reinterpret_cast<char*>(&sdo_type_) -
    reinterpret_cast<char*>(&key_uint64_)) + sizeof(sdo_type_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCDirtySDOCache)
}

void CMsgGCToGCDirtySDOCache::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&key_uint64_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sdo_type_) -
      reinterpret_cast<char*>(&key_uint64_)) + sizeof(sdo_type_));
}

CMsgGCToGCDirtySDOCache::~CMsgGCToGCDirtySDOCache() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCDirtySDOCache)
  SharedDtor();
}

void CMsgGCToGCDirtySDOCache::SharedDtor() {
}

void CMsgGCToGCDirtySDOCache::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCDirtySDOCache::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCDirtySDOCache& CMsgGCToGCDirtySDOCache::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCToGCDirtySDOCache();
  return *internal_default_instance();
}

CMsgGCToGCDirtySDOCache* CMsgGCToGCDirtySDOCache::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCDirtySDOCache* n = new CMsgGCToGCDirtySDOCache;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCDirtySDOCache::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToGCDirtySDOCache)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&key_uint64_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sdo_type_) -
        reinterpret_cast<char*>(&key_uint64_)) + sizeof(sdo_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCDirtySDOCache::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCDirtySDOCache)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 sdo_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_sdo_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sdo_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 key_uint64 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_key_uint64();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &key_uint64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCDirtySDOCache)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCDirtySDOCache)
  return false;
#undef DO_
}

void CMsgGCToGCDirtySDOCache::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCDirtySDOCache)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 sdo_type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->sdo_type(), output);
  }

  // optional uint64 key_uint64 = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->key_uint64(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCDirtySDOCache)
}

::google::protobuf::uint8* CMsgGCToGCDirtySDOCache::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCDirtySDOCache)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 sdo_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->sdo_type(), target);
  }

  // optional uint64 key_uint64 = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->key_uint64(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCDirtySDOCache)
  return target;
}

size_t CMsgGCToGCDirtySDOCache::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToGCDirtySDOCache)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 key_uint64 = 2;
    if (has_key_uint64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->key_uint64());
    }

    // optional uint32 sdo_type = 1;
    if (has_sdo_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sdo_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCDirtySDOCache::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCToGCDirtySDOCache)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCDirtySDOCache* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCDirtySDOCache>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCToGCDirtySDOCache)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCToGCDirtySDOCache)
    MergeFrom(*source);
  }
}

void CMsgGCToGCDirtySDOCache::MergeFrom(const CMsgGCToGCDirtySDOCache& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToGCDirtySDOCache)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      key_uint64_ = from.key_uint64_;
    }
    if (cached_has_bits & 0x00000002u) {
      sdo_type_ = from.sdo_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCDirtySDOCache::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCToGCDirtySDOCache)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCDirtySDOCache::CopyFrom(const CMsgGCToGCDirtySDOCache& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToGCDirtySDOCache)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCDirtySDOCache::IsInitialized() const {
  return true;
}

void CMsgGCToGCDirtySDOCache::Swap(CMsgGCToGCDirtySDOCache* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCDirtySDOCache::InternalSwap(CMsgGCToGCDirtySDOCache* other) {
  using std::swap;
  swap(key_uint64_, other->key_uint64_);
  swap(sdo_type_, other->sdo_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCDirtySDOCache::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCDirtyMultipleSDOCache::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCDirtyMultipleSDOCache::kSdoTypeFieldNumber;
const int CMsgGCToGCDirtyMultipleSDOCache::kKeyUint64FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCDirtyMultipleSDOCache::CMsgGCToGCDirtyMultipleSDOCache()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCToGCDirtyMultipleSDOCache();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCDirtyMultipleSDOCache)
}
CMsgGCToGCDirtyMultipleSDOCache::CMsgGCToGCDirtyMultipleSDOCache(const CMsgGCToGCDirtyMultipleSDOCache& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      key_uint64_(from.key_uint64_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sdo_type_ = from.sdo_type_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCDirtyMultipleSDOCache)
}

void CMsgGCToGCDirtyMultipleSDOCache::SharedCtor() {
  _cached_size_ = 0;
  sdo_type_ = 0u;
}

CMsgGCToGCDirtyMultipleSDOCache::~CMsgGCToGCDirtyMultipleSDOCache() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCDirtyMultipleSDOCache)
  SharedDtor();
}

void CMsgGCToGCDirtyMultipleSDOCache::SharedDtor() {
}

void CMsgGCToGCDirtyMultipleSDOCache::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCDirtyMultipleSDOCache::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCDirtyMultipleSDOCache& CMsgGCToGCDirtyMultipleSDOCache::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCToGCDirtyMultipleSDOCache();
  return *internal_default_instance();
}

CMsgGCToGCDirtyMultipleSDOCache* CMsgGCToGCDirtyMultipleSDOCache::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCDirtyMultipleSDOCache* n = new CMsgGCToGCDirtyMultipleSDOCache;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCDirtyMultipleSDOCache::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToGCDirtyMultipleSDOCache)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_uint64_.Clear();
  sdo_type_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCDirtyMultipleSDOCache::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCDirtyMultipleSDOCache)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 sdo_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_sdo_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sdo_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 key_uint64 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16u, input, this->mutable_key_uint64())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_key_uint64())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCDirtyMultipleSDOCache)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCDirtyMultipleSDOCache)
  return false;
#undef DO_
}

void CMsgGCToGCDirtyMultipleSDOCache::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCDirtyMultipleSDOCache)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 sdo_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->sdo_type(), output);
  }

  // repeated uint64 key_uint64 = 2;
  for (int i = 0, n = this->key_uint64_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->key_uint64(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCDirtyMultipleSDOCache)
}

::google::protobuf::uint8* CMsgGCToGCDirtyMultipleSDOCache::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCDirtyMultipleSDOCache)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 sdo_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->sdo_type(), target);
  }

  // repeated uint64 key_uint64 = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(2, this->key_uint64_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCDirtyMultipleSDOCache)
  return target;
}

size_t CMsgGCToGCDirtyMultipleSDOCache::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToGCDirtyMultipleSDOCache)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint64 key_uint64 = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->key_uint64_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->key_uint64_size());
    total_size += data_size;
  }

  // optional uint32 sdo_type = 1;
  if (has_sdo_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sdo_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCDirtyMultipleSDOCache::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCToGCDirtyMultipleSDOCache)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCDirtyMultipleSDOCache* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCDirtyMultipleSDOCache>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCToGCDirtyMultipleSDOCache)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCToGCDirtyMultipleSDOCache)
    MergeFrom(*source);
  }
}

void CMsgGCToGCDirtyMultipleSDOCache::MergeFrom(const CMsgGCToGCDirtyMultipleSDOCache& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToGCDirtyMultipleSDOCache)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  key_uint64_.MergeFrom(from.key_uint64_);
  if (from.has_sdo_type()) {
    set_sdo_type(from.sdo_type());
  }
}

void CMsgGCToGCDirtyMultipleSDOCache::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCToGCDirtyMultipleSDOCache)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCDirtyMultipleSDOCache::CopyFrom(const CMsgGCToGCDirtyMultipleSDOCache& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToGCDirtyMultipleSDOCache)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCDirtyMultipleSDOCache::IsInitialized() const {
  return true;
}

void CMsgGCToGCDirtyMultipleSDOCache::Swap(CMsgGCToGCDirtyMultipleSDOCache* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCDirtyMultipleSDOCache::InternalSwap(CMsgGCToGCDirtyMultipleSDOCache* other) {
  using std::swap;
  key_uint64_.InternalSwap(&other->key_uint64_);
  swap(sdo_type_, other->sdo_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCDirtyMultipleSDOCache::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCCollectItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCCollectItem::kCollectionItemIdFieldNumber;
const int CMsgGCCollectItem::kSubjectItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCCollectItem::CMsgGCCollectItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCCollectItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCCollectItem)
}
CMsgGCCollectItem::CMsgGCCollectItem(const CMsgGCCollectItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&collection_item_id_, &from.collection_item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&subject_item_id_) -
    reinterpret_cast<char*>(&collection_item_id_)) + sizeof(subject_item_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCCollectItem)
}

void CMsgGCCollectItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&collection_item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&subject_item_id_) -
      reinterpret_cast<char*>(&collection_item_id_)) + sizeof(subject_item_id_));
}

CMsgGCCollectItem::~CMsgGCCollectItem() {
  // @@protoc_insertion_point(destructor:CMsgGCCollectItem)
  SharedDtor();
}

void CMsgGCCollectItem::SharedDtor() {
}

void CMsgGCCollectItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCCollectItem::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCCollectItem& CMsgGCCollectItem::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCCollectItem();
  return *internal_default_instance();
}

CMsgGCCollectItem* CMsgGCCollectItem::New(::google::protobuf::Arena* arena) const {
  CMsgGCCollectItem* n = new CMsgGCCollectItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCCollectItem::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCollectItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&collection_item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&subject_item_id_) -
        reinterpret_cast<char*>(&collection_item_id_)) + sizeof(subject_item_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCCollectItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCCollectItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 collection_item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_collection_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &collection_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 subject_item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_subject_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &subject_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCCollectItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCCollectItem)
  return false;
#undef DO_
}

void CMsgGCCollectItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCCollectItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 collection_item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->collection_item_id(), output);
  }

  // optional uint64 subject_item_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->subject_item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCCollectItem)
}

::google::protobuf::uint8* CMsgGCCollectItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCollectItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 collection_item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->collection_item_id(), target);
  }

  // optional uint64 subject_item_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->subject_item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCollectItem)
  return target;
}

size_t CMsgGCCollectItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCCollectItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 collection_item_id = 1;
    if (has_collection_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->collection_item_id());
    }

    // optional uint64 subject_item_id = 2;
    if (has_subject_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->subject_item_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCCollectItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCCollectItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCCollectItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCCollectItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCCollectItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCCollectItem)
    MergeFrom(*source);
  }
}

void CMsgGCCollectItem::MergeFrom(const CMsgGCCollectItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCollectItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      collection_item_id_ = from.collection_item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      subject_item_id_ = from.subject_item_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCCollectItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCCollectItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCCollectItem::CopyFrom(const CMsgGCCollectItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCollectItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCCollectItem::IsInitialized() const {
  return true;
}

void CMsgGCCollectItem::Swap(CMsgGCCollectItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCCollectItem::InternalSwap(CMsgGCCollectItem* other) {
  using std::swap;
  swap(collection_item_id_, other->collection_item_id_);
  swap(subject_item_id_, other->subject_item_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCCollectItem::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSDONoMemcached::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSDONoMemcached::CMsgSDONoMemcached()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgSDONoMemcached();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSDONoMemcached)
}
CMsgSDONoMemcached::CMsgSDONoMemcached(const CMsgSDONoMemcached& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgSDONoMemcached)
}

void CMsgSDONoMemcached::SharedCtor() {
  _cached_size_ = 0;
}

CMsgSDONoMemcached::~CMsgSDONoMemcached() {
  // @@protoc_insertion_point(destructor:CMsgSDONoMemcached)
  SharedDtor();
}

void CMsgSDONoMemcached::SharedDtor() {
}

void CMsgSDONoMemcached::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSDONoMemcached::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSDONoMemcached& CMsgSDONoMemcached::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgSDONoMemcached();
  return *internal_default_instance();
}

CMsgSDONoMemcached* CMsgSDONoMemcached::New(::google::protobuf::Arena* arena) const {
  CMsgSDONoMemcached* n = new CMsgSDONoMemcached;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSDONoMemcached::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSDONoMemcached)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSDONoMemcached::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSDONoMemcached)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSDONoMemcached)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSDONoMemcached)
  return false;
#undef DO_
}

void CMsgSDONoMemcached::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSDONoMemcached)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSDONoMemcached)
}

::google::protobuf::uint8* CMsgSDONoMemcached::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSDONoMemcached)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSDONoMemcached)
  return target;
}

size_t CMsgSDONoMemcached::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSDONoMemcached)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSDONoMemcached::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSDONoMemcached)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSDONoMemcached* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSDONoMemcached>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSDONoMemcached)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSDONoMemcached)
    MergeFrom(*source);
  }
}

void CMsgSDONoMemcached::MergeFrom(const CMsgSDONoMemcached& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSDONoMemcached)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgSDONoMemcached::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSDONoMemcached)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSDONoMemcached::CopyFrom(const CMsgSDONoMemcached& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSDONoMemcached)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSDONoMemcached::IsInitialized() const {
  return true;
}

void CMsgSDONoMemcached::Swap(CMsgSDONoMemcached* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSDONoMemcached::InternalSwap(CMsgSDONoMemcached* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSDONoMemcached::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCUpdateSQLKeyValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCUpdateSQLKeyValue::kKeyNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCUpdateSQLKeyValue::CMsgGCToGCUpdateSQLKeyValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCToGCUpdateSQLKeyValue();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCUpdateSQLKeyValue)
}
CMsgGCToGCUpdateSQLKeyValue::CMsgGCToGCUpdateSQLKeyValue(const CMsgGCToGCUpdateSQLKeyValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key_name()) {
    key_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_name_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCUpdateSQLKeyValue)
}

void CMsgGCToGCUpdateSQLKeyValue::SharedCtor() {
  _cached_size_ = 0;
  key_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgGCToGCUpdateSQLKeyValue::~CMsgGCToGCUpdateSQLKeyValue() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCUpdateSQLKeyValue)
  SharedDtor();
}

void CMsgGCToGCUpdateSQLKeyValue::SharedDtor() {
  key_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCToGCUpdateSQLKeyValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCUpdateSQLKeyValue::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCUpdateSQLKeyValue& CMsgGCToGCUpdateSQLKeyValue::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCToGCUpdateSQLKeyValue();
  return *internal_default_instance();
}

CMsgGCToGCUpdateSQLKeyValue* CMsgGCToGCUpdateSQLKeyValue::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCUpdateSQLKeyValue* n = new CMsgGCToGCUpdateSQLKeyValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCUpdateSQLKeyValue::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToGCUpdateSQLKeyValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!key_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*key_name_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCUpdateSQLKeyValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCUpdateSQLKeyValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key_name().data(), static_cast<int>(this->key_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCToGCUpdateSQLKeyValue.key_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCUpdateSQLKeyValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCUpdateSQLKeyValue)
  return false;
#undef DO_
}

void CMsgGCToGCUpdateSQLKeyValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCUpdateSQLKeyValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key_name().data(), static_cast<int>(this->key_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCToGCUpdateSQLKeyValue.key_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCUpdateSQLKeyValue)
}

::google::protobuf::uint8* CMsgGCToGCUpdateSQLKeyValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCUpdateSQLKeyValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key_name().data(), static_cast<int>(this->key_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCToGCUpdateSQLKeyValue.key_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCUpdateSQLKeyValue)
  return target;
}

size_t CMsgGCToGCUpdateSQLKeyValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToGCUpdateSQLKeyValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string key_name = 1;
  if (has_key_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCUpdateSQLKeyValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCToGCUpdateSQLKeyValue)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCUpdateSQLKeyValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCUpdateSQLKeyValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCToGCUpdateSQLKeyValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCToGCUpdateSQLKeyValue)
    MergeFrom(*source);
  }
}

void CMsgGCToGCUpdateSQLKeyValue::MergeFrom(const CMsgGCToGCUpdateSQLKeyValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToGCUpdateSQLKeyValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key_name()) {
    set_has_key_name();
    key_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_name_);
  }
}

void CMsgGCToGCUpdateSQLKeyValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCToGCUpdateSQLKeyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCUpdateSQLKeyValue::CopyFrom(const CMsgGCToGCUpdateSQLKeyValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToGCUpdateSQLKeyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCUpdateSQLKeyValue::IsInitialized() const {
  return true;
}

void CMsgGCToGCUpdateSQLKeyValue::Swap(CMsgGCToGCUpdateSQLKeyValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCUpdateSQLKeyValue::InternalSwap(CMsgGCToGCUpdateSQLKeyValue* other) {
  using std::swap;
  key_name_.Swap(&other->key_name_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCUpdateSQLKeyValue::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCIsTrustedServer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCIsTrustedServer::kSteamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCIsTrustedServer::CMsgGCToGCIsTrustedServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCToGCIsTrustedServer();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCIsTrustedServer)
}
CMsgGCToGCIsTrustedServer::CMsgGCToGCIsTrustedServer(const CMsgGCToGCIsTrustedServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steam_id_ = from.steam_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCIsTrustedServer)
}

void CMsgGCToGCIsTrustedServer::SharedCtor() {
  _cached_size_ = 0;
  steam_id_ = GOOGLE_ULONGLONG(0);
}

CMsgGCToGCIsTrustedServer::~CMsgGCToGCIsTrustedServer() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCIsTrustedServer)
  SharedDtor();
}

void CMsgGCToGCIsTrustedServer::SharedDtor() {
}

void CMsgGCToGCIsTrustedServer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCIsTrustedServer::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCIsTrustedServer& CMsgGCToGCIsTrustedServer::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCToGCIsTrustedServer();
  return *internal_default_instance();
}

CMsgGCToGCIsTrustedServer* CMsgGCToGCIsTrustedServer::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCIsTrustedServer* n = new CMsgGCToGCIsTrustedServer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCIsTrustedServer::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToGCIsTrustedServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steam_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCIsTrustedServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCIsTrustedServer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCIsTrustedServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCIsTrustedServer)
  return false;
#undef DO_
}

void CMsgGCToGCIsTrustedServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCIsTrustedServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCIsTrustedServer)
}

::google::protobuf::uint8* CMsgGCToGCIsTrustedServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCIsTrustedServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCIsTrustedServer)
  return target;
}

size_t CMsgGCToGCIsTrustedServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToGCIsTrustedServer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 steam_id = 1;
  if (has_steam_id()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCIsTrustedServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCToGCIsTrustedServer)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCIsTrustedServer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCIsTrustedServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCToGCIsTrustedServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCToGCIsTrustedServer)
    MergeFrom(*source);
  }
}

void CMsgGCToGCIsTrustedServer::MergeFrom(const CMsgGCToGCIsTrustedServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToGCIsTrustedServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steam_id()) {
    set_steam_id(from.steam_id());
  }
}

void CMsgGCToGCIsTrustedServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCToGCIsTrustedServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCIsTrustedServer::CopyFrom(const CMsgGCToGCIsTrustedServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToGCIsTrustedServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCIsTrustedServer::IsInitialized() const {
  return true;
}

void CMsgGCToGCIsTrustedServer::Swap(CMsgGCToGCIsTrustedServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCIsTrustedServer::InternalSwap(CMsgGCToGCIsTrustedServer* other) {
  using std::swap;
  swap(steam_id_, other->steam_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCIsTrustedServer::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCIsTrustedServerResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCIsTrustedServerResponse::kIsTrustedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCIsTrustedServerResponse::CMsgGCToGCIsTrustedServerResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCToGCIsTrustedServerResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCIsTrustedServerResponse)
}
CMsgGCToGCIsTrustedServerResponse::CMsgGCToGCIsTrustedServerResponse(const CMsgGCToGCIsTrustedServerResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_trusted_ = from.is_trusted_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCIsTrustedServerResponse)
}

void CMsgGCToGCIsTrustedServerResponse::SharedCtor() {
  _cached_size_ = 0;
  is_trusted_ = false;
}

CMsgGCToGCIsTrustedServerResponse::~CMsgGCToGCIsTrustedServerResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCIsTrustedServerResponse)
  SharedDtor();
}

void CMsgGCToGCIsTrustedServerResponse::SharedDtor() {
}

void CMsgGCToGCIsTrustedServerResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCIsTrustedServerResponse::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCIsTrustedServerResponse& CMsgGCToGCIsTrustedServerResponse::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCToGCIsTrustedServerResponse();
  return *internal_default_instance();
}

CMsgGCToGCIsTrustedServerResponse* CMsgGCToGCIsTrustedServerResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCIsTrustedServerResponse* n = new CMsgGCToGCIsTrustedServerResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCIsTrustedServerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToGCIsTrustedServerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_trusted_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCIsTrustedServerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCIsTrustedServerResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool is_trusted = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_is_trusted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_trusted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCIsTrustedServerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCIsTrustedServerResponse)
  return false;
#undef DO_
}

void CMsgGCToGCIsTrustedServerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCIsTrustedServerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_trusted = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_trusted(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCIsTrustedServerResponse)
}

::google::protobuf::uint8* CMsgGCToGCIsTrustedServerResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCIsTrustedServerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_trusted = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_trusted(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCIsTrustedServerResponse)
  return target;
}

size_t CMsgGCToGCIsTrustedServerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToGCIsTrustedServerResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool is_trusted = 1;
  if (has_is_trusted()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCIsTrustedServerResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCToGCIsTrustedServerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCIsTrustedServerResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCIsTrustedServerResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCToGCIsTrustedServerResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCToGCIsTrustedServerResponse)
    MergeFrom(*source);
  }
}

void CMsgGCToGCIsTrustedServerResponse::MergeFrom(const CMsgGCToGCIsTrustedServerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToGCIsTrustedServerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_is_trusted()) {
    set_is_trusted(from.is_trusted());
  }
}

void CMsgGCToGCIsTrustedServerResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCToGCIsTrustedServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCIsTrustedServerResponse::CopyFrom(const CMsgGCToGCIsTrustedServerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToGCIsTrustedServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCIsTrustedServerResponse::IsInitialized() const {
  return true;
}

void CMsgGCToGCIsTrustedServerResponse::Swap(CMsgGCToGCIsTrustedServerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCIsTrustedServerResponse::InternalSwap(CMsgGCToGCIsTrustedServerResponse* other) {
  using std::swap;
  swap(is_trusted_, other->is_trusted_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCIsTrustedServerResponse::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCBroadcastConsoleCommand::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCBroadcastConsoleCommand::kConCommandFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCBroadcastConsoleCommand::CMsgGCToGCBroadcastConsoleCommand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCToGCBroadcastConsoleCommand();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCBroadcastConsoleCommand)
}
CMsgGCToGCBroadcastConsoleCommand::CMsgGCToGCBroadcastConsoleCommand(const CMsgGCToGCBroadcastConsoleCommand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  con_command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_con_command()) {
    con_command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.con_command_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCBroadcastConsoleCommand)
}

void CMsgGCToGCBroadcastConsoleCommand::SharedCtor() {
  _cached_size_ = 0;
  con_command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgGCToGCBroadcastConsoleCommand::~CMsgGCToGCBroadcastConsoleCommand() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCBroadcastConsoleCommand)
  SharedDtor();
}

void CMsgGCToGCBroadcastConsoleCommand::SharedDtor() {
  con_command_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCToGCBroadcastConsoleCommand::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCBroadcastConsoleCommand::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCBroadcastConsoleCommand& CMsgGCToGCBroadcastConsoleCommand::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCToGCBroadcastConsoleCommand();
  return *internal_default_instance();
}

CMsgGCToGCBroadcastConsoleCommand* CMsgGCToGCBroadcastConsoleCommand::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCBroadcastConsoleCommand* n = new CMsgGCToGCBroadcastConsoleCommand;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCBroadcastConsoleCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToGCBroadcastConsoleCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!con_command_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*con_command_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCBroadcastConsoleCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCBroadcastConsoleCommand)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string con_command = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_con_command()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->con_command().data(), static_cast<int>(this->con_command().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCToGCBroadcastConsoleCommand.con_command");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCBroadcastConsoleCommand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCBroadcastConsoleCommand)
  return false;
#undef DO_
}

void CMsgGCToGCBroadcastConsoleCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCBroadcastConsoleCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string con_command = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->con_command().data(), static_cast<int>(this->con_command().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCToGCBroadcastConsoleCommand.con_command");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->con_command(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCBroadcastConsoleCommand)
}

::google::protobuf::uint8* CMsgGCToGCBroadcastConsoleCommand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCBroadcastConsoleCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string con_command = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->con_command().data(), static_cast<int>(this->con_command().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCToGCBroadcastConsoleCommand.con_command");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->con_command(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCBroadcastConsoleCommand)
  return target;
}

size_t CMsgGCToGCBroadcastConsoleCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToGCBroadcastConsoleCommand)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string con_command = 1;
  if (has_con_command()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->con_command());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCBroadcastConsoleCommand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCToGCBroadcastConsoleCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCBroadcastConsoleCommand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCBroadcastConsoleCommand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCToGCBroadcastConsoleCommand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCToGCBroadcastConsoleCommand)
    MergeFrom(*source);
  }
}

void CMsgGCToGCBroadcastConsoleCommand::MergeFrom(const CMsgGCToGCBroadcastConsoleCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToGCBroadcastConsoleCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_con_command()) {
    set_has_con_command();
    con_command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.con_command_);
  }
}

void CMsgGCToGCBroadcastConsoleCommand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCToGCBroadcastConsoleCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCBroadcastConsoleCommand::CopyFrom(const CMsgGCToGCBroadcastConsoleCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToGCBroadcastConsoleCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCBroadcastConsoleCommand::IsInitialized() const {
  return true;
}

void CMsgGCToGCBroadcastConsoleCommand::Swap(CMsgGCToGCBroadcastConsoleCommand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCBroadcastConsoleCommand::InternalSwap(CMsgGCToGCBroadcastConsoleCommand* other) {
  using std::swap;
  con_command_.Swap(&other->con_command_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCBroadcastConsoleCommand::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCServerVersionUpdated::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCServerVersionUpdated::kServerVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCServerVersionUpdated::CMsgGCServerVersionUpdated()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCServerVersionUpdated();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCServerVersionUpdated)
}
CMsgGCServerVersionUpdated::CMsgGCServerVersionUpdated(const CMsgGCServerVersionUpdated& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_version_ = from.server_version_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCServerVersionUpdated)
}

void CMsgGCServerVersionUpdated::SharedCtor() {
  _cached_size_ = 0;
  server_version_ = 0u;
}

CMsgGCServerVersionUpdated::~CMsgGCServerVersionUpdated() {
  // @@protoc_insertion_point(destructor:CMsgGCServerVersionUpdated)
  SharedDtor();
}

void CMsgGCServerVersionUpdated::SharedDtor() {
}

void CMsgGCServerVersionUpdated::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCServerVersionUpdated::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCServerVersionUpdated& CMsgGCServerVersionUpdated::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCServerVersionUpdated();
  return *internal_default_instance();
}

CMsgGCServerVersionUpdated* CMsgGCServerVersionUpdated::New(::google::protobuf::Arena* arena) const {
  CMsgGCServerVersionUpdated* n = new CMsgGCServerVersionUpdated;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCServerVersionUpdated::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCServerVersionUpdated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_version_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCServerVersionUpdated::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCServerVersionUpdated)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 server_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_server_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCServerVersionUpdated)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCServerVersionUpdated)
  return false;
#undef DO_
}

void CMsgGCServerVersionUpdated::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCServerVersionUpdated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 server_version = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->server_version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCServerVersionUpdated)
}

::google::protobuf::uint8* CMsgGCServerVersionUpdated::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCServerVersionUpdated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 server_version = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->server_version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCServerVersionUpdated)
  return target;
}

size_t CMsgGCServerVersionUpdated::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCServerVersionUpdated)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 server_version = 1;
  if (has_server_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCServerVersionUpdated::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCServerVersionUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCServerVersionUpdated* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCServerVersionUpdated>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCServerVersionUpdated)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCServerVersionUpdated)
    MergeFrom(*source);
  }
}

void CMsgGCServerVersionUpdated::MergeFrom(const CMsgGCServerVersionUpdated& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCServerVersionUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_server_version()) {
    set_server_version(from.server_version());
  }
}

void CMsgGCServerVersionUpdated::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCServerVersionUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCServerVersionUpdated::CopyFrom(const CMsgGCServerVersionUpdated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCServerVersionUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCServerVersionUpdated::IsInitialized() const {
  return true;
}

void CMsgGCServerVersionUpdated::Swap(CMsgGCServerVersionUpdated* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCServerVersionUpdated::InternalSwap(CMsgGCServerVersionUpdated* other) {
  using std::swap;
  swap(server_version_, other->server_version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCServerVersionUpdated::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCClientVersionUpdated::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCClientVersionUpdated::kClientVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCClientVersionUpdated::CMsgGCClientVersionUpdated()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCClientVersionUpdated();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCClientVersionUpdated)
}
CMsgGCClientVersionUpdated::CMsgGCClientVersionUpdated(const CMsgGCClientVersionUpdated& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  client_version_ = from.client_version_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCClientVersionUpdated)
}

void CMsgGCClientVersionUpdated::SharedCtor() {
  _cached_size_ = 0;
  client_version_ = 0u;
}

CMsgGCClientVersionUpdated::~CMsgGCClientVersionUpdated() {
  // @@protoc_insertion_point(destructor:CMsgGCClientVersionUpdated)
  SharedDtor();
}

void CMsgGCClientVersionUpdated::SharedDtor() {
}

void CMsgGCClientVersionUpdated::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCClientVersionUpdated::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCClientVersionUpdated& CMsgGCClientVersionUpdated::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCClientVersionUpdated();
  return *internal_default_instance();
}

CMsgGCClientVersionUpdated* CMsgGCClientVersionUpdated::New(::google::protobuf::Arena* arena) const {
  CMsgGCClientVersionUpdated* n = new CMsgGCClientVersionUpdated;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCClientVersionUpdated::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCClientVersionUpdated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  client_version_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCClientVersionUpdated::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCClientVersionUpdated)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 client_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_client_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCClientVersionUpdated)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCClientVersionUpdated)
  return false;
#undef DO_
}

void CMsgGCClientVersionUpdated::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCClientVersionUpdated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 client_version = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->client_version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCClientVersionUpdated)
}

::google::protobuf::uint8* CMsgGCClientVersionUpdated::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCClientVersionUpdated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 client_version = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->client_version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCClientVersionUpdated)
  return target;
}

size_t CMsgGCClientVersionUpdated::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCClientVersionUpdated)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 client_version = 1;
  if (has_client_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->client_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCClientVersionUpdated::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCClientVersionUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCClientVersionUpdated* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCClientVersionUpdated>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCClientVersionUpdated)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCClientVersionUpdated)
    MergeFrom(*source);
  }
}

void CMsgGCClientVersionUpdated::MergeFrom(const CMsgGCClientVersionUpdated& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCClientVersionUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_client_version()) {
    set_client_version(from.client_version());
  }
}

void CMsgGCClientVersionUpdated::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCClientVersionUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCClientVersionUpdated::CopyFrom(const CMsgGCClientVersionUpdated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCClientVersionUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCClientVersionUpdated::IsInitialized() const {
  return true;
}

void CMsgGCClientVersionUpdated::Swap(CMsgGCClientVersionUpdated* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCClientVersionUpdated::InternalSwap(CMsgGCClientVersionUpdated* other) {
  using std::swap;
  swap(client_version_, other->client_version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCClientVersionUpdated::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCWebAPIAccountChanged::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCWebAPIAccountChanged::CMsgGCToGCWebAPIAccountChanged()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCToGCWebAPIAccountChanged();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCWebAPIAccountChanged)
}
CMsgGCToGCWebAPIAccountChanged::CMsgGCToGCWebAPIAccountChanged(const CMsgGCToGCWebAPIAccountChanged& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCWebAPIAccountChanged)
}

void CMsgGCToGCWebAPIAccountChanged::SharedCtor() {
  _cached_size_ = 0;
}

CMsgGCToGCWebAPIAccountChanged::~CMsgGCToGCWebAPIAccountChanged() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCWebAPIAccountChanged)
  SharedDtor();
}

void CMsgGCToGCWebAPIAccountChanged::SharedDtor() {
}

void CMsgGCToGCWebAPIAccountChanged::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCWebAPIAccountChanged::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCWebAPIAccountChanged& CMsgGCToGCWebAPIAccountChanged::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCToGCWebAPIAccountChanged();
  return *internal_default_instance();
}

CMsgGCToGCWebAPIAccountChanged* CMsgGCToGCWebAPIAccountChanged::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCWebAPIAccountChanged* n = new CMsgGCToGCWebAPIAccountChanged;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCWebAPIAccountChanged::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToGCWebAPIAccountChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCWebAPIAccountChanged::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCWebAPIAccountChanged)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCWebAPIAccountChanged)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCWebAPIAccountChanged)
  return false;
#undef DO_
}

void CMsgGCToGCWebAPIAccountChanged::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCWebAPIAccountChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCWebAPIAccountChanged)
}

::google::protobuf::uint8* CMsgGCToGCWebAPIAccountChanged::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCWebAPIAccountChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCWebAPIAccountChanged)
  return target;
}

size_t CMsgGCToGCWebAPIAccountChanged::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToGCWebAPIAccountChanged)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCWebAPIAccountChanged::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCToGCWebAPIAccountChanged)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCWebAPIAccountChanged* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCWebAPIAccountChanged>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCToGCWebAPIAccountChanged)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCToGCWebAPIAccountChanged)
    MergeFrom(*source);
  }
}

void CMsgGCToGCWebAPIAccountChanged::MergeFrom(const CMsgGCToGCWebAPIAccountChanged& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToGCWebAPIAccountChanged)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgGCToGCWebAPIAccountChanged::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCToGCWebAPIAccountChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCWebAPIAccountChanged::CopyFrom(const CMsgGCToGCWebAPIAccountChanged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToGCWebAPIAccountChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCWebAPIAccountChanged::IsInitialized() const {
  return true;
}

void CMsgGCToGCWebAPIAccountChanged::Swap(CMsgGCToGCWebAPIAccountChanged* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCWebAPIAccountChanged::InternalSwap(CMsgGCToGCWebAPIAccountChanged* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCWebAPIAccountChanged::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCRequestPassportItemGrant::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCRequestPassportItemGrant::kSteamIdFieldNumber;
const int CMsgGCToGCRequestPassportItemGrant::kLeagueIdFieldNumber;
const int CMsgGCToGCRequestPassportItemGrant::kRewardFlagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCRequestPassportItemGrant::CMsgGCToGCRequestPassportItemGrant()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCToGCRequestPassportItemGrant();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCToGCRequestPassportItemGrant)
}
CMsgGCToGCRequestPassportItemGrant::CMsgGCToGCRequestPassportItemGrant(const CMsgGCToGCRequestPassportItemGrant& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_, &from.steam_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&reward_flag_) -
    reinterpret_cast<char*>(&steam_id_)) + sizeof(reward_flag_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCToGCRequestPassportItemGrant)
}

void CMsgGCToGCRequestPassportItemGrant::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&steam_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reward_flag_) -
      reinterpret_cast<char*>(&steam_id_)) + sizeof(reward_flag_));
}

CMsgGCToGCRequestPassportItemGrant::~CMsgGCToGCRequestPassportItemGrant() {
  // @@protoc_insertion_point(destructor:CMsgGCToGCRequestPassportItemGrant)
  SharedDtor();
}

void CMsgGCToGCRequestPassportItemGrant::SharedDtor() {
}

void CMsgGCToGCRequestPassportItemGrant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCRequestPassportItemGrant::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCRequestPassportItemGrant& CMsgGCToGCRequestPassportItemGrant::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGCToGCRequestPassportItemGrant();
  return *internal_default_instance();
}

CMsgGCToGCRequestPassportItemGrant* CMsgGCToGCRequestPassportItemGrant::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCRequestPassportItemGrant* n = new CMsgGCToGCRequestPassportItemGrant;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCRequestPassportItemGrant::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToGCRequestPassportItemGrant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&steam_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&reward_flag_) -
        reinterpret_cast<char*>(&steam_id_)) + sizeof(reward_flag_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCRequestPassportItemGrant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCToGCRequestPassportItemGrant)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 league_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_league_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &league_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 reward_flag = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_reward_flag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCToGCRequestPassportItemGrant)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCToGCRequestPassportItemGrant)
  return false;
#undef DO_
}

void CMsgGCToGCRequestPassportItemGrant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCToGCRequestPassportItemGrant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  // optional uint32 league_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->league_id(), output);
  }

  // optional int32 reward_flag = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->reward_flag(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCToGCRequestPassportItemGrant)
}

::google::protobuf::uint8* CMsgGCToGCRequestPassportItemGrant::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToGCRequestPassportItemGrant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  // optional uint32 league_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->league_id(), target);
  }

  // optional int32 reward_flag = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->reward_flag(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToGCRequestPassportItemGrant)
  return target;
}

size_t CMsgGCToGCRequestPassportItemGrant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToGCRequestPassportItemGrant)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 steam_id = 1;
    if (has_steam_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 league_id = 2;
    if (has_league_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->league_id());
    }

    // optional int32 reward_flag = 3;
    if (has_reward_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_flag());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCRequestPassportItemGrant::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCToGCRequestPassportItemGrant)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCRequestPassportItemGrant* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCRequestPassportItemGrant>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCToGCRequestPassportItemGrant)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCToGCRequestPassportItemGrant)
    MergeFrom(*source);
  }
}

void CMsgGCToGCRequestPassportItemGrant::MergeFrom(const CMsgGCToGCRequestPassportItemGrant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToGCRequestPassportItemGrant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_ = from.steam_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      league_id_ = from.league_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      reward_flag_ = from.reward_flag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCRequestPassportItemGrant::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCToGCRequestPassportItemGrant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCRequestPassportItemGrant::CopyFrom(const CMsgGCToGCRequestPassportItemGrant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToGCRequestPassportItemGrant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCRequestPassportItemGrant::IsInitialized() const {
  return true;
}

void CMsgGCToGCRequestPassportItemGrant::Swap(CMsgGCToGCRequestPassportItemGrant* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCRequestPassportItemGrant::InternalSwap(CMsgGCToGCRequestPassportItemGrant* other) {
  using std::swap;
  swap(steam_id_, other->steam_id_);
  swap(league_id_, other->league_id_);
  swap(reward_flag_, other->reward_flag_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCRequestPassportItemGrant::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGameServerInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGameServerInfo::kServerPublicIpAddrFieldNumber;
const int CMsgGameServerInfo::kServerPrivateIpAddrFieldNumber;
const int CMsgGameServerInfo::kServerPortFieldNumber;
const int CMsgGameServerInfo::kServerTvPortFieldNumber;
const int CMsgGameServerInfo::kServerKeyFieldNumber;
const int CMsgGameServerInfo::kServerHibernationFieldNumber;
const int CMsgGameServerInfo::kServerTypeFieldNumber;
const int CMsgGameServerInfo::kServerRegionFieldNumber;
const int CMsgGameServerInfo::kServerLoadavgFieldNumber;
const int CMsgGameServerInfo::kServerTvBroadcastTimeFieldNumber;
const int CMsgGameServerInfo::kServerGameTimeFieldNumber;
const int CMsgGameServerInfo::kServerRelayConnectedSteamIdFieldNumber;
const int CMsgGameServerInfo::kRelaySlotsMaxFieldNumber;
const int CMsgGameServerInfo::kRelaysConnectedFieldNumber;
const int CMsgGameServerInfo::kRelayClientsConnectedFieldNumber;
const int CMsgGameServerInfo::kRelayedGameServerSteamIdFieldNumber;
const int CMsgGameServerInfo::kParentRelayCountFieldNumber;
const int CMsgGameServerInfo::kTvSecretCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGameServerInfo::CMsgGameServerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGameServerInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGameServerInfo)
}
CMsgGameServerInfo::CMsgGameServerInfo(const CMsgGameServerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_server_key()) {
    server_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_key_);
  }
  ::memcpy(&server_public_ip_addr_, &from.server_public_ip_addr_,
    static_cast<size_t>(reinterpret_cast<char*>(&tv_secret_code_) -
    reinterpret_cast<char*>(&server_public_ip_addr_)) + sizeof(tv_secret_code_));
  // @@protoc_insertion_point(copy_constructor:CMsgGameServerInfo)
}

void CMsgGameServerInfo::SharedCtor() {
  _cached_size_ = 0;
  server_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&server_public_ip_addr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tv_secret_code_) -
      reinterpret_cast<char*>(&server_public_ip_addr_)) + sizeof(tv_secret_code_));
}

CMsgGameServerInfo::~CMsgGameServerInfo() {
  // @@protoc_insertion_point(destructor:CMsgGameServerInfo)
  SharedDtor();
}

void CMsgGameServerInfo::SharedDtor() {
  server_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGameServerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGameServerInfo::descriptor() {
  ::protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGameServerInfo& CMsgGameServerInfo::default_instance() {
  ::protobuf_base_5fgcmessages_2eproto::InitDefaultsCMsgGameServerInfo();
  return *internal_default_instance();
}

CMsgGameServerInfo* CMsgGameServerInfo::New(::google::protobuf::Arena* arena) const {
  CMsgGameServerInfo* n = new CMsgGameServerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGameServerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGameServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!server_key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*server_key_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 254u) {
    ::memset(&server_public_ip_addr_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&server_region_) -
        reinterpret_cast<char*>(&server_public_ip_addr_)) + sizeof(server_region_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&server_loadavg_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&relay_clients_connected_) -
        reinterpret_cast<char*>(&server_loadavg_)) + sizeof(relay_clients_connected_));
  }
  if (cached_has_bits & 196608u) {
    ::memset(&parent_relay_count_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tv_secret_code_) -
        reinterpret_cast<char*>(&parent_relay_count_)) + sizeof(tv_secret_code_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGameServerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGameServerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed32 server_public_ip_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_server_public_ip_addr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &server_public_ip_addr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 server_private_ip_addr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_server_private_ip_addr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &server_private_ip_addr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 server_port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_server_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 server_tv_port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_server_tv_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_tv_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string server_key = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->server_key().data(), static_cast<int>(this->server_key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGameServerInfo.server_key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool server_hibernation = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_server_hibernation();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &server_hibernation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgGameServerInfo.ServerType server_type = 7 [default = UNSPECIFIED];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CMsgGameServerInfo_ServerType_IsValid(value)) {
            set_server_type(static_cast< ::CMsgGameServerInfo_ServerType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                7, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 server_region = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_server_region();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_region_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float server_loadavg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          set_has_server_loadavg();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &server_loadavg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float server_tv_broadcast_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {
          set_has_server_tv_broadcast_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &server_tv_broadcast_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float server_game_time = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {
          set_has_server_game_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &server_game_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 server_relay_connected_steam_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {
          set_has_server_relay_connected_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &server_relay_connected_steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 relay_slots_max = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_relay_slots_max();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &relay_slots_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 relays_connected = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_relays_connected();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &relays_connected_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 relay_clients_connected = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_relay_clients_connected();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &relay_clients_connected_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 relayed_game_server_steam_id = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(129u /* 129 & 0xFF */)) {
          set_has_relayed_game_server_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &relayed_game_server_steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 parent_relay_count = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_parent_relay_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_relay_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 tv_secret_code = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(145u /* 145 & 0xFF */)) {
          set_has_tv_secret_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &tv_secret_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGameServerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGameServerInfo)
  return false;
#undef DO_
}

void CMsgGameServerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGameServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 server_public_ip_addr = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->server_public_ip_addr(), output);
  }

  // optional fixed32 server_private_ip_addr = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->server_private_ip_addr(), output);
  }

  // optional uint32 server_port = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->server_port(), output);
  }

  // optional uint32 server_tv_port = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->server_tv_port(), output);
  }

  // optional string server_key = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->server_key().data(), static_cast<int>(this->server_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGameServerInfo.server_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->server_key(), output);
  }

  // optional bool server_hibernation = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->server_hibernation(), output);
  }

  // optional .CMsgGameServerInfo.ServerType server_type = 7 [default = UNSPECIFIED];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->server_type(), output);
  }

  // optional uint32 server_region = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->server_region(), output);
  }

  // optional float server_loadavg = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->server_loadavg(), output);
  }

  // optional float server_tv_broadcast_time = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->server_tv_broadcast_time(), output);
  }

  // optional float server_game_time = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->server_game_time(), output);
  }

  // optional fixed64 server_relay_connected_steam_id = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(12, this->server_relay_connected_steam_id(), output);
  }

  // optional uint32 relay_slots_max = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->relay_slots_max(), output);
  }

  // optional int32 relays_connected = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->relays_connected(), output);
  }

  // optional int32 relay_clients_connected = 15;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->relay_clients_connected(), output);
  }

  // optional fixed64 relayed_game_server_steam_id = 16;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(16, this->relayed_game_server_steam_id(), output);
  }

  // optional uint32 parent_relay_count = 17;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->parent_relay_count(), output);
  }

  // optional fixed64 tv_secret_code = 18;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(18, this->tv_secret_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGameServerInfo)
}

::google::protobuf::uint8* CMsgGameServerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGameServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 server_public_ip_addr = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->server_public_ip_addr(), target);
  }

  // optional fixed32 server_private_ip_addr = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->server_private_ip_addr(), target);
  }

  // optional uint32 server_port = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->server_port(), target);
  }

  // optional uint32 server_tv_port = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->server_tv_port(), target);
  }

  // optional string server_key = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->server_key().data(), static_cast<int>(this->server_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGameServerInfo.server_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->server_key(), target);
  }

  // optional bool server_hibernation = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->server_hibernation(), target);
  }

  // optional .CMsgGameServerInfo.ServerType server_type = 7 [default = UNSPECIFIED];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->server_type(), target);
  }

  // optional uint32 server_region = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->server_region(), target);
  }

  // optional float server_loadavg = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->server_loadavg(), target);
  }

  // optional float server_tv_broadcast_time = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->server_tv_broadcast_time(), target);
  }

  // optional float server_game_time = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->server_game_time(), target);
  }

  // optional fixed64 server_relay_connected_steam_id = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(12, this->server_relay_connected_steam_id(), target);
  }

  // optional uint32 relay_slots_max = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->relay_slots_max(), target);
  }

  // optional int32 relays_connected = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->relays_connected(), target);
  }

  // optional int32 relay_clients_connected = 15;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->relay_clients_connected(), target);
  }

  // optional fixed64 relayed_game_server_steam_id = 16;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(16, this->relayed_game_server_steam_id(), target);
  }

  // optional uint32 parent_relay_count = 17;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->parent_relay_count(), target);
  }

  // optional fixed64 tv_secret_code = 18;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(18, this->tv_secret_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGameServerInfo)
  return target;
}

size_t CMsgGameServerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGameServerInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string server_key = 5;
    if (has_server_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->server_key());
    }

    // optional fixed32 server_public_ip_addr = 1;
    if (has_server_public_ip_addr()) {
      total_size += 1 + 4;
    }

    // optional fixed32 server_private_ip_addr = 2;
    if (has_server_private_ip_addr()) {
      total_size += 1 + 4;
    }

    // optional uint32 server_port = 3;
    if (has_server_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_port());
    }

    // optional uint32 server_tv_port = 4;
    if (has_server_tv_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_tv_port());
    }

    // optional bool server_hibernation = 6;
    if (has_server_hibernation()) {
      total_size += 1 + 1;
    }

    // optional .CMsgGameServerInfo.ServerType server_type = 7 [default = UNSPECIFIED];
    if (has_server_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->server_type());
    }

    // optional uint32 server_region = 8;
    if (has_server_region()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_region());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional float server_loadavg = 9;
    if (has_server_loadavg()) {
      total_size += 1 + 4;
    }

    // optional float server_tv_broadcast_time = 10;
    if (has_server_tv_broadcast_time()) {
      total_size += 1 + 4;
    }

    // optional float server_game_time = 11;
    if (has_server_game_time()) {
      total_size += 1 + 4;
    }

    // optional fixed64 server_relay_connected_steam_id = 12;
    if (has_server_relay_connected_steam_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 relay_slots_max = 13;
    if (has_relay_slots_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->relay_slots_max());
    }

    // optional int32 relays_connected = 14;
    if (has_relays_connected()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->relays_connected());
    }

    // optional fixed64 relayed_game_server_steam_id = 16;
    if (has_relayed_game_server_steam_id()) {
      total_size += 2 + 8;
    }

    // optional int32 relay_clients_connected = 15;
    if (has_relay_clients_connected()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->relay_clients_connected());
    }

  }
  if (_has_bits_[16 / 32] & 196608u) {
    // optional uint32 parent_relay_count = 17;
    if (has_parent_relay_count()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->parent_relay_count());
    }

    // optional fixed64 tv_secret_code = 18;
    if (has_tv_secret_code()) {
      total_size += 2 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGameServerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGameServerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGameServerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGameServerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGameServerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGameServerInfo)
    MergeFrom(*source);
  }
}

void CMsgGameServerInfo::MergeFrom(const CMsgGameServerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGameServerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_server_key();
      server_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      server_public_ip_addr_ = from.server_public_ip_addr_;
    }
    if (cached_has_bits & 0x00000004u) {
      server_private_ip_addr_ = from.server_private_ip_addr_;
    }
    if (cached_has_bits & 0x00000008u) {
      server_port_ = from.server_port_;
    }
    if (cached_has_bits & 0x00000010u) {
      server_tv_port_ = from.server_tv_port_;
    }
    if (cached_has_bits & 0x00000020u) {
      server_hibernation_ = from.server_hibernation_;
    }
    if (cached_has_bits & 0x00000040u) {
      server_type_ = from.server_type_;
    }
    if (cached_has_bits & 0x00000080u) {
      server_region_ = from.server_region_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      server_loadavg_ = from.server_loadavg_;
    }
    if (cached_has_bits & 0x00000200u) {
      server_tv_broadcast_time_ = from.server_tv_broadcast_time_;
    }
    if (cached_has_bits & 0x00000400u) {
      server_game_time_ = from.server_game_time_;
    }
    if (cached_has_bits & 0x00000800u) {
      server_relay_connected_steam_id_ = from.server_relay_connected_steam_id_;
    }
    if (cached_has_bits & 0x00001000u) {
      relay_slots_max_ = from.relay_slots_max_;
    }
    if (cached_has_bits & 0x00002000u) {
      relays_connected_ = from.relays_connected_;
    }
    if (cached_has_bits & 0x00004000u) {
      relayed_game_server_steam_id_ = from.relayed_game_server_steam_id_;
    }
    if (cached_has_bits & 0x00008000u) {
      relay_clients_connected_ = from.relay_clients_connected_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 196608u) {
    if (cached_has_bits & 0x00010000u) {
      parent_relay_count_ = from.parent_relay_count_;
    }
    if (cached_has_bits & 0x00020000u) {
      tv_secret_code_ = from.tv_secret_code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGameServerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGameServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGameServerInfo::CopyFrom(const CMsgGameServerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGameServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGameServerInfo::IsInitialized() const {
  return true;
}

void CMsgGameServerInfo::Swap(CMsgGameServerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGameServerInfo::InternalSwap(CMsgGameServerInfo* other) {
  using std::swap;
  server_key_.Swap(&other->server_key_);
  swap(server_public_ip_addr_, other->server_public_ip_addr_);
  swap(server_private_ip_addr_, other->server_private_ip_addr_);
  swap(server_port_, other->server_port_);
  swap(server_tv_port_, other->server_tv_port_);
  swap(server_hibernation_, other->server_hibernation_);
  swap(server_type_, other->server_type_);
  swap(server_region_, other->server_region_);
  swap(server_loadavg_, other->server_loadavg_);
  swap(server_tv_broadcast_time_, other->server_tv_broadcast_time_);
  swap(server_game_time_, other->server_game_time_);
  swap(server_relay_connected_steam_id_, other->server_relay_connected_steam_id_);
  swap(relay_slots_max_, other->relay_slots_max_);
  swap(relays_connected_, other->relays_connected_);
  swap(relayed_game_server_steam_id_, other->relayed_game_server_steam_id_);
  swap(relay_clients_connected_, other->relay_clients_connected_);
  swap(parent_relay_count_, other->parent_relay_count_);
  swap(tv_secret_code_, other->tv_secret_code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGameServerInfo::GetMetadata() const {
  protobuf_base_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
