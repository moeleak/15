// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cstrike15_usermessages.proto

#include "cstrike15_usermessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class CCSUsrMsg_VGUIMenu_SubkeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_VGUIMenu_Subkey>
      _instance;
} _CCSUsrMsg_VGUIMenu_Subkey_default_instance_;
class CCSUsrMsg_VGUIMenuDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_VGUIMenu>
      _instance;
} _CCSUsrMsg_VGUIMenu_default_instance_;
class CCSUsrMsg_GeigerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_Geiger>
      _instance;
} _CCSUsrMsg_Geiger_default_instance_;
class CCSUsrMsg_TrainDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_Train>
      _instance;
} _CCSUsrMsg_Train_default_instance_;
class CCSUsrMsg_HudTextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_HudText>
      _instance;
} _CCSUsrMsg_HudText_default_instance_;
class CCSUsrMsg_SayTextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_SayText>
      _instance;
} _CCSUsrMsg_SayText_default_instance_;
class CCSUsrMsg_SayText2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_SayText2>
      _instance;
} _CCSUsrMsg_SayText2_default_instance_;
class CCSUsrMsg_TextMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_TextMsg>
      _instance;
} _CCSUsrMsg_TextMsg_default_instance_;
class CCSUsrMsg_HudMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_HudMsg>
      _instance;
} _CCSUsrMsg_HudMsg_default_instance_;
class CCSUsrMsg_ShakeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_Shake>
      _instance;
} _CCSUsrMsg_Shake_default_instance_;
class CCSUsrMsg_FadeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_Fade>
      _instance;
} _CCSUsrMsg_Fade_default_instance_;
class CCSUsrMsg_RumbleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_Rumble>
      _instance;
} _CCSUsrMsg_Rumble_default_instance_;
class CCSUsrMsg_CloseCaptionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_CloseCaption>
      _instance;
} _CCSUsrMsg_CloseCaption_default_instance_;
class CCSUsrMsg_CloseCaptionDirectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_CloseCaptionDirect>
      _instance;
} _CCSUsrMsg_CloseCaptionDirect_default_instance_;
class CCSUsrMsg_SendAudioDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_SendAudio>
      _instance;
} _CCSUsrMsg_SendAudio_default_instance_;
class CCSUsrMsg_RawAudioDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_RawAudio>
      _instance;
} _CCSUsrMsg_RawAudio_default_instance_;
class CCSUsrMsg_VoiceMask_PlayerMaskDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_VoiceMask_PlayerMask>
      _instance;
} _CCSUsrMsg_VoiceMask_PlayerMask_default_instance_;
class CCSUsrMsg_VoiceMaskDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_VoiceMask>
      _instance;
} _CCSUsrMsg_VoiceMask_default_instance_;
class CCSUsrMsg_DamageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_Damage>
      _instance;
} _CCSUsrMsg_Damage_default_instance_;
class CCSUsrMsg_RadioTextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_RadioText>
      _instance;
} _CCSUsrMsg_RadioText_default_instance_;
class CCSUsrMsg_HintTextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_HintText>
      _instance;
} _CCSUsrMsg_HintText_default_instance_;
class CCSUsrMsg_KeyHintTextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_KeyHintText>
      _instance;
} _CCSUsrMsg_KeyHintText_default_instance_;
class CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate>
      _instance;
} _CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate_default_instance_;
class CCSUsrMsg_ProcessSpottedEntityUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_ProcessSpottedEntityUpdate>
      _instance;
} _CCSUsrMsg_ProcessSpottedEntityUpdate_default_instance_;
class CCSUsrMsg_SendPlayerItemDropsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_SendPlayerItemDrops>
      _instance;
} _CCSUsrMsg_SendPlayerItemDrops_default_instance_;
class CCSUsrMsg_SendPlayerItemFoundDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_SendPlayerItemFound>
      _instance;
} _CCSUsrMsg_SendPlayerItemFound_default_instance_;
class CCSUsrMsg_ReloadEffectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_ReloadEffect>
      _instance;
} _CCSUsrMsg_ReloadEffect_default_instance_;
class CCSUsrMsg_AdjustMoneyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_AdjustMoney>
      _instance;
} _CCSUsrMsg_AdjustMoney_default_instance_;
class CCSUsrMsg_ReportHitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_ReportHit>
      _instance;
} _CCSUsrMsg_ReportHit_default_instance_;
class CCSUsrMsg_KillCamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_KillCam>
      _instance;
} _CCSUsrMsg_KillCam_default_instance_;
class CCSUsrMsg_DesiredTimescaleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_DesiredTimescale>
      _instance;
} _CCSUsrMsg_DesiredTimescale_default_instance_;
class CCSUsrMsg_CurrentTimescaleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_CurrentTimescale>
      _instance;
} _CCSUsrMsg_CurrentTimescale_default_instance_;
class CCSUsrMsg_AchievementEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_AchievementEvent>
      _instance;
} _CCSUsrMsg_AchievementEvent_default_instance_;
class CCSUsrMsg_MatchEndConditionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_MatchEndConditions>
      _instance;
} _CCSUsrMsg_MatchEndConditions_default_instance_;
class CCSUsrMsg_PlayerStatsUpdate_StatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_PlayerStatsUpdate_Stat>
      _instance;
} _CCSUsrMsg_PlayerStatsUpdate_Stat_default_instance_;
class CCSUsrMsg_PlayerStatsUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_PlayerStatsUpdate>
      _instance;
} _CCSUsrMsg_PlayerStatsUpdate_default_instance_;
class CCSUsrMsg_DisplayInventoryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_DisplayInventory>
      _instance;
} _CCSUsrMsg_DisplayInventory_default_instance_;
class CCSUsrMsg_QuestProgressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_QuestProgress>
      _instance;
} _CCSUsrMsg_QuestProgress_default_instance_;
class CCSUsrMsg_ScoreLeaderboardDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_ScoreLeaderboardData>
      _instance;
} _CCSUsrMsg_ScoreLeaderboardData_default_instance_;
class CCSUsrMsg_PlayerDecalDigitalSignatureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_PlayerDecalDigitalSignature>
      _instance;
} _CCSUsrMsg_PlayerDecalDigitalSignature_default_instance_;
class CCSUsrMsg_XRankGetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_XRankGet>
      _instance;
} _CCSUsrMsg_XRankGet_default_instance_;
class CCSUsrMsg_XRankUpdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_XRankUpd>
      _instance;
} _CCSUsrMsg_XRankUpd_default_instance_;
class CCSUsrMsg_CallVoteFailedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_CallVoteFailed>
      _instance;
} _CCSUsrMsg_CallVoteFailed_default_instance_;
class CCSUsrMsg_VoteStartDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_VoteStart>
      _instance;
} _CCSUsrMsg_VoteStart_default_instance_;
class CCSUsrMsg_VotePassDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_VotePass>
      _instance;
} _CCSUsrMsg_VotePass_default_instance_;
class CCSUsrMsg_VoteFailedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_VoteFailed>
      _instance;
} _CCSUsrMsg_VoteFailed_default_instance_;
class CCSUsrMsg_VoteSetupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_VoteSetup>
      _instance;
} _CCSUsrMsg_VoteSetup_default_instance_;
class CCSUsrMsg_SendLastKillerDamageToClientDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_SendLastKillerDamageToClient>
      _instance;
} _CCSUsrMsg_SendLastKillerDamageToClient_default_instance_;
class CCSUsrMsg_ServerRankUpdate_RankUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_ServerRankUpdate_RankUpdate>
      _instance;
} _CCSUsrMsg_ServerRankUpdate_RankUpdate_default_instance_;
class CCSUsrMsg_ServerRankUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_ServerRankUpdate>
      _instance;
} _CCSUsrMsg_ServerRankUpdate_default_instance_;
class CCSUsrMsg_XpUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_XpUpdate>
      _instance;
} _CCSUsrMsg_XpUpdate_default_instance_;
class CCSUsrMsg_ItemPickupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_ItemPickup>
      _instance;
} _CCSUsrMsg_ItemPickup_default_instance_;
class CCSUsrMsg_ShowMenuDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_ShowMenu>
      _instance;
} _CCSUsrMsg_ShowMenu_default_instance_;
class CCSUsrMsg_BarTimeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_BarTime>
      _instance;
} _CCSUsrMsg_BarTime_default_instance_;
class CCSUsrMsg_AmmoDeniedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_AmmoDenied>
      _instance;
} _CCSUsrMsg_AmmoDenied_default_instance_;
class CCSUsrMsg_MarkAchievementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_MarkAchievement>
      _instance;
} _CCSUsrMsg_MarkAchievement_default_instance_;
class CCSUsrMsg_MatchStatsUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_MatchStatsUpdate>
      _instance;
} _CCSUsrMsg_MatchStatsUpdate_default_instance_;
class CCSUsrMsg_ItemDropDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_ItemDrop>
      _instance;
} _CCSUsrMsg_ItemDrop_default_instance_;
class CCSUsrMsg_GlowPropTurnOffDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_GlowPropTurnOff>
      _instance;
} _CCSUsrMsg_GlowPropTurnOff_default_instance_;
class CCSUsrMsg_RoundBackupFilenamesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_RoundBackupFilenames>
      _instance;
} _CCSUsrMsg_RoundBackupFilenames_default_instance_;
class CCSUsrMsg_ResetHudDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_ResetHud>
      _instance;
} _CCSUsrMsg_ResetHud_default_instance_;
class CCSUsrMsg_GameTitleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_GameTitle>
      _instance;
} _CCSUsrMsg_GameTitle_default_instance_;
class CCSUsrMsg_RequestStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_RequestState>
      _instance;
} _CCSUsrMsg_RequestState_default_instance_;
class CCSUsrMsg_StopSpectatorModeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_StopSpectatorMode>
      _instance;
} _CCSUsrMsg_StopSpectatorMode_default_instance_;
class CCSUsrMsg_DisconnectToLobbyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_DisconnectToLobby>
      _instance;
} _CCSUsrMsg_DisconnectToLobby_default_instance_;
class CCSUsrMsg_WarmupHasEndedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_WarmupHasEnded>
      _instance;
} _CCSUsrMsg_WarmupHasEnded_default_instance_;
class CCSUsrMsg_ClientInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_ClientInfo>
      _instance;
} _CCSUsrMsg_ClientInfo_default_instance_;
class CCSUsrMsg_ServerRankRevealAllDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CCSUsrMsg_ServerRankRevealAll>
      _instance;
} _CCSUsrMsg_ServerRankRevealAll_default_instance_;
namespace protobuf_cstrike15_5fusermessages_2eproto {
void InitDefaultsCCSUsrMsg_VGUIMenu_SubkeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_VGUIMenu_Subkey_default_instance_;
    new (ptr) ::CCSUsrMsg_VGUIMenu_Subkey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_VGUIMenu_Subkey::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_VGUIMenu_Subkey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_VGUIMenu_SubkeyImpl);
}

void InitDefaultsCCSUsrMsg_VGUIMenuImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_VGUIMenu_Subkey();
  {
    void* ptr = &::_CCSUsrMsg_VGUIMenu_default_instance_;
    new (ptr) ::CCSUsrMsg_VGUIMenu();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_VGUIMenu::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_VGUIMenu() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_VGUIMenuImpl);
}

void InitDefaultsCCSUsrMsg_GeigerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_Geiger_default_instance_;
    new (ptr) ::CCSUsrMsg_Geiger();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_Geiger::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_Geiger() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_GeigerImpl);
}

void InitDefaultsCCSUsrMsg_TrainImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_Train_default_instance_;
    new (ptr) ::CCSUsrMsg_Train();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_Train::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_Train() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_TrainImpl);
}

void InitDefaultsCCSUsrMsg_HudTextImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_HudText_default_instance_;
    new (ptr) ::CCSUsrMsg_HudText();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_HudText::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_HudText() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_HudTextImpl);
}

void InitDefaultsCCSUsrMsg_SayTextImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_SayText_default_instance_;
    new (ptr) ::CCSUsrMsg_SayText();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_SayText::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_SayText() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_SayTextImpl);
}

void InitDefaultsCCSUsrMsg_SayText2Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_SayText2_default_instance_;
    new (ptr) ::CCSUsrMsg_SayText2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_SayText2::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_SayText2() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_SayText2Impl);
}

void InitDefaultsCCSUsrMsg_TextMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_TextMsg_default_instance_;
    new (ptr) ::CCSUsrMsg_TextMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_TextMsg::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_TextMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_TextMsgImpl);
}

void InitDefaultsCCSUsrMsg_HudMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_netmessages_2eproto::InitDefaultsCMsgVector2D();
  protobuf_netmessages_2eproto::InitDefaultsCMsgRGBA();
  {
    void* ptr = &::_CCSUsrMsg_HudMsg_default_instance_;
    new (ptr) ::CCSUsrMsg_HudMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_HudMsg::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_HudMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_HudMsgImpl);
}

void InitDefaultsCCSUsrMsg_ShakeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_Shake_default_instance_;
    new (ptr) ::CCSUsrMsg_Shake();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_Shake::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_Shake() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_ShakeImpl);
}

void InitDefaultsCCSUsrMsg_FadeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_netmessages_2eproto::InitDefaultsCMsgRGBA();
  {
    void* ptr = &::_CCSUsrMsg_Fade_default_instance_;
    new (ptr) ::CCSUsrMsg_Fade();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_Fade::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_Fade() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_FadeImpl);
}

void InitDefaultsCCSUsrMsg_RumbleImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_Rumble_default_instance_;
    new (ptr) ::CCSUsrMsg_Rumble();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_Rumble::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_Rumble() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_RumbleImpl);
}

void InitDefaultsCCSUsrMsg_CloseCaptionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_CloseCaption_default_instance_;
    new (ptr) ::CCSUsrMsg_CloseCaption();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_CloseCaption::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_CloseCaption() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_CloseCaptionImpl);
}

void InitDefaultsCCSUsrMsg_CloseCaptionDirectImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_CloseCaptionDirect_default_instance_;
    new (ptr) ::CCSUsrMsg_CloseCaptionDirect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_CloseCaptionDirect::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_CloseCaptionDirect() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_CloseCaptionDirectImpl);
}

void InitDefaultsCCSUsrMsg_SendAudioImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_SendAudio_default_instance_;
    new (ptr) ::CCSUsrMsg_SendAudio();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_SendAudio::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_SendAudio() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_SendAudioImpl);
}

void InitDefaultsCCSUsrMsg_RawAudioImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_RawAudio_default_instance_;
    new (ptr) ::CCSUsrMsg_RawAudio();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_RawAudio::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_RawAudio() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_RawAudioImpl);
}

void InitDefaultsCCSUsrMsg_VoiceMask_PlayerMaskImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_VoiceMask_PlayerMask_default_instance_;
    new (ptr) ::CCSUsrMsg_VoiceMask_PlayerMask();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_VoiceMask_PlayerMask::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_VoiceMask_PlayerMask() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_VoiceMask_PlayerMaskImpl);
}

void InitDefaultsCCSUsrMsg_VoiceMaskImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_VoiceMask_PlayerMask();
  {
    void* ptr = &::_CCSUsrMsg_VoiceMask_default_instance_;
    new (ptr) ::CCSUsrMsg_VoiceMask();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_VoiceMask::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_VoiceMask() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_VoiceMaskImpl);
}

void InitDefaultsCCSUsrMsg_DamageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_netmessages_2eproto::InitDefaultsCMsgVector();
  {
    void* ptr = &::_CCSUsrMsg_Damage_default_instance_;
    new (ptr) ::CCSUsrMsg_Damage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_Damage::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_Damage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_DamageImpl);
}

void InitDefaultsCCSUsrMsg_RadioTextImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_RadioText_default_instance_;
    new (ptr) ::CCSUsrMsg_RadioText();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_RadioText::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_RadioText() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_RadioTextImpl);
}

void InitDefaultsCCSUsrMsg_HintTextImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_HintText_default_instance_;
    new (ptr) ::CCSUsrMsg_HintText();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_HintText::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_HintText() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_HintTextImpl);
}

void InitDefaultsCCSUsrMsg_KeyHintTextImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_KeyHintText_default_instance_;
    new (ptr) ::CCSUsrMsg_KeyHintText();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_KeyHintText::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_KeyHintText() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_KeyHintTextImpl);
}

void InitDefaultsCCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate_default_instance_;
    new (ptr) ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdateImpl);
}

void InitDefaultsCCSUsrMsg_ProcessSpottedEntityUpdateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate();
  {
    void* ptr = &::_CCSUsrMsg_ProcessSpottedEntityUpdate_default_instance_;
    new (ptr) ::CCSUsrMsg_ProcessSpottedEntityUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_ProcessSpottedEntityUpdate::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_ProcessSpottedEntityUpdate() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_ProcessSpottedEntityUpdateImpl);
}

void InitDefaultsCCSUsrMsg_SendPlayerItemDropsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cstrike15_5fgcmessages_2eproto::InitDefaultsCEconItemPreviewDataBlock();
  {
    void* ptr = &::_CCSUsrMsg_SendPlayerItemDrops_default_instance_;
    new (ptr) ::CCSUsrMsg_SendPlayerItemDrops();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_SendPlayerItemDrops::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_SendPlayerItemDrops() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_SendPlayerItemDropsImpl);
}

void InitDefaultsCCSUsrMsg_SendPlayerItemFoundImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cstrike15_5fgcmessages_2eproto::InitDefaultsCEconItemPreviewDataBlock();
  {
    void* ptr = &::_CCSUsrMsg_SendPlayerItemFound_default_instance_;
    new (ptr) ::CCSUsrMsg_SendPlayerItemFound();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_SendPlayerItemFound::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_SendPlayerItemFound() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_SendPlayerItemFoundImpl);
}

void InitDefaultsCCSUsrMsg_ReloadEffectImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_ReloadEffect_default_instance_;
    new (ptr) ::CCSUsrMsg_ReloadEffect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_ReloadEffect::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_ReloadEffect() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_ReloadEffectImpl);
}

void InitDefaultsCCSUsrMsg_AdjustMoneyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_AdjustMoney_default_instance_;
    new (ptr) ::CCSUsrMsg_AdjustMoney();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_AdjustMoney::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_AdjustMoney() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_AdjustMoneyImpl);
}

void InitDefaultsCCSUsrMsg_ReportHitImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_ReportHit_default_instance_;
    new (ptr) ::CCSUsrMsg_ReportHit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_ReportHit::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_ReportHit() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_ReportHitImpl);
}

void InitDefaultsCCSUsrMsg_KillCamImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_KillCam_default_instance_;
    new (ptr) ::CCSUsrMsg_KillCam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_KillCam::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_KillCam() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_KillCamImpl);
}

void InitDefaultsCCSUsrMsg_DesiredTimescaleImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_DesiredTimescale_default_instance_;
    new (ptr) ::CCSUsrMsg_DesiredTimescale();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_DesiredTimescale::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_DesiredTimescale() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_DesiredTimescaleImpl);
}

void InitDefaultsCCSUsrMsg_CurrentTimescaleImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_CurrentTimescale_default_instance_;
    new (ptr) ::CCSUsrMsg_CurrentTimescale();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_CurrentTimescale::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_CurrentTimescale() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_CurrentTimescaleImpl);
}

void InitDefaultsCCSUsrMsg_AchievementEventImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_AchievementEvent_default_instance_;
    new (ptr) ::CCSUsrMsg_AchievementEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_AchievementEvent::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_AchievementEvent() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_AchievementEventImpl);
}

void InitDefaultsCCSUsrMsg_MatchEndConditionsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_MatchEndConditions_default_instance_;
    new (ptr) ::CCSUsrMsg_MatchEndConditions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_MatchEndConditions::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_MatchEndConditions() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_MatchEndConditionsImpl);
}

void InitDefaultsCCSUsrMsg_PlayerStatsUpdate_StatImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_PlayerStatsUpdate_Stat_default_instance_;
    new (ptr) ::CCSUsrMsg_PlayerStatsUpdate_Stat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_PlayerStatsUpdate_Stat::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_PlayerStatsUpdate_Stat() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_PlayerStatsUpdate_StatImpl);
}

void InitDefaultsCCSUsrMsg_PlayerStatsUpdateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_PlayerStatsUpdate_Stat();
  {
    void* ptr = &::_CCSUsrMsg_PlayerStatsUpdate_default_instance_;
    new (ptr) ::CCSUsrMsg_PlayerStatsUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_PlayerStatsUpdate::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_PlayerStatsUpdate() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_PlayerStatsUpdateImpl);
}

void InitDefaultsCCSUsrMsg_DisplayInventoryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_DisplayInventory_default_instance_;
    new (ptr) ::CCSUsrMsg_DisplayInventory();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_DisplayInventory::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_DisplayInventory() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_DisplayInventoryImpl);
}

void InitDefaultsCCSUsrMsg_QuestProgressImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_QuestProgress_default_instance_;
    new (ptr) ::CCSUsrMsg_QuestProgress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_QuestProgress::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_QuestProgress() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_QuestProgressImpl);
}

void InitDefaultsCCSUsrMsg_ScoreLeaderboardDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cstrike15_5fgcmessages_2eproto::InitDefaultsScoreLeaderboardData();
  {
    void* ptr = &::_CCSUsrMsg_ScoreLeaderboardData_default_instance_;
    new (ptr) ::CCSUsrMsg_ScoreLeaderboardData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_ScoreLeaderboardData::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_ScoreLeaderboardData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_ScoreLeaderboardDataImpl);
}

void InitDefaultsCCSUsrMsg_PlayerDecalDigitalSignatureImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cstrike15_5fgcmessages_2eproto::InitDefaultsPlayerDecalDigitalSignature();
  {
    void* ptr = &::_CCSUsrMsg_PlayerDecalDigitalSignature_default_instance_;
    new (ptr) ::CCSUsrMsg_PlayerDecalDigitalSignature();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_PlayerDecalDigitalSignature::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_PlayerDecalDigitalSignature() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_PlayerDecalDigitalSignatureImpl);
}

void InitDefaultsCCSUsrMsg_XRankGetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_XRankGet_default_instance_;
    new (ptr) ::CCSUsrMsg_XRankGet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_XRankGet::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_XRankGet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_XRankGetImpl);
}

void InitDefaultsCCSUsrMsg_XRankUpdImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_XRankUpd_default_instance_;
    new (ptr) ::CCSUsrMsg_XRankUpd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_XRankUpd::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_XRankUpd() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_XRankUpdImpl);
}

void InitDefaultsCCSUsrMsg_CallVoteFailedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_CallVoteFailed_default_instance_;
    new (ptr) ::CCSUsrMsg_CallVoteFailed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_CallVoteFailed::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_CallVoteFailed() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_CallVoteFailedImpl);
}

void InitDefaultsCCSUsrMsg_VoteStartImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_VoteStart_default_instance_;
    new (ptr) ::CCSUsrMsg_VoteStart();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_VoteStart::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_VoteStart() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_VoteStartImpl);
}

void InitDefaultsCCSUsrMsg_VotePassImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_VotePass_default_instance_;
    new (ptr) ::CCSUsrMsg_VotePass();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_VotePass::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_VotePass() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_VotePassImpl);
}

void InitDefaultsCCSUsrMsg_VoteFailedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_VoteFailed_default_instance_;
    new (ptr) ::CCSUsrMsg_VoteFailed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_VoteFailed::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_VoteFailed() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_VoteFailedImpl);
}

void InitDefaultsCCSUsrMsg_VoteSetupImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_VoteSetup_default_instance_;
    new (ptr) ::CCSUsrMsg_VoteSetup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_VoteSetup::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_VoteSetup() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_VoteSetupImpl);
}

void InitDefaultsCCSUsrMsg_SendLastKillerDamageToClientImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_SendLastKillerDamageToClient_default_instance_;
    new (ptr) ::CCSUsrMsg_SendLastKillerDamageToClient();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_SendLastKillerDamageToClient::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_SendLastKillerDamageToClient() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_SendLastKillerDamageToClientImpl);
}

void InitDefaultsCCSUsrMsg_ServerRankUpdate_RankUpdateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_ServerRankUpdate_RankUpdate_default_instance_;
    new (ptr) ::CCSUsrMsg_ServerRankUpdate_RankUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_ServerRankUpdate_RankUpdate::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_ServerRankUpdate_RankUpdate() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_ServerRankUpdate_RankUpdateImpl);
}

void InitDefaultsCCSUsrMsg_ServerRankUpdateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ServerRankUpdate_RankUpdate();
  {
    void* ptr = &::_CCSUsrMsg_ServerRankUpdate_default_instance_;
    new (ptr) ::CCSUsrMsg_ServerRankUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_ServerRankUpdate::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_ServerRankUpdate() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_ServerRankUpdateImpl);
}

void InitDefaultsCCSUsrMsg_XpUpdateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cstrike15_5fgcmessages_2eproto::InitDefaultsCMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded();
  {
    void* ptr = &::_CCSUsrMsg_XpUpdate_default_instance_;
    new (ptr) ::CCSUsrMsg_XpUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_XpUpdate::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_XpUpdate() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_XpUpdateImpl);
}

void InitDefaultsCCSUsrMsg_ItemPickupImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_ItemPickup_default_instance_;
    new (ptr) ::CCSUsrMsg_ItemPickup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_ItemPickup::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_ItemPickup() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_ItemPickupImpl);
}

void InitDefaultsCCSUsrMsg_ShowMenuImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_ShowMenu_default_instance_;
    new (ptr) ::CCSUsrMsg_ShowMenu();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_ShowMenu::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_ShowMenu() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_ShowMenuImpl);
}

void InitDefaultsCCSUsrMsg_BarTimeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_BarTime_default_instance_;
    new (ptr) ::CCSUsrMsg_BarTime();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_BarTime::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_BarTime() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_BarTimeImpl);
}

void InitDefaultsCCSUsrMsg_AmmoDeniedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_AmmoDenied_default_instance_;
    new (ptr) ::CCSUsrMsg_AmmoDenied();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_AmmoDenied::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_AmmoDenied() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_AmmoDeniedImpl);
}

void InitDefaultsCCSUsrMsg_MarkAchievementImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_MarkAchievement_default_instance_;
    new (ptr) ::CCSUsrMsg_MarkAchievement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_MarkAchievement::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_MarkAchievement() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_MarkAchievementImpl);
}

void InitDefaultsCCSUsrMsg_MatchStatsUpdateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_MatchStatsUpdate_default_instance_;
    new (ptr) ::CCSUsrMsg_MatchStatsUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_MatchStatsUpdate::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_MatchStatsUpdate() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_MatchStatsUpdateImpl);
}

void InitDefaultsCCSUsrMsg_ItemDropImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_ItemDrop_default_instance_;
    new (ptr) ::CCSUsrMsg_ItemDrop();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_ItemDrop::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_ItemDrop() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_ItemDropImpl);
}

void InitDefaultsCCSUsrMsg_GlowPropTurnOffImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_GlowPropTurnOff_default_instance_;
    new (ptr) ::CCSUsrMsg_GlowPropTurnOff();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_GlowPropTurnOff::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_GlowPropTurnOff() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_GlowPropTurnOffImpl);
}

void InitDefaultsCCSUsrMsg_RoundBackupFilenamesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_RoundBackupFilenames_default_instance_;
    new (ptr) ::CCSUsrMsg_RoundBackupFilenames();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_RoundBackupFilenames::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_RoundBackupFilenames() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_RoundBackupFilenamesImpl);
}

void InitDefaultsCCSUsrMsg_ResetHudImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_ResetHud_default_instance_;
    new (ptr) ::CCSUsrMsg_ResetHud();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_ResetHud::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_ResetHud() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_ResetHudImpl);
}

void InitDefaultsCCSUsrMsg_GameTitleImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_GameTitle_default_instance_;
    new (ptr) ::CCSUsrMsg_GameTitle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_GameTitle::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_GameTitle() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_GameTitleImpl);
}

void InitDefaultsCCSUsrMsg_RequestStateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_RequestState_default_instance_;
    new (ptr) ::CCSUsrMsg_RequestState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_RequestState::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_RequestState() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_RequestStateImpl);
}

void InitDefaultsCCSUsrMsg_StopSpectatorModeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_StopSpectatorMode_default_instance_;
    new (ptr) ::CCSUsrMsg_StopSpectatorMode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_StopSpectatorMode::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_StopSpectatorMode() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_StopSpectatorModeImpl);
}

void InitDefaultsCCSUsrMsg_DisconnectToLobbyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_DisconnectToLobby_default_instance_;
    new (ptr) ::CCSUsrMsg_DisconnectToLobby();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_DisconnectToLobby::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_DisconnectToLobby() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_DisconnectToLobbyImpl);
}

void InitDefaultsCCSUsrMsg_WarmupHasEndedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_WarmupHasEnded_default_instance_;
    new (ptr) ::CCSUsrMsg_WarmupHasEnded();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_WarmupHasEnded::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_WarmupHasEnded() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_WarmupHasEndedImpl);
}

void InitDefaultsCCSUsrMsg_ClientInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_ClientInfo_default_instance_;
    new (ptr) ::CCSUsrMsg_ClientInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_ClientInfo::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_ClientInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_ClientInfoImpl);
}

void InitDefaultsCCSUsrMsg_ServerRankRevealAllImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CCSUsrMsg_ServerRankRevealAll_default_instance_;
    new (ptr) ::CCSUsrMsg_ServerRankRevealAll();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CCSUsrMsg_ServerRankRevealAll::InitAsDefaultInstance();
}

void InitDefaultsCCSUsrMsg_ServerRankRevealAll() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCCSUsrMsg_ServerRankRevealAllImpl);
}

::google::protobuf::Metadata file_level_metadata[68];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VGUIMenu_Subkey, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VGUIMenu_Subkey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VGUIMenu_Subkey, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VGUIMenu_Subkey, str_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VGUIMenu, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VGUIMenu, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VGUIMenu, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VGUIMenu, show_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VGUIMenu, subkeys_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Geiger, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Geiger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Geiger, range_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Train, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Train, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Train, train_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_HudText, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_HudText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_HudText, text_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SayText, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SayText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SayText, ent_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SayText, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SayText, chat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SayText, textallchat_),
  1,
  0,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SayText2, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SayText2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SayText2, ent_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SayText2, chat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SayText2, msg_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SayText2, params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SayText2, textallchat_),
  1,
  2,
  0,
  ~0u,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_TextMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_TextMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_TextMsg, msg_dst_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_TextMsg, params_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_HudMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_HudMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_HudMsg, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_HudMsg, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_HudMsg, clr1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_HudMsg, clr2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_HudMsg, effect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_HudMsg, fade_in_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_HudMsg, fade_out_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_HudMsg, hold_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_HudMsg, fx_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_HudMsg, text_),
  4,
  1,
  2,
  3,
  5,
  6,
  7,
  8,
  9,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Shake, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Shake, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Shake, command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Shake, local_amplitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Shake, frequency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Shake, duration_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Fade, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Fade, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Fade, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Fade, hold_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Fade, flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Fade, clr_),
  1,
  2,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Rumble, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Rumble, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Rumble, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Rumble, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Rumble, flags_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_CloseCaption, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_CloseCaption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_CloseCaption, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_CloseCaption, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_CloseCaption, from_player_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_CloseCaptionDirect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_CloseCaptionDirect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_CloseCaptionDirect, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_CloseCaptionDirect, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_CloseCaptionDirect, from_player_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SendAudio, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SendAudio, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SendAudio, radio_sound_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_RawAudio, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_RawAudio, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_RawAudio, pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_RawAudio, entidx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_RawAudio, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_RawAudio, voice_filename_),
  1,
  2,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VoiceMask_PlayerMask, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VoiceMask_PlayerMask, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VoiceMask_PlayerMask, game_rules_mask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VoiceMask_PlayerMask, ban_masks_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VoiceMask, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VoiceMask, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VoiceMask, player_masks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VoiceMask, player_mod_enable_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Damage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Damage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Damage, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Damage, inflictor_world_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_Damage, victim_entindex_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_RadioText, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_RadioText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_RadioText, msg_dst_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_RadioText, client_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_RadioText, msg_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_RadioText, params_),
  1,
  2,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_HintText, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_HintText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_HintText, text_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_KeyHintText, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_KeyHintText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_KeyHintText, hints_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate, entity_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate, class_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate, origin_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate, origin_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate, origin_z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate, angle_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate, defuser_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate, player_has_defuser_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate, player_has_c4_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ProcessSpottedEntityUpdate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ProcessSpottedEntityUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ProcessSpottedEntityUpdate, new_update_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ProcessSpottedEntityUpdate, entity_updates_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SendPlayerItemDrops, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SendPlayerItemDrops, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SendPlayerItemDrops, entity_updates_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SendPlayerItemFound, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SendPlayerItemFound, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SendPlayerItemFound, iteminfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SendPlayerItemFound, entindex_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ReloadEffect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ReloadEffect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ReloadEffect, entidx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ReloadEffect, actanim_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ReloadEffect, origin_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ReloadEffect, origin_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ReloadEffect, origin_z_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_AdjustMoney, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_AdjustMoney, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_AdjustMoney, amount_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ReportHit, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ReportHit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ReportHit, pos_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ReportHit, pos_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ReportHit, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ReportHit, pos_z_),
  0,
  1,
  3,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_KillCam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_KillCam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_KillCam, obs_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_KillCam, first_target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_KillCam, second_target_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_DesiredTimescale, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_DesiredTimescale, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_DesiredTimescale, desired_timescale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_DesiredTimescale, duration_realtime_sec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_DesiredTimescale, interpolator_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_DesiredTimescale, start_blend_time_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_CurrentTimescale, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_CurrentTimescale, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_CurrentTimescale, cur_timescale_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_AchievementEvent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_AchievementEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_AchievementEvent, achievement_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_AchievementEvent, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_AchievementEvent, user_id_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_MatchEndConditions, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_MatchEndConditions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_MatchEndConditions, fraglimit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_MatchEndConditions, mp_maxrounds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_MatchEndConditions, mp_winlimit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_MatchEndConditions, mp_timelimit_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_PlayerStatsUpdate_Stat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_PlayerStatsUpdate_Stat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_PlayerStatsUpdate_Stat, idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_PlayerStatsUpdate_Stat, delta_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_PlayerStatsUpdate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_PlayerStatsUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_PlayerStatsUpdate, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_PlayerStatsUpdate, stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_PlayerStatsUpdate, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_PlayerStatsUpdate, crc_),
  0,
  ~0u,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_DisplayInventory, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_DisplayInventory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_DisplayInventory, display_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_DisplayInventory, user_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_QuestProgress, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_QuestProgress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_QuestProgress, quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_QuestProgress, normal_points_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_QuestProgress, bonus_points_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_QuestProgress, is_event_quest_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ScoreLeaderboardData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ScoreLeaderboardData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ScoreLeaderboardData, data_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_PlayerDecalDigitalSignature, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_PlayerDecalDigitalSignature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_PlayerDecalDigitalSignature, data_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_XRankGet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_XRankGet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_XRankGet, mode_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_XRankGet, controller_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_XRankUpd, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_XRankUpd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_XRankUpd, mode_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_XRankUpd, controller_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_XRankUpd, ranking_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_CallVoteFailed, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_CallVoteFailed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_CallVoteFailed, reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_CallVoteFailed, time_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VoteStart, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VoteStart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VoteStart, team_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VoteStart, ent_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VoteStart, vote_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VoteStart, disp_str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VoteStart, details_str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VoteStart, other_team_str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VoteStart, is_yes_no_vote_),
  3,
  4,
  5,
  0,
  1,
  2,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VotePass, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VotePass, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VotePass, team_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VotePass, vote_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VotePass, disp_str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VotePass, details_str_),
  2,
  3,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VoteFailed, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VoteFailed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VoteFailed, team_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VoteFailed, reason_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VoteSetup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VoteSetup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_VoteSetup, potential_issues_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SendLastKillerDamageToClient, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SendLastKillerDamageToClient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SendLastKillerDamageToClient, num_hits_given_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SendLastKillerDamageToClient, damage_given_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SendLastKillerDamageToClient, num_hits_taken_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_SendLastKillerDamageToClient, damage_taken_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ServerRankUpdate_RankUpdate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ServerRankUpdate_RankUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ServerRankUpdate_RankUpdate, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ServerRankUpdate_RankUpdate, rank_old_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ServerRankUpdate_RankUpdate, rank_new_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ServerRankUpdate_RankUpdate, num_wins_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ServerRankUpdate_RankUpdate, rank_change_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ServerRankUpdate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ServerRankUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ServerRankUpdate, rank_update_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_XpUpdate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_XpUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_XpUpdate, data_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ItemPickup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ItemPickup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ItemPickup, item_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ShowMenu, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ShowMenu, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ShowMenu, bits_valid_slots_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ShowMenu, display_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ShowMenu, menu_string_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_BarTime, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_BarTime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_BarTime, time_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_AmmoDenied, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_AmmoDenied, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_AmmoDenied, ammoidx_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_MarkAchievement, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_MarkAchievement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_MarkAchievement, achievement_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_MatchStatsUpdate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_MatchStatsUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_MatchStatsUpdate, update_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ItemDrop, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ItemDrop, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ItemDrop, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ItemDrop, death_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_GlowPropTurnOff, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_GlowPropTurnOff, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_GlowPropTurnOff, entidx_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_RoundBackupFilenames, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_RoundBackupFilenames, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_RoundBackupFilenames, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_RoundBackupFilenames, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_RoundBackupFilenames, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_RoundBackupFilenames, nicename_),
  2,
  3,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ResetHud, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ResetHud, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ResetHud, reset_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_GameTitle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_GameTitle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_GameTitle, dummy_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_RequestState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_RequestState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_RequestState, dummy_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_StopSpectatorMode, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_StopSpectatorMode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_StopSpectatorMode, dummy_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_DisconnectToLobby, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_DisconnectToLobby, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_DisconnectToLobby, dummy_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_WarmupHasEnded, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_WarmupHasEnded, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_WarmupHasEnded, dummy_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ClientInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ClientInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ClientInfo, dummy_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ServerRankRevealAll, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ServerRankRevealAll, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CCSUsrMsg_ServerRankRevealAll, seconds_till_shutdown_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::CCSUsrMsg_VGUIMenu_Subkey)},
  { 9, 17, sizeof(::CCSUsrMsg_VGUIMenu)},
  { 20, 26, sizeof(::CCSUsrMsg_Geiger)},
  { 27, 33, sizeof(::CCSUsrMsg_Train)},
  { 34, 40, sizeof(::CCSUsrMsg_HudText)},
  { 41, 50, sizeof(::CCSUsrMsg_SayText)},
  { 54, 64, sizeof(::CCSUsrMsg_SayText2)},
  { 69, 76, sizeof(::CCSUsrMsg_TextMsg)},
  { 78, 93, sizeof(::CCSUsrMsg_HudMsg)},
  { 103, 112, sizeof(::CCSUsrMsg_Shake)},
  { 116, 125, sizeof(::CCSUsrMsg_Fade)},
  { 129, 137, sizeof(::CCSUsrMsg_Rumble)},
  { 140, 148, sizeof(::CCSUsrMsg_CloseCaption)},
  { 151, 159, sizeof(::CCSUsrMsg_CloseCaptionDirect)},
  { 162, 168, sizeof(::CCSUsrMsg_SendAudio)},
  { 169, 178, sizeof(::CCSUsrMsg_RawAudio)},
  { 182, 189, sizeof(::CCSUsrMsg_VoiceMask_PlayerMask)},
  { 191, 198, sizeof(::CCSUsrMsg_VoiceMask)},
  { 200, 208, sizeof(::CCSUsrMsg_Damage)},
  { 211, 220, sizeof(::CCSUsrMsg_RadioText)},
  { 224, 230, sizeof(::CCSUsrMsg_HintText)},
  { 231, 237, sizeof(::CCSUsrMsg_KeyHintText)},
  { 238, 252, sizeof(::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate)},
  { 261, 268, sizeof(::CCSUsrMsg_ProcessSpottedEntityUpdate)},
  { 270, 276, sizeof(::CCSUsrMsg_SendPlayerItemDrops)},
  { 277, 284, sizeof(::CCSUsrMsg_SendPlayerItemFound)},
  { 286, 296, sizeof(::CCSUsrMsg_ReloadEffect)},
  { 301, 307, sizeof(::CCSUsrMsg_AdjustMoney)},
  { 308, 317, sizeof(::CCSUsrMsg_ReportHit)},
  { 321, 329, sizeof(::CCSUsrMsg_KillCam)},
  { 332, 341, sizeof(::CCSUsrMsg_DesiredTimescale)},
  { 345, 351, sizeof(::CCSUsrMsg_CurrentTimescale)},
  { 352, 360, sizeof(::CCSUsrMsg_AchievementEvent)},
  { 363, 372, sizeof(::CCSUsrMsg_MatchEndConditions)},
  { 376, 383, sizeof(::CCSUsrMsg_PlayerStatsUpdate_Stat)},
  { 385, 394, sizeof(::CCSUsrMsg_PlayerStatsUpdate)},
  { 398, 405, sizeof(::CCSUsrMsg_DisplayInventory)},
  { 407, 416, sizeof(::CCSUsrMsg_QuestProgress)},
  { 420, 426, sizeof(::CCSUsrMsg_ScoreLeaderboardData)},
  { 427, 433, sizeof(::CCSUsrMsg_PlayerDecalDigitalSignature)},
  { 434, 441, sizeof(::CCSUsrMsg_XRankGet)},
  { 443, 451, sizeof(::CCSUsrMsg_XRankUpd)},
  { 454, 461, sizeof(::CCSUsrMsg_CallVoteFailed)},
  { 463, 475, sizeof(::CCSUsrMsg_VoteStart)},
  { 482, 491, sizeof(::CCSUsrMsg_VotePass)},
  { 495, 502, sizeof(::CCSUsrMsg_VoteFailed)},
  { 504, 510, sizeof(::CCSUsrMsg_VoteSetup)},
  { 511, 520, sizeof(::CCSUsrMsg_SendLastKillerDamageToClient)},
  { 524, 534, sizeof(::CCSUsrMsg_ServerRankUpdate_RankUpdate)},
  { 539, 545, sizeof(::CCSUsrMsg_ServerRankUpdate)},
  { 546, 552, sizeof(::CCSUsrMsg_XpUpdate)},
  { 553, 559, sizeof(::CCSUsrMsg_ItemPickup)},
  { 560, 568, sizeof(::CCSUsrMsg_ShowMenu)},
  { 571, 577, sizeof(::CCSUsrMsg_BarTime)},
  { 578, 584, sizeof(::CCSUsrMsg_AmmoDenied)},
  { 585, 591, sizeof(::CCSUsrMsg_MarkAchievement)},
  { 592, 598, sizeof(::CCSUsrMsg_MatchStatsUpdate)},
  { 599, 606, sizeof(::CCSUsrMsg_ItemDrop)},
  { 608, 614, sizeof(::CCSUsrMsg_GlowPropTurnOff)},
  { 615, 624, sizeof(::CCSUsrMsg_RoundBackupFilenames)},
  { 628, 634, sizeof(::CCSUsrMsg_ResetHud)},
  { 635, 641, sizeof(::CCSUsrMsg_GameTitle)},
  { 642, 648, sizeof(::CCSUsrMsg_RequestState)},
  { 649, 655, sizeof(::CCSUsrMsg_StopSpectatorMode)},
  { 656, 662, sizeof(::CCSUsrMsg_DisconnectToLobby)},
  { 663, 669, sizeof(::CCSUsrMsg_WarmupHasEnded)},
  { 670, 676, sizeof(::CCSUsrMsg_ClientInfo)},
  { 677, 683, sizeof(::CCSUsrMsg_ServerRankRevealAll)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_VGUIMenu_Subkey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_VGUIMenu_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_Geiger_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_Train_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_HudText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_SayText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_SayText2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_TextMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_HudMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_Shake_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_Fade_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_Rumble_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_CloseCaption_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_CloseCaptionDirect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_SendAudio_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_RawAudio_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_VoiceMask_PlayerMask_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_VoiceMask_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_Damage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_RadioText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_HintText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_KeyHintText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_ProcessSpottedEntityUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_SendPlayerItemDrops_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_SendPlayerItemFound_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_ReloadEffect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_AdjustMoney_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_ReportHit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_KillCam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_DesiredTimescale_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_CurrentTimescale_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_AchievementEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_MatchEndConditions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_PlayerStatsUpdate_Stat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_PlayerStatsUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_DisplayInventory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_QuestProgress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_ScoreLeaderboardData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_PlayerDecalDigitalSignature_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_XRankGet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_XRankUpd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_CallVoteFailed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_VoteStart_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_VotePass_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_VoteFailed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_VoteSetup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_SendLastKillerDamageToClient_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_ServerRankUpdate_RankUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_ServerRankUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_XpUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_ItemPickup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_ShowMenu_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_BarTime_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_AmmoDenied_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_MarkAchievement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_MatchStatsUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_ItemDrop_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_GlowPropTurnOff_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_RoundBackupFilenames_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_ResetHud_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_GameTitle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_RequestState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_StopSpectatorMode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_DisconnectToLobby_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_WarmupHasEnded_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_ClientInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CCSUsrMsg_ServerRankRevealAll_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cstrike15_usermessages.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 68);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\034cstrike15_usermessages.proto\032 google/p"
      "rotobuf/descriptor.proto\032\021netmessages.pr"
      "oto\032\032cstrike15_gcmessages.proto\"\202\001\n\022CCSU"
      "srMsg_VGUIMenu\022\014\n\004name\030\001 \001(\t\022\014\n\004show\030\002 \001"
      "(\010\022+\n\007subkeys\030\003 \003(\0132\032.CCSUsrMsg_VGUIMenu"
      ".Subkey\032#\n\006Subkey\022\014\n\004name\030\001 \001(\t\022\013\n\003str\030\002"
      " \001(\t\"!\n\020CCSUsrMsg_Geiger\022\r\n\005range\030\001 \001(\005\""
      " \n\017CCSUsrMsg_Train\022\r\n\005train\030\001 \001(\005\"!\n\021CCS"
      "UsrMsg_HudText\022\014\n\004text\030\001 \001(\t\"U\n\021CCSUsrMs"
      "g_SayText\022\017\n\007ent_idx\030\001 \001(\005\022\014\n\004text\030\002 \001(\t"
      "\022\014\n\004chat\030\003 \001(\010\022\023\n\013textallchat\030\004 \001(\010\"j\n\022C"
      "CSUsrMsg_SayText2\022\017\n\007ent_idx\030\001 \001(\005\022\014\n\004ch"
      "at\030\002 \001(\010\022\020\n\010msg_name\030\003 \001(\t\022\016\n\006params\030\004 \003"
      "(\t\022\023\n\013textallchat\030\005 \001(\010\"4\n\021CCSUsrMsg_Tex"
      "tMsg\022\017\n\007msg_dst\030\001 \001(\005\022\016\n\006params\030\003 \003(\t\"\340\001"
      "\n\020CCSUsrMsg_HudMsg\022\017\n\007channel\030\001 \001(\005\022\032\n\003p"
      "os\030\002 \001(\0132\r.CMsgVector2D\022\027\n\004clr1\030\003 \001(\0132\t."
      "CMsgRGBA\022\027\n\004clr2\030\004 \001(\0132\t.CMsgRGBA\022\016\n\006eff"
      "ect\030\005 \001(\005\022\024\n\014fade_in_time\030\006 \001(\002\022\025\n\rfade_"
      "out_time\030\007 \001(\002\022\021\n\thold_time\030\t \001(\002\022\017\n\007fx_"
      "time\030\n \001(\002\022\014\n\004text\030\013 \001(\t\"`\n\017CCSUsrMsg_Sh"
      "ake\022\017\n\007command\030\001 \001(\005\022\027\n\017local_amplitude\030"
      "\002 \001(\002\022\021\n\tfrequency\030\003 \001(\002\022\020\n\010duration\030\004 \001"
      "(\002\"\\\n\016CCSUsrMsg_Fade\022\020\n\010duration\030\001 \001(\005\022\021"
      "\n\thold_time\030\002 \001(\005\022\r\n\005flags\030\003 \001(\005\022\026\n\003clr\030"
      "\004 \001(\0132\t.CMsgRGBA\">\n\020CCSUsrMsg_Rumble\022\r\n\005"
      "index\030\001 \001(\005\022\014\n\004data\030\002 \001(\005\022\r\n\005flags\030\003 \001(\005"
      "\"M\n\026CCSUsrMsg_CloseCaption\022\014\n\004hash\030\001 \001(\r"
      "\022\020\n\010duration\030\002 \001(\005\022\023\n\013from_player\030\003 \001(\010\""
      "S\n\034CCSUsrMsg_CloseCaptionDirect\022\014\n\004hash\030"
      "\001 \001(\r\022\020\n\010duration\030\002 \001(\005\022\023\n\013from_player\030\003"
      " \001(\010\"*\n\023CCSUsrMsg_SendAudio\022\023\n\013radio_sou"
      "nd\030\001 \001(\t\"]\n\022CCSUsrMsg_RawAudio\022\r\n\005pitch\030"
      "\001 \001(\005\022\016\n\006entidx\030\002 \001(\005\022\020\n\010duration\030\003 \001(\002\022"
      "\026\n\016voice_filename\030\004 \001(\t\"\241\001\n\023CCSUsrMsg_Vo"
      "iceMask\0225\n\014player_masks\030\001 \003(\0132\037.CCSUsrMs"
      "g_VoiceMask.PlayerMask\022\031\n\021player_mod_ena"
      "ble\030\002 \001(\010\0328\n\nPlayerMask\022\027\n\017game_rules_ma"
      "sk\030\001 \001(\005\022\021\n\tban_masks\030\002 \001(\005\"e\n\020CCSUsrMsg"
      "_Damage\022\016\n\006amount\030\001 \001(\005\022(\n\023inflictor_wor"
      "ld_pos\030\002 \001(\0132\013.CMsgVector\022\027\n\017victim_enti"
      "ndex\030\003 \001(\005\"X\n\023CCSUsrMsg_RadioText\022\017\n\007msg"
      "_dst\030\001 \001(\005\022\016\n\006client\030\002 \001(\005\022\020\n\010msg_name\030\003"
      " \001(\t\022\016\n\006params\030\004 \003(\t\"\"\n\022CCSUsrMsg_HintTe"
      "xt\022\014\n\004text\030\001 \001(\t\"&\n\025CCSUsrMsg_KeyHintTex"
      "t\022\r\n\005hints\030\001 \003(\t\"\326\002\n$CCSUsrMsg_ProcessSp"
      "ottedEntityUpdate\022\022\n\nnew_update\030\001 \001(\010\022Q\n"
      "\016entity_updates\030\002 \003(\01329.CCSUsrMsg_Proces"
      "sSpottedEntityUpdate.SpottedEntityUpdate"
      "\032\306\001\n\023SpottedEntityUpdate\022\022\n\nentity_idx\030\001"
      " \001(\005\022\020\n\010class_id\030\002 \001(\005\022\020\n\010origin_x\030\003 \001(\005"
      "\022\020\n\010origin_y\030\004 \001(\005\022\020\n\010origin_z\030\005 \001(\005\022\017\n\007"
      "angle_y\030\006 \001(\005\022\017\n\007defuser\030\007 \001(\010\022\032\n\022player"
      "_has_defuser\030\010 \001(\010\022\025\n\rplayer_has_c4\030\t \001("
      "\010\"S\n\035CCSUsrMsg_SendPlayerItemDrops\0222\n\016en"
      "tity_updates\030\001 \003(\0132\032.CEconItemPreviewDat"
      "aBlock\"_\n\035CCSUsrMsg_SendPlayerItemFound\022"
      ",\n\010iteminfo\030\001 \001(\0132\032.CEconItemPreviewData"
      "Block\022\020\n\010entindex\030\002 \001(\005\"o\n\026CCSUsrMsg_Rel"
      "oadEffect\022\016\n\006entidx\030\001 \001(\005\022\017\n\007actanim\030\002 \001"
      "(\005\022\020\n\010origin_x\030\003 \001(\002\022\020\n\010origin_y\030\004 \001(\002\022\020"
      "\n\010origin_z\030\005 \001(\002\"\'\n\025CCSUsrMsg_AdjustMone"
      "y\022\016\n\006amount\030\001 \001(\005\"U\n\023CCSUsrMsg_ReportHit"
      "\022\r\n\005pos_x\030\001 \001(\002\022\r\n\005pos_y\030\002 \001(\002\022\021\n\ttimest"
      "amp\030\004 \001(\002\022\r\n\005pos_z\030\003 \001(\002\"R\n\021CCSUsrMsg_Ki"
      "llCam\022\020\n\010obs_mode\030\001 \001(\005\022\024\n\014first_target\030"
      "\002 \001(\005\022\025\n\rsecond_target\030\003 \001(\005\"\213\001\n\032CCSUsrM"
      "sg_DesiredTimescale\022\031\n\021desired_timescale"
      "\030\001 \001(\002\022\035\n\025duration_realtime_sec\030\002 \001(\002\022\031\n"
      "\021interpolator_type\030\003 \001(\005\022\030\n\020start_blend_"
      "time\030\004 \001(\002\"3\n\032CCSUsrMsg_CurrentTimescale"
      "\022\025\n\rcur_timescale\030\001 \001(\002\"Q\n\032CCSUsrMsg_Ach"
      "ievementEvent\022\023\n\013achievement\030\001 \001(\005\022\r\n\005co"
      "unt\030\002 \001(\005\022\017\n\007user_id\030\003 \001(\005\"r\n\034CCSUsrMsg_"
      "MatchEndConditions\022\021\n\tfraglimit\030\001 \001(\005\022\024\n"
      "\014mp_maxrounds\030\002 \001(\005\022\023\n\013mp_winlimit\030\003 \001(\005"
      "\022\024\n\014mp_timelimit\030\004 \001(\005\"\242\001\n\033CCSUsrMsg_Pla"
      "yerStatsUpdate\022\017\n\007version\030\001 \001(\005\0220\n\005stats"
      "\030\004 \003(\0132!.CCSUsrMsg_PlayerStatsUpdate.Sta"
      "t\022\017\n\007user_id\030\005 \001(\005\022\013\n\003crc\030\006 \001(\005\032\"\n\004Stat\022"
      "\013\n\003idx\030\001 \001(\005\022\r\n\005delta\030\002 \001(\005\">\n\032CCSUsrMsg"
      "_DisplayInventory\022\017\n\007display\030\001 \001(\010\022\017\n\007us"
      "er_id\030\002 \001(\005\"p\n\027CCSUsrMsg_QuestProgress\022\020"
      "\n\010quest_id\030\001 \001(\r\022\025\n\rnormal_points\030\002 \001(\r\022"
      "\024\n\014bonus_points\030\003 \001(\r\022\026\n\016is_event_quest\030"
      "\004 \001(\010\"E\n\036CCSUsrMsg_ScoreLeaderboardData\022"
      "#\n\004data\030\001 \001(\0132\025.ScoreLeaderboardData\"S\n%"
      "CCSUsrMsg_PlayerDecalDigitalSignature\022*\n"
      "\004data\030\001 \001(\0132\034.PlayerDecalDigitalSignatur"
      "e\":\n\022CCSUsrMsg_XRankGet\022\020\n\010mode_idx\030\001 \001("
      "\005\022\022\n\ncontroller\030\002 \001(\005\"K\n\022CCSUsrMsg_XRank"
      "Upd\022\020\n\010mode_idx\030\001 \001(\005\022\022\n\ncontroller\030\002 \001("
      "\005\022\017\n\007ranking\030\003 \001(\005\"8\n\030CCSUsrMsg_CallVote"
      "Failed\022\016\n\006reason\030\001 \001(\005\022\014\n\004time\030\002 \001(\005\"\236\001\n"
      "\023CCSUsrMsg_VoteStart\022\014\n\004team\030\001 \001(\005\022\017\n\007en"
      "t_idx\030\002 \001(\005\022\021\n\tvote_type\030\003 \001(\005\022\020\n\010disp_s"
      "tr\030\004 \001(\t\022\023\n\013details_str\030\005 \001(\t\022\026\n\016other_t"
      "eam_str\030\006 \001(\t\022\026\n\016is_yes_no_vote\030\007 \001(\010\"\\\n"
      "\022CCSUsrMsg_VotePass\022\014\n\004team\030\001 \001(\005\022\021\n\tvot"
      "e_type\030\002 \001(\005\022\020\n\010disp_str\030\003 \001(\t\022\023\n\013detail"
      "s_str\030\004 \001(\t\"4\n\024CCSUsrMsg_VoteFailed\022\014\n\004t"
      "eam\030\001 \001(\005\022\016\n\006reason\030\002 \001(\005\"/\n\023CCSUsrMsg_V"
      "oteSetup\022\030\n\020potential_issues\030\001 \003(\t\"\204\001\n&C"
      "CSUsrMsg_SendLastKillerDamageToClient\022\026\n"
      "\016num_hits_given\030\001 \001(\005\022\024\n\014damage_given\030\002 "
      "\001(\005\022\026\n\016num_hits_taken\030\003 \001(\005\022\024\n\014damage_ta"
      "ken\030\004 \001(\005\"\306\001\n\032CCSUsrMsg_ServerRankUpdate"
      "\022;\n\013rank_update\030\001 \003(\0132&.CCSUsrMsg_Server"
      "RankUpdate.RankUpdate\032k\n\nRankUpdate\022\022\n\na"
      "ccount_id\030\001 \001(\005\022\020\n\010rank_old\030\002 \001(\005\022\020\n\010ran"
      "k_new\030\003 \001(\005\022\020\n\010num_wins\030\004 \001(\005\022\023\n\013rank_ch"
      "ange\030\005 \001(\002\"Q\n\022CCSUsrMsg_XpUpdate\022;\n\004data"
      "\030\001 \001(\0132-.CMsgGCCstrike15_v2_GC2ServerNot"
      "ifyXPRewarded\"$\n\024CCSUsrMsg_ItemPickup\022\014\n"
      "\004item\030\001 \001(\t\"Y\n\022CCSUsrMsg_ShowMenu\022\030\n\020bit"
      "s_valid_slots\030\001 \001(\005\022\024\n\014display_time\030\002 \001("
      "\005\022\023\n\013menu_string\030\003 \001(\t\"!\n\021CCSUsrMsg_BarT"
      "ime\022\014\n\004time\030\001 \001(\t\"\'\n\024CCSUsrMsg_AmmoDenie"
      "d\022\017\n\007ammoIdx\030\001 \001(\005\"0\n\031CCSUsrMsg_MarkAchi"
      "evement\022\023\n\013achievement\030\001 \001(\t\",\n\032CCSUsrMs"
      "g_MatchStatsUpdate\022\016\n\006update\030\001 \001(\t\"3\n\022CC"
      "SUsrMsg_ItemDrop\022\016\n\006itemid\030\001 \001(\003\022\r\n\005deat"
      "h\030\002 \001(\010\"+\n\031CCSUsrMsg_GlowPropTurnOff\022\016\n\006"
      "entidx\030\001 \001(\005\"b\n\036CCSUsrMsg_RoundBackupFil"
      "enames\022\r\n\005count\030\001 \001(\005\022\r\n\005index\030\002 \001(\005\022\020\n\010"
      "filename\030\003 \001(\t\022\020\n\010nicename\030\004 \001(\t\"#\n\022CCSU"
      "srMsg_ResetHud\022\r\n\005reset\030\001 \001(\010\"$\n\023CCSUsrM"
      "sg_GameTitle\022\r\n\005dummy\030\001 \001(\005\"\'\n\026CCSUsrMsg"
      "_RequestState\022\r\n\005dummy\030\001 \001(\005\",\n\033CCSUsrMs"
      "g_StopSpectatorMode\022\r\n\005dummy\030\001 \001(\005\",\n\033CC"
      "SUsrMsg_DisconnectToLobby\022\r\n\005dummy\030\001 \001(\005"
      "\")\n\030CCSUsrMsg_WarmupHasEnded\022\r\n\005dummy\030\001 "
      "\001(\005\"%\n\024CCSUsrMsg_ClientInfo\022\r\n\005dummy\030\001 \001"
      "(\005\">\n\035CCSUsrMsg_ServerRankRevealAll\022\035\n\025s"
      "econds_till_shutdown\030\001 \001(\005*\231\014\n\026ECstrike1"
      "5UserMessages\022\022\n\016CS_UM_VGUIMenu\020\001\022\020\n\014CS_"
      "UM_Geiger\020\002\022\017\n\013CS_UM_Train\020\003\022\021\n\rCS_UM_Hu"
      "dText\020\004\022\021\n\rCS_UM_SayText\020\005\022\022\n\016CS_UM_SayT"
      "ext2\020\006\022\021\n\rCS_UM_TextMsg\020\007\022\020\n\014CS_UM_HudMs"
      "g\020\010\022\022\n\016CS_UM_ResetHud\020\t\022\023\n\017CS_UM_GameTit"
      "le\020\n\022\017\n\013CS_UM_Shake\020\014\022\016\n\nCS_UM_Fade\020\r\022\020\n"
      "\014CS_UM_Rumble\020\016\022\026\n\022CS_UM_CloseCaption\020\017\022"
      "\034\n\030CS_UM_CloseCaptionDirect\020\020\022\023\n\017CS_UM_S"
      "endAudio\020\021\022\022\n\016CS_UM_RawAudio\020\022\022\023\n\017CS_UM_"
      "VoiceMask\020\023\022\026\n\022CS_UM_RequestState\020\024\022\020\n\014C"
      "S_UM_Damage\020\025\022\023\n\017CS_UM_RadioText\020\026\022\022\n\016CS"
      "_UM_HintText\020\027\022\025\n\021CS_UM_KeyHintText\020\030\022$\n"
      " CS_UM_ProcessSpottedEntityUpdate\020\031\022\026\n\022C"
      "S_UM_ReloadEffect\020\032\022\025\n\021CS_UM_AdjustMoney"
      "\020\033\022\031\n\025CS_UM_UpdateTeamMoney\020\034\022\033\n\027CS_UM_S"
      "topSpectatorMode\020\035\022\021\n\rCS_UM_KillCam\020\036\022\032\n"
      "\026CS_UM_DesiredTimescale\020\037\022\032\n\026CS_UM_Curre"
      "ntTimescale\020 \022\032\n\026CS_UM_AchievementEvent\020"
      "!\022\034\n\030CS_UM_MatchEndConditions\020\"\022\033\n\027CS_UM"
      "_DisconnectToLobby\020#\022\033\n\027CS_UM_PlayerStat"
      "sUpdate\020$\022\032\n\026CS_UM_DisplayInventory\020%\022\030\n"
      "\024CS_UM_WarmupHasEnded\020&\022\024\n\020CS_UM_ClientI"
      "nfo\020\'\022\022\n\016CS_UM_XRankGet\020(\022\022\n\016CS_UM_XRank"
      "Upd\020)\022\030\n\024CS_UM_CallVoteFailed\020-\022\023\n\017CS_UM"
      "_VoteStart\020.\022\022\n\016CS_UM_VotePass\020/\022\024\n\020CS_U"
      "M_VoteFailed\0200\022\023\n\017CS_UM_VoteSetup\0201\022\035\n\031C"
      "S_UM_ServerRankRevealAll\0202\022&\n\"CS_UM_Send"
      "LastKillerDamageToClient\0203\022\032\n\026CS_UM_Serv"
      "erRankUpdate\0204\022\024\n\020CS_UM_ItemPickup\0205\022\022\n\016"
      "CS_UM_ShowMenu\0206\022\021\n\rCS_UM_BarTime\0207\022\024\n\020C"
      "S_UM_AmmoDenied\0208\022\031\n\025CS_UM_MarkAchieveme"
      "nt\0209\022\032\n\026CS_UM_MatchStatsUpdate\020:\022\022\n\016CS_U"
      "M_ItemDrop\020;\022\031\n\025CS_UM_GlowPropTurnOff\020<\022"
      "\035\n\031CS_UM_SendPlayerItemDrops\020=\022\036\n\032CS_UM_"
      "RoundBackupFilenames\020>\022\035\n\031CS_UM_SendPlay"
      "erItemFound\020\?\022\023\n\017CS_UM_ReportHit\020@\022\022\n\016CS"
      "_UM_XpUpdate\020A\022\027\n\023CS_UM_QuestProgress\020B\022"
      "\036\n\032CS_UM_ScoreLeaderboardData\020C\022%\n!CS_UM"
      "_PlayerDecalDigitalSignature\020DB\005H\001\200\001\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 6957);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cstrike15_usermessages.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fdescriptor_2eproto::AddDescriptors();
  ::protobuf_netmessages_2eproto::AddDescriptors();
  ::protobuf_cstrike15_5fgcmessages_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_cstrike15_5fusermessages_2eproto
const ::google::protobuf::EnumDescriptor* ECstrike15UserMessages_descriptor() {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cstrike15_5fusermessages_2eproto::file_level_enum_descriptors[0];
}
bool ECstrike15UserMessages_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CCSUsrMsg_VGUIMenu_Subkey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_VGUIMenu_Subkey::kNameFieldNumber;
const int CCSUsrMsg_VGUIMenu_Subkey::kStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_VGUIMenu_Subkey::CCSUsrMsg_VGUIMenu_Subkey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_VGUIMenu_Subkey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_VGUIMenu.Subkey)
}
CCSUsrMsg_VGUIMenu_Subkey::CCSUsrMsg_VGUIMenu_Subkey(const CCSUsrMsg_VGUIMenu_Subkey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_str()) {
    str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
  }
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_VGUIMenu.Subkey)
}

void CCSUsrMsg_VGUIMenu_Subkey::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CCSUsrMsg_VGUIMenu_Subkey::~CCSUsrMsg_VGUIMenu_Subkey() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_VGUIMenu.Subkey)
  SharedDtor();
}

void CCSUsrMsg_VGUIMenu_Subkey::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_VGUIMenu_Subkey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_VGUIMenu_Subkey::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_VGUIMenu_Subkey& CCSUsrMsg_VGUIMenu_Subkey::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_VGUIMenu_Subkey();
  return *internal_default_instance();
}

CCSUsrMsg_VGUIMenu_Subkey* CCSUsrMsg_VGUIMenu_Subkey::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_VGUIMenu_Subkey* n = new CCSUsrMsg_VGUIMenu_Subkey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_VGUIMenu_Subkey::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_VGUIMenu.Subkey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!str_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*str_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_VGUIMenu_Subkey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_VGUIMenu.Subkey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_VGUIMenu.Subkey.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string str = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->str().data(), static_cast<int>(this->str().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_VGUIMenu.Subkey.str");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_VGUIMenu.Subkey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_VGUIMenu.Subkey)
  return false;
#undef DO_
}

void CCSUsrMsg_VGUIMenu_Subkey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_VGUIMenu.Subkey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VGUIMenu.Subkey.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string str = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VGUIMenu.Subkey.str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->str(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_VGUIMenu.Subkey)
}

::google::protobuf::uint8* CCSUsrMsg_VGUIMenu_Subkey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_VGUIMenu.Subkey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VGUIMenu.Subkey.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string str = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VGUIMenu.Subkey.str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->str(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_VGUIMenu.Subkey)
  return target;
}

size_t CCSUsrMsg_VGUIMenu_Subkey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_VGUIMenu.Subkey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string str = 2;
    if (has_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_VGUIMenu_Subkey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_VGUIMenu.Subkey)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_VGUIMenu_Subkey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_VGUIMenu_Subkey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_VGUIMenu.Subkey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_VGUIMenu.Subkey)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_VGUIMenu_Subkey::MergeFrom(const CCSUsrMsg_VGUIMenu_Subkey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_VGUIMenu.Subkey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_str();
      str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
    }
  }
}

void CCSUsrMsg_VGUIMenu_Subkey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_VGUIMenu.Subkey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_VGUIMenu_Subkey::CopyFrom(const CCSUsrMsg_VGUIMenu_Subkey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_VGUIMenu.Subkey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_VGUIMenu_Subkey::IsInitialized() const {
  return true;
}

void CCSUsrMsg_VGUIMenu_Subkey::Swap(CCSUsrMsg_VGUIMenu_Subkey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_VGUIMenu_Subkey::InternalSwap(CCSUsrMsg_VGUIMenu_Subkey* other) {
  using std::swap;
  name_.Swap(&other->name_);
  str_.Swap(&other->str_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_VGUIMenu_Subkey::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_VGUIMenu::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_VGUIMenu::kNameFieldNumber;
const int CCSUsrMsg_VGUIMenu::kShowFieldNumber;
const int CCSUsrMsg_VGUIMenu::kSubkeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_VGUIMenu::CCSUsrMsg_VGUIMenu()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_VGUIMenu();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_VGUIMenu)
}
CCSUsrMsg_VGUIMenu::CCSUsrMsg_VGUIMenu(const CCSUsrMsg_VGUIMenu& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      subkeys_(from.subkeys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  show_ = from.show_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_VGUIMenu)
}

void CCSUsrMsg_VGUIMenu::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  show_ = false;
}

CCSUsrMsg_VGUIMenu::~CCSUsrMsg_VGUIMenu() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_VGUIMenu)
  SharedDtor();
}

void CCSUsrMsg_VGUIMenu::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_VGUIMenu::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_VGUIMenu::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_VGUIMenu& CCSUsrMsg_VGUIMenu::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_VGUIMenu();
  return *internal_default_instance();
}

CCSUsrMsg_VGUIMenu* CCSUsrMsg_VGUIMenu::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_VGUIMenu* n = new CCSUsrMsg_VGUIMenu;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_VGUIMenu::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_VGUIMenu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subkeys_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  show_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_VGUIMenu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_VGUIMenu)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_VGUIMenu.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool show = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_show();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CCSUsrMsg_VGUIMenu.Subkey subkeys = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_subkeys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_VGUIMenu)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_VGUIMenu)
  return false;
#undef DO_
}

void CCSUsrMsg_VGUIMenu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_VGUIMenu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VGUIMenu.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional bool show = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->show(), output);
  }

  // repeated .CCSUsrMsg_VGUIMenu.Subkey subkeys = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subkeys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->subkeys(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_VGUIMenu)
}

::google::protobuf::uint8* CCSUsrMsg_VGUIMenu::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_VGUIMenu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VGUIMenu.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional bool show = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->show(), target);
  }

  // repeated .CCSUsrMsg_VGUIMenu.Subkey subkeys = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subkeys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->subkeys(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_VGUIMenu)
  return target;
}

size_t CCSUsrMsg_VGUIMenu::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_VGUIMenu)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CCSUsrMsg_VGUIMenu.Subkey subkeys = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->subkeys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->subkeys(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional bool show = 2;
    if (has_show()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_VGUIMenu::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_VGUIMenu)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_VGUIMenu* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_VGUIMenu>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_VGUIMenu)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_VGUIMenu)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_VGUIMenu::MergeFrom(const CCSUsrMsg_VGUIMenu& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_VGUIMenu)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subkeys_.MergeFrom(from.subkeys_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      show_ = from.show_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_VGUIMenu::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_VGUIMenu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_VGUIMenu::CopyFrom(const CCSUsrMsg_VGUIMenu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_VGUIMenu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_VGUIMenu::IsInitialized() const {
  return true;
}

void CCSUsrMsg_VGUIMenu::Swap(CCSUsrMsg_VGUIMenu* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_VGUIMenu::InternalSwap(CCSUsrMsg_VGUIMenu* other) {
  using std::swap;
  subkeys_.InternalSwap(&other->subkeys_);
  name_.Swap(&other->name_);
  swap(show_, other->show_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_VGUIMenu::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_Geiger::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_Geiger::kRangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_Geiger::CCSUsrMsg_Geiger()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_Geiger();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_Geiger)
}
CCSUsrMsg_Geiger::CCSUsrMsg_Geiger(const CCSUsrMsg_Geiger& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  range_ = from.range_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_Geiger)
}

void CCSUsrMsg_Geiger::SharedCtor() {
  _cached_size_ = 0;
  range_ = 0;
}

CCSUsrMsg_Geiger::~CCSUsrMsg_Geiger() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_Geiger)
  SharedDtor();
}

void CCSUsrMsg_Geiger::SharedDtor() {
}

void CCSUsrMsg_Geiger::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_Geiger::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_Geiger& CCSUsrMsg_Geiger::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_Geiger();
  return *internal_default_instance();
}

CCSUsrMsg_Geiger* CCSUsrMsg_Geiger::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_Geiger* n = new CCSUsrMsg_Geiger;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_Geiger::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_Geiger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  range_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_Geiger::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_Geiger)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 range = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_range();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_Geiger)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_Geiger)
  return false;
#undef DO_
}

void CCSUsrMsg_Geiger::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_Geiger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 range = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->range(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_Geiger)
}

::google::protobuf::uint8* CCSUsrMsg_Geiger::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_Geiger)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 range = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->range(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_Geiger)
  return target;
}

size_t CCSUsrMsg_Geiger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_Geiger)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 range = 1;
  if (has_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->range());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_Geiger::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_Geiger)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_Geiger* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_Geiger>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_Geiger)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_Geiger)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_Geiger::MergeFrom(const CCSUsrMsg_Geiger& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_Geiger)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_range()) {
    set_range(from.range());
  }
}

void CCSUsrMsg_Geiger::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_Geiger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_Geiger::CopyFrom(const CCSUsrMsg_Geiger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_Geiger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_Geiger::IsInitialized() const {
  return true;
}

void CCSUsrMsg_Geiger::Swap(CCSUsrMsg_Geiger* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_Geiger::InternalSwap(CCSUsrMsg_Geiger* other) {
  using std::swap;
  swap(range_, other->range_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_Geiger::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_Train::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_Train::kTrainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_Train::CCSUsrMsg_Train()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_Train();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_Train)
}
CCSUsrMsg_Train::CCSUsrMsg_Train(const CCSUsrMsg_Train& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  train_ = from.train_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_Train)
}

void CCSUsrMsg_Train::SharedCtor() {
  _cached_size_ = 0;
  train_ = 0;
}

CCSUsrMsg_Train::~CCSUsrMsg_Train() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_Train)
  SharedDtor();
}

void CCSUsrMsg_Train::SharedDtor() {
}

void CCSUsrMsg_Train::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_Train::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_Train& CCSUsrMsg_Train::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_Train();
  return *internal_default_instance();
}

CCSUsrMsg_Train* CCSUsrMsg_Train::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_Train* n = new CCSUsrMsg_Train;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_Train::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_Train)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  train_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_Train::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_Train)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 train = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_train();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &train_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_Train)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_Train)
  return false;
#undef DO_
}

void CCSUsrMsg_Train::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_Train)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 train = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->train(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_Train)
}

::google::protobuf::uint8* CCSUsrMsg_Train::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_Train)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 train = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->train(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_Train)
  return target;
}

size_t CCSUsrMsg_Train::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_Train)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 train = 1;
  if (has_train()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->train());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_Train::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_Train)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_Train* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_Train>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_Train)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_Train)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_Train::MergeFrom(const CCSUsrMsg_Train& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_Train)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_train()) {
    set_train(from.train());
  }
}

void CCSUsrMsg_Train::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_Train)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_Train::CopyFrom(const CCSUsrMsg_Train& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_Train)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_Train::IsInitialized() const {
  return true;
}

void CCSUsrMsg_Train::Swap(CCSUsrMsg_Train* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_Train::InternalSwap(CCSUsrMsg_Train* other) {
  using std::swap;
  swap(train_, other->train_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_Train::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_HudText::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_HudText::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_HudText::CCSUsrMsg_HudText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_HudText();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_HudText)
}
CCSUsrMsg_HudText::CCSUsrMsg_HudText(const CCSUsrMsg_HudText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_HudText)
}

void CCSUsrMsg_HudText::SharedCtor() {
  _cached_size_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CCSUsrMsg_HudText::~CCSUsrMsg_HudText() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_HudText)
  SharedDtor();
}

void CCSUsrMsg_HudText::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_HudText::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_HudText::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_HudText& CCSUsrMsg_HudText::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_HudText();
  return *internal_default_instance();
}

CCSUsrMsg_HudText* CCSUsrMsg_HudText::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_HudText* n = new CCSUsrMsg_HudText;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_HudText::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_HudText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*text_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_HudText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_HudText)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_HudText.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_HudText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_HudText)
  return false;
#undef DO_
}

void CCSUsrMsg_HudText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_HudText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_HudText.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_HudText)
}

::google::protobuf::uint8* CCSUsrMsg_HudText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_HudText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_HudText.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_HudText)
  return target;
}

size_t CCSUsrMsg_HudText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_HudText)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string text = 1;
  if (has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_HudText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_HudText)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_HudText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_HudText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_HudText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_HudText)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_HudText::MergeFrom(const CCSUsrMsg_HudText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_HudText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_text()) {
    set_has_text();
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
}

void CCSUsrMsg_HudText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_HudText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_HudText::CopyFrom(const CCSUsrMsg_HudText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_HudText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_HudText::IsInitialized() const {
  return true;
}

void CCSUsrMsg_HudText::Swap(CCSUsrMsg_HudText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_HudText::InternalSwap(CCSUsrMsg_HudText* other) {
  using std::swap;
  text_.Swap(&other->text_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_HudText::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_SayText::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_SayText::kEntIdxFieldNumber;
const int CCSUsrMsg_SayText::kTextFieldNumber;
const int CCSUsrMsg_SayText::kChatFieldNumber;
const int CCSUsrMsg_SayText::kTextallchatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_SayText::CCSUsrMsg_SayText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_SayText();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_SayText)
}
CCSUsrMsg_SayText::CCSUsrMsg_SayText(const CCSUsrMsg_SayText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  ::memcpy(&ent_idx_, &from.ent_idx_,
    static_cast<size_t>(reinterpret_cast<char*>(&textallchat_) -
    reinterpret_cast<char*>(&ent_idx_)) + sizeof(textallchat_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_SayText)
}

void CCSUsrMsg_SayText::SharedCtor() {
  _cached_size_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ent_idx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&textallchat_) -
      reinterpret_cast<char*>(&ent_idx_)) + sizeof(textallchat_));
}

CCSUsrMsg_SayText::~CCSUsrMsg_SayText() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_SayText)
  SharedDtor();
}

void CCSUsrMsg_SayText::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_SayText::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_SayText::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_SayText& CCSUsrMsg_SayText::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_SayText();
  return *internal_default_instance();
}

CCSUsrMsg_SayText* CCSUsrMsg_SayText::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_SayText* n = new CCSUsrMsg_SayText;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_SayText::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_SayText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*text_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&ent_idx_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&textallchat_) -
        reinterpret_cast<char*>(&ent_idx_)) + sizeof(textallchat_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_SayText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_SayText)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ent_idx = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ent_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ent_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_SayText.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool chat = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_chat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &chat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool textallchat = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_textallchat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &textallchat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_SayText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_SayText)
  return false;
#undef DO_
}

void CCSUsrMsg_SayText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_SayText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 ent_idx = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ent_idx(), output);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_SayText.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  // optional bool chat = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->chat(), output);
  }

  // optional bool textallchat = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->textallchat(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_SayText)
}

::google::protobuf::uint8* CCSUsrMsg_SayText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_SayText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 ent_idx = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ent_idx(), target);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_SayText.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  // optional bool chat = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->chat(), target);
  }

  // optional bool textallchat = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->textallchat(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_SayText)
  return target;
}

size_t CCSUsrMsg_SayText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_SayText)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional int32 ent_idx = 1;
    if (has_ent_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ent_idx());
    }

    // optional bool chat = 3;
    if (has_chat()) {
      total_size += 1 + 1;
    }

    // optional bool textallchat = 4;
    if (has_textallchat()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_SayText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_SayText)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_SayText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_SayText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_SayText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_SayText)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_SayText::MergeFrom(const CCSUsrMsg_SayText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_SayText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      ent_idx_ = from.ent_idx_;
    }
    if (cached_has_bits & 0x00000004u) {
      chat_ = from.chat_;
    }
    if (cached_has_bits & 0x00000008u) {
      textallchat_ = from.textallchat_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_SayText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_SayText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_SayText::CopyFrom(const CCSUsrMsg_SayText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_SayText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_SayText::IsInitialized() const {
  return true;
}

void CCSUsrMsg_SayText::Swap(CCSUsrMsg_SayText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_SayText::InternalSwap(CCSUsrMsg_SayText* other) {
  using std::swap;
  text_.Swap(&other->text_);
  swap(ent_idx_, other->ent_idx_);
  swap(chat_, other->chat_);
  swap(textallchat_, other->textallchat_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_SayText::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_SayText2::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_SayText2::kEntIdxFieldNumber;
const int CCSUsrMsg_SayText2::kChatFieldNumber;
const int CCSUsrMsg_SayText2::kMsgNameFieldNumber;
const int CCSUsrMsg_SayText2::kParamsFieldNumber;
const int CCSUsrMsg_SayText2::kTextallchatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_SayText2::CCSUsrMsg_SayText2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_SayText2();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_SayText2)
}
CCSUsrMsg_SayText2::CCSUsrMsg_SayText2(const CCSUsrMsg_SayText2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      params_(from.params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg_name()) {
    msg_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_name_);
  }
  ::memcpy(&ent_idx_, &from.ent_idx_,
    static_cast<size_t>(reinterpret_cast<char*>(&textallchat_) -
    reinterpret_cast<char*>(&ent_idx_)) + sizeof(textallchat_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_SayText2)
}

void CCSUsrMsg_SayText2::SharedCtor() {
  _cached_size_ = 0;
  msg_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ent_idx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&textallchat_) -
      reinterpret_cast<char*>(&ent_idx_)) + sizeof(textallchat_));
}

CCSUsrMsg_SayText2::~CCSUsrMsg_SayText2() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_SayText2)
  SharedDtor();
}

void CCSUsrMsg_SayText2::SharedDtor() {
  msg_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_SayText2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_SayText2::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_SayText2& CCSUsrMsg_SayText2::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_SayText2();
  return *internal_default_instance();
}

CCSUsrMsg_SayText2* CCSUsrMsg_SayText2::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_SayText2* n = new CCSUsrMsg_SayText2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_SayText2::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_SayText2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!msg_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*msg_name_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&ent_idx_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&textallchat_) -
        reinterpret_cast<char*>(&ent_idx_)) + sizeof(textallchat_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_SayText2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_SayText2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ent_idx = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ent_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ent_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool chat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_chat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &chat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg_name().data(), static_cast<int>(this->msg_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_SayText2.msg_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string params = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_params()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->params(this->params_size() - 1).data(),
            static_cast<int>(this->params(this->params_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_SayText2.params");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool textallchat = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_textallchat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &textallchat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_SayText2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_SayText2)
  return false;
#undef DO_
}

void CCSUsrMsg_SayText2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_SayText2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 ent_idx = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ent_idx(), output);
  }

  // optional bool chat = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->chat(), output);
  }

  // optional string msg_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg_name().data(), static_cast<int>(this->msg_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_SayText2.msg_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg_name(), output);
  }

  // repeated string params = 4;
  for (int i = 0, n = this->params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->params(i).data(), static_cast<int>(this->params(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_SayText2.params");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->params(i), output);
  }

  // optional bool textallchat = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->textallchat(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_SayText2)
}

::google::protobuf::uint8* CCSUsrMsg_SayText2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_SayText2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 ent_idx = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ent_idx(), target);
  }

  // optional bool chat = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->chat(), target);
  }

  // optional string msg_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg_name().data(), static_cast<int>(this->msg_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_SayText2.msg_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg_name(), target);
  }

  // repeated string params = 4;
  for (int i = 0, n = this->params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->params(i).data(), static_cast<int>(this->params(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_SayText2.params");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->params(i), target);
  }

  // optional bool textallchat = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->textallchat(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_SayText2)
  return target;
}

size_t CCSUsrMsg_SayText2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_SayText2)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string params = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->params_size());
  for (int i = 0, n = this->params_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->params(i));
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional string msg_name = 3;
    if (has_msg_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg_name());
    }

    // optional int32 ent_idx = 1;
    if (has_ent_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ent_idx());
    }

    // optional bool chat = 2;
    if (has_chat()) {
      total_size += 1 + 1;
    }

    // optional bool textallchat = 5;
    if (has_textallchat()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_SayText2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_SayText2)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_SayText2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_SayText2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_SayText2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_SayText2)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_SayText2::MergeFrom(const CCSUsrMsg_SayText2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_SayText2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg_name();
      msg_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      ent_idx_ = from.ent_idx_;
    }
    if (cached_has_bits & 0x00000004u) {
      chat_ = from.chat_;
    }
    if (cached_has_bits & 0x00000008u) {
      textallchat_ = from.textallchat_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_SayText2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_SayText2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_SayText2::CopyFrom(const CCSUsrMsg_SayText2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_SayText2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_SayText2::IsInitialized() const {
  return true;
}

void CCSUsrMsg_SayText2::Swap(CCSUsrMsg_SayText2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_SayText2::InternalSwap(CCSUsrMsg_SayText2* other) {
  using std::swap;
  params_.InternalSwap(&other->params_);
  msg_name_.Swap(&other->msg_name_);
  swap(ent_idx_, other->ent_idx_);
  swap(chat_, other->chat_);
  swap(textallchat_, other->textallchat_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_SayText2::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_TextMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_TextMsg::kMsgDstFieldNumber;
const int CCSUsrMsg_TextMsg::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_TextMsg::CCSUsrMsg_TextMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_TextMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_TextMsg)
}
CCSUsrMsg_TextMsg::CCSUsrMsg_TextMsg(const CCSUsrMsg_TextMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      params_(from.params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_dst_ = from.msg_dst_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_TextMsg)
}

void CCSUsrMsg_TextMsg::SharedCtor() {
  _cached_size_ = 0;
  msg_dst_ = 0;
}

CCSUsrMsg_TextMsg::~CCSUsrMsg_TextMsg() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_TextMsg)
  SharedDtor();
}

void CCSUsrMsg_TextMsg::SharedDtor() {
}

void CCSUsrMsg_TextMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_TextMsg::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_TextMsg& CCSUsrMsg_TextMsg::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_TextMsg();
  return *internal_default_instance();
}

CCSUsrMsg_TextMsg* CCSUsrMsg_TextMsg::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_TextMsg* n = new CCSUsrMsg_TextMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_TextMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_TextMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  msg_dst_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_TextMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_TextMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 msg_dst = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_msg_dst();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_dst_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string params = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_params()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->params(this->params_size() - 1).data(),
            static_cast<int>(this->params(this->params_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_TextMsg.params");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_TextMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_TextMsg)
  return false;
#undef DO_
}

void CCSUsrMsg_TextMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_TextMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 msg_dst = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->msg_dst(), output);
  }

  // repeated string params = 3;
  for (int i = 0, n = this->params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->params(i).data(), static_cast<int>(this->params(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_TextMsg.params");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->params(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_TextMsg)
}

::google::protobuf::uint8* CCSUsrMsg_TextMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_TextMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 msg_dst = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->msg_dst(), target);
  }

  // repeated string params = 3;
  for (int i = 0, n = this->params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->params(i).data(), static_cast<int>(this->params(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_TextMsg.params");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->params(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_TextMsg)
  return target;
}

size_t CCSUsrMsg_TextMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_TextMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string params = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->params_size());
  for (int i = 0, n = this->params_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->params(i));
  }

  // optional int32 msg_dst = 1;
  if (has_msg_dst()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msg_dst());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_TextMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_TextMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_TextMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_TextMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_TextMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_TextMsg)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_TextMsg::MergeFrom(const CCSUsrMsg_TextMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_TextMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.has_msg_dst()) {
    set_msg_dst(from.msg_dst());
  }
}

void CCSUsrMsg_TextMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_TextMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_TextMsg::CopyFrom(const CCSUsrMsg_TextMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_TextMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_TextMsg::IsInitialized() const {
  return true;
}

void CCSUsrMsg_TextMsg::Swap(CCSUsrMsg_TextMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_TextMsg::InternalSwap(CCSUsrMsg_TextMsg* other) {
  using std::swap;
  params_.InternalSwap(&other->params_);
  swap(msg_dst_, other->msg_dst_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_TextMsg::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_HudMsg::InitAsDefaultInstance() {
  ::_CCSUsrMsg_HudMsg_default_instance_._instance.get_mutable()->pos_ = const_cast< ::CMsgVector2D*>(
      ::CMsgVector2D::internal_default_instance());
  ::_CCSUsrMsg_HudMsg_default_instance_._instance.get_mutable()->clr1_ = const_cast< ::CMsgRGBA*>(
      ::CMsgRGBA::internal_default_instance());
  ::_CCSUsrMsg_HudMsg_default_instance_._instance.get_mutable()->clr2_ = const_cast< ::CMsgRGBA*>(
      ::CMsgRGBA::internal_default_instance());
}
void CCSUsrMsg_HudMsg::clear_pos() {
  if (pos_ != NULL) pos_->Clear();
  clear_has_pos();
}
void CCSUsrMsg_HudMsg::clear_clr1() {
  if (clr1_ != NULL) clr1_->Clear();
  clear_has_clr1();
}
void CCSUsrMsg_HudMsg::clear_clr2() {
  if (clr2_ != NULL) clr2_->Clear();
  clear_has_clr2();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_HudMsg::kChannelFieldNumber;
const int CCSUsrMsg_HudMsg::kPosFieldNumber;
const int CCSUsrMsg_HudMsg::kClr1FieldNumber;
const int CCSUsrMsg_HudMsg::kClr2FieldNumber;
const int CCSUsrMsg_HudMsg::kEffectFieldNumber;
const int CCSUsrMsg_HudMsg::kFadeInTimeFieldNumber;
const int CCSUsrMsg_HudMsg::kFadeOutTimeFieldNumber;
const int CCSUsrMsg_HudMsg::kHoldTimeFieldNumber;
const int CCSUsrMsg_HudMsg::kFxTimeFieldNumber;
const int CCSUsrMsg_HudMsg::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_HudMsg::CCSUsrMsg_HudMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_HudMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_HudMsg)
}
CCSUsrMsg_HudMsg::CCSUsrMsg_HudMsg(const CCSUsrMsg_HudMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.has_pos()) {
    pos_ = new ::CMsgVector2D(*from.pos_);
  } else {
    pos_ = NULL;
  }
  if (from.has_clr1()) {
    clr1_ = new ::CMsgRGBA(*from.clr1_);
  } else {
    clr1_ = NULL;
  }
  if (from.has_clr2()) {
    clr2_ = new ::CMsgRGBA(*from.clr2_);
  } else {
    clr2_ = NULL;
  }
  ::memcpy(&channel_, &from.channel_,
    static_cast<size_t>(reinterpret_cast<char*>(&fx_time_) -
    reinterpret_cast<char*>(&channel_)) + sizeof(fx_time_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_HudMsg)
}

void CCSUsrMsg_HudMsg::SharedCtor() {
  _cached_size_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fx_time_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(fx_time_));
}

CCSUsrMsg_HudMsg::~CCSUsrMsg_HudMsg() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_HudMsg)
  SharedDtor();
}

void CCSUsrMsg_HudMsg::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pos_;
  if (this != internal_default_instance()) delete clr1_;
  if (this != internal_default_instance()) delete clr2_;
}

void CCSUsrMsg_HudMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_HudMsg::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_HudMsg& CCSUsrMsg_HudMsg::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_HudMsg();
  return *internal_default_instance();
}

CCSUsrMsg_HudMsg* CCSUsrMsg_HudMsg::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_HudMsg* n = new CCSUsrMsg_HudMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_HudMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_HudMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*text_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(pos_ != NULL);
      pos_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(clr1_ != NULL);
      clr1_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(clr2_ != NULL);
      clr2_->Clear();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&channel_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&fade_out_time_) -
        reinterpret_cast<char*>(&channel_)) + sizeof(fade_out_time_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&hold_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&fx_time_) -
        reinterpret_cast<char*>(&hold_time_)) + sizeof(fx_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_HudMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_HudMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 channel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_channel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgVector2D pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgRGBA clr1 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_clr1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgRGBA clr2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_clr2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 effect = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_effect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &effect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float fade_in_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          set_has_fade_in_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fade_in_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float fade_out_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          set_has_fade_out_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fade_out_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float hold_time = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          set_has_hold_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &hold_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float fx_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {
          set_has_fx_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fx_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string text = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_HudMsg.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_HudMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_HudMsg)
  return false;
#undef DO_
}

void CCSUsrMsg_HudMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_HudMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 channel = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->channel(), output);
  }

  // optional .CMsgVector2D pos = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pos_, output);
  }

  // optional .CMsgRGBA clr1 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->clr1_, output);
  }

  // optional .CMsgRGBA clr2 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->clr2_, output);
  }

  // optional int32 effect = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->effect(), output);
  }

  // optional float fade_in_time = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->fade_in_time(), output);
  }

  // optional float fade_out_time = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->fade_out_time(), output);
  }

  // optional float hold_time = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->hold_time(), output);
  }

  // optional float fx_time = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->fx_time(), output);
  }

  // optional string text = 11;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_HudMsg.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_HudMsg)
}

::google::protobuf::uint8* CCSUsrMsg_HudMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_HudMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 channel = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->channel(), target);
  }

  // optional .CMsgVector2D pos = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->pos_, deterministic, target);
  }

  // optional .CMsgRGBA clr1 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->clr1_, deterministic, target);
  }

  // optional .CMsgRGBA clr2 = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->clr2_, deterministic, target);
  }

  // optional int32 effect = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->effect(), target);
  }

  // optional float fade_in_time = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->fade_in_time(), target);
  }

  // optional float fade_out_time = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->fade_out_time(), target);
  }

  // optional float hold_time = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->hold_time(), target);
  }

  // optional float fx_time = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->fx_time(), target);
  }

  // optional string text = 11;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_HudMsg.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_HudMsg)
  return target;
}

size_t CCSUsrMsg_HudMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_HudMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string text = 11;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional .CMsgVector2D pos = 2;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->pos_);
    }

    // optional .CMsgRGBA clr1 = 3;
    if (has_clr1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->clr1_);
    }

    // optional .CMsgRGBA clr2 = 4;
    if (has_clr2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->clr2_);
    }

    // optional int32 channel = 1;
    if (has_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->channel());
    }

    // optional int32 effect = 5;
    if (has_effect()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->effect());
    }

    // optional float fade_in_time = 6;
    if (has_fade_in_time()) {
      total_size += 1 + 4;
    }

    // optional float fade_out_time = 7;
    if (has_fade_out_time()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional float hold_time = 9;
    if (has_hold_time()) {
      total_size += 1 + 4;
    }

    // optional float fx_time = 10;
    if (has_fx_time()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_HudMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_HudMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_HudMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_HudMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_HudMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_HudMsg)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_HudMsg::MergeFrom(const CCSUsrMsg_HudMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_HudMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_pos()->::CMsgVector2D::MergeFrom(from.pos());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_clr1()->::CMsgRGBA::MergeFrom(from.clr1());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_clr2()->::CMsgRGBA::MergeFrom(from.clr2());
    }
    if (cached_has_bits & 0x00000010u) {
      channel_ = from.channel_;
    }
    if (cached_has_bits & 0x00000020u) {
      effect_ = from.effect_;
    }
    if (cached_has_bits & 0x00000040u) {
      fade_in_time_ = from.fade_in_time_;
    }
    if (cached_has_bits & 0x00000080u) {
      fade_out_time_ = from.fade_out_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      hold_time_ = from.hold_time_;
    }
    if (cached_has_bits & 0x00000200u) {
      fx_time_ = from.fx_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_HudMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_HudMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_HudMsg::CopyFrom(const CCSUsrMsg_HudMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_HudMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_HudMsg::IsInitialized() const {
  return true;
}

void CCSUsrMsg_HudMsg::Swap(CCSUsrMsg_HudMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_HudMsg::InternalSwap(CCSUsrMsg_HudMsg* other) {
  using std::swap;
  text_.Swap(&other->text_);
  swap(pos_, other->pos_);
  swap(clr1_, other->clr1_);
  swap(clr2_, other->clr2_);
  swap(channel_, other->channel_);
  swap(effect_, other->effect_);
  swap(fade_in_time_, other->fade_in_time_);
  swap(fade_out_time_, other->fade_out_time_);
  swap(hold_time_, other->hold_time_);
  swap(fx_time_, other->fx_time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_HudMsg::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_Shake::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_Shake::kCommandFieldNumber;
const int CCSUsrMsg_Shake::kLocalAmplitudeFieldNumber;
const int CCSUsrMsg_Shake::kFrequencyFieldNumber;
const int CCSUsrMsg_Shake::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_Shake::CCSUsrMsg_Shake()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_Shake();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_Shake)
}
CCSUsrMsg_Shake::CCSUsrMsg_Shake(const CCSUsrMsg_Shake& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&command_, &from.command_,
    static_cast<size_t>(reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&command_)) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_Shake)
}

void CCSUsrMsg_Shake::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&command_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&command_)) + sizeof(duration_));
}

CCSUsrMsg_Shake::~CCSUsrMsg_Shake() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_Shake)
  SharedDtor();
}

void CCSUsrMsg_Shake::SharedDtor() {
}

void CCSUsrMsg_Shake::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_Shake::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_Shake& CCSUsrMsg_Shake::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_Shake();
  return *internal_default_instance();
}

CCSUsrMsg_Shake* CCSUsrMsg_Shake::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_Shake* n = new CCSUsrMsg_Shake;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_Shake::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_Shake)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&command_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&duration_) -
        reinterpret_cast<char*>(&command_)) + sizeof(duration_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_Shake::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_Shake)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 command = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_command();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &command_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float local_amplitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_local_amplitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &local_amplitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float frequency = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_frequency();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &frequency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float duration = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_Shake)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_Shake)
  return false;
#undef DO_
}

void CCSUsrMsg_Shake::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_Shake)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 command = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->command(), output);
  }

  // optional float local_amplitude = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->local_amplitude(), output);
  }

  // optional float frequency = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->frequency(), output);
  }

  // optional float duration = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->duration(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_Shake)
}

::google::protobuf::uint8* CCSUsrMsg_Shake::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_Shake)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 command = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->command(), target);
  }

  // optional float local_amplitude = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->local_amplitude(), target);
  }

  // optional float frequency = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->frequency(), target);
  }

  // optional float duration = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->duration(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_Shake)
  return target;
}

size_t CCSUsrMsg_Shake::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_Shake)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 command = 1;
    if (has_command()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->command());
    }

    // optional float local_amplitude = 2;
    if (has_local_amplitude()) {
      total_size += 1 + 4;
    }

    // optional float frequency = 3;
    if (has_frequency()) {
      total_size += 1 + 4;
    }

    // optional float duration = 4;
    if (has_duration()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_Shake::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_Shake)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_Shake* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_Shake>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_Shake)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_Shake)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_Shake::MergeFrom(const CCSUsrMsg_Shake& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_Shake)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      command_ = from.command_;
    }
    if (cached_has_bits & 0x00000002u) {
      local_amplitude_ = from.local_amplitude_;
    }
    if (cached_has_bits & 0x00000004u) {
      frequency_ = from.frequency_;
    }
    if (cached_has_bits & 0x00000008u) {
      duration_ = from.duration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_Shake::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_Shake)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_Shake::CopyFrom(const CCSUsrMsg_Shake& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_Shake)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_Shake::IsInitialized() const {
  return true;
}

void CCSUsrMsg_Shake::Swap(CCSUsrMsg_Shake* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_Shake::InternalSwap(CCSUsrMsg_Shake* other) {
  using std::swap;
  swap(command_, other->command_);
  swap(local_amplitude_, other->local_amplitude_);
  swap(frequency_, other->frequency_);
  swap(duration_, other->duration_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_Shake::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_Fade::InitAsDefaultInstance() {
  ::_CCSUsrMsg_Fade_default_instance_._instance.get_mutable()->clr_ = const_cast< ::CMsgRGBA*>(
      ::CMsgRGBA::internal_default_instance());
}
void CCSUsrMsg_Fade::clear_clr() {
  if (clr_ != NULL) clr_->Clear();
  clear_has_clr();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_Fade::kDurationFieldNumber;
const int CCSUsrMsg_Fade::kHoldTimeFieldNumber;
const int CCSUsrMsg_Fade::kFlagsFieldNumber;
const int CCSUsrMsg_Fade::kClrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_Fade::CCSUsrMsg_Fade()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_Fade();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_Fade)
}
CCSUsrMsg_Fade::CCSUsrMsg_Fade(const CCSUsrMsg_Fade& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_clr()) {
    clr_ = new ::CMsgRGBA(*from.clr_);
  } else {
    clr_ = NULL;
  }
  ::memcpy(&duration_, &from.duration_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&duration_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_Fade)
}

void CCSUsrMsg_Fade::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&clr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&clr_)) + sizeof(flags_));
}

CCSUsrMsg_Fade::~CCSUsrMsg_Fade() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_Fade)
  SharedDtor();
}

void CCSUsrMsg_Fade::SharedDtor() {
  if (this != internal_default_instance()) delete clr_;
}

void CCSUsrMsg_Fade::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_Fade::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_Fade& CCSUsrMsg_Fade::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_Fade();
  return *internal_default_instance();
}

CCSUsrMsg_Fade* CCSUsrMsg_Fade::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_Fade* n = new CCSUsrMsg_Fade;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_Fade::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_Fade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(clr_ != NULL);
    clr_->Clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&duration_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&flags_) -
        reinterpret_cast<char*>(&duration_)) + sizeof(flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_Fade::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_Fade)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 duration = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 hold_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_hold_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hold_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 flags = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgRGBA clr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_clr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_Fade)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_Fade)
  return false;
#undef DO_
}

void CCSUsrMsg_Fade::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_Fade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 duration = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->duration(), output);
  }

  // optional int32 hold_time = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->hold_time(), output);
  }

  // optional int32 flags = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->flags(), output);
  }

  // optional .CMsgRGBA clr = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->clr_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_Fade)
}

::google::protobuf::uint8* CCSUsrMsg_Fade::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_Fade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 duration = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->duration(), target);
  }

  // optional int32 hold_time = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->hold_time(), target);
  }

  // optional int32 flags = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->flags(), target);
  }

  // optional .CMsgRGBA clr = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->clr_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_Fade)
  return target;
}

size_t CCSUsrMsg_Fade::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_Fade)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .CMsgRGBA clr = 4;
    if (has_clr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->clr_);
    }

    // optional int32 duration = 1;
    if (has_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->duration());
    }

    // optional int32 hold_time = 2;
    if (has_hold_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hold_time());
    }

    // optional int32 flags = 3;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flags());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_Fade::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_Fade)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_Fade* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_Fade>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_Fade)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_Fade)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_Fade::MergeFrom(const CCSUsrMsg_Fade& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_Fade)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_clr()->::CMsgRGBA::MergeFrom(from.clr());
    }
    if (cached_has_bits & 0x00000002u) {
      duration_ = from.duration_;
    }
    if (cached_has_bits & 0x00000004u) {
      hold_time_ = from.hold_time_;
    }
    if (cached_has_bits & 0x00000008u) {
      flags_ = from.flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_Fade::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_Fade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_Fade::CopyFrom(const CCSUsrMsg_Fade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_Fade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_Fade::IsInitialized() const {
  return true;
}

void CCSUsrMsg_Fade::Swap(CCSUsrMsg_Fade* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_Fade::InternalSwap(CCSUsrMsg_Fade* other) {
  using std::swap;
  swap(clr_, other->clr_);
  swap(duration_, other->duration_);
  swap(hold_time_, other->hold_time_);
  swap(flags_, other->flags_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_Fade::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_Rumble::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_Rumble::kIndexFieldNumber;
const int CCSUsrMsg_Rumble::kDataFieldNumber;
const int CCSUsrMsg_Rumble::kFlagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_Rumble::CCSUsrMsg_Rumble()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_Rumble();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_Rumble)
}
CCSUsrMsg_Rumble::CCSUsrMsg_Rumble(const CCSUsrMsg_Rumble& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&index_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_Rumble)
}

void CCSUsrMsg_Rumble::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&index_)) + sizeof(flags_));
}

CCSUsrMsg_Rumble::~CCSUsrMsg_Rumble() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_Rumble)
  SharedDtor();
}

void CCSUsrMsg_Rumble::SharedDtor() {
}

void CCSUsrMsg_Rumble::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_Rumble::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_Rumble& CCSUsrMsg_Rumble::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_Rumble();
  return *internal_default_instance();
}

CCSUsrMsg_Rumble* CCSUsrMsg_Rumble::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_Rumble* n = new CCSUsrMsg_Rumble;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_Rumble::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_Rumble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&flags_) -
        reinterpret_cast<char*>(&index_)) + sizeof(flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_Rumble::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_Rumble)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 flags = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_Rumble)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_Rumble)
  return false;
#undef DO_
}

void CCSUsrMsg_Rumble::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_Rumble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // optional int32 data = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->data(), output);
  }

  // optional int32 flags = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->flags(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_Rumble)
}

::google::protobuf::uint8* CCSUsrMsg_Rumble::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_Rumble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // optional int32 data = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->data(), target);
  }

  // optional int32 flags = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->flags(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_Rumble)
  return target;
}

size_t CCSUsrMsg_Rumble::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_Rumble)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

    // optional int32 data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data());
    }

    // optional int32 flags = 3;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flags());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_Rumble::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_Rumble)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_Rumble* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_Rumble>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_Rumble)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_Rumble)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_Rumble::MergeFrom(const CCSUsrMsg_Rumble& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_Rumble)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      index_ = from.index_;
    }
    if (cached_has_bits & 0x00000002u) {
      data_ = from.data_;
    }
    if (cached_has_bits & 0x00000004u) {
      flags_ = from.flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_Rumble::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_Rumble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_Rumble::CopyFrom(const CCSUsrMsg_Rumble& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_Rumble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_Rumble::IsInitialized() const {
  return true;
}

void CCSUsrMsg_Rumble::Swap(CCSUsrMsg_Rumble* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_Rumble::InternalSwap(CCSUsrMsg_Rumble* other) {
  using std::swap;
  swap(index_, other->index_);
  swap(data_, other->data_);
  swap(flags_, other->flags_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_Rumble::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_CloseCaption::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_CloseCaption::kHashFieldNumber;
const int CCSUsrMsg_CloseCaption::kDurationFieldNumber;
const int CCSUsrMsg_CloseCaption::kFromPlayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_CloseCaption::CCSUsrMsg_CloseCaption()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_CloseCaption();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_CloseCaption)
}
CCSUsrMsg_CloseCaption::CCSUsrMsg_CloseCaption(const CCSUsrMsg_CloseCaption& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hash_, &from.hash_,
    static_cast<size_t>(reinterpret_cast<char*>(&from_player_) -
    reinterpret_cast<char*>(&hash_)) + sizeof(from_player_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_CloseCaption)
}

void CCSUsrMsg_CloseCaption::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&hash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&from_player_) -
      reinterpret_cast<char*>(&hash_)) + sizeof(from_player_));
}

CCSUsrMsg_CloseCaption::~CCSUsrMsg_CloseCaption() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_CloseCaption)
  SharedDtor();
}

void CCSUsrMsg_CloseCaption::SharedDtor() {
}

void CCSUsrMsg_CloseCaption::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_CloseCaption::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_CloseCaption& CCSUsrMsg_CloseCaption::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_CloseCaption();
  return *internal_default_instance();
}

CCSUsrMsg_CloseCaption* CCSUsrMsg_CloseCaption::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_CloseCaption* n = new CCSUsrMsg_CloseCaption;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_CloseCaption::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_CloseCaption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&hash_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&from_player_) -
        reinterpret_cast<char*>(&hash_)) + sizeof(from_player_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_CloseCaption::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_CloseCaption)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_hash();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 duration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool from_player = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_from_player();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &from_player_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_CloseCaption)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_CloseCaption)
  return false;
#undef DO_
}

void CCSUsrMsg_CloseCaption::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_CloseCaption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 hash = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hash(), output);
  }

  // optional int32 duration = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->duration(), output);
  }

  // optional bool from_player = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->from_player(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_CloseCaption)
}

::google::protobuf::uint8* CCSUsrMsg_CloseCaption::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_CloseCaption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 hash = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hash(), target);
  }

  // optional int32 duration = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->duration(), target);
  }

  // optional bool from_player = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->from_player(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_CloseCaption)
  return target;
}

size_t CCSUsrMsg_CloseCaption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_CloseCaption)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 hash = 1;
    if (has_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hash());
    }

    // optional int32 duration = 2;
    if (has_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->duration());
    }

    // optional bool from_player = 3;
    if (has_from_player()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_CloseCaption::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_CloseCaption)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_CloseCaption* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_CloseCaption>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_CloseCaption)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_CloseCaption)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_CloseCaption::MergeFrom(const CCSUsrMsg_CloseCaption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_CloseCaption)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      hash_ = from.hash_;
    }
    if (cached_has_bits & 0x00000002u) {
      duration_ = from.duration_;
    }
    if (cached_has_bits & 0x00000004u) {
      from_player_ = from.from_player_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_CloseCaption::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_CloseCaption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_CloseCaption::CopyFrom(const CCSUsrMsg_CloseCaption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_CloseCaption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_CloseCaption::IsInitialized() const {
  return true;
}

void CCSUsrMsg_CloseCaption::Swap(CCSUsrMsg_CloseCaption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_CloseCaption::InternalSwap(CCSUsrMsg_CloseCaption* other) {
  using std::swap;
  swap(hash_, other->hash_);
  swap(duration_, other->duration_);
  swap(from_player_, other->from_player_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_CloseCaption::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_CloseCaptionDirect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_CloseCaptionDirect::kHashFieldNumber;
const int CCSUsrMsg_CloseCaptionDirect::kDurationFieldNumber;
const int CCSUsrMsg_CloseCaptionDirect::kFromPlayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_CloseCaptionDirect::CCSUsrMsg_CloseCaptionDirect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_CloseCaptionDirect();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_CloseCaptionDirect)
}
CCSUsrMsg_CloseCaptionDirect::CCSUsrMsg_CloseCaptionDirect(const CCSUsrMsg_CloseCaptionDirect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hash_, &from.hash_,
    static_cast<size_t>(reinterpret_cast<char*>(&from_player_) -
    reinterpret_cast<char*>(&hash_)) + sizeof(from_player_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_CloseCaptionDirect)
}

void CCSUsrMsg_CloseCaptionDirect::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&hash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&from_player_) -
      reinterpret_cast<char*>(&hash_)) + sizeof(from_player_));
}

CCSUsrMsg_CloseCaptionDirect::~CCSUsrMsg_CloseCaptionDirect() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_CloseCaptionDirect)
  SharedDtor();
}

void CCSUsrMsg_CloseCaptionDirect::SharedDtor() {
}

void CCSUsrMsg_CloseCaptionDirect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_CloseCaptionDirect::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_CloseCaptionDirect& CCSUsrMsg_CloseCaptionDirect::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_CloseCaptionDirect();
  return *internal_default_instance();
}

CCSUsrMsg_CloseCaptionDirect* CCSUsrMsg_CloseCaptionDirect::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_CloseCaptionDirect* n = new CCSUsrMsg_CloseCaptionDirect;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_CloseCaptionDirect::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_CloseCaptionDirect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&hash_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&from_player_) -
        reinterpret_cast<char*>(&hash_)) + sizeof(from_player_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_CloseCaptionDirect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_CloseCaptionDirect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_hash();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 duration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool from_player = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_from_player();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &from_player_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_CloseCaptionDirect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_CloseCaptionDirect)
  return false;
#undef DO_
}

void CCSUsrMsg_CloseCaptionDirect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_CloseCaptionDirect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 hash = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hash(), output);
  }

  // optional int32 duration = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->duration(), output);
  }

  // optional bool from_player = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->from_player(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_CloseCaptionDirect)
}

::google::protobuf::uint8* CCSUsrMsg_CloseCaptionDirect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_CloseCaptionDirect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 hash = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hash(), target);
  }

  // optional int32 duration = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->duration(), target);
  }

  // optional bool from_player = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->from_player(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_CloseCaptionDirect)
  return target;
}

size_t CCSUsrMsg_CloseCaptionDirect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_CloseCaptionDirect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 hash = 1;
    if (has_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hash());
    }

    // optional int32 duration = 2;
    if (has_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->duration());
    }

    // optional bool from_player = 3;
    if (has_from_player()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_CloseCaptionDirect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_CloseCaptionDirect)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_CloseCaptionDirect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_CloseCaptionDirect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_CloseCaptionDirect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_CloseCaptionDirect)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_CloseCaptionDirect::MergeFrom(const CCSUsrMsg_CloseCaptionDirect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_CloseCaptionDirect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      hash_ = from.hash_;
    }
    if (cached_has_bits & 0x00000002u) {
      duration_ = from.duration_;
    }
    if (cached_has_bits & 0x00000004u) {
      from_player_ = from.from_player_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_CloseCaptionDirect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_CloseCaptionDirect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_CloseCaptionDirect::CopyFrom(const CCSUsrMsg_CloseCaptionDirect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_CloseCaptionDirect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_CloseCaptionDirect::IsInitialized() const {
  return true;
}

void CCSUsrMsg_CloseCaptionDirect::Swap(CCSUsrMsg_CloseCaptionDirect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_CloseCaptionDirect::InternalSwap(CCSUsrMsg_CloseCaptionDirect* other) {
  using std::swap;
  swap(hash_, other->hash_);
  swap(duration_, other->duration_);
  swap(from_player_, other->from_player_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_CloseCaptionDirect::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_SendAudio::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_SendAudio::kRadioSoundFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_SendAudio::CCSUsrMsg_SendAudio()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_SendAudio();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_SendAudio)
}
CCSUsrMsg_SendAudio::CCSUsrMsg_SendAudio(const CCSUsrMsg_SendAudio& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  radio_sound_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_radio_sound()) {
    radio_sound_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.radio_sound_);
  }
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_SendAudio)
}

void CCSUsrMsg_SendAudio::SharedCtor() {
  _cached_size_ = 0;
  radio_sound_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CCSUsrMsg_SendAudio::~CCSUsrMsg_SendAudio() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_SendAudio)
  SharedDtor();
}

void CCSUsrMsg_SendAudio::SharedDtor() {
  radio_sound_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_SendAudio::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_SendAudio::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_SendAudio& CCSUsrMsg_SendAudio::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_SendAudio();
  return *internal_default_instance();
}

CCSUsrMsg_SendAudio* CCSUsrMsg_SendAudio::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_SendAudio* n = new CCSUsrMsg_SendAudio;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_SendAudio::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_SendAudio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!radio_sound_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*radio_sound_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_SendAudio::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_SendAudio)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string radio_sound = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_radio_sound()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->radio_sound().data(), static_cast<int>(this->radio_sound().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_SendAudio.radio_sound");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_SendAudio)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_SendAudio)
  return false;
#undef DO_
}

void CCSUsrMsg_SendAudio::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_SendAudio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string radio_sound = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->radio_sound().data(), static_cast<int>(this->radio_sound().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_SendAudio.radio_sound");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->radio_sound(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_SendAudio)
}

::google::protobuf::uint8* CCSUsrMsg_SendAudio::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_SendAudio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string radio_sound = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->radio_sound().data(), static_cast<int>(this->radio_sound().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_SendAudio.radio_sound");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->radio_sound(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_SendAudio)
  return target;
}

size_t CCSUsrMsg_SendAudio::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_SendAudio)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string radio_sound = 1;
  if (has_radio_sound()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->radio_sound());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_SendAudio::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_SendAudio)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_SendAudio* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_SendAudio>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_SendAudio)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_SendAudio)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_SendAudio::MergeFrom(const CCSUsrMsg_SendAudio& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_SendAudio)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_radio_sound()) {
    set_has_radio_sound();
    radio_sound_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.radio_sound_);
  }
}

void CCSUsrMsg_SendAudio::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_SendAudio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_SendAudio::CopyFrom(const CCSUsrMsg_SendAudio& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_SendAudio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_SendAudio::IsInitialized() const {
  return true;
}

void CCSUsrMsg_SendAudio::Swap(CCSUsrMsg_SendAudio* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_SendAudio::InternalSwap(CCSUsrMsg_SendAudio* other) {
  using std::swap;
  radio_sound_.Swap(&other->radio_sound_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_SendAudio::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_RawAudio::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_RawAudio::kPitchFieldNumber;
const int CCSUsrMsg_RawAudio::kEntidxFieldNumber;
const int CCSUsrMsg_RawAudio::kDurationFieldNumber;
const int CCSUsrMsg_RawAudio::kVoiceFilenameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_RawAudio::CCSUsrMsg_RawAudio()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_RawAudio();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_RawAudio)
}
CCSUsrMsg_RawAudio::CCSUsrMsg_RawAudio(const CCSUsrMsg_RawAudio& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  voice_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_voice_filename()) {
    voice_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voice_filename_);
  }
  ::memcpy(&pitch_, &from.pitch_,
    static_cast<size_t>(reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&pitch_)) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_RawAudio)
}

void CCSUsrMsg_RawAudio::SharedCtor() {
  _cached_size_ = 0;
  voice_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pitch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&pitch_)) + sizeof(duration_));
}

CCSUsrMsg_RawAudio::~CCSUsrMsg_RawAudio() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_RawAudio)
  SharedDtor();
}

void CCSUsrMsg_RawAudio::SharedDtor() {
  voice_filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_RawAudio::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_RawAudio::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_RawAudio& CCSUsrMsg_RawAudio::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_RawAudio();
  return *internal_default_instance();
}

CCSUsrMsg_RawAudio* CCSUsrMsg_RawAudio::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_RawAudio* n = new CCSUsrMsg_RawAudio;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_RawAudio::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_RawAudio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!voice_filename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*voice_filename_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&pitch_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&duration_) -
        reinterpret_cast<char*>(&pitch_)) + sizeof(duration_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_RawAudio::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_RawAudio)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pitch = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_pitch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 entidx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_entidx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entidx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float duration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string voice_filename = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_voice_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->voice_filename().data(), static_cast<int>(this->voice_filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_RawAudio.voice_filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_RawAudio)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_RawAudio)
  return false;
#undef DO_
}

void CCSUsrMsg_RawAudio::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_RawAudio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 pitch = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pitch(), output);
  }

  // optional int32 entidx = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->entidx(), output);
  }

  // optional float duration = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->duration(), output);
  }

  // optional string voice_filename = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->voice_filename().data(), static_cast<int>(this->voice_filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_RawAudio.voice_filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->voice_filename(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_RawAudio)
}

::google::protobuf::uint8* CCSUsrMsg_RawAudio::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_RawAudio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 pitch = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pitch(), target);
  }

  // optional int32 entidx = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->entidx(), target);
  }

  // optional float duration = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->duration(), target);
  }

  // optional string voice_filename = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->voice_filename().data(), static_cast<int>(this->voice_filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_RawAudio.voice_filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->voice_filename(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_RawAudio)
  return target;
}

size_t CCSUsrMsg_RawAudio::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_RawAudio)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string voice_filename = 4;
    if (has_voice_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->voice_filename());
    }

    // optional int32 pitch = 1;
    if (has_pitch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pitch());
    }

    // optional int32 entidx = 2;
    if (has_entidx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entidx());
    }

    // optional float duration = 3;
    if (has_duration()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_RawAudio::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_RawAudio)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_RawAudio* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_RawAudio>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_RawAudio)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_RawAudio)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_RawAudio::MergeFrom(const CCSUsrMsg_RawAudio& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_RawAudio)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_voice_filename();
      voice_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voice_filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      pitch_ = from.pitch_;
    }
    if (cached_has_bits & 0x00000004u) {
      entidx_ = from.entidx_;
    }
    if (cached_has_bits & 0x00000008u) {
      duration_ = from.duration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_RawAudio::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_RawAudio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_RawAudio::CopyFrom(const CCSUsrMsg_RawAudio& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_RawAudio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_RawAudio::IsInitialized() const {
  return true;
}

void CCSUsrMsg_RawAudio::Swap(CCSUsrMsg_RawAudio* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_RawAudio::InternalSwap(CCSUsrMsg_RawAudio* other) {
  using std::swap;
  voice_filename_.Swap(&other->voice_filename_);
  swap(pitch_, other->pitch_);
  swap(entidx_, other->entidx_);
  swap(duration_, other->duration_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_RawAudio::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_VoiceMask_PlayerMask::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_VoiceMask_PlayerMask::kGameRulesMaskFieldNumber;
const int CCSUsrMsg_VoiceMask_PlayerMask::kBanMasksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_VoiceMask_PlayerMask::CCSUsrMsg_VoiceMask_PlayerMask()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_VoiceMask_PlayerMask();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_VoiceMask.PlayerMask)
}
CCSUsrMsg_VoiceMask_PlayerMask::CCSUsrMsg_VoiceMask_PlayerMask(const CCSUsrMsg_VoiceMask_PlayerMask& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&game_rules_mask_, &from.game_rules_mask_,
    static_cast<size_t>(reinterpret_cast<char*>(&ban_masks_) -
    reinterpret_cast<char*>(&game_rules_mask_)) + sizeof(ban_masks_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_VoiceMask.PlayerMask)
}

void CCSUsrMsg_VoiceMask_PlayerMask::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&game_rules_mask_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ban_masks_) -
      reinterpret_cast<char*>(&game_rules_mask_)) + sizeof(ban_masks_));
}

CCSUsrMsg_VoiceMask_PlayerMask::~CCSUsrMsg_VoiceMask_PlayerMask() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_VoiceMask.PlayerMask)
  SharedDtor();
}

void CCSUsrMsg_VoiceMask_PlayerMask::SharedDtor() {
}

void CCSUsrMsg_VoiceMask_PlayerMask::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_VoiceMask_PlayerMask::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_VoiceMask_PlayerMask& CCSUsrMsg_VoiceMask_PlayerMask::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_VoiceMask_PlayerMask();
  return *internal_default_instance();
}

CCSUsrMsg_VoiceMask_PlayerMask* CCSUsrMsg_VoiceMask_PlayerMask::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_VoiceMask_PlayerMask* n = new CCSUsrMsg_VoiceMask_PlayerMask;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_VoiceMask_PlayerMask::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_VoiceMask.PlayerMask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&game_rules_mask_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ban_masks_) -
        reinterpret_cast<char*>(&game_rules_mask_)) + sizeof(ban_masks_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_VoiceMask_PlayerMask::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_VoiceMask.PlayerMask)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 game_rules_mask = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_game_rules_mask();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &game_rules_mask_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ban_masks = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ban_masks();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ban_masks_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_VoiceMask.PlayerMask)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_VoiceMask.PlayerMask)
  return false;
#undef DO_
}

void CCSUsrMsg_VoiceMask_PlayerMask::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_VoiceMask.PlayerMask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 game_rules_mask = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->game_rules_mask(), output);
  }

  // optional int32 ban_masks = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ban_masks(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_VoiceMask.PlayerMask)
}

::google::protobuf::uint8* CCSUsrMsg_VoiceMask_PlayerMask::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_VoiceMask.PlayerMask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 game_rules_mask = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->game_rules_mask(), target);
  }

  // optional int32 ban_masks = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ban_masks(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_VoiceMask.PlayerMask)
  return target;
}

size_t CCSUsrMsg_VoiceMask_PlayerMask::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_VoiceMask.PlayerMask)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 game_rules_mask = 1;
    if (has_game_rules_mask()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->game_rules_mask());
    }

    // optional int32 ban_masks = 2;
    if (has_ban_masks()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ban_masks());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_VoiceMask_PlayerMask::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_VoiceMask.PlayerMask)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_VoiceMask_PlayerMask* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_VoiceMask_PlayerMask>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_VoiceMask.PlayerMask)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_VoiceMask.PlayerMask)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_VoiceMask_PlayerMask::MergeFrom(const CCSUsrMsg_VoiceMask_PlayerMask& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_VoiceMask.PlayerMask)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      game_rules_mask_ = from.game_rules_mask_;
    }
    if (cached_has_bits & 0x00000002u) {
      ban_masks_ = from.ban_masks_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_VoiceMask_PlayerMask::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_VoiceMask.PlayerMask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_VoiceMask_PlayerMask::CopyFrom(const CCSUsrMsg_VoiceMask_PlayerMask& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_VoiceMask.PlayerMask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_VoiceMask_PlayerMask::IsInitialized() const {
  return true;
}

void CCSUsrMsg_VoiceMask_PlayerMask::Swap(CCSUsrMsg_VoiceMask_PlayerMask* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_VoiceMask_PlayerMask::InternalSwap(CCSUsrMsg_VoiceMask_PlayerMask* other) {
  using std::swap;
  swap(game_rules_mask_, other->game_rules_mask_);
  swap(ban_masks_, other->ban_masks_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_VoiceMask_PlayerMask::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_VoiceMask::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_VoiceMask::kPlayerMasksFieldNumber;
const int CCSUsrMsg_VoiceMask::kPlayerModEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_VoiceMask::CCSUsrMsg_VoiceMask()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_VoiceMask();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_VoiceMask)
}
CCSUsrMsg_VoiceMask::CCSUsrMsg_VoiceMask(const CCSUsrMsg_VoiceMask& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      player_masks_(from.player_masks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  player_mod_enable_ = from.player_mod_enable_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_VoiceMask)
}

void CCSUsrMsg_VoiceMask::SharedCtor() {
  _cached_size_ = 0;
  player_mod_enable_ = false;
}

CCSUsrMsg_VoiceMask::~CCSUsrMsg_VoiceMask() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_VoiceMask)
  SharedDtor();
}

void CCSUsrMsg_VoiceMask::SharedDtor() {
}

void CCSUsrMsg_VoiceMask::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_VoiceMask::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_VoiceMask& CCSUsrMsg_VoiceMask::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_VoiceMask();
  return *internal_default_instance();
}

CCSUsrMsg_VoiceMask* CCSUsrMsg_VoiceMask::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_VoiceMask* n = new CCSUsrMsg_VoiceMask;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_VoiceMask::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_VoiceMask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_masks_.Clear();
  player_mod_enable_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_VoiceMask::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_VoiceMask)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CCSUsrMsg_VoiceMask.PlayerMask player_masks = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_player_masks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool player_mod_enable = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_player_mod_enable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &player_mod_enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_VoiceMask)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_VoiceMask)
  return false;
#undef DO_
}

void CCSUsrMsg_VoiceMask::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_VoiceMask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CCSUsrMsg_VoiceMask.PlayerMask player_masks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_masks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->player_masks(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool player_mod_enable = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->player_mod_enable(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_VoiceMask)
}

::google::protobuf::uint8* CCSUsrMsg_VoiceMask::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_VoiceMask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CCSUsrMsg_VoiceMask.PlayerMask player_masks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_masks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->player_masks(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool player_mod_enable = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->player_mod_enable(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_VoiceMask)
  return target;
}

size_t CCSUsrMsg_VoiceMask::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_VoiceMask)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CCSUsrMsg_VoiceMask.PlayerMask player_masks = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->player_masks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->player_masks(static_cast<int>(i)));
    }
  }

  // optional bool player_mod_enable = 2;
  if (has_player_mod_enable()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_VoiceMask::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_VoiceMask)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_VoiceMask* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_VoiceMask>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_VoiceMask)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_VoiceMask)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_VoiceMask::MergeFrom(const CCSUsrMsg_VoiceMask& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_VoiceMask)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_masks_.MergeFrom(from.player_masks_);
  if (from.has_player_mod_enable()) {
    set_player_mod_enable(from.player_mod_enable());
  }
}

void CCSUsrMsg_VoiceMask::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_VoiceMask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_VoiceMask::CopyFrom(const CCSUsrMsg_VoiceMask& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_VoiceMask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_VoiceMask::IsInitialized() const {
  return true;
}

void CCSUsrMsg_VoiceMask::Swap(CCSUsrMsg_VoiceMask* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_VoiceMask::InternalSwap(CCSUsrMsg_VoiceMask* other) {
  using std::swap;
  player_masks_.InternalSwap(&other->player_masks_);
  swap(player_mod_enable_, other->player_mod_enable_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_VoiceMask::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_Damage::InitAsDefaultInstance() {
  ::_CCSUsrMsg_Damage_default_instance_._instance.get_mutable()->inflictor_world_pos_ = const_cast< ::CMsgVector*>(
      ::CMsgVector::internal_default_instance());
}
void CCSUsrMsg_Damage::clear_inflictor_world_pos() {
  if (inflictor_world_pos_ != NULL) inflictor_world_pos_->Clear();
  clear_has_inflictor_world_pos();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_Damage::kAmountFieldNumber;
const int CCSUsrMsg_Damage::kInflictorWorldPosFieldNumber;
const int CCSUsrMsg_Damage::kVictimEntindexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_Damage::CCSUsrMsg_Damage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_Damage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_Damage)
}
CCSUsrMsg_Damage::CCSUsrMsg_Damage(const CCSUsrMsg_Damage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_inflictor_world_pos()) {
    inflictor_world_pos_ = new ::CMsgVector(*from.inflictor_world_pos_);
  } else {
    inflictor_world_pos_ = NULL;
  }
  ::memcpy(&amount_, &from.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&victim_entindex_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(victim_entindex_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_Damage)
}

void CCSUsrMsg_Damage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&inflictor_world_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&victim_entindex_) -
      reinterpret_cast<char*>(&inflictor_world_pos_)) + sizeof(victim_entindex_));
}

CCSUsrMsg_Damage::~CCSUsrMsg_Damage() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_Damage)
  SharedDtor();
}

void CCSUsrMsg_Damage::SharedDtor() {
  if (this != internal_default_instance()) delete inflictor_world_pos_;
}

void CCSUsrMsg_Damage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_Damage::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_Damage& CCSUsrMsg_Damage::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_Damage();
  return *internal_default_instance();
}

CCSUsrMsg_Damage* CCSUsrMsg_Damage::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_Damage* n = new CCSUsrMsg_Damage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_Damage::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_Damage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(inflictor_world_pos_ != NULL);
    inflictor_world_pos_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&amount_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&victim_entindex_) -
        reinterpret_cast<char*>(&amount_)) + sizeof(victim_entindex_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_Damage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_Damage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 amount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgVector inflictor_world_pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inflictor_world_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 victim_entindex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_victim_entindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &victim_entindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_Damage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_Damage)
  return false;
#undef DO_
}

void CCSUsrMsg_Damage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_Damage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 amount = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->amount(), output);
  }

  // optional .CMsgVector inflictor_world_pos = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->inflictor_world_pos_, output);
  }

  // optional int32 victim_entindex = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->victim_entindex(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_Damage)
}

::google::protobuf::uint8* CCSUsrMsg_Damage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_Damage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 amount = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->amount(), target);
  }

  // optional .CMsgVector inflictor_world_pos = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->inflictor_world_pos_, deterministic, target);
  }

  // optional int32 victim_entindex = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->victim_entindex(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_Damage)
  return target;
}

size_t CCSUsrMsg_Damage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_Damage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .CMsgVector inflictor_world_pos = 2;
    if (has_inflictor_world_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->inflictor_world_pos_);
    }

    // optional int32 amount = 1;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }

    // optional int32 victim_entindex = 3;
    if (has_victim_entindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->victim_entindex());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_Damage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_Damage)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_Damage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_Damage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_Damage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_Damage)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_Damage::MergeFrom(const CCSUsrMsg_Damage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_Damage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_inflictor_world_pos()->::CMsgVector::MergeFrom(from.inflictor_world_pos());
    }
    if (cached_has_bits & 0x00000002u) {
      amount_ = from.amount_;
    }
    if (cached_has_bits & 0x00000004u) {
      victim_entindex_ = from.victim_entindex_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_Damage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_Damage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_Damage::CopyFrom(const CCSUsrMsg_Damage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_Damage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_Damage::IsInitialized() const {
  return true;
}

void CCSUsrMsg_Damage::Swap(CCSUsrMsg_Damage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_Damage::InternalSwap(CCSUsrMsg_Damage* other) {
  using std::swap;
  swap(inflictor_world_pos_, other->inflictor_world_pos_);
  swap(amount_, other->amount_);
  swap(victim_entindex_, other->victim_entindex_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_Damage::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_RadioText::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_RadioText::kMsgDstFieldNumber;
const int CCSUsrMsg_RadioText::kClientFieldNumber;
const int CCSUsrMsg_RadioText::kMsgNameFieldNumber;
const int CCSUsrMsg_RadioText::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_RadioText::CCSUsrMsg_RadioText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_RadioText();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_RadioText)
}
CCSUsrMsg_RadioText::CCSUsrMsg_RadioText(const CCSUsrMsg_RadioText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      params_(from.params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg_name()) {
    msg_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_name_);
  }
  ::memcpy(&msg_dst_, &from.msg_dst_,
    static_cast<size_t>(reinterpret_cast<char*>(&client_) -
    reinterpret_cast<char*>(&msg_dst_)) + sizeof(client_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_RadioText)
}

void CCSUsrMsg_RadioText::SharedCtor() {
  _cached_size_ = 0;
  msg_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msg_dst_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_) -
      reinterpret_cast<char*>(&msg_dst_)) + sizeof(client_));
}

CCSUsrMsg_RadioText::~CCSUsrMsg_RadioText() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_RadioText)
  SharedDtor();
}

void CCSUsrMsg_RadioText::SharedDtor() {
  msg_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_RadioText::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_RadioText::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_RadioText& CCSUsrMsg_RadioText::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_RadioText();
  return *internal_default_instance();
}

CCSUsrMsg_RadioText* CCSUsrMsg_RadioText::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_RadioText* n = new CCSUsrMsg_RadioText;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_RadioText::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_RadioText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!msg_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*msg_name_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&msg_dst_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&client_) -
        reinterpret_cast<char*>(&msg_dst_)) + sizeof(client_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_RadioText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_RadioText)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 msg_dst = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_msg_dst();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_dst_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 client = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_client();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg_name().data(), static_cast<int>(this->msg_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_RadioText.msg_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string params = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_params()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->params(this->params_size() - 1).data(),
            static_cast<int>(this->params(this->params_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_RadioText.params");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_RadioText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_RadioText)
  return false;
#undef DO_
}

void CCSUsrMsg_RadioText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_RadioText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 msg_dst = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->msg_dst(), output);
  }

  // optional int32 client = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->client(), output);
  }

  // optional string msg_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg_name().data(), static_cast<int>(this->msg_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_RadioText.msg_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg_name(), output);
  }

  // repeated string params = 4;
  for (int i = 0, n = this->params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->params(i).data(), static_cast<int>(this->params(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_RadioText.params");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->params(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_RadioText)
}

::google::protobuf::uint8* CCSUsrMsg_RadioText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_RadioText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 msg_dst = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->msg_dst(), target);
  }

  // optional int32 client = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->client(), target);
  }

  // optional string msg_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg_name().data(), static_cast<int>(this->msg_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_RadioText.msg_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg_name(), target);
  }

  // repeated string params = 4;
  for (int i = 0, n = this->params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->params(i).data(), static_cast<int>(this->params(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_RadioText.params");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->params(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_RadioText)
  return target;
}

size_t CCSUsrMsg_RadioText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_RadioText)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string params = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->params_size());
  for (int i = 0, n = this->params_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->params(i));
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string msg_name = 3;
    if (has_msg_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg_name());
    }

    // optional int32 msg_dst = 1;
    if (has_msg_dst()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->msg_dst());
    }

    // optional int32 client = 2;
    if (has_client()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->client());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_RadioText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_RadioText)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_RadioText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_RadioText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_RadioText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_RadioText)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_RadioText::MergeFrom(const CCSUsrMsg_RadioText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_RadioText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg_name();
      msg_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      msg_dst_ = from.msg_dst_;
    }
    if (cached_has_bits & 0x00000004u) {
      client_ = from.client_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_RadioText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_RadioText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_RadioText::CopyFrom(const CCSUsrMsg_RadioText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_RadioText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_RadioText::IsInitialized() const {
  return true;
}

void CCSUsrMsg_RadioText::Swap(CCSUsrMsg_RadioText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_RadioText::InternalSwap(CCSUsrMsg_RadioText* other) {
  using std::swap;
  params_.InternalSwap(&other->params_);
  msg_name_.Swap(&other->msg_name_);
  swap(msg_dst_, other->msg_dst_);
  swap(client_, other->client_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_RadioText::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_HintText::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_HintText::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_HintText::CCSUsrMsg_HintText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_HintText();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_HintText)
}
CCSUsrMsg_HintText::CCSUsrMsg_HintText(const CCSUsrMsg_HintText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_HintText)
}

void CCSUsrMsg_HintText::SharedCtor() {
  _cached_size_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CCSUsrMsg_HintText::~CCSUsrMsg_HintText() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_HintText)
  SharedDtor();
}

void CCSUsrMsg_HintText::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_HintText::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_HintText::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_HintText& CCSUsrMsg_HintText::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_HintText();
  return *internal_default_instance();
}

CCSUsrMsg_HintText* CCSUsrMsg_HintText::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_HintText* n = new CCSUsrMsg_HintText;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_HintText::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_HintText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*text_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_HintText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_HintText)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_HintText.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_HintText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_HintText)
  return false;
#undef DO_
}

void CCSUsrMsg_HintText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_HintText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_HintText.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_HintText)
}

::google::protobuf::uint8* CCSUsrMsg_HintText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_HintText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_HintText.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_HintText)
  return target;
}

size_t CCSUsrMsg_HintText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_HintText)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string text = 1;
  if (has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_HintText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_HintText)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_HintText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_HintText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_HintText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_HintText)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_HintText::MergeFrom(const CCSUsrMsg_HintText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_HintText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_text()) {
    set_has_text();
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
}

void CCSUsrMsg_HintText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_HintText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_HintText::CopyFrom(const CCSUsrMsg_HintText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_HintText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_HintText::IsInitialized() const {
  return true;
}

void CCSUsrMsg_HintText::Swap(CCSUsrMsg_HintText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_HintText::InternalSwap(CCSUsrMsg_HintText* other) {
  using std::swap;
  text_.Swap(&other->text_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_HintText::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_KeyHintText::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_KeyHintText::kHintsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_KeyHintText::CCSUsrMsg_KeyHintText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_KeyHintText();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_KeyHintText)
}
CCSUsrMsg_KeyHintText::CCSUsrMsg_KeyHintText(const CCSUsrMsg_KeyHintText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      hints_(from.hints_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_KeyHintText)
}

void CCSUsrMsg_KeyHintText::SharedCtor() {
  _cached_size_ = 0;
}

CCSUsrMsg_KeyHintText::~CCSUsrMsg_KeyHintText() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_KeyHintText)
  SharedDtor();
}

void CCSUsrMsg_KeyHintText::SharedDtor() {
}

void CCSUsrMsg_KeyHintText::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_KeyHintText::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_KeyHintText& CCSUsrMsg_KeyHintText::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_KeyHintText();
  return *internal_default_instance();
}

CCSUsrMsg_KeyHintText* CCSUsrMsg_KeyHintText::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_KeyHintText* n = new CCSUsrMsg_KeyHintText;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_KeyHintText::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_KeyHintText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hints_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_KeyHintText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_KeyHintText)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string hints = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_hints()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hints(this->hints_size() - 1).data(),
            static_cast<int>(this->hints(this->hints_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_KeyHintText.hints");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_KeyHintText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_KeyHintText)
  return false;
#undef DO_
}

void CCSUsrMsg_KeyHintText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_KeyHintText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string hints = 1;
  for (int i = 0, n = this->hints_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hints(i).data(), static_cast<int>(this->hints(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_KeyHintText.hints");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->hints(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_KeyHintText)
}

::google::protobuf::uint8* CCSUsrMsg_KeyHintText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_KeyHintText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string hints = 1;
  for (int i = 0, n = this->hints_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hints(i).data(), static_cast<int>(this->hints(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_KeyHintText.hints");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->hints(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_KeyHintText)
  return target;
}

size_t CCSUsrMsg_KeyHintText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_KeyHintText)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string hints = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->hints_size());
  for (int i = 0, n = this->hints_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->hints(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_KeyHintText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_KeyHintText)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_KeyHintText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_KeyHintText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_KeyHintText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_KeyHintText)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_KeyHintText::MergeFrom(const CCSUsrMsg_KeyHintText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_KeyHintText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hints_.MergeFrom(from.hints_);
}

void CCSUsrMsg_KeyHintText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_KeyHintText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_KeyHintText::CopyFrom(const CCSUsrMsg_KeyHintText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_KeyHintText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_KeyHintText::IsInitialized() const {
  return true;
}

void CCSUsrMsg_KeyHintText::Swap(CCSUsrMsg_KeyHintText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_KeyHintText::InternalSwap(CCSUsrMsg_KeyHintText* other) {
  using std::swap;
  hints_.InternalSwap(&other->hints_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_KeyHintText::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::kEntityIdxFieldNumber;
const int CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::kClassIdFieldNumber;
const int CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::kOriginXFieldNumber;
const int CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::kOriginYFieldNumber;
const int CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::kOriginZFieldNumber;
const int CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::kAngleYFieldNumber;
const int CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::kDefuserFieldNumber;
const int CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::kPlayerHasDefuserFieldNumber;
const int CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::kPlayerHasC4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
}
CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate(const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&entity_idx_, &from.entity_idx_,
    static_cast<size_t>(reinterpret_cast<char*>(&player_has_c4_) -
    reinterpret_cast<char*>(&entity_idx_)) + sizeof(player_has_c4_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
}

void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&entity_idx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_has_c4_) -
      reinterpret_cast<char*>(&entity_idx_)) + sizeof(player_has_c4_));
}

CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::~CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
  SharedDtor();
}

void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::SharedDtor() {
}

void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate();
  return *internal_default_instance();
}

CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* n = new CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&entity_idx_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&player_has_defuser_) -
        reinterpret_cast<char*>(&entity_idx_)) + sizeof(player_has_defuser_));
  }
  player_has_c4_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 entity_idx = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_entity_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entity_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 class_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_class_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &class_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 origin_x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_origin_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &origin_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 origin_y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_origin_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &origin_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 origin_z = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_origin_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &origin_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 angle_y = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_angle_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &angle_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool defuser = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_defuser();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &defuser_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool player_has_defuser = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_player_has_defuser();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &player_has_defuser_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool player_has_c4 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_player_has_c4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &player_has_c4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
  return false;
#undef DO_
}

void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 entity_idx = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->entity_idx(), output);
  }

  // optional int32 class_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->class_id(), output);
  }

  // optional int32 origin_x = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->origin_x(), output);
  }

  // optional int32 origin_y = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->origin_y(), output);
  }

  // optional int32 origin_z = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->origin_z(), output);
  }

  // optional int32 angle_y = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->angle_y(), output);
  }

  // optional bool defuser = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->defuser(), output);
  }

  // optional bool player_has_defuser = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->player_has_defuser(), output);
  }

  // optional bool player_has_c4 = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->player_has_c4(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
}

::google::protobuf::uint8* CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 entity_idx = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->entity_idx(), target);
  }

  // optional int32 class_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->class_id(), target);
  }

  // optional int32 origin_x = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->origin_x(), target);
  }

  // optional int32 origin_y = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->origin_y(), target);
  }

  // optional int32 origin_z = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->origin_z(), target);
  }

  // optional int32 angle_y = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->angle_y(), target);
  }

  // optional bool defuser = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->defuser(), target);
  }

  // optional bool player_has_defuser = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->player_has_defuser(), target);
  }

  // optional bool player_has_c4 = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->player_has_c4(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
  return target;
}

size_t CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 entity_idx = 1;
    if (has_entity_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entity_idx());
    }

    // optional int32 class_id = 2;
    if (has_class_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->class_id());
    }

    // optional int32 origin_x = 3;
    if (has_origin_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->origin_x());
    }

    // optional int32 origin_y = 4;
    if (has_origin_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->origin_y());
    }

    // optional int32 origin_z = 5;
    if (has_origin_z()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->origin_z());
    }

    // optional int32 angle_y = 6;
    if (has_angle_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->angle_y());
    }

    // optional bool defuser = 7;
    if (has_defuser()) {
      total_size += 1 + 1;
    }

    // optional bool player_has_defuser = 8;
    if (has_player_has_defuser()) {
      total_size += 1 + 1;
    }

  }
  // optional bool player_has_c4 = 9;
  if (has_player_has_c4()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::MergeFrom(const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      entity_idx_ = from.entity_idx_;
    }
    if (cached_has_bits & 0x00000002u) {
      class_id_ = from.class_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      origin_x_ = from.origin_x_;
    }
    if (cached_has_bits & 0x00000008u) {
      origin_y_ = from.origin_y_;
    }
    if (cached_has_bits & 0x00000010u) {
      origin_z_ = from.origin_z_;
    }
    if (cached_has_bits & 0x00000020u) {
      angle_y_ = from.angle_y_;
    }
    if (cached_has_bits & 0x00000040u) {
      defuser_ = from.defuser_;
    }
    if (cached_has_bits & 0x00000080u) {
      player_has_defuser_ = from.player_has_defuser_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_player_has_c4(from.player_has_c4());
  }
}

void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::CopyFrom(const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::IsInitialized() const {
  return true;
}

void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::Swap(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::InternalSwap(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* other) {
  using std::swap;
  swap(entity_idx_, other->entity_idx_);
  swap(class_id_, other->class_id_);
  swap(origin_x_, other->origin_x_);
  swap(origin_y_, other->origin_y_);
  swap(origin_z_, other->origin_z_);
  swap(angle_y_, other->angle_y_);
  swap(defuser_, other->defuser_);
  swap(player_has_defuser_, other->player_has_defuser_);
  swap(player_has_c4_, other->player_has_c4_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_ProcessSpottedEntityUpdate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_ProcessSpottedEntityUpdate::kNewUpdateFieldNumber;
const int CCSUsrMsg_ProcessSpottedEntityUpdate::kEntityUpdatesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_ProcessSpottedEntityUpdate::CCSUsrMsg_ProcessSpottedEntityUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ProcessSpottedEntityUpdate();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_ProcessSpottedEntityUpdate)
}
CCSUsrMsg_ProcessSpottedEntityUpdate::CCSUsrMsg_ProcessSpottedEntityUpdate(const CCSUsrMsg_ProcessSpottedEntityUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      entity_updates_(from.entity_updates_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  new_update_ = from.new_update_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_ProcessSpottedEntityUpdate)
}

void CCSUsrMsg_ProcessSpottedEntityUpdate::SharedCtor() {
  _cached_size_ = 0;
  new_update_ = false;
}

CCSUsrMsg_ProcessSpottedEntityUpdate::~CCSUsrMsg_ProcessSpottedEntityUpdate() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_ProcessSpottedEntityUpdate)
  SharedDtor();
}

void CCSUsrMsg_ProcessSpottedEntityUpdate::SharedDtor() {
}

void CCSUsrMsg_ProcessSpottedEntityUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_ProcessSpottedEntityUpdate::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_ProcessSpottedEntityUpdate& CCSUsrMsg_ProcessSpottedEntityUpdate::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ProcessSpottedEntityUpdate();
  return *internal_default_instance();
}

CCSUsrMsg_ProcessSpottedEntityUpdate* CCSUsrMsg_ProcessSpottedEntityUpdate::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_ProcessSpottedEntityUpdate* n = new CCSUsrMsg_ProcessSpottedEntityUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_ProcessSpottedEntityUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_ProcessSpottedEntityUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entity_updates_.Clear();
  new_update_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_ProcessSpottedEntityUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_ProcessSpottedEntityUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool new_update = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_new_update();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &new_update_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate entity_updates = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_entity_updates()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_ProcessSpottedEntityUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_ProcessSpottedEntityUpdate)
  return false;
#undef DO_
}

void CCSUsrMsg_ProcessSpottedEntityUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_ProcessSpottedEntityUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool new_update = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->new_update(), output);
  }

  // repeated .CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate entity_updates = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entity_updates_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->entity_updates(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_ProcessSpottedEntityUpdate)
}

::google::protobuf::uint8* CCSUsrMsg_ProcessSpottedEntityUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_ProcessSpottedEntityUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool new_update = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->new_update(), target);
  }

  // repeated .CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate entity_updates = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entity_updates_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->entity_updates(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_ProcessSpottedEntityUpdate)
  return target;
}

size_t CCSUsrMsg_ProcessSpottedEntityUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_ProcessSpottedEntityUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate entity_updates = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->entity_updates_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entity_updates(static_cast<int>(i)));
    }
  }

  // optional bool new_update = 1;
  if (has_new_update()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_ProcessSpottedEntityUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_ProcessSpottedEntityUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_ProcessSpottedEntityUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_ProcessSpottedEntityUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_ProcessSpottedEntityUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_ProcessSpottedEntityUpdate)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_ProcessSpottedEntityUpdate::MergeFrom(const CCSUsrMsg_ProcessSpottedEntityUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_ProcessSpottedEntityUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entity_updates_.MergeFrom(from.entity_updates_);
  if (from.has_new_update()) {
    set_new_update(from.new_update());
  }
}

void CCSUsrMsg_ProcessSpottedEntityUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_ProcessSpottedEntityUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_ProcessSpottedEntityUpdate::CopyFrom(const CCSUsrMsg_ProcessSpottedEntityUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_ProcessSpottedEntityUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_ProcessSpottedEntityUpdate::IsInitialized() const {
  return true;
}

void CCSUsrMsg_ProcessSpottedEntityUpdate::Swap(CCSUsrMsg_ProcessSpottedEntityUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_ProcessSpottedEntityUpdate::InternalSwap(CCSUsrMsg_ProcessSpottedEntityUpdate* other) {
  using std::swap;
  entity_updates_.InternalSwap(&other->entity_updates_);
  swap(new_update_, other->new_update_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_ProcessSpottedEntityUpdate::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_SendPlayerItemDrops::InitAsDefaultInstance() {
}
void CCSUsrMsg_SendPlayerItemDrops::clear_entity_updates() {
  entity_updates_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_SendPlayerItemDrops::kEntityUpdatesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_SendPlayerItemDrops::CCSUsrMsg_SendPlayerItemDrops()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_SendPlayerItemDrops();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_SendPlayerItemDrops)
}
CCSUsrMsg_SendPlayerItemDrops::CCSUsrMsg_SendPlayerItemDrops(const CCSUsrMsg_SendPlayerItemDrops& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      entity_updates_(from.entity_updates_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_SendPlayerItemDrops)
}

void CCSUsrMsg_SendPlayerItemDrops::SharedCtor() {
  _cached_size_ = 0;
}

CCSUsrMsg_SendPlayerItemDrops::~CCSUsrMsg_SendPlayerItemDrops() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_SendPlayerItemDrops)
  SharedDtor();
}

void CCSUsrMsg_SendPlayerItemDrops::SharedDtor() {
}

void CCSUsrMsg_SendPlayerItemDrops::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_SendPlayerItemDrops::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_SendPlayerItemDrops& CCSUsrMsg_SendPlayerItemDrops::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_SendPlayerItemDrops();
  return *internal_default_instance();
}

CCSUsrMsg_SendPlayerItemDrops* CCSUsrMsg_SendPlayerItemDrops::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_SendPlayerItemDrops* n = new CCSUsrMsg_SendPlayerItemDrops;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_SendPlayerItemDrops::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_SendPlayerItemDrops)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entity_updates_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_SendPlayerItemDrops::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_SendPlayerItemDrops)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CEconItemPreviewDataBlock entity_updates = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_entity_updates()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_SendPlayerItemDrops)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_SendPlayerItemDrops)
  return false;
#undef DO_
}

void CCSUsrMsg_SendPlayerItemDrops::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_SendPlayerItemDrops)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CEconItemPreviewDataBlock entity_updates = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entity_updates_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entity_updates(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_SendPlayerItemDrops)
}

::google::protobuf::uint8* CCSUsrMsg_SendPlayerItemDrops::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_SendPlayerItemDrops)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CEconItemPreviewDataBlock entity_updates = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entity_updates_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->entity_updates(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_SendPlayerItemDrops)
  return target;
}

size_t CCSUsrMsg_SendPlayerItemDrops::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_SendPlayerItemDrops)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CEconItemPreviewDataBlock entity_updates = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entity_updates_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entity_updates(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_SendPlayerItemDrops::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_SendPlayerItemDrops)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_SendPlayerItemDrops* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_SendPlayerItemDrops>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_SendPlayerItemDrops)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_SendPlayerItemDrops)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_SendPlayerItemDrops::MergeFrom(const CCSUsrMsg_SendPlayerItemDrops& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_SendPlayerItemDrops)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entity_updates_.MergeFrom(from.entity_updates_);
}

void CCSUsrMsg_SendPlayerItemDrops::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_SendPlayerItemDrops)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_SendPlayerItemDrops::CopyFrom(const CCSUsrMsg_SendPlayerItemDrops& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_SendPlayerItemDrops)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_SendPlayerItemDrops::IsInitialized() const {
  return true;
}

void CCSUsrMsg_SendPlayerItemDrops::Swap(CCSUsrMsg_SendPlayerItemDrops* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_SendPlayerItemDrops::InternalSwap(CCSUsrMsg_SendPlayerItemDrops* other) {
  using std::swap;
  entity_updates_.InternalSwap(&other->entity_updates_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_SendPlayerItemDrops::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_SendPlayerItemFound::InitAsDefaultInstance() {
  ::_CCSUsrMsg_SendPlayerItemFound_default_instance_._instance.get_mutable()->iteminfo_ = const_cast< ::CEconItemPreviewDataBlock*>(
      ::CEconItemPreviewDataBlock::internal_default_instance());
}
void CCSUsrMsg_SendPlayerItemFound::clear_iteminfo() {
  if (iteminfo_ != NULL) iteminfo_->Clear();
  clear_has_iteminfo();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_SendPlayerItemFound::kIteminfoFieldNumber;
const int CCSUsrMsg_SendPlayerItemFound::kEntindexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_SendPlayerItemFound::CCSUsrMsg_SendPlayerItemFound()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_SendPlayerItemFound();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_SendPlayerItemFound)
}
CCSUsrMsg_SendPlayerItemFound::CCSUsrMsg_SendPlayerItemFound(const CCSUsrMsg_SendPlayerItemFound& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_iteminfo()) {
    iteminfo_ = new ::CEconItemPreviewDataBlock(*from.iteminfo_);
  } else {
    iteminfo_ = NULL;
  }
  entindex_ = from.entindex_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_SendPlayerItemFound)
}

void CCSUsrMsg_SendPlayerItemFound::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&iteminfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entindex_) -
      reinterpret_cast<char*>(&iteminfo_)) + sizeof(entindex_));
}

CCSUsrMsg_SendPlayerItemFound::~CCSUsrMsg_SendPlayerItemFound() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_SendPlayerItemFound)
  SharedDtor();
}

void CCSUsrMsg_SendPlayerItemFound::SharedDtor() {
  if (this != internal_default_instance()) delete iteminfo_;
}

void CCSUsrMsg_SendPlayerItemFound::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_SendPlayerItemFound::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_SendPlayerItemFound& CCSUsrMsg_SendPlayerItemFound::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_SendPlayerItemFound();
  return *internal_default_instance();
}

CCSUsrMsg_SendPlayerItemFound* CCSUsrMsg_SendPlayerItemFound::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_SendPlayerItemFound* n = new CCSUsrMsg_SendPlayerItemFound;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_SendPlayerItemFound::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_SendPlayerItemFound)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(iteminfo_ != NULL);
    iteminfo_->Clear();
  }
  entindex_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_SendPlayerItemFound::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_SendPlayerItemFound)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CEconItemPreviewDataBlock iteminfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_iteminfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 entindex = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_entindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_SendPlayerItemFound)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_SendPlayerItemFound)
  return false;
#undef DO_
}

void CCSUsrMsg_SendPlayerItemFound::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_SendPlayerItemFound)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CEconItemPreviewDataBlock iteminfo = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->iteminfo_, output);
  }

  // optional int32 entindex = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->entindex(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_SendPlayerItemFound)
}

::google::protobuf::uint8* CCSUsrMsg_SendPlayerItemFound::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_SendPlayerItemFound)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CEconItemPreviewDataBlock iteminfo = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->iteminfo_, deterministic, target);
  }

  // optional int32 entindex = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->entindex(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_SendPlayerItemFound)
  return target;
}

size_t CCSUsrMsg_SendPlayerItemFound::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_SendPlayerItemFound)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .CEconItemPreviewDataBlock iteminfo = 1;
    if (has_iteminfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->iteminfo_);
    }

    // optional int32 entindex = 2;
    if (has_entindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entindex());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_SendPlayerItemFound::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_SendPlayerItemFound)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_SendPlayerItemFound* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_SendPlayerItemFound>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_SendPlayerItemFound)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_SendPlayerItemFound)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_SendPlayerItemFound::MergeFrom(const CCSUsrMsg_SendPlayerItemFound& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_SendPlayerItemFound)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_iteminfo()->::CEconItemPreviewDataBlock::MergeFrom(from.iteminfo());
    }
    if (cached_has_bits & 0x00000002u) {
      entindex_ = from.entindex_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_SendPlayerItemFound::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_SendPlayerItemFound)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_SendPlayerItemFound::CopyFrom(const CCSUsrMsg_SendPlayerItemFound& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_SendPlayerItemFound)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_SendPlayerItemFound::IsInitialized() const {
  return true;
}

void CCSUsrMsg_SendPlayerItemFound::Swap(CCSUsrMsg_SendPlayerItemFound* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_SendPlayerItemFound::InternalSwap(CCSUsrMsg_SendPlayerItemFound* other) {
  using std::swap;
  swap(iteminfo_, other->iteminfo_);
  swap(entindex_, other->entindex_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_SendPlayerItemFound::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_ReloadEffect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_ReloadEffect::kEntidxFieldNumber;
const int CCSUsrMsg_ReloadEffect::kActanimFieldNumber;
const int CCSUsrMsg_ReloadEffect::kOriginXFieldNumber;
const int CCSUsrMsg_ReloadEffect::kOriginYFieldNumber;
const int CCSUsrMsg_ReloadEffect::kOriginZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_ReloadEffect::CCSUsrMsg_ReloadEffect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ReloadEffect();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_ReloadEffect)
}
CCSUsrMsg_ReloadEffect::CCSUsrMsg_ReloadEffect(const CCSUsrMsg_ReloadEffect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&entidx_, &from.entidx_,
    static_cast<size_t>(reinterpret_cast<char*>(&origin_z_) -
    reinterpret_cast<char*>(&entidx_)) + sizeof(origin_z_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_ReloadEffect)
}

void CCSUsrMsg_ReloadEffect::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&entidx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&origin_z_) -
      reinterpret_cast<char*>(&entidx_)) + sizeof(origin_z_));
}

CCSUsrMsg_ReloadEffect::~CCSUsrMsg_ReloadEffect() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_ReloadEffect)
  SharedDtor();
}

void CCSUsrMsg_ReloadEffect::SharedDtor() {
}

void CCSUsrMsg_ReloadEffect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_ReloadEffect::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_ReloadEffect& CCSUsrMsg_ReloadEffect::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ReloadEffect();
  return *internal_default_instance();
}

CCSUsrMsg_ReloadEffect* CCSUsrMsg_ReloadEffect::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_ReloadEffect* n = new CCSUsrMsg_ReloadEffect;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_ReloadEffect::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_ReloadEffect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&entidx_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&origin_z_) -
        reinterpret_cast<char*>(&entidx_)) + sizeof(origin_z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_ReloadEffect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_ReloadEffect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 entidx = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_entidx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entidx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 actanim = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_actanim();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actanim_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float origin_x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_origin_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &origin_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float origin_y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_origin_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &origin_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float origin_z = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_origin_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &origin_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_ReloadEffect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_ReloadEffect)
  return false;
#undef DO_
}

void CCSUsrMsg_ReloadEffect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_ReloadEffect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 entidx = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->entidx(), output);
  }

  // optional int32 actanim = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->actanim(), output);
  }

  // optional float origin_x = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->origin_x(), output);
  }

  // optional float origin_y = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->origin_y(), output);
  }

  // optional float origin_z = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->origin_z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_ReloadEffect)
}

::google::protobuf::uint8* CCSUsrMsg_ReloadEffect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_ReloadEffect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 entidx = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->entidx(), target);
  }

  // optional int32 actanim = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->actanim(), target);
  }

  // optional float origin_x = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->origin_x(), target);
  }

  // optional float origin_y = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->origin_y(), target);
  }

  // optional float origin_z = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->origin_z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_ReloadEffect)
  return target;
}

size_t CCSUsrMsg_ReloadEffect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_ReloadEffect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 entidx = 1;
    if (has_entidx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->entidx());
    }

    // optional int32 actanim = 2;
    if (has_actanim()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->actanim());
    }

    // optional float origin_x = 3;
    if (has_origin_x()) {
      total_size += 1 + 4;
    }

    // optional float origin_y = 4;
    if (has_origin_y()) {
      total_size += 1 + 4;
    }

    // optional float origin_z = 5;
    if (has_origin_z()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_ReloadEffect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_ReloadEffect)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_ReloadEffect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_ReloadEffect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_ReloadEffect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_ReloadEffect)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_ReloadEffect::MergeFrom(const CCSUsrMsg_ReloadEffect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_ReloadEffect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      entidx_ = from.entidx_;
    }
    if (cached_has_bits & 0x00000002u) {
      actanim_ = from.actanim_;
    }
    if (cached_has_bits & 0x00000004u) {
      origin_x_ = from.origin_x_;
    }
    if (cached_has_bits & 0x00000008u) {
      origin_y_ = from.origin_y_;
    }
    if (cached_has_bits & 0x00000010u) {
      origin_z_ = from.origin_z_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_ReloadEffect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_ReloadEffect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_ReloadEffect::CopyFrom(const CCSUsrMsg_ReloadEffect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_ReloadEffect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_ReloadEffect::IsInitialized() const {
  return true;
}

void CCSUsrMsg_ReloadEffect::Swap(CCSUsrMsg_ReloadEffect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_ReloadEffect::InternalSwap(CCSUsrMsg_ReloadEffect* other) {
  using std::swap;
  swap(entidx_, other->entidx_);
  swap(actanim_, other->actanim_);
  swap(origin_x_, other->origin_x_);
  swap(origin_y_, other->origin_y_);
  swap(origin_z_, other->origin_z_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_ReloadEffect::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_AdjustMoney::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_AdjustMoney::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_AdjustMoney::CCSUsrMsg_AdjustMoney()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_AdjustMoney();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_AdjustMoney)
}
CCSUsrMsg_AdjustMoney::CCSUsrMsg_AdjustMoney(const CCSUsrMsg_AdjustMoney& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_AdjustMoney)
}

void CCSUsrMsg_AdjustMoney::SharedCtor() {
  _cached_size_ = 0;
  amount_ = 0;
}

CCSUsrMsg_AdjustMoney::~CCSUsrMsg_AdjustMoney() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_AdjustMoney)
  SharedDtor();
}

void CCSUsrMsg_AdjustMoney::SharedDtor() {
}

void CCSUsrMsg_AdjustMoney::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_AdjustMoney::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_AdjustMoney& CCSUsrMsg_AdjustMoney::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_AdjustMoney();
  return *internal_default_instance();
}

CCSUsrMsg_AdjustMoney* CCSUsrMsg_AdjustMoney::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_AdjustMoney* n = new CCSUsrMsg_AdjustMoney;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_AdjustMoney::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_AdjustMoney)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  amount_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_AdjustMoney::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_AdjustMoney)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 amount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_AdjustMoney)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_AdjustMoney)
  return false;
#undef DO_
}

void CCSUsrMsg_AdjustMoney::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_AdjustMoney)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 amount = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->amount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_AdjustMoney)
}

::google::protobuf::uint8* CCSUsrMsg_AdjustMoney::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_AdjustMoney)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 amount = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->amount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_AdjustMoney)
  return target;
}

size_t CCSUsrMsg_AdjustMoney::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_AdjustMoney)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 amount = 1;
  if (has_amount()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->amount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_AdjustMoney::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_AdjustMoney)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_AdjustMoney* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_AdjustMoney>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_AdjustMoney)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_AdjustMoney)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_AdjustMoney::MergeFrom(const CCSUsrMsg_AdjustMoney& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_AdjustMoney)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_amount()) {
    set_amount(from.amount());
  }
}

void CCSUsrMsg_AdjustMoney::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_AdjustMoney)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_AdjustMoney::CopyFrom(const CCSUsrMsg_AdjustMoney& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_AdjustMoney)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_AdjustMoney::IsInitialized() const {
  return true;
}

void CCSUsrMsg_AdjustMoney::Swap(CCSUsrMsg_AdjustMoney* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_AdjustMoney::InternalSwap(CCSUsrMsg_AdjustMoney* other) {
  using std::swap;
  swap(amount_, other->amount_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_AdjustMoney::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_ReportHit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_ReportHit::kPosXFieldNumber;
const int CCSUsrMsg_ReportHit::kPosYFieldNumber;
const int CCSUsrMsg_ReportHit::kTimestampFieldNumber;
const int CCSUsrMsg_ReportHit::kPosZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_ReportHit::CCSUsrMsg_ReportHit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ReportHit();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_ReportHit)
}
CCSUsrMsg_ReportHit::CCSUsrMsg_ReportHit(const CCSUsrMsg_ReportHit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pos_x_, &from.pos_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&pos_x_)) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_ReportHit)
}

void CCSUsrMsg_ReportHit::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&pos_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&pos_x_)) + sizeof(timestamp_));
}

CCSUsrMsg_ReportHit::~CCSUsrMsg_ReportHit() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_ReportHit)
  SharedDtor();
}

void CCSUsrMsg_ReportHit::SharedDtor() {
}

void CCSUsrMsg_ReportHit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_ReportHit::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_ReportHit& CCSUsrMsg_ReportHit::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ReportHit();
  return *internal_default_instance();
}

CCSUsrMsg_ReportHit* CCSUsrMsg_ReportHit::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_ReportHit* n = new CCSUsrMsg_ReportHit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_ReportHit::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_ReportHit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&pos_x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timestamp_) -
        reinterpret_cast<char*>(&pos_x_)) + sizeof(timestamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_ReportHit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_ReportHit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float pos_x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_pos_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pos_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float pos_y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_pos_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pos_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float pos_z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_pos_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pos_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float timestamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_ReportHit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_ReportHit)
  return false;
#undef DO_
}

void CCSUsrMsg_ReportHit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_ReportHit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float pos_x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->pos_x(), output);
  }

  // optional float pos_y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->pos_y(), output);
  }

  // optional float pos_z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->pos_z(), output);
  }

  // optional float timestamp = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_ReportHit)
}

::google::protobuf::uint8* CCSUsrMsg_ReportHit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_ReportHit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float pos_x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->pos_x(), target);
  }

  // optional float pos_y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->pos_y(), target);
  }

  // optional float pos_z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->pos_z(), target);
  }

  // optional float timestamp = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_ReportHit)
  return target;
}

size_t CCSUsrMsg_ReportHit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_ReportHit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional float pos_x = 1;
    if (has_pos_x()) {
      total_size += 1 + 4;
    }

    // optional float pos_y = 2;
    if (has_pos_y()) {
      total_size += 1 + 4;
    }

    // optional float pos_z = 3;
    if (has_pos_z()) {
      total_size += 1 + 4;
    }

    // optional float timestamp = 4;
    if (has_timestamp()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_ReportHit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_ReportHit)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_ReportHit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_ReportHit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_ReportHit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_ReportHit)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_ReportHit::MergeFrom(const CCSUsrMsg_ReportHit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_ReportHit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      pos_x_ = from.pos_x_;
    }
    if (cached_has_bits & 0x00000002u) {
      pos_y_ = from.pos_y_;
    }
    if (cached_has_bits & 0x00000004u) {
      pos_z_ = from.pos_z_;
    }
    if (cached_has_bits & 0x00000008u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_ReportHit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_ReportHit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_ReportHit::CopyFrom(const CCSUsrMsg_ReportHit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_ReportHit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_ReportHit::IsInitialized() const {
  return true;
}

void CCSUsrMsg_ReportHit::Swap(CCSUsrMsg_ReportHit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_ReportHit::InternalSwap(CCSUsrMsg_ReportHit* other) {
  using std::swap;
  swap(pos_x_, other->pos_x_);
  swap(pos_y_, other->pos_y_);
  swap(pos_z_, other->pos_z_);
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_ReportHit::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_KillCam::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_KillCam::kObsModeFieldNumber;
const int CCSUsrMsg_KillCam::kFirstTargetFieldNumber;
const int CCSUsrMsg_KillCam::kSecondTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_KillCam::CCSUsrMsg_KillCam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_KillCam();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_KillCam)
}
CCSUsrMsg_KillCam::CCSUsrMsg_KillCam(const CCSUsrMsg_KillCam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&obs_mode_, &from.obs_mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&second_target_) -
    reinterpret_cast<char*>(&obs_mode_)) + sizeof(second_target_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_KillCam)
}

void CCSUsrMsg_KillCam::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&obs_mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&second_target_) -
      reinterpret_cast<char*>(&obs_mode_)) + sizeof(second_target_));
}

CCSUsrMsg_KillCam::~CCSUsrMsg_KillCam() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_KillCam)
  SharedDtor();
}

void CCSUsrMsg_KillCam::SharedDtor() {
}

void CCSUsrMsg_KillCam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_KillCam::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_KillCam& CCSUsrMsg_KillCam::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_KillCam();
  return *internal_default_instance();
}

CCSUsrMsg_KillCam* CCSUsrMsg_KillCam::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_KillCam* n = new CCSUsrMsg_KillCam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_KillCam::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_KillCam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&obs_mode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&second_target_) -
        reinterpret_cast<char*>(&obs_mode_)) + sizeof(second_target_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_KillCam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_KillCam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 obs_mode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_obs_mode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &obs_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 first_target = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_first_target();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 second_target = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_second_target();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_KillCam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_KillCam)
  return false;
#undef DO_
}

void CCSUsrMsg_KillCam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_KillCam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 obs_mode = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->obs_mode(), output);
  }

  // optional int32 first_target = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->first_target(), output);
  }

  // optional int32 second_target = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->second_target(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_KillCam)
}

::google::protobuf::uint8* CCSUsrMsg_KillCam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_KillCam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 obs_mode = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->obs_mode(), target);
  }

  // optional int32 first_target = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->first_target(), target);
  }

  // optional int32 second_target = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->second_target(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_KillCam)
  return target;
}

size_t CCSUsrMsg_KillCam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_KillCam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 obs_mode = 1;
    if (has_obs_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->obs_mode());
    }

    // optional int32 first_target = 2;
    if (has_first_target()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_target());
    }

    // optional int32 second_target = 3;
    if (has_second_target()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_target());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_KillCam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_KillCam)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_KillCam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_KillCam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_KillCam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_KillCam)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_KillCam::MergeFrom(const CCSUsrMsg_KillCam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_KillCam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      obs_mode_ = from.obs_mode_;
    }
    if (cached_has_bits & 0x00000002u) {
      first_target_ = from.first_target_;
    }
    if (cached_has_bits & 0x00000004u) {
      second_target_ = from.second_target_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_KillCam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_KillCam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_KillCam::CopyFrom(const CCSUsrMsg_KillCam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_KillCam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_KillCam::IsInitialized() const {
  return true;
}

void CCSUsrMsg_KillCam::Swap(CCSUsrMsg_KillCam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_KillCam::InternalSwap(CCSUsrMsg_KillCam* other) {
  using std::swap;
  swap(obs_mode_, other->obs_mode_);
  swap(first_target_, other->first_target_);
  swap(second_target_, other->second_target_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_KillCam::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_DesiredTimescale::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_DesiredTimescale::kDesiredTimescaleFieldNumber;
const int CCSUsrMsg_DesiredTimescale::kDurationRealtimeSecFieldNumber;
const int CCSUsrMsg_DesiredTimescale::kInterpolatorTypeFieldNumber;
const int CCSUsrMsg_DesiredTimescale::kStartBlendTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_DesiredTimescale::CCSUsrMsg_DesiredTimescale()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_DesiredTimescale();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_DesiredTimescale)
}
CCSUsrMsg_DesiredTimescale::CCSUsrMsg_DesiredTimescale(const CCSUsrMsg_DesiredTimescale& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&desired_timescale_, &from.desired_timescale_,
    static_cast<size_t>(reinterpret_cast<char*>(&start_blend_time_) -
    reinterpret_cast<char*>(&desired_timescale_)) + sizeof(start_blend_time_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_DesiredTimescale)
}

void CCSUsrMsg_DesiredTimescale::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&desired_timescale_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&start_blend_time_) -
      reinterpret_cast<char*>(&desired_timescale_)) + sizeof(start_blend_time_));
}

CCSUsrMsg_DesiredTimescale::~CCSUsrMsg_DesiredTimescale() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_DesiredTimescale)
  SharedDtor();
}

void CCSUsrMsg_DesiredTimescale::SharedDtor() {
}

void CCSUsrMsg_DesiredTimescale::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_DesiredTimescale::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_DesiredTimescale& CCSUsrMsg_DesiredTimescale::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_DesiredTimescale();
  return *internal_default_instance();
}

CCSUsrMsg_DesiredTimescale* CCSUsrMsg_DesiredTimescale::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_DesiredTimescale* n = new CCSUsrMsg_DesiredTimescale;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_DesiredTimescale::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_DesiredTimescale)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&desired_timescale_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&start_blend_time_) -
        reinterpret_cast<char*>(&desired_timescale_)) + sizeof(start_blend_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_DesiredTimescale::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_DesiredTimescale)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float desired_timescale = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_desired_timescale();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &desired_timescale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float duration_realtime_sec = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_duration_realtime_sec();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_realtime_sec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 interpolator_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_interpolator_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &interpolator_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float start_blend_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_start_blend_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &start_blend_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_DesiredTimescale)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_DesiredTimescale)
  return false;
#undef DO_
}

void CCSUsrMsg_DesiredTimescale::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_DesiredTimescale)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float desired_timescale = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->desired_timescale(), output);
  }

  // optional float duration_realtime_sec = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->duration_realtime_sec(), output);
  }

  // optional int32 interpolator_type = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->interpolator_type(), output);
  }

  // optional float start_blend_time = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->start_blend_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_DesiredTimescale)
}

::google::protobuf::uint8* CCSUsrMsg_DesiredTimescale::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_DesiredTimescale)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float desired_timescale = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->desired_timescale(), target);
  }

  // optional float duration_realtime_sec = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->duration_realtime_sec(), target);
  }

  // optional int32 interpolator_type = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->interpolator_type(), target);
  }

  // optional float start_blend_time = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->start_blend_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_DesiredTimescale)
  return target;
}

size_t CCSUsrMsg_DesiredTimescale::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_DesiredTimescale)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional float desired_timescale = 1;
    if (has_desired_timescale()) {
      total_size += 1 + 4;
    }

    // optional float duration_realtime_sec = 2;
    if (has_duration_realtime_sec()) {
      total_size += 1 + 4;
    }

    // optional int32 interpolator_type = 3;
    if (has_interpolator_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->interpolator_type());
    }

    // optional float start_blend_time = 4;
    if (has_start_blend_time()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_DesiredTimescale::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_DesiredTimescale)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_DesiredTimescale* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_DesiredTimescale>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_DesiredTimescale)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_DesiredTimescale)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_DesiredTimescale::MergeFrom(const CCSUsrMsg_DesiredTimescale& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_DesiredTimescale)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      desired_timescale_ = from.desired_timescale_;
    }
    if (cached_has_bits & 0x00000002u) {
      duration_realtime_sec_ = from.duration_realtime_sec_;
    }
    if (cached_has_bits & 0x00000004u) {
      interpolator_type_ = from.interpolator_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      start_blend_time_ = from.start_blend_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_DesiredTimescale::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_DesiredTimescale)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_DesiredTimescale::CopyFrom(const CCSUsrMsg_DesiredTimescale& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_DesiredTimescale)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_DesiredTimescale::IsInitialized() const {
  return true;
}

void CCSUsrMsg_DesiredTimescale::Swap(CCSUsrMsg_DesiredTimescale* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_DesiredTimescale::InternalSwap(CCSUsrMsg_DesiredTimescale* other) {
  using std::swap;
  swap(desired_timescale_, other->desired_timescale_);
  swap(duration_realtime_sec_, other->duration_realtime_sec_);
  swap(interpolator_type_, other->interpolator_type_);
  swap(start_blend_time_, other->start_blend_time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_DesiredTimescale::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_CurrentTimescale::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_CurrentTimescale::kCurTimescaleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_CurrentTimescale::CCSUsrMsg_CurrentTimescale()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_CurrentTimescale();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_CurrentTimescale)
}
CCSUsrMsg_CurrentTimescale::CCSUsrMsg_CurrentTimescale(const CCSUsrMsg_CurrentTimescale& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cur_timescale_ = from.cur_timescale_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_CurrentTimescale)
}

void CCSUsrMsg_CurrentTimescale::SharedCtor() {
  _cached_size_ = 0;
  cur_timescale_ = 0;
}

CCSUsrMsg_CurrentTimescale::~CCSUsrMsg_CurrentTimescale() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_CurrentTimescale)
  SharedDtor();
}

void CCSUsrMsg_CurrentTimescale::SharedDtor() {
}

void CCSUsrMsg_CurrentTimescale::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_CurrentTimescale::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_CurrentTimescale& CCSUsrMsg_CurrentTimescale::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_CurrentTimescale();
  return *internal_default_instance();
}

CCSUsrMsg_CurrentTimescale* CCSUsrMsg_CurrentTimescale::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_CurrentTimescale* n = new CCSUsrMsg_CurrentTimescale;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_CurrentTimescale::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_CurrentTimescale)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cur_timescale_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_CurrentTimescale::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_CurrentTimescale)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float cur_timescale = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_cur_timescale();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cur_timescale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_CurrentTimescale)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_CurrentTimescale)
  return false;
#undef DO_
}

void CCSUsrMsg_CurrentTimescale::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_CurrentTimescale)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float cur_timescale = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->cur_timescale(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_CurrentTimescale)
}

::google::protobuf::uint8* CCSUsrMsg_CurrentTimescale::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_CurrentTimescale)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float cur_timescale = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->cur_timescale(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_CurrentTimescale)
  return target;
}

size_t CCSUsrMsg_CurrentTimescale::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_CurrentTimescale)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional float cur_timescale = 1;
  if (has_cur_timescale()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_CurrentTimescale::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_CurrentTimescale)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_CurrentTimescale* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_CurrentTimescale>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_CurrentTimescale)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_CurrentTimescale)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_CurrentTimescale::MergeFrom(const CCSUsrMsg_CurrentTimescale& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_CurrentTimescale)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cur_timescale()) {
    set_cur_timescale(from.cur_timescale());
  }
}

void CCSUsrMsg_CurrentTimescale::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_CurrentTimescale)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_CurrentTimescale::CopyFrom(const CCSUsrMsg_CurrentTimescale& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_CurrentTimescale)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_CurrentTimescale::IsInitialized() const {
  return true;
}

void CCSUsrMsg_CurrentTimescale::Swap(CCSUsrMsg_CurrentTimescale* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_CurrentTimescale::InternalSwap(CCSUsrMsg_CurrentTimescale* other) {
  using std::swap;
  swap(cur_timescale_, other->cur_timescale_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_CurrentTimescale::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_AchievementEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_AchievementEvent::kAchievementFieldNumber;
const int CCSUsrMsg_AchievementEvent::kCountFieldNumber;
const int CCSUsrMsg_AchievementEvent::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_AchievementEvent::CCSUsrMsg_AchievementEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_AchievementEvent();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_AchievementEvent)
}
CCSUsrMsg_AchievementEvent::CCSUsrMsg_AchievementEvent(const CCSUsrMsg_AchievementEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&achievement_, &from.achievement_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&achievement_)) + sizeof(user_id_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_AchievementEvent)
}

void CCSUsrMsg_AchievementEvent::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&achievement_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&achievement_)) + sizeof(user_id_));
}

CCSUsrMsg_AchievementEvent::~CCSUsrMsg_AchievementEvent() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_AchievementEvent)
  SharedDtor();
}

void CCSUsrMsg_AchievementEvent::SharedDtor() {
}

void CCSUsrMsg_AchievementEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_AchievementEvent::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_AchievementEvent& CCSUsrMsg_AchievementEvent::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_AchievementEvent();
  return *internal_default_instance();
}

CCSUsrMsg_AchievementEvent* CCSUsrMsg_AchievementEvent::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_AchievementEvent* n = new CCSUsrMsg_AchievementEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_AchievementEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_AchievementEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&achievement_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&user_id_) -
        reinterpret_cast<char*>(&achievement_)) + sizeof(user_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_AchievementEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_AchievementEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 achievement = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_achievement();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &achievement_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 user_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_user_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_AchievementEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_AchievementEvent)
  return false;
#undef DO_
}

void CCSUsrMsg_AchievementEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_AchievementEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 achievement = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->achievement(), output);
  }

  // optional int32 count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  // optional int32 user_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->user_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_AchievementEvent)
}

::google::protobuf::uint8* CCSUsrMsg_AchievementEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_AchievementEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 achievement = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->achievement(), target);
  }

  // optional int32 count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  // optional int32 user_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->user_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_AchievementEvent)
  return target;
}

size_t CCSUsrMsg_AchievementEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_AchievementEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 achievement = 1;
    if (has_achievement()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->achievement());
    }

    // optional int32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

    // optional int32 user_id = 3;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->user_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_AchievementEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_AchievementEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_AchievementEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_AchievementEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_AchievementEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_AchievementEvent)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_AchievementEvent::MergeFrom(const CCSUsrMsg_AchievementEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_AchievementEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      achievement_ = from.achievement_;
    }
    if (cached_has_bits & 0x00000002u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000004u) {
      user_id_ = from.user_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_AchievementEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_AchievementEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_AchievementEvent::CopyFrom(const CCSUsrMsg_AchievementEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_AchievementEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_AchievementEvent::IsInitialized() const {
  return true;
}

void CCSUsrMsg_AchievementEvent::Swap(CCSUsrMsg_AchievementEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_AchievementEvent::InternalSwap(CCSUsrMsg_AchievementEvent* other) {
  using std::swap;
  swap(achievement_, other->achievement_);
  swap(count_, other->count_);
  swap(user_id_, other->user_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_AchievementEvent::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_MatchEndConditions::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_MatchEndConditions::kFraglimitFieldNumber;
const int CCSUsrMsg_MatchEndConditions::kMpMaxroundsFieldNumber;
const int CCSUsrMsg_MatchEndConditions::kMpWinlimitFieldNumber;
const int CCSUsrMsg_MatchEndConditions::kMpTimelimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_MatchEndConditions::CCSUsrMsg_MatchEndConditions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_MatchEndConditions();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_MatchEndConditions)
}
CCSUsrMsg_MatchEndConditions::CCSUsrMsg_MatchEndConditions(const CCSUsrMsg_MatchEndConditions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&fraglimit_, &from.fraglimit_,
    static_cast<size_t>(reinterpret_cast<char*>(&mp_timelimit_) -
    reinterpret_cast<char*>(&fraglimit_)) + sizeof(mp_timelimit_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_MatchEndConditions)
}

void CCSUsrMsg_MatchEndConditions::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&fraglimit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mp_timelimit_) -
      reinterpret_cast<char*>(&fraglimit_)) + sizeof(mp_timelimit_));
}

CCSUsrMsg_MatchEndConditions::~CCSUsrMsg_MatchEndConditions() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_MatchEndConditions)
  SharedDtor();
}

void CCSUsrMsg_MatchEndConditions::SharedDtor() {
}

void CCSUsrMsg_MatchEndConditions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_MatchEndConditions::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_MatchEndConditions& CCSUsrMsg_MatchEndConditions::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_MatchEndConditions();
  return *internal_default_instance();
}

CCSUsrMsg_MatchEndConditions* CCSUsrMsg_MatchEndConditions::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_MatchEndConditions* n = new CCSUsrMsg_MatchEndConditions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_MatchEndConditions::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_MatchEndConditions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&fraglimit_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mp_timelimit_) -
        reinterpret_cast<char*>(&fraglimit_)) + sizeof(mp_timelimit_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_MatchEndConditions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_MatchEndConditions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fraglimit = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_fraglimit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fraglimit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mp_maxrounds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_mp_maxrounds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mp_maxrounds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mp_winlimit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_mp_winlimit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mp_winlimit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mp_timelimit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_mp_timelimit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mp_timelimit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_MatchEndConditions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_MatchEndConditions)
  return false;
#undef DO_
}

void CCSUsrMsg_MatchEndConditions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_MatchEndConditions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 fraglimit = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fraglimit(), output);
  }

  // optional int32 mp_maxrounds = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mp_maxrounds(), output);
  }

  // optional int32 mp_winlimit = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mp_winlimit(), output);
  }

  // optional int32 mp_timelimit = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->mp_timelimit(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_MatchEndConditions)
}

::google::protobuf::uint8* CCSUsrMsg_MatchEndConditions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_MatchEndConditions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 fraglimit = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fraglimit(), target);
  }

  // optional int32 mp_maxrounds = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mp_maxrounds(), target);
  }

  // optional int32 mp_winlimit = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mp_winlimit(), target);
  }

  // optional int32 mp_timelimit = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->mp_timelimit(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_MatchEndConditions)
  return target;
}

size_t CCSUsrMsg_MatchEndConditions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_MatchEndConditions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 fraglimit = 1;
    if (has_fraglimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fraglimit());
    }

    // optional int32 mp_maxrounds = 2;
    if (has_mp_maxrounds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mp_maxrounds());
    }

    // optional int32 mp_winlimit = 3;
    if (has_mp_winlimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mp_winlimit());
    }

    // optional int32 mp_timelimit = 4;
    if (has_mp_timelimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mp_timelimit());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_MatchEndConditions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_MatchEndConditions)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_MatchEndConditions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_MatchEndConditions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_MatchEndConditions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_MatchEndConditions)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_MatchEndConditions::MergeFrom(const CCSUsrMsg_MatchEndConditions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_MatchEndConditions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      fraglimit_ = from.fraglimit_;
    }
    if (cached_has_bits & 0x00000002u) {
      mp_maxrounds_ = from.mp_maxrounds_;
    }
    if (cached_has_bits & 0x00000004u) {
      mp_winlimit_ = from.mp_winlimit_;
    }
    if (cached_has_bits & 0x00000008u) {
      mp_timelimit_ = from.mp_timelimit_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_MatchEndConditions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_MatchEndConditions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_MatchEndConditions::CopyFrom(const CCSUsrMsg_MatchEndConditions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_MatchEndConditions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_MatchEndConditions::IsInitialized() const {
  return true;
}

void CCSUsrMsg_MatchEndConditions::Swap(CCSUsrMsg_MatchEndConditions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_MatchEndConditions::InternalSwap(CCSUsrMsg_MatchEndConditions* other) {
  using std::swap;
  swap(fraglimit_, other->fraglimit_);
  swap(mp_maxrounds_, other->mp_maxrounds_);
  swap(mp_winlimit_, other->mp_winlimit_);
  swap(mp_timelimit_, other->mp_timelimit_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_MatchEndConditions::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_PlayerStatsUpdate_Stat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_PlayerStatsUpdate_Stat::kIdxFieldNumber;
const int CCSUsrMsg_PlayerStatsUpdate_Stat::kDeltaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_PlayerStatsUpdate_Stat::CCSUsrMsg_PlayerStatsUpdate_Stat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_PlayerStatsUpdate_Stat();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_PlayerStatsUpdate.Stat)
}
CCSUsrMsg_PlayerStatsUpdate_Stat::CCSUsrMsg_PlayerStatsUpdate_Stat(const CCSUsrMsg_PlayerStatsUpdate_Stat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&idx_, &from.idx_,
    static_cast<size_t>(reinterpret_cast<char*>(&delta_) -
    reinterpret_cast<char*>(&idx_)) + sizeof(delta_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_PlayerStatsUpdate.Stat)
}

void CCSUsrMsg_PlayerStatsUpdate_Stat::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&idx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&delta_) -
      reinterpret_cast<char*>(&idx_)) + sizeof(delta_));
}

CCSUsrMsg_PlayerStatsUpdate_Stat::~CCSUsrMsg_PlayerStatsUpdate_Stat() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_PlayerStatsUpdate.Stat)
  SharedDtor();
}

void CCSUsrMsg_PlayerStatsUpdate_Stat::SharedDtor() {
}

void CCSUsrMsg_PlayerStatsUpdate_Stat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_PlayerStatsUpdate_Stat::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_PlayerStatsUpdate_Stat& CCSUsrMsg_PlayerStatsUpdate_Stat::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_PlayerStatsUpdate_Stat();
  return *internal_default_instance();
}

CCSUsrMsg_PlayerStatsUpdate_Stat* CCSUsrMsg_PlayerStatsUpdate_Stat::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_PlayerStatsUpdate_Stat* n = new CCSUsrMsg_PlayerStatsUpdate_Stat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_PlayerStatsUpdate_Stat::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_PlayerStatsUpdate.Stat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&idx_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&delta_) -
        reinterpret_cast<char*>(&idx_)) + sizeof(delta_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_PlayerStatsUpdate_Stat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_PlayerStatsUpdate.Stat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 idx = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 delta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_delta();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_PlayerStatsUpdate.Stat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_PlayerStatsUpdate.Stat)
  return false;
#undef DO_
}

void CCSUsrMsg_PlayerStatsUpdate_Stat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_PlayerStatsUpdate.Stat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 idx = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->idx(), output);
  }

  // optional int32 delta = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delta(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_PlayerStatsUpdate.Stat)
}

::google::protobuf::uint8* CCSUsrMsg_PlayerStatsUpdate_Stat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_PlayerStatsUpdate.Stat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 idx = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->idx(), target);
  }

  // optional int32 delta = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delta(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_PlayerStatsUpdate.Stat)
  return target;
}

size_t CCSUsrMsg_PlayerStatsUpdate_Stat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_PlayerStatsUpdate.Stat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 idx = 1;
    if (has_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->idx());
    }

    // optional int32 delta = 2;
    if (has_delta()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delta());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_PlayerStatsUpdate_Stat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_PlayerStatsUpdate.Stat)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_PlayerStatsUpdate_Stat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_PlayerStatsUpdate_Stat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_PlayerStatsUpdate.Stat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_PlayerStatsUpdate.Stat)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_PlayerStatsUpdate_Stat::MergeFrom(const CCSUsrMsg_PlayerStatsUpdate_Stat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_PlayerStatsUpdate.Stat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      idx_ = from.idx_;
    }
    if (cached_has_bits & 0x00000002u) {
      delta_ = from.delta_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_PlayerStatsUpdate_Stat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_PlayerStatsUpdate.Stat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_PlayerStatsUpdate_Stat::CopyFrom(const CCSUsrMsg_PlayerStatsUpdate_Stat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_PlayerStatsUpdate.Stat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_PlayerStatsUpdate_Stat::IsInitialized() const {
  return true;
}

void CCSUsrMsg_PlayerStatsUpdate_Stat::Swap(CCSUsrMsg_PlayerStatsUpdate_Stat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_PlayerStatsUpdate_Stat::InternalSwap(CCSUsrMsg_PlayerStatsUpdate_Stat* other) {
  using std::swap;
  swap(idx_, other->idx_);
  swap(delta_, other->delta_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_PlayerStatsUpdate_Stat::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_PlayerStatsUpdate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_PlayerStatsUpdate::kVersionFieldNumber;
const int CCSUsrMsg_PlayerStatsUpdate::kStatsFieldNumber;
const int CCSUsrMsg_PlayerStatsUpdate::kUserIdFieldNumber;
const int CCSUsrMsg_PlayerStatsUpdate::kCrcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_PlayerStatsUpdate::CCSUsrMsg_PlayerStatsUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_PlayerStatsUpdate();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_PlayerStatsUpdate)
}
CCSUsrMsg_PlayerStatsUpdate::CCSUsrMsg_PlayerStatsUpdate(const CCSUsrMsg_PlayerStatsUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      stats_(from.stats_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&crc_) -
    reinterpret_cast<char*>(&version_)) + sizeof(crc_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_PlayerStatsUpdate)
}

void CCSUsrMsg_PlayerStatsUpdate::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&crc_) -
      reinterpret_cast<char*>(&version_)) + sizeof(crc_));
}

CCSUsrMsg_PlayerStatsUpdate::~CCSUsrMsg_PlayerStatsUpdate() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_PlayerStatsUpdate)
  SharedDtor();
}

void CCSUsrMsg_PlayerStatsUpdate::SharedDtor() {
}

void CCSUsrMsg_PlayerStatsUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_PlayerStatsUpdate::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_PlayerStatsUpdate& CCSUsrMsg_PlayerStatsUpdate::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_PlayerStatsUpdate();
  return *internal_default_instance();
}

CCSUsrMsg_PlayerStatsUpdate* CCSUsrMsg_PlayerStatsUpdate::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_PlayerStatsUpdate* n = new CCSUsrMsg_PlayerStatsUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_PlayerStatsUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_PlayerStatsUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stats_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&crc_) -
        reinterpret_cast<char*>(&version_)) + sizeof(crc_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_PlayerStatsUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_PlayerStatsUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CCSUsrMsg_PlayerStatsUpdate.Stat stats = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 user_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_user_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 crc = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_crc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &crc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_PlayerStatsUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_PlayerStatsUpdate)
  return false;
#undef DO_
}

void CCSUsrMsg_PlayerStatsUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_PlayerStatsUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 version = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->version(), output);
  }

  // repeated .CCSUsrMsg_PlayerStatsUpdate.Stat stats = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->stats(static_cast<int>(i)), output);
  }

  // optional int32 user_id = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->user_id(), output);
  }

  // optional int32 crc = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->crc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_PlayerStatsUpdate)
}

::google::protobuf::uint8* CCSUsrMsg_PlayerStatsUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_PlayerStatsUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 version = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->version(), target);
  }

  // repeated .CCSUsrMsg_PlayerStatsUpdate.Stat stats = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->stats(static_cast<int>(i)), deterministic, target);
  }

  // optional int32 user_id = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->user_id(), target);
  }

  // optional int32 crc = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->crc(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_PlayerStatsUpdate)
  return target;
}

size_t CCSUsrMsg_PlayerStatsUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_PlayerStatsUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CCSUsrMsg_PlayerStatsUpdate.Stat stats = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->stats_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stats(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->version());
    }

    // optional int32 user_id = 5;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->user_id());
    }

    // optional int32 crc = 6;
    if (has_crc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->crc());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_PlayerStatsUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_PlayerStatsUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_PlayerStatsUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_PlayerStatsUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_PlayerStatsUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_PlayerStatsUpdate)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_PlayerStatsUpdate::MergeFrom(const CCSUsrMsg_PlayerStatsUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_PlayerStatsUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stats_.MergeFrom(from.stats_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000002u) {
      user_id_ = from.user_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      crc_ = from.crc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_PlayerStatsUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_PlayerStatsUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_PlayerStatsUpdate::CopyFrom(const CCSUsrMsg_PlayerStatsUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_PlayerStatsUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_PlayerStatsUpdate::IsInitialized() const {
  return true;
}

void CCSUsrMsg_PlayerStatsUpdate::Swap(CCSUsrMsg_PlayerStatsUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_PlayerStatsUpdate::InternalSwap(CCSUsrMsg_PlayerStatsUpdate* other) {
  using std::swap;
  stats_.InternalSwap(&other->stats_);
  swap(version_, other->version_);
  swap(user_id_, other->user_id_);
  swap(crc_, other->crc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_PlayerStatsUpdate::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_DisplayInventory::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_DisplayInventory::kDisplayFieldNumber;
const int CCSUsrMsg_DisplayInventory::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_DisplayInventory::CCSUsrMsg_DisplayInventory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_DisplayInventory();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_DisplayInventory)
}
CCSUsrMsg_DisplayInventory::CCSUsrMsg_DisplayInventory(const CCSUsrMsg_DisplayInventory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&display_, &from.display_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&display_)) + sizeof(user_id_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_DisplayInventory)
}

void CCSUsrMsg_DisplayInventory::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&display_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&display_)) + sizeof(user_id_));
}

CCSUsrMsg_DisplayInventory::~CCSUsrMsg_DisplayInventory() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_DisplayInventory)
  SharedDtor();
}

void CCSUsrMsg_DisplayInventory::SharedDtor() {
}

void CCSUsrMsg_DisplayInventory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_DisplayInventory::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_DisplayInventory& CCSUsrMsg_DisplayInventory::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_DisplayInventory();
  return *internal_default_instance();
}

CCSUsrMsg_DisplayInventory* CCSUsrMsg_DisplayInventory::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_DisplayInventory* n = new CCSUsrMsg_DisplayInventory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_DisplayInventory::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_DisplayInventory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&display_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&user_id_) -
        reinterpret_cast<char*>(&display_)) + sizeof(user_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_DisplayInventory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_DisplayInventory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool display = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_display();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &display_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_user_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_DisplayInventory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_DisplayInventory)
  return false;
#undef DO_
}

void CCSUsrMsg_DisplayInventory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_DisplayInventory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool display = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->display(), output);
  }

  // optional int32 user_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->user_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_DisplayInventory)
}

::google::protobuf::uint8* CCSUsrMsg_DisplayInventory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_DisplayInventory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool display = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->display(), target);
  }

  // optional int32 user_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->user_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_DisplayInventory)
  return target;
}

size_t CCSUsrMsg_DisplayInventory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_DisplayInventory)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bool display = 1;
    if (has_display()) {
      total_size += 1 + 1;
    }

    // optional int32 user_id = 2;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->user_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_DisplayInventory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_DisplayInventory)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_DisplayInventory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_DisplayInventory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_DisplayInventory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_DisplayInventory)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_DisplayInventory::MergeFrom(const CCSUsrMsg_DisplayInventory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_DisplayInventory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      display_ = from.display_;
    }
    if (cached_has_bits & 0x00000002u) {
      user_id_ = from.user_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_DisplayInventory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_DisplayInventory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_DisplayInventory::CopyFrom(const CCSUsrMsg_DisplayInventory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_DisplayInventory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_DisplayInventory::IsInitialized() const {
  return true;
}

void CCSUsrMsg_DisplayInventory::Swap(CCSUsrMsg_DisplayInventory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_DisplayInventory::InternalSwap(CCSUsrMsg_DisplayInventory* other) {
  using std::swap;
  swap(display_, other->display_);
  swap(user_id_, other->user_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_DisplayInventory::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_QuestProgress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_QuestProgress::kQuestIdFieldNumber;
const int CCSUsrMsg_QuestProgress::kNormalPointsFieldNumber;
const int CCSUsrMsg_QuestProgress::kBonusPointsFieldNumber;
const int CCSUsrMsg_QuestProgress::kIsEventQuestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_QuestProgress::CCSUsrMsg_QuestProgress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_QuestProgress();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_QuestProgress)
}
CCSUsrMsg_QuestProgress::CCSUsrMsg_QuestProgress(const CCSUsrMsg_QuestProgress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&quest_id_, &from.quest_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_event_quest_) -
    reinterpret_cast<char*>(&quest_id_)) + sizeof(is_event_quest_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_QuestProgress)
}

void CCSUsrMsg_QuestProgress::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&quest_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_event_quest_) -
      reinterpret_cast<char*>(&quest_id_)) + sizeof(is_event_quest_));
}

CCSUsrMsg_QuestProgress::~CCSUsrMsg_QuestProgress() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_QuestProgress)
  SharedDtor();
}

void CCSUsrMsg_QuestProgress::SharedDtor() {
}

void CCSUsrMsg_QuestProgress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_QuestProgress::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_QuestProgress& CCSUsrMsg_QuestProgress::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_QuestProgress();
  return *internal_default_instance();
}

CCSUsrMsg_QuestProgress* CCSUsrMsg_QuestProgress::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_QuestProgress* n = new CCSUsrMsg_QuestProgress;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_QuestProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_QuestProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&quest_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_event_quest_) -
        reinterpret_cast<char*>(&quest_id_)) + sizeof(is_event_quest_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_QuestProgress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_QuestProgress)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 quest_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_quest_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 normal_points = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_normal_points();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &normal_points_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 bonus_points = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_bonus_points();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bonus_points_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_event_quest = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_is_event_quest();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_event_quest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_QuestProgress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_QuestProgress)
  return false;
#undef DO_
}

void CCSUsrMsg_QuestProgress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_QuestProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 quest_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->quest_id(), output);
  }

  // optional uint32 normal_points = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->normal_points(), output);
  }

  // optional uint32 bonus_points = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->bonus_points(), output);
  }

  // optional bool is_event_quest = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_event_quest(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_QuestProgress)
}

::google::protobuf::uint8* CCSUsrMsg_QuestProgress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_QuestProgress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 quest_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->quest_id(), target);
  }

  // optional uint32 normal_points = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->normal_points(), target);
  }

  // optional uint32 bonus_points = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->bonus_points(), target);
  }

  // optional bool is_event_quest = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_event_quest(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_QuestProgress)
  return target;
}

size_t CCSUsrMsg_QuestProgress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_QuestProgress)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 quest_id = 1;
    if (has_quest_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->quest_id());
    }

    // optional uint32 normal_points = 2;
    if (has_normal_points()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->normal_points());
    }

    // optional uint32 bonus_points = 3;
    if (has_bonus_points()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bonus_points());
    }

    // optional bool is_event_quest = 4;
    if (has_is_event_quest()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_QuestProgress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_QuestProgress)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_QuestProgress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_QuestProgress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_QuestProgress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_QuestProgress)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_QuestProgress::MergeFrom(const CCSUsrMsg_QuestProgress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_QuestProgress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      quest_id_ = from.quest_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      normal_points_ = from.normal_points_;
    }
    if (cached_has_bits & 0x00000004u) {
      bonus_points_ = from.bonus_points_;
    }
    if (cached_has_bits & 0x00000008u) {
      is_event_quest_ = from.is_event_quest_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_QuestProgress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_QuestProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_QuestProgress::CopyFrom(const CCSUsrMsg_QuestProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_QuestProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_QuestProgress::IsInitialized() const {
  return true;
}

void CCSUsrMsg_QuestProgress::Swap(CCSUsrMsg_QuestProgress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_QuestProgress::InternalSwap(CCSUsrMsg_QuestProgress* other) {
  using std::swap;
  swap(quest_id_, other->quest_id_);
  swap(normal_points_, other->normal_points_);
  swap(bonus_points_, other->bonus_points_);
  swap(is_event_quest_, other->is_event_quest_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_QuestProgress::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_ScoreLeaderboardData::InitAsDefaultInstance() {
  ::_CCSUsrMsg_ScoreLeaderboardData_default_instance_._instance.get_mutable()->data_ = const_cast< ::ScoreLeaderboardData*>(
      ::ScoreLeaderboardData::internal_default_instance());
}
void CCSUsrMsg_ScoreLeaderboardData::clear_data() {
  if (data_ != NULL) data_->Clear();
  clear_has_data();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_ScoreLeaderboardData::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_ScoreLeaderboardData::CCSUsrMsg_ScoreLeaderboardData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ScoreLeaderboardData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_ScoreLeaderboardData)
}
CCSUsrMsg_ScoreLeaderboardData::CCSUsrMsg_ScoreLeaderboardData(const CCSUsrMsg_ScoreLeaderboardData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::ScoreLeaderboardData(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_ScoreLeaderboardData)
}

void CCSUsrMsg_ScoreLeaderboardData::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
}

CCSUsrMsg_ScoreLeaderboardData::~CCSUsrMsg_ScoreLeaderboardData() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_ScoreLeaderboardData)
  SharedDtor();
}

void CCSUsrMsg_ScoreLeaderboardData::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void CCSUsrMsg_ScoreLeaderboardData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_ScoreLeaderboardData::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_ScoreLeaderboardData& CCSUsrMsg_ScoreLeaderboardData::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ScoreLeaderboardData();
  return *internal_default_instance();
}

CCSUsrMsg_ScoreLeaderboardData* CCSUsrMsg_ScoreLeaderboardData::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_ScoreLeaderboardData* n = new CCSUsrMsg_ScoreLeaderboardData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_ScoreLeaderboardData::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_ScoreLeaderboardData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(data_ != NULL);
    data_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_ScoreLeaderboardData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_ScoreLeaderboardData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ScoreLeaderboardData data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_ScoreLeaderboardData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_ScoreLeaderboardData)
  return false;
#undef DO_
}

void CCSUsrMsg_ScoreLeaderboardData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_ScoreLeaderboardData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ScoreLeaderboardData data = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_ScoreLeaderboardData)
}

::google::protobuf::uint8* CCSUsrMsg_ScoreLeaderboardData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_ScoreLeaderboardData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ScoreLeaderboardData data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->data_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_ScoreLeaderboardData)
  return target;
}

size_t CCSUsrMsg_ScoreLeaderboardData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_ScoreLeaderboardData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .ScoreLeaderboardData data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_ScoreLeaderboardData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_ScoreLeaderboardData)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_ScoreLeaderboardData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_ScoreLeaderboardData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_ScoreLeaderboardData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_ScoreLeaderboardData)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_ScoreLeaderboardData::MergeFrom(const CCSUsrMsg_ScoreLeaderboardData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_ScoreLeaderboardData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    mutable_data()->::ScoreLeaderboardData::MergeFrom(from.data());
  }
}

void CCSUsrMsg_ScoreLeaderboardData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_ScoreLeaderboardData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_ScoreLeaderboardData::CopyFrom(const CCSUsrMsg_ScoreLeaderboardData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_ScoreLeaderboardData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_ScoreLeaderboardData::IsInitialized() const {
  return true;
}

void CCSUsrMsg_ScoreLeaderboardData::Swap(CCSUsrMsg_ScoreLeaderboardData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_ScoreLeaderboardData::InternalSwap(CCSUsrMsg_ScoreLeaderboardData* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_ScoreLeaderboardData::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_PlayerDecalDigitalSignature::InitAsDefaultInstance() {
  ::_CCSUsrMsg_PlayerDecalDigitalSignature_default_instance_._instance.get_mutable()->data_ = const_cast< ::PlayerDecalDigitalSignature*>(
      ::PlayerDecalDigitalSignature::internal_default_instance());
}
void CCSUsrMsg_PlayerDecalDigitalSignature::clear_data() {
  if (data_ != NULL) data_->Clear();
  clear_has_data();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_PlayerDecalDigitalSignature::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_PlayerDecalDigitalSignature::CCSUsrMsg_PlayerDecalDigitalSignature()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_PlayerDecalDigitalSignature();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_PlayerDecalDigitalSignature)
}
CCSUsrMsg_PlayerDecalDigitalSignature::CCSUsrMsg_PlayerDecalDigitalSignature(const CCSUsrMsg_PlayerDecalDigitalSignature& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::PlayerDecalDigitalSignature(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_PlayerDecalDigitalSignature)
}

void CCSUsrMsg_PlayerDecalDigitalSignature::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
}

CCSUsrMsg_PlayerDecalDigitalSignature::~CCSUsrMsg_PlayerDecalDigitalSignature() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_PlayerDecalDigitalSignature)
  SharedDtor();
}

void CCSUsrMsg_PlayerDecalDigitalSignature::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void CCSUsrMsg_PlayerDecalDigitalSignature::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_PlayerDecalDigitalSignature::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_PlayerDecalDigitalSignature& CCSUsrMsg_PlayerDecalDigitalSignature::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_PlayerDecalDigitalSignature();
  return *internal_default_instance();
}

CCSUsrMsg_PlayerDecalDigitalSignature* CCSUsrMsg_PlayerDecalDigitalSignature::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_PlayerDecalDigitalSignature* n = new CCSUsrMsg_PlayerDecalDigitalSignature;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_PlayerDecalDigitalSignature::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_PlayerDecalDigitalSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(data_ != NULL);
    data_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_PlayerDecalDigitalSignature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_PlayerDecalDigitalSignature)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .PlayerDecalDigitalSignature data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_PlayerDecalDigitalSignature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_PlayerDecalDigitalSignature)
  return false;
#undef DO_
}

void CCSUsrMsg_PlayerDecalDigitalSignature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_PlayerDecalDigitalSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .PlayerDecalDigitalSignature data = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_PlayerDecalDigitalSignature)
}

::google::protobuf::uint8* CCSUsrMsg_PlayerDecalDigitalSignature::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_PlayerDecalDigitalSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .PlayerDecalDigitalSignature data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->data_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_PlayerDecalDigitalSignature)
  return target;
}

size_t CCSUsrMsg_PlayerDecalDigitalSignature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_PlayerDecalDigitalSignature)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .PlayerDecalDigitalSignature data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_PlayerDecalDigitalSignature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_PlayerDecalDigitalSignature)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_PlayerDecalDigitalSignature* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_PlayerDecalDigitalSignature>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_PlayerDecalDigitalSignature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_PlayerDecalDigitalSignature)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_PlayerDecalDigitalSignature::MergeFrom(const CCSUsrMsg_PlayerDecalDigitalSignature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_PlayerDecalDigitalSignature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    mutable_data()->::PlayerDecalDigitalSignature::MergeFrom(from.data());
  }
}

void CCSUsrMsg_PlayerDecalDigitalSignature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_PlayerDecalDigitalSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_PlayerDecalDigitalSignature::CopyFrom(const CCSUsrMsg_PlayerDecalDigitalSignature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_PlayerDecalDigitalSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_PlayerDecalDigitalSignature::IsInitialized() const {
  return true;
}

void CCSUsrMsg_PlayerDecalDigitalSignature::Swap(CCSUsrMsg_PlayerDecalDigitalSignature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_PlayerDecalDigitalSignature::InternalSwap(CCSUsrMsg_PlayerDecalDigitalSignature* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_PlayerDecalDigitalSignature::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_XRankGet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_XRankGet::kModeIdxFieldNumber;
const int CCSUsrMsg_XRankGet::kControllerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_XRankGet::CCSUsrMsg_XRankGet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_XRankGet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_XRankGet)
}
CCSUsrMsg_XRankGet::CCSUsrMsg_XRankGet(const CCSUsrMsg_XRankGet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mode_idx_, &from.mode_idx_,
    static_cast<size_t>(reinterpret_cast<char*>(&controller_) -
    reinterpret_cast<char*>(&mode_idx_)) + sizeof(controller_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_XRankGet)
}

void CCSUsrMsg_XRankGet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&mode_idx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&controller_) -
      reinterpret_cast<char*>(&mode_idx_)) + sizeof(controller_));
}

CCSUsrMsg_XRankGet::~CCSUsrMsg_XRankGet() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_XRankGet)
  SharedDtor();
}

void CCSUsrMsg_XRankGet::SharedDtor() {
}

void CCSUsrMsg_XRankGet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_XRankGet::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_XRankGet& CCSUsrMsg_XRankGet::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_XRankGet();
  return *internal_default_instance();
}

CCSUsrMsg_XRankGet* CCSUsrMsg_XRankGet::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_XRankGet* n = new CCSUsrMsg_XRankGet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_XRankGet::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_XRankGet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&mode_idx_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&controller_) -
        reinterpret_cast<char*>(&mode_idx_)) + sizeof(controller_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_XRankGet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_XRankGet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 mode_idx = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_mode_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 controller = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_controller();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &controller_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_XRankGet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_XRankGet)
  return false;
#undef DO_
}

void CCSUsrMsg_XRankGet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_XRankGet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 mode_idx = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mode_idx(), output);
  }

  // optional int32 controller = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->controller(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_XRankGet)
}

::google::protobuf::uint8* CCSUsrMsg_XRankGet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_XRankGet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 mode_idx = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mode_idx(), target);
  }

  // optional int32 controller = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->controller(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_XRankGet)
  return target;
}

size_t CCSUsrMsg_XRankGet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_XRankGet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 mode_idx = 1;
    if (has_mode_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mode_idx());
    }

    // optional int32 controller = 2;
    if (has_controller()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->controller());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_XRankGet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_XRankGet)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_XRankGet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_XRankGet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_XRankGet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_XRankGet)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_XRankGet::MergeFrom(const CCSUsrMsg_XRankGet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_XRankGet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mode_idx_ = from.mode_idx_;
    }
    if (cached_has_bits & 0x00000002u) {
      controller_ = from.controller_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_XRankGet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_XRankGet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_XRankGet::CopyFrom(const CCSUsrMsg_XRankGet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_XRankGet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_XRankGet::IsInitialized() const {
  return true;
}

void CCSUsrMsg_XRankGet::Swap(CCSUsrMsg_XRankGet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_XRankGet::InternalSwap(CCSUsrMsg_XRankGet* other) {
  using std::swap;
  swap(mode_idx_, other->mode_idx_);
  swap(controller_, other->controller_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_XRankGet::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_XRankUpd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_XRankUpd::kModeIdxFieldNumber;
const int CCSUsrMsg_XRankUpd::kControllerFieldNumber;
const int CCSUsrMsg_XRankUpd::kRankingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_XRankUpd::CCSUsrMsg_XRankUpd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_XRankUpd();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_XRankUpd)
}
CCSUsrMsg_XRankUpd::CCSUsrMsg_XRankUpd(const CCSUsrMsg_XRankUpd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mode_idx_, &from.mode_idx_,
    static_cast<size_t>(reinterpret_cast<char*>(&ranking_) -
    reinterpret_cast<char*>(&mode_idx_)) + sizeof(ranking_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_XRankUpd)
}

void CCSUsrMsg_XRankUpd::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&mode_idx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ranking_) -
      reinterpret_cast<char*>(&mode_idx_)) + sizeof(ranking_));
}

CCSUsrMsg_XRankUpd::~CCSUsrMsg_XRankUpd() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_XRankUpd)
  SharedDtor();
}

void CCSUsrMsg_XRankUpd::SharedDtor() {
}

void CCSUsrMsg_XRankUpd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_XRankUpd::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_XRankUpd& CCSUsrMsg_XRankUpd::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_XRankUpd();
  return *internal_default_instance();
}

CCSUsrMsg_XRankUpd* CCSUsrMsg_XRankUpd::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_XRankUpd* n = new CCSUsrMsg_XRankUpd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_XRankUpd::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_XRankUpd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&mode_idx_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ranking_) -
        reinterpret_cast<char*>(&mode_idx_)) + sizeof(ranking_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_XRankUpd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_XRankUpd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 mode_idx = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_mode_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 controller = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_controller();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &controller_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ranking = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_ranking();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ranking_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_XRankUpd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_XRankUpd)
  return false;
#undef DO_
}

void CCSUsrMsg_XRankUpd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_XRankUpd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 mode_idx = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mode_idx(), output);
  }

  // optional int32 controller = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->controller(), output);
  }

  // optional int32 ranking = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ranking(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_XRankUpd)
}

::google::protobuf::uint8* CCSUsrMsg_XRankUpd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_XRankUpd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 mode_idx = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mode_idx(), target);
  }

  // optional int32 controller = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->controller(), target);
  }

  // optional int32 ranking = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ranking(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_XRankUpd)
  return target;
}

size_t CCSUsrMsg_XRankUpd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_XRankUpd)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 mode_idx = 1;
    if (has_mode_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mode_idx());
    }

    // optional int32 controller = 2;
    if (has_controller()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->controller());
    }

    // optional int32 ranking = 3;
    if (has_ranking()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ranking());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_XRankUpd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_XRankUpd)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_XRankUpd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_XRankUpd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_XRankUpd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_XRankUpd)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_XRankUpd::MergeFrom(const CCSUsrMsg_XRankUpd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_XRankUpd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mode_idx_ = from.mode_idx_;
    }
    if (cached_has_bits & 0x00000002u) {
      controller_ = from.controller_;
    }
    if (cached_has_bits & 0x00000004u) {
      ranking_ = from.ranking_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_XRankUpd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_XRankUpd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_XRankUpd::CopyFrom(const CCSUsrMsg_XRankUpd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_XRankUpd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_XRankUpd::IsInitialized() const {
  return true;
}

void CCSUsrMsg_XRankUpd::Swap(CCSUsrMsg_XRankUpd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_XRankUpd::InternalSwap(CCSUsrMsg_XRankUpd* other) {
  using std::swap;
  swap(mode_idx_, other->mode_idx_);
  swap(controller_, other->controller_);
  swap(ranking_, other->ranking_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_XRankUpd::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_CallVoteFailed::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_CallVoteFailed::kReasonFieldNumber;
const int CCSUsrMsg_CallVoteFailed::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_CallVoteFailed::CCSUsrMsg_CallVoteFailed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_CallVoteFailed();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_CallVoteFailed)
}
CCSUsrMsg_CallVoteFailed::CCSUsrMsg_CallVoteFailed(const CCSUsrMsg_CallVoteFailed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&reason_, &from.reason_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&reason_)) + sizeof(time_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_CallVoteFailed)
}

void CCSUsrMsg_CallVoteFailed::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&reason_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&reason_)) + sizeof(time_));
}

CCSUsrMsg_CallVoteFailed::~CCSUsrMsg_CallVoteFailed() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_CallVoteFailed)
  SharedDtor();
}

void CCSUsrMsg_CallVoteFailed::SharedDtor() {
}

void CCSUsrMsg_CallVoteFailed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_CallVoteFailed::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_CallVoteFailed& CCSUsrMsg_CallVoteFailed::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_CallVoteFailed();
  return *internal_default_instance();
}

CCSUsrMsg_CallVoteFailed* CCSUsrMsg_CallVoteFailed::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_CallVoteFailed* n = new CCSUsrMsg_CallVoteFailed;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_CallVoteFailed::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_CallVoteFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&reason_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&time_) -
        reinterpret_cast<char*>(&reason_)) + sizeof(time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_CallVoteFailed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_CallVoteFailed)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 reason = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_reason();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_CallVoteFailed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_CallVoteFailed)
  return false;
#undef DO_
}

void CCSUsrMsg_CallVoteFailed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_CallVoteFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 reason = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->reason(), output);
  }

  // optional int32 time = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_CallVoteFailed)
}

::google::protobuf::uint8* CCSUsrMsg_CallVoteFailed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_CallVoteFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 reason = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->reason(), target);
  }

  // optional int32 time = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_CallVoteFailed)
  return target;
}

size_t CCSUsrMsg_CallVoteFailed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_CallVoteFailed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 reason = 1;
    if (has_reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reason());
    }

    // optional int32 time = 2;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->time());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_CallVoteFailed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_CallVoteFailed)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_CallVoteFailed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_CallVoteFailed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_CallVoteFailed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_CallVoteFailed)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_CallVoteFailed::MergeFrom(const CCSUsrMsg_CallVoteFailed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_CallVoteFailed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      reason_ = from.reason_;
    }
    if (cached_has_bits & 0x00000002u) {
      time_ = from.time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_CallVoteFailed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_CallVoteFailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_CallVoteFailed::CopyFrom(const CCSUsrMsg_CallVoteFailed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_CallVoteFailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_CallVoteFailed::IsInitialized() const {
  return true;
}

void CCSUsrMsg_CallVoteFailed::Swap(CCSUsrMsg_CallVoteFailed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_CallVoteFailed::InternalSwap(CCSUsrMsg_CallVoteFailed* other) {
  using std::swap;
  swap(reason_, other->reason_);
  swap(time_, other->time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_CallVoteFailed::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_VoteStart::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_VoteStart::kTeamFieldNumber;
const int CCSUsrMsg_VoteStart::kEntIdxFieldNumber;
const int CCSUsrMsg_VoteStart::kVoteTypeFieldNumber;
const int CCSUsrMsg_VoteStart::kDispStrFieldNumber;
const int CCSUsrMsg_VoteStart::kDetailsStrFieldNumber;
const int CCSUsrMsg_VoteStart::kOtherTeamStrFieldNumber;
const int CCSUsrMsg_VoteStart::kIsYesNoVoteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_VoteStart::CCSUsrMsg_VoteStart()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_VoteStart();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_VoteStart)
}
CCSUsrMsg_VoteStart::CCSUsrMsg_VoteStart(const CCSUsrMsg_VoteStart& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  disp_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_disp_str()) {
    disp_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.disp_str_);
  }
  details_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_details_str()) {
    details_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.details_str_);
  }
  other_team_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_other_team_str()) {
    other_team_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other_team_str_);
  }
  ::memcpy(&team_, &from.team_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_yes_no_vote_) -
    reinterpret_cast<char*>(&team_)) + sizeof(is_yes_no_vote_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_VoteStart)
}

void CCSUsrMsg_VoteStart::SharedCtor() {
  _cached_size_ = 0;
  disp_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  details_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  other_team_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&team_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_yes_no_vote_) -
      reinterpret_cast<char*>(&team_)) + sizeof(is_yes_no_vote_));
}

CCSUsrMsg_VoteStart::~CCSUsrMsg_VoteStart() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_VoteStart)
  SharedDtor();
}

void CCSUsrMsg_VoteStart::SharedDtor() {
  disp_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  details_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  other_team_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_VoteStart::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_VoteStart::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_VoteStart& CCSUsrMsg_VoteStart::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_VoteStart();
  return *internal_default_instance();
}

CCSUsrMsg_VoteStart* CCSUsrMsg_VoteStart::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_VoteStart* n = new CCSUsrMsg_VoteStart;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_VoteStart::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_VoteStart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!disp_str_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*disp_str_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!details_str_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*details_str_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!other_team_str_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*other_team_str_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 120u) {
    ::memset(&team_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_yes_no_vote_) -
        reinterpret_cast<char*>(&team_)) + sizeof(is_yes_no_vote_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_VoteStart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_VoteStart)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 team = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_team();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &team_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ent_idx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ent_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ent_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vote_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_vote_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vote_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string disp_str = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_disp_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->disp_str().data(), static_cast<int>(this->disp_str().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_VoteStart.disp_str");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string details_str = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_details_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->details_str().data(), static_cast<int>(this->details_str().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_VoteStart.details_str");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string other_team_str = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_other_team_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->other_team_str().data(), static_cast<int>(this->other_team_str().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_VoteStart.other_team_str");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_yes_no_vote = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_is_yes_no_vote();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_yes_no_vote_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_VoteStart)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_VoteStart)
  return false;
#undef DO_
}

void CCSUsrMsg_VoteStart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_VoteStart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 team = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->team(), output);
  }

  // optional int32 ent_idx = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ent_idx(), output);
  }

  // optional int32 vote_type = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->vote_type(), output);
  }

  // optional string disp_str = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->disp_str().data(), static_cast<int>(this->disp_str().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VoteStart.disp_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->disp_str(), output);
  }

  // optional string details_str = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->details_str().data(), static_cast<int>(this->details_str().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VoteStart.details_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->details_str(), output);
  }

  // optional string other_team_str = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->other_team_str().data(), static_cast<int>(this->other_team_str().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VoteStart.other_team_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->other_team_str(), output);
  }

  // optional bool is_yes_no_vote = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_yes_no_vote(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_VoteStart)
}

::google::protobuf::uint8* CCSUsrMsg_VoteStart::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_VoteStart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 team = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->team(), target);
  }

  // optional int32 ent_idx = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ent_idx(), target);
  }

  // optional int32 vote_type = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->vote_type(), target);
  }

  // optional string disp_str = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->disp_str().data(), static_cast<int>(this->disp_str().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VoteStart.disp_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->disp_str(), target);
  }

  // optional string details_str = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->details_str().data(), static_cast<int>(this->details_str().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VoteStart.details_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->details_str(), target);
  }

  // optional string other_team_str = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->other_team_str().data(), static_cast<int>(this->other_team_str().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VoteStart.other_team_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->other_team_str(), target);
  }

  // optional bool is_yes_no_vote = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_yes_no_vote(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_VoteStart)
  return target;
}

size_t CCSUsrMsg_VoteStart::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_VoteStart)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string disp_str = 4;
    if (has_disp_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->disp_str());
    }

    // optional string details_str = 5;
    if (has_details_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->details_str());
    }

    // optional string other_team_str = 6;
    if (has_other_team_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->other_team_str());
    }

    // optional int32 team = 1;
    if (has_team()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->team());
    }

    // optional int32 ent_idx = 2;
    if (has_ent_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ent_idx());
    }

    // optional int32 vote_type = 3;
    if (has_vote_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vote_type());
    }

    // optional bool is_yes_no_vote = 7;
    if (has_is_yes_no_vote()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_VoteStart::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_VoteStart)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_VoteStart* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_VoteStart>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_VoteStart)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_VoteStart)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_VoteStart::MergeFrom(const CCSUsrMsg_VoteStart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_VoteStart)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_disp_str();
      disp_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.disp_str_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_details_str();
      details_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.details_str_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_other_team_str();
      other_team_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other_team_str_);
    }
    if (cached_has_bits & 0x00000008u) {
      team_ = from.team_;
    }
    if (cached_has_bits & 0x00000010u) {
      ent_idx_ = from.ent_idx_;
    }
    if (cached_has_bits & 0x00000020u) {
      vote_type_ = from.vote_type_;
    }
    if (cached_has_bits & 0x00000040u) {
      is_yes_no_vote_ = from.is_yes_no_vote_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_VoteStart::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_VoteStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_VoteStart::CopyFrom(const CCSUsrMsg_VoteStart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_VoteStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_VoteStart::IsInitialized() const {
  return true;
}

void CCSUsrMsg_VoteStart::Swap(CCSUsrMsg_VoteStart* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_VoteStart::InternalSwap(CCSUsrMsg_VoteStart* other) {
  using std::swap;
  disp_str_.Swap(&other->disp_str_);
  details_str_.Swap(&other->details_str_);
  other_team_str_.Swap(&other->other_team_str_);
  swap(team_, other->team_);
  swap(ent_idx_, other->ent_idx_);
  swap(vote_type_, other->vote_type_);
  swap(is_yes_no_vote_, other->is_yes_no_vote_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_VoteStart::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_VotePass::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_VotePass::kTeamFieldNumber;
const int CCSUsrMsg_VotePass::kVoteTypeFieldNumber;
const int CCSUsrMsg_VotePass::kDispStrFieldNumber;
const int CCSUsrMsg_VotePass::kDetailsStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_VotePass::CCSUsrMsg_VotePass()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_VotePass();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_VotePass)
}
CCSUsrMsg_VotePass::CCSUsrMsg_VotePass(const CCSUsrMsg_VotePass& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  disp_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_disp_str()) {
    disp_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.disp_str_);
  }
  details_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_details_str()) {
    details_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.details_str_);
  }
  ::memcpy(&team_, &from.team_,
    static_cast<size_t>(reinterpret_cast<char*>(&vote_type_) -
    reinterpret_cast<char*>(&team_)) + sizeof(vote_type_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_VotePass)
}

void CCSUsrMsg_VotePass::SharedCtor() {
  _cached_size_ = 0;
  disp_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  details_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&team_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vote_type_) -
      reinterpret_cast<char*>(&team_)) + sizeof(vote_type_));
}

CCSUsrMsg_VotePass::~CCSUsrMsg_VotePass() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_VotePass)
  SharedDtor();
}

void CCSUsrMsg_VotePass::SharedDtor() {
  disp_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  details_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_VotePass::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_VotePass::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_VotePass& CCSUsrMsg_VotePass::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_VotePass();
  return *internal_default_instance();
}

CCSUsrMsg_VotePass* CCSUsrMsg_VotePass::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_VotePass* n = new CCSUsrMsg_VotePass;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_VotePass::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_VotePass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!disp_str_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*disp_str_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!details_str_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*details_str_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&team_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vote_type_) -
        reinterpret_cast<char*>(&team_)) + sizeof(vote_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_VotePass::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_VotePass)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 team = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_team();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &team_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vote_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_vote_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vote_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string disp_str = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_disp_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->disp_str().data(), static_cast<int>(this->disp_str().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_VotePass.disp_str");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string details_str = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_details_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->details_str().data(), static_cast<int>(this->details_str().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_VotePass.details_str");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_VotePass)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_VotePass)
  return false;
#undef DO_
}

void CCSUsrMsg_VotePass::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_VotePass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 team = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->team(), output);
  }

  // optional int32 vote_type = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vote_type(), output);
  }

  // optional string disp_str = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->disp_str().data(), static_cast<int>(this->disp_str().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VotePass.disp_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->disp_str(), output);
  }

  // optional string details_str = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->details_str().data(), static_cast<int>(this->details_str().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VotePass.details_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->details_str(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_VotePass)
}

::google::protobuf::uint8* CCSUsrMsg_VotePass::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_VotePass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 team = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->team(), target);
  }

  // optional int32 vote_type = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vote_type(), target);
  }

  // optional string disp_str = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->disp_str().data(), static_cast<int>(this->disp_str().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VotePass.disp_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->disp_str(), target);
  }

  // optional string details_str = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->details_str().data(), static_cast<int>(this->details_str().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VotePass.details_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->details_str(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_VotePass)
  return target;
}

size_t CCSUsrMsg_VotePass::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_VotePass)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string disp_str = 3;
    if (has_disp_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->disp_str());
    }

    // optional string details_str = 4;
    if (has_details_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->details_str());
    }

    // optional int32 team = 1;
    if (has_team()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->team());
    }

    // optional int32 vote_type = 2;
    if (has_vote_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vote_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_VotePass::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_VotePass)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_VotePass* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_VotePass>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_VotePass)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_VotePass)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_VotePass::MergeFrom(const CCSUsrMsg_VotePass& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_VotePass)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_disp_str();
      disp_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.disp_str_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_details_str();
      details_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.details_str_);
    }
    if (cached_has_bits & 0x00000004u) {
      team_ = from.team_;
    }
    if (cached_has_bits & 0x00000008u) {
      vote_type_ = from.vote_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_VotePass::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_VotePass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_VotePass::CopyFrom(const CCSUsrMsg_VotePass& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_VotePass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_VotePass::IsInitialized() const {
  return true;
}

void CCSUsrMsg_VotePass::Swap(CCSUsrMsg_VotePass* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_VotePass::InternalSwap(CCSUsrMsg_VotePass* other) {
  using std::swap;
  disp_str_.Swap(&other->disp_str_);
  details_str_.Swap(&other->details_str_);
  swap(team_, other->team_);
  swap(vote_type_, other->vote_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_VotePass::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_VoteFailed::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_VoteFailed::kTeamFieldNumber;
const int CCSUsrMsg_VoteFailed::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_VoteFailed::CCSUsrMsg_VoteFailed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_VoteFailed();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_VoteFailed)
}
CCSUsrMsg_VoteFailed::CCSUsrMsg_VoteFailed(const CCSUsrMsg_VoteFailed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&team_, &from.team_,
    static_cast<size_t>(reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&team_)) + sizeof(reason_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_VoteFailed)
}

void CCSUsrMsg_VoteFailed::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&team_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&team_)) + sizeof(reason_));
}

CCSUsrMsg_VoteFailed::~CCSUsrMsg_VoteFailed() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_VoteFailed)
  SharedDtor();
}

void CCSUsrMsg_VoteFailed::SharedDtor() {
}

void CCSUsrMsg_VoteFailed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_VoteFailed::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_VoteFailed& CCSUsrMsg_VoteFailed::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_VoteFailed();
  return *internal_default_instance();
}

CCSUsrMsg_VoteFailed* CCSUsrMsg_VoteFailed::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_VoteFailed* n = new CCSUsrMsg_VoteFailed;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_VoteFailed::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_VoteFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&team_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&reason_) -
        reinterpret_cast<char*>(&team_)) + sizeof(reason_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_VoteFailed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_VoteFailed)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 team = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_team();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &team_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_reason();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_VoteFailed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_VoteFailed)
  return false;
#undef DO_
}

void CCSUsrMsg_VoteFailed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_VoteFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 team = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->team(), output);
  }

  // optional int32 reason = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->reason(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_VoteFailed)
}

::google::protobuf::uint8* CCSUsrMsg_VoteFailed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_VoteFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 team = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->team(), target);
  }

  // optional int32 reason = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->reason(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_VoteFailed)
  return target;
}

size_t CCSUsrMsg_VoteFailed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_VoteFailed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 team = 1;
    if (has_team()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->team());
    }

    // optional int32 reason = 2;
    if (has_reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reason());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_VoteFailed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_VoteFailed)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_VoteFailed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_VoteFailed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_VoteFailed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_VoteFailed)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_VoteFailed::MergeFrom(const CCSUsrMsg_VoteFailed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_VoteFailed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      team_ = from.team_;
    }
    if (cached_has_bits & 0x00000002u) {
      reason_ = from.reason_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_VoteFailed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_VoteFailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_VoteFailed::CopyFrom(const CCSUsrMsg_VoteFailed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_VoteFailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_VoteFailed::IsInitialized() const {
  return true;
}

void CCSUsrMsg_VoteFailed::Swap(CCSUsrMsg_VoteFailed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_VoteFailed::InternalSwap(CCSUsrMsg_VoteFailed* other) {
  using std::swap;
  swap(team_, other->team_);
  swap(reason_, other->reason_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_VoteFailed::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_VoteSetup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_VoteSetup::kPotentialIssuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_VoteSetup::CCSUsrMsg_VoteSetup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_VoteSetup();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_VoteSetup)
}
CCSUsrMsg_VoteSetup::CCSUsrMsg_VoteSetup(const CCSUsrMsg_VoteSetup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      potential_issues_(from.potential_issues_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_VoteSetup)
}

void CCSUsrMsg_VoteSetup::SharedCtor() {
  _cached_size_ = 0;
}

CCSUsrMsg_VoteSetup::~CCSUsrMsg_VoteSetup() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_VoteSetup)
  SharedDtor();
}

void CCSUsrMsg_VoteSetup::SharedDtor() {
}

void CCSUsrMsg_VoteSetup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_VoteSetup::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_VoteSetup& CCSUsrMsg_VoteSetup::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_VoteSetup();
  return *internal_default_instance();
}

CCSUsrMsg_VoteSetup* CCSUsrMsg_VoteSetup::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_VoteSetup* n = new CCSUsrMsg_VoteSetup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_VoteSetup::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_VoteSetup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  potential_issues_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_VoteSetup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_VoteSetup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string potential_issues = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_potential_issues()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->potential_issues(this->potential_issues_size() - 1).data(),
            static_cast<int>(this->potential_issues(this->potential_issues_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_VoteSetup.potential_issues");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_VoteSetup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_VoteSetup)
  return false;
#undef DO_
}

void CCSUsrMsg_VoteSetup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_VoteSetup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string potential_issues = 1;
  for (int i = 0, n = this->potential_issues_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->potential_issues(i).data(), static_cast<int>(this->potential_issues(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VoteSetup.potential_issues");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->potential_issues(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_VoteSetup)
}

::google::protobuf::uint8* CCSUsrMsg_VoteSetup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_VoteSetup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string potential_issues = 1;
  for (int i = 0, n = this->potential_issues_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->potential_issues(i).data(), static_cast<int>(this->potential_issues(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_VoteSetup.potential_issues");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->potential_issues(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_VoteSetup)
  return target;
}

size_t CCSUsrMsg_VoteSetup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_VoteSetup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string potential_issues = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->potential_issues_size());
  for (int i = 0, n = this->potential_issues_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->potential_issues(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_VoteSetup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_VoteSetup)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_VoteSetup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_VoteSetup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_VoteSetup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_VoteSetup)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_VoteSetup::MergeFrom(const CCSUsrMsg_VoteSetup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_VoteSetup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  potential_issues_.MergeFrom(from.potential_issues_);
}

void CCSUsrMsg_VoteSetup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_VoteSetup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_VoteSetup::CopyFrom(const CCSUsrMsg_VoteSetup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_VoteSetup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_VoteSetup::IsInitialized() const {
  return true;
}

void CCSUsrMsg_VoteSetup::Swap(CCSUsrMsg_VoteSetup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_VoteSetup::InternalSwap(CCSUsrMsg_VoteSetup* other) {
  using std::swap;
  potential_issues_.InternalSwap(&other->potential_issues_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_VoteSetup::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_SendLastKillerDamageToClient::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_SendLastKillerDamageToClient::kNumHitsGivenFieldNumber;
const int CCSUsrMsg_SendLastKillerDamageToClient::kDamageGivenFieldNumber;
const int CCSUsrMsg_SendLastKillerDamageToClient::kNumHitsTakenFieldNumber;
const int CCSUsrMsg_SendLastKillerDamageToClient::kDamageTakenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_SendLastKillerDamageToClient::CCSUsrMsg_SendLastKillerDamageToClient()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_SendLastKillerDamageToClient();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_SendLastKillerDamageToClient)
}
CCSUsrMsg_SendLastKillerDamageToClient::CCSUsrMsg_SendLastKillerDamageToClient(const CCSUsrMsg_SendLastKillerDamageToClient& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&num_hits_given_, &from.num_hits_given_,
    static_cast<size_t>(reinterpret_cast<char*>(&damage_taken_) -
    reinterpret_cast<char*>(&num_hits_given_)) + sizeof(damage_taken_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_SendLastKillerDamageToClient)
}

void CCSUsrMsg_SendLastKillerDamageToClient::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&num_hits_given_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&damage_taken_) -
      reinterpret_cast<char*>(&num_hits_given_)) + sizeof(damage_taken_));
}

CCSUsrMsg_SendLastKillerDamageToClient::~CCSUsrMsg_SendLastKillerDamageToClient() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_SendLastKillerDamageToClient)
  SharedDtor();
}

void CCSUsrMsg_SendLastKillerDamageToClient::SharedDtor() {
}

void CCSUsrMsg_SendLastKillerDamageToClient::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_SendLastKillerDamageToClient::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_SendLastKillerDamageToClient& CCSUsrMsg_SendLastKillerDamageToClient::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_SendLastKillerDamageToClient();
  return *internal_default_instance();
}

CCSUsrMsg_SendLastKillerDamageToClient* CCSUsrMsg_SendLastKillerDamageToClient::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_SendLastKillerDamageToClient* n = new CCSUsrMsg_SendLastKillerDamageToClient;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_SendLastKillerDamageToClient::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_SendLastKillerDamageToClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&num_hits_given_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&damage_taken_) -
        reinterpret_cast<char*>(&num_hits_given_)) + sizeof(damage_taken_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_SendLastKillerDamageToClient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_SendLastKillerDamageToClient)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 num_hits_given = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_num_hits_given();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_hits_given_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 damage_given = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_damage_given();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &damage_given_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_hits_taken = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_num_hits_taken();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_hits_taken_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 damage_taken = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_damage_taken();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &damage_taken_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_SendLastKillerDamageToClient)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_SendLastKillerDamageToClient)
  return false;
#undef DO_
}

void CCSUsrMsg_SendLastKillerDamageToClient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_SendLastKillerDamageToClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 num_hits_given = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_hits_given(), output);
  }

  // optional int32 damage_given = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->damage_given(), output);
  }

  // optional int32 num_hits_taken = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->num_hits_taken(), output);
  }

  // optional int32 damage_taken = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->damage_taken(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_SendLastKillerDamageToClient)
}

::google::protobuf::uint8* CCSUsrMsg_SendLastKillerDamageToClient::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_SendLastKillerDamageToClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 num_hits_given = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_hits_given(), target);
  }

  // optional int32 damage_given = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->damage_given(), target);
  }

  // optional int32 num_hits_taken = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->num_hits_taken(), target);
  }

  // optional int32 damage_taken = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->damage_taken(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_SendLastKillerDamageToClient)
  return target;
}

size_t CCSUsrMsg_SendLastKillerDamageToClient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_SendLastKillerDamageToClient)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 num_hits_given = 1;
    if (has_num_hits_given()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_hits_given());
    }

    // optional int32 damage_given = 2;
    if (has_damage_given()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->damage_given());
    }

    // optional int32 num_hits_taken = 3;
    if (has_num_hits_taken()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_hits_taken());
    }

    // optional int32 damage_taken = 4;
    if (has_damage_taken()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->damage_taken());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_SendLastKillerDamageToClient::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_SendLastKillerDamageToClient)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_SendLastKillerDamageToClient* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_SendLastKillerDamageToClient>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_SendLastKillerDamageToClient)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_SendLastKillerDamageToClient)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_SendLastKillerDamageToClient::MergeFrom(const CCSUsrMsg_SendLastKillerDamageToClient& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_SendLastKillerDamageToClient)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      num_hits_given_ = from.num_hits_given_;
    }
    if (cached_has_bits & 0x00000002u) {
      damage_given_ = from.damage_given_;
    }
    if (cached_has_bits & 0x00000004u) {
      num_hits_taken_ = from.num_hits_taken_;
    }
    if (cached_has_bits & 0x00000008u) {
      damage_taken_ = from.damage_taken_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_SendLastKillerDamageToClient::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_SendLastKillerDamageToClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_SendLastKillerDamageToClient::CopyFrom(const CCSUsrMsg_SendLastKillerDamageToClient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_SendLastKillerDamageToClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_SendLastKillerDamageToClient::IsInitialized() const {
  return true;
}

void CCSUsrMsg_SendLastKillerDamageToClient::Swap(CCSUsrMsg_SendLastKillerDamageToClient* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_SendLastKillerDamageToClient::InternalSwap(CCSUsrMsg_SendLastKillerDamageToClient* other) {
  using std::swap;
  swap(num_hits_given_, other->num_hits_given_);
  swap(damage_given_, other->damage_given_);
  swap(num_hits_taken_, other->num_hits_taken_);
  swap(damage_taken_, other->damage_taken_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_SendLastKillerDamageToClient::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_ServerRankUpdate_RankUpdate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_ServerRankUpdate_RankUpdate::kAccountIdFieldNumber;
const int CCSUsrMsg_ServerRankUpdate_RankUpdate::kRankOldFieldNumber;
const int CCSUsrMsg_ServerRankUpdate_RankUpdate::kRankNewFieldNumber;
const int CCSUsrMsg_ServerRankUpdate_RankUpdate::kNumWinsFieldNumber;
const int CCSUsrMsg_ServerRankUpdate_RankUpdate::kRankChangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_ServerRankUpdate_RankUpdate::CCSUsrMsg_ServerRankUpdate_RankUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ServerRankUpdate_RankUpdate();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_ServerRankUpdate.RankUpdate)
}
CCSUsrMsg_ServerRankUpdate_RankUpdate::CCSUsrMsg_ServerRankUpdate_RankUpdate(const CCSUsrMsg_ServerRankUpdate_RankUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&rank_change_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(rank_change_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_ServerRankUpdate.RankUpdate)
}

void CCSUsrMsg_ServerRankUpdate_RankUpdate::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rank_change_) -
      reinterpret_cast<char*>(&account_id_)) + sizeof(rank_change_));
}

CCSUsrMsg_ServerRankUpdate_RankUpdate::~CCSUsrMsg_ServerRankUpdate_RankUpdate() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_ServerRankUpdate.RankUpdate)
  SharedDtor();
}

void CCSUsrMsg_ServerRankUpdate_RankUpdate::SharedDtor() {
}

void CCSUsrMsg_ServerRankUpdate_RankUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_ServerRankUpdate_RankUpdate::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_ServerRankUpdate_RankUpdate& CCSUsrMsg_ServerRankUpdate_RankUpdate::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ServerRankUpdate_RankUpdate();
  return *internal_default_instance();
}

CCSUsrMsg_ServerRankUpdate_RankUpdate* CCSUsrMsg_ServerRankUpdate_RankUpdate::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_ServerRankUpdate_RankUpdate* n = new CCSUsrMsg_ServerRankUpdate_RankUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_ServerRankUpdate_RankUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_ServerRankUpdate.RankUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rank_change_) -
        reinterpret_cast<char*>(&account_id_)) + sizeof(rank_change_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_ServerRankUpdate_RankUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_ServerRankUpdate.RankUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rank_old = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_rank_old();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_old_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rank_new = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_rank_new();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_new_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_wins = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_num_wins();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_wins_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float rank_change = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_rank_change();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rank_change_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_ServerRankUpdate.RankUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_ServerRankUpdate.RankUpdate)
  return false;
#undef DO_
}

void CCSUsrMsg_ServerRankUpdate_RankUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_ServerRankUpdate.RankUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->account_id(), output);
  }

  // optional int32 rank_old = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rank_old(), output);
  }

  // optional int32 rank_new = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->rank_new(), output);
  }

  // optional int32 num_wins = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->num_wins(), output);
  }

  // optional float rank_change = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->rank_change(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_ServerRankUpdate.RankUpdate)
}

::google::protobuf::uint8* CCSUsrMsg_ServerRankUpdate_RankUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_ServerRankUpdate.RankUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->account_id(), target);
  }

  // optional int32 rank_old = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rank_old(), target);
  }

  // optional int32 rank_new = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->rank_new(), target);
  }

  // optional int32 num_wins = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->num_wins(), target);
  }

  // optional float rank_change = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->rank_change(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_ServerRankUpdate.RankUpdate)
  return target;
}

size_t CCSUsrMsg_ServerRankUpdate_RankUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_ServerRankUpdate.RankUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->account_id());
    }

    // optional int32 rank_old = 2;
    if (has_rank_old()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_old());
    }

    // optional int32 rank_new = 3;
    if (has_rank_new()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_new());
    }

    // optional int32 num_wins = 4;
    if (has_num_wins()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_wins());
    }

    // optional float rank_change = 5;
    if (has_rank_change()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_ServerRankUpdate_RankUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_ServerRankUpdate.RankUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_ServerRankUpdate_RankUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_ServerRankUpdate_RankUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_ServerRankUpdate.RankUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_ServerRankUpdate.RankUpdate)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_ServerRankUpdate_RankUpdate::MergeFrom(const CCSUsrMsg_ServerRankUpdate_RankUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_ServerRankUpdate.RankUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      rank_old_ = from.rank_old_;
    }
    if (cached_has_bits & 0x00000004u) {
      rank_new_ = from.rank_new_;
    }
    if (cached_has_bits & 0x00000008u) {
      num_wins_ = from.num_wins_;
    }
    if (cached_has_bits & 0x00000010u) {
      rank_change_ = from.rank_change_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_ServerRankUpdate_RankUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_ServerRankUpdate.RankUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_ServerRankUpdate_RankUpdate::CopyFrom(const CCSUsrMsg_ServerRankUpdate_RankUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_ServerRankUpdate.RankUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_ServerRankUpdate_RankUpdate::IsInitialized() const {
  return true;
}

void CCSUsrMsg_ServerRankUpdate_RankUpdate::Swap(CCSUsrMsg_ServerRankUpdate_RankUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_ServerRankUpdate_RankUpdate::InternalSwap(CCSUsrMsg_ServerRankUpdate_RankUpdate* other) {
  using std::swap;
  swap(account_id_, other->account_id_);
  swap(rank_old_, other->rank_old_);
  swap(rank_new_, other->rank_new_);
  swap(num_wins_, other->num_wins_);
  swap(rank_change_, other->rank_change_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_ServerRankUpdate_RankUpdate::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_ServerRankUpdate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_ServerRankUpdate::kRankUpdateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_ServerRankUpdate::CCSUsrMsg_ServerRankUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ServerRankUpdate();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_ServerRankUpdate)
}
CCSUsrMsg_ServerRankUpdate::CCSUsrMsg_ServerRankUpdate(const CCSUsrMsg_ServerRankUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      rank_update_(from.rank_update_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_ServerRankUpdate)
}

void CCSUsrMsg_ServerRankUpdate::SharedCtor() {
  _cached_size_ = 0;
}

CCSUsrMsg_ServerRankUpdate::~CCSUsrMsg_ServerRankUpdate() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_ServerRankUpdate)
  SharedDtor();
}

void CCSUsrMsg_ServerRankUpdate::SharedDtor() {
}

void CCSUsrMsg_ServerRankUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_ServerRankUpdate::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_ServerRankUpdate& CCSUsrMsg_ServerRankUpdate::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ServerRankUpdate();
  return *internal_default_instance();
}

CCSUsrMsg_ServerRankUpdate* CCSUsrMsg_ServerRankUpdate::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_ServerRankUpdate* n = new CCSUsrMsg_ServerRankUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_ServerRankUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_ServerRankUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rank_update_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_ServerRankUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_ServerRankUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CCSUsrMsg_ServerRankUpdate.RankUpdate rank_update = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_rank_update()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_ServerRankUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_ServerRankUpdate)
  return false;
#undef DO_
}

void CCSUsrMsg_ServerRankUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_ServerRankUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CCSUsrMsg_ServerRankUpdate.RankUpdate rank_update = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rank_update_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rank_update(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_ServerRankUpdate)
}

::google::protobuf::uint8* CCSUsrMsg_ServerRankUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_ServerRankUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CCSUsrMsg_ServerRankUpdate.RankUpdate rank_update = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rank_update_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->rank_update(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_ServerRankUpdate)
  return target;
}

size_t CCSUsrMsg_ServerRankUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_ServerRankUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CCSUsrMsg_ServerRankUpdate.RankUpdate rank_update = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->rank_update_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rank_update(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_ServerRankUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_ServerRankUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_ServerRankUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_ServerRankUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_ServerRankUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_ServerRankUpdate)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_ServerRankUpdate::MergeFrom(const CCSUsrMsg_ServerRankUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_ServerRankUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rank_update_.MergeFrom(from.rank_update_);
}

void CCSUsrMsg_ServerRankUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_ServerRankUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_ServerRankUpdate::CopyFrom(const CCSUsrMsg_ServerRankUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_ServerRankUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_ServerRankUpdate::IsInitialized() const {
  return true;
}

void CCSUsrMsg_ServerRankUpdate::Swap(CCSUsrMsg_ServerRankUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_ServerRankUpdate::InternalSwap(CCSUsrMsg_ServerRankUpdate* other) {
  using std::swap;
  rank_update_.InternalSwap(&other->rank_update_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_ServerRankUpdate::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_XpUpdate::InitAsDefaultInstance() {
  ::_CCSUsrMsg_XpUpdate_default_instance_._instance.get_mutable()->data_ = const_cast< ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded*>(
      ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::internal_default_instance());
}
void CCSUsrMsg_XpUpdate::clear_data() {
  if (data_ != NULL) data_->Clear();
  clear_has_data();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_XpUpdate::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_XpUpdate::CCSUsrMsg_XpUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_XpUpdate();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_XpUpdate)
}
CCSUsrMsg_XpUpdate::CCSUsrMsg_XpUpdate(const CCSUsrMsg_XpUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_XpUpdate)
}

void CCSUsrMsg_XpUpdate::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
}

CCSUsrMsg_XpUpdate::~CCSUsrMsg_XpUpdate() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_XpUpdate)
  SharedDtor();
}

void CCSUsrMsg_XpUpdate::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void CCSUsrMsg_XpUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_XpUpdate::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_XpUpdate& CCSUsrMsg_XpUpdate::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_XpUpdate();
  return *internal_default_instance();
}

CCSUsrMsg_XpUpdate* CCSUsrMsg_XpUpdate::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_XpUpdate* n = new CCSUsrMsg_XpUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_XpUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_XpUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(data_ != NULL);
    data_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_XpUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_XpUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_XpUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_XpUpdate)
  return false;
#undef DO_
}

void CCSUsrMsg_XpUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_XpUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded data = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_XpUpdate)
}

::google::protobuf::uint8* CCSUsrMsg_XpUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_XpUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->data_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_XpUpdate)
  return target;
}

size_t CCSUsrMsg_XpUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_XpUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_XpUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_XpUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_XpUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_XpUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_XpUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_XpUpdate)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_XpUpdate::MergeFrom(const CCSUsrMsg_XpUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_XpUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    mutable_data()->::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::MergeFrom(from.data());
  }
}

void CCSUsrMsg_XpUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_XpUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_XpUpdate::CopyFrom(const CCSUsrMsg_XpUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_XpUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_XpUpdate::IsInitialized() const {
  return true;
}

void CCSUsrMsg_XpUpdate::Swap(CCSUsrMsg_XpUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_XpUpdate::InternalSwap(CCSUsrMsg_XpUpdate* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_XpUpdate::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_ItemPickup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_ItemPickup::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_ItemPickup::CCSUsrMsg_ItemPickup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ItemPickup();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_ItemPickup)
}
CCSUsrMsg_ItemPickup::CCSUsrMsg_ItemPickup(const CCSUsrMsg_ItemPickup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  item_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_item()) {
    item_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_);
  }
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_ItemPickup)
}

void CCSUsrMsg_ItemPickup::SharedCtor() {
  _cached_size_ = 0;
  item_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CCSUsrMsg_ItemPickup::~CCSUsrMsg_ItemPickup() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_ItemPickup)
  SharedDtor();
}

void CCSUsrMsg_ItemPickup::SharedDtor() {
  item_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_ItemPickup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_ItemPickup::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_ItemPickup& CCSUsrMsg_ItemPickup::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ItemPickup();
  return *internal_default_instance();
}

CCSUsrMsg_ItemPickup* CCSUsrMsg_ItemPickup::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_ItemPickup* n = new CCSUsrMsg_ItemPickup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_ItemPickup::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_ItemPickup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!item_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*item_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_ItemPickup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_ItemPickup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item().data(), static_cast<int>(this->item().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_ItemPickup.item");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_ItemPickup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_ItemPickup)
  return false;
#undef DO_
}

void CCSUsrMsg_ItemPickup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_ItemPickup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string item = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item().data(), static_cast<int>(this->item().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_ItemPickup.item");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->item(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_ItemPickup)
}

::google::protobuf::uint8* CCSUsrMsg_ItemPickup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_ItemPickup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string item = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item().data(), static_cast<int>(this->item().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_ItemPickup.item");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->item(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_ItemPickup)
  return target;
}

size_t CCSUsrMsg_ItemPickup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_ItemPickup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string item = 1;
  if (has_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->item());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_ItemPickup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_ItemPickup)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_ItemPickup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_ItemPickup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_ItemPickup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_ItemPickup)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_ItemPickup::MergeFrom(const CCSUsrMsg_ItemPickup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_ItemPickup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item()) {
    set_has_item();
    item_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_);
  }
}

void CCSUsrMsg_ItemPickup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_ItemPickup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_ItemPickup::CopyFrom(const CCSUsrMsg_ItemPickup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_ItemPickup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_ItemPickup::IsInitialized() const {
  return true;
}

void CCSUsrMsg_ItemPickup::Swap(CCSUsrMsg_ItemPickup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_ItemPickup::InternalSwap(CCSUsrMsg_ItemPickup* other) {
  using std::swap;
  item_.Swap(&other->item_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_ItemPickup::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_ShowMenu::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_ShowMenu::kBitsValidSlotsFieldNumber;
const int CCSUsrMsg_ShowMenu::kDisplayTimeFieldNumber;
const int CCSUsrMsg_ShowMenu::kMenuStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_ShowMenu::CCSUsrMsg_ShowMenu()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ShowMenu();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_ShowMenu)
}
CCSUsrMsg_ShowMenu::CCSUsrMsg_ShowMenu(const CCSUsrMsg_ShowMenu& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  menu_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_menu_string()) {
    menu_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.menu_string_);
  }
  ::memcpy(&bits_valid_slots_, &from.bits_valid_slots_,
    static_cast<size_t>(reinterpret_cast<char*>(&display_time_) -
    reinterpret_cast<char*>(&bits_valid_slots_)) + sizeof(display_time_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_ShowMenu)
}

void CCSUsrMsg_ShowMenu::SharedCtor() {
  _cached_size_ = 0;
  menu_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bits_valid_slots_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&display_time_) -
      reinterpret_cast<char*>(&bits_valid_slots_)) + sizeof(display_time_));
}

CCSUsrMsg_ShowMenu::~CCSUsrMsg_ShowMenu() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_ShowMenu)
  SharedDtor();
}

void CCSUsrMsg_ShowMenu::SharedDtor() {
  menu_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_ShowMenu::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_ShowMenu::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_ShowMenu& CCSUsrMsg_ShowMenu::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ShowMenu();
  return *internal_default_instance();
}

CCSUsrMsg_ShowMenu* CCSUsrMsg_ShowMenu::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_ShowMenu* n = new CCSUsrMsg_ShowMenu;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_ShowMenu::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_ShowMenu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!menu_string_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*menu_string_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&bits_valid_slots_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&display_time_) -
        reinterpret_cast<char*>(&bits_valid_slots_)) + sizeof(display_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_ShowMenu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_ShowMenu)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 bits_valid_slots = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bits_valid_slots();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bits_valid_slots_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 display_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_display_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &display_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string menu_string = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_menu_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->menu_string().data(), static_cast<int>(this->menu_string().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_ShowMenu.menu_string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_ShowMenu)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_ShowMenu)
  return false;
#undef DO_
}

void CCSUsrMsg_ShowMenu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_ShowMenu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 bits_valid_slots = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bits_valid_slots(), output);
  }

  // optional int32 display_time = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->display_time(), output);
  }

  // optional string menu_string = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->menu_string().data(), static_cast<int>(this->menu_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_ShowMenu.menu_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->menu_string(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_ShowMenu)
}

::google::protobuf::uint8* CCSUsrMsg_ShowMenu::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_ShowMenu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 bits_valid_slots = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bits_valid_slots(), target);
  }

  // optional int32 display_time = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->display_time(), target);
  }

  // optional string menu_string = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->menu_string().data(), static_cast<int>(this->menu_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_ShowMenu.menu_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->menu_string(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_ShowMenu)
  return target;
}

size_t CCSUsrMsg_ShowMenu::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_ShowMenu)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string menu_string = 3;
    if (has_menu_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->menu_string());
    }

    // optional int32 bits_valid_slots = 1;
    if (has_bits_valid_slots()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bits_valid_slots());
    }

    // optional int32 display_time = 2;
    if (has_display_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->display_time());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_ShowMenu::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_ShowMenu)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_ShowMenu* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_ShowMenu>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_ShowMenu)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_ShowMenu)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_ShowMenu::MergeFrom(const CCSUsrMsg_ShowMenu& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_ShowMenu)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_menu_string();
      menu_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.menu_string_);
    }
    if (cached_has_bits & 0x00000002u) {
      bits_valid_slots_ = from.bits_valid_slots_;
    }
    if (cached_has_bits & 0x00000004u) {
      display_time_ = from.display_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_ShowMenu::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_ShowMenu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_ShowMenu::CopyFrom(const CCSUsrMsg_ShowMenu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_ShowMenu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_ShowMenu::IsInitialized() const {
  return true;
}

void CCSUsrMsg_ShowMenu::Swap(CCSUsrMsg_ShowMenu* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_ShowMenu::InternalSwap(CCSUsrMsg_ShowMenu* other) {
  using std::swap;
  menu_string_.Swap(&other->menu_string_);
  swap(bits_valid_slots_, other->bits_valid_slots_);
  swap(display_time_, other->display_time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_ShowMenu::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_BarTime::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_BarTime::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_BarTime::CCSUsrMsg_BarTime()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_BarTime();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_BarTime)
}
CCSUsrMsg_BarTime::CCSUsrMsg_BarTime(const CCSUsrMsg_BarTime& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_time()) {
    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_BarTime)
}

void CCSUsrMsg_BarTime::SharedCtor() {
  _cached_size_ = 0;
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CCSUsrMsg_BarTime::~CCSUsrMsg_BarTime() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_BarTime)
  SharedDtor();
}

void CCSUsrMsg_BarTime::SharedDtor() {
  time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_BarTime::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_BarTime::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_BarTime& CCSUsrMsg_BarTime::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_BarTime();
  return *internal_default_instance();
}

CCSUsrMsg_BarTime* CCSUsrMsg_BarTime::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_BarTime* n = new CCSUsrMsg_BarTime;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_BarTime::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_BarTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!time_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*time_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_BarTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_BarTime)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->time().data(), static_cast<int>(this->time().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_BarTime.time");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_BarTime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_BarTime)
  return false;
#undef DO_
}

void CCSUsrMsg_BarTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_BarTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string time = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), static_cast<int>(this->time().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_BarTime.time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_BarTime)
}

::google::protobuf::uint8* CCSUsrMsg_BarTime::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_BarTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string time = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), static_cast<int>(this->time().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_BarTime.time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_BarTime)
  return target;
}

size_t CCSUsrMsg_BarTime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_BarTime)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string time = 1;
  if (has_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_BarTime::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_BarTime)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_BarTime* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_BarTime>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_BarTime)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_BarTime)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_BarTime::MergeFrom(const CCSUsrMsg_BarTime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_BarTime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_time()) {
    set_has_time();
    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
}

void CCSUsrMsg_BarTime::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_BarTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_BarTime::CopyFrom(const CCSUsrMsg_BarTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_BarTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_BarTime::IsInitialized() const {
  return true;
}

void CCSUsrMsg_BarTime::Swap(CCSUsrMsg_BarTime* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_BarTime::InternalSwap(CCSUsrMsg_BarTime* other) {
  using std::swap;
  time_.Swap(&other->time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_BarTime::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_AmmoDenied::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_AmmoDenied::kAmmoIdxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_AmmoDenied::CCSUsrMsg_AmmoDenied()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_AmmoDenied();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_AmmoDenied)
}
CCSUsrMsg_AmmoDenied::CCSUsrMsg_AmmoDenied(const CCSUsrMsg_AmmoDenied& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ammoidx_ = from.ammoidx_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_AmmoDenied)
}

void CCSUsrMsg_AmmoDenied::SharedCtor() {
  _cached_size_ = 0;
  ammoidx_ = 0;
}

CCSUsrMsg_AmmoDenied::~CCSUsrMsg_AmmoDenied() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_AmmoDenied)
  SharedDtor();
}

void CCSUsrMsg_AmmoDenied::SharedDtor() {
}

void CCSUsrMsg_AmmoDenied::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_AmmoDenied::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_AmmoDenied& CCSUsrMsg_AmmoDenied::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_AmmoDenied();
  return *internal_default_instance();
}

CCSUsrMsg_AmmoDenied* CCSUsrMsg_AmmoDenied::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_AmmoDenied* n = new CCSUsrMsg_AmmoDenied;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_AmmoDenied::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_AmmoDenied)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ammoidx_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_AmmoDenied::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_AmmoDenied)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ammoIdx = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ammoidx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ammoidx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_AmmoDenied)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_AmmoDenied)
  return false;
#undef DO_
}

void CCSUsrMsg_AmmoDenied::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_AmmoDenied)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 ammoIdx = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ammoidx(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_AmmoDenied)
}

::google::protobuf::uint8* CCSUsrMsg_AmmoDenied::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_AmmoDenied)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 ammoIdx = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ammoidx(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_AmmoDenied)
  return target;
}

size_t CCSUsrMsg_AmmoDenied::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_AmmoDenied)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 ammoIdx = 1;
  if (has_ammoidx()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ammoidx());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_AmmoDenied::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_AmmoDenied)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_AmmoDenied* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_AmmoDenied>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_AmmoDenied)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_AmmoDenied)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_AmmoDenied::MergeFrom(const CCSUsrMsg_AmmoDenied& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_AmmoDenied)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ammoidx()) {
    set_ammoidx(from.ammoidx());
  }
}

void CCSUsrMsg_AmmoDenied::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_AmmoDenied)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_AmmoDenied::CopyFrom(const CCSUsrMsg_AmmoDenied& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_AmmoDenied)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_AmmoDenied::IsInitialized() const {
  return true;
}

void CCSUsrMsg_AmmoDenied::Swap(CCSUsrMsg_AmmoDenied* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_AmmoDenied::InternalSwap(CCSUsrMsg_AmmoDenied* other) {
  using std::swap;
  swap(ammoidx_, other->ammoidx_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_AmmoDenied::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_MarkAchievement::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_MarkAchievement::kAchievementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_MarkAchievement::CCSUsrMsg_MarkAchievement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_MarkAchievement();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_MarkAchievement)
}
CCSUsrMsg_MarkAchievement::CCSUsrMsg_MarkAchievement(const CCSUsrMsg_MarkAchievement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  achievement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_achievement()) {
    achievement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.achievement_);
  }
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_MarkAchievement)
}

void CCSUsrMsg_MarkAchievement::SharedCtor() {
  _cached_size_ = 0;
  achievement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CCSUsrMsg_MarkAchievement::~CCSUsrMsg_MarkAchievement() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_MarkAchievement)
  SharedDtor();
}

void CCSUsrMsg_MarkAchievement::SharedDtor() {
  achievement_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_MarkAchievement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_MarkAchievement::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_MarkAchievement& CCSUsrMsg_MarkAchievement::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_MarkAchievement();
  return *internal_default_instance();
}

CCSUsrMsg_MarkAchievement* CCSUsrMsg_MarkAchievement::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_MarkAchievement* n = new CCSUsrMsg_MarkAchievement;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_MarkAchievement::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_MarkAchievement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!achievement_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*achievement_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_MarkAchievement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_MarkAchievement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string achievement = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_achievement()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->achievement().data(), static_cast<int>(this->achievement().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_MarkAchievement.achievement");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_MarkAchievement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_MarkAchievement)
  return false;
#undef DO_
}

void CCSUsrMsg_MarkAchievement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_MarkAchievement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string achievement = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->achievement().data(), static_cast<int>(this->achievement().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_MarkAchievement.achievement");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->achievement(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_MarkAchievement)
}

::google::protobuf::uint8* CCSUsrMsg_MarkAchievement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_MarkAchievement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string achievement = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->achievement().data(), static_cast<int>(this->achievement().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_MarkAchievement.achievement");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->achievement(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_MarkAchievement)
  return target;
}

size_t CCSUsrMsg_MarkAchievement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_MarkAchievement)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string achievement = 1;
  if (has_achievement()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->achievement());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_MarkAchievement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_MarkAchievement)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_MarkAchievement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_MarkAchievement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_MarkAchievement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_MarkAchievement)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_MarkAchievement::MergeFrom(const CCSUsrMsg_MarkAchievement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_MarkAchievement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_achievement()) {
    set_has_achievement();
    achievement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.achievement_);
  }
}

void CCSUsrMsg_MarkAchievement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_MarkAchievement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_MarkAchievement::CopyFrom(const CCSUsrMsg_MarkAchievement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_MarkAchievement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_MarkAchievement::IsInitialized() const {
  return true;
}

void CCSUsrMsg_MarkAchievement::Swap(CCSUsrMsg_MarkAchievement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_MarkAchievement::InternalSwap(CCSUsrMsg_MarkAchievement* other) {
  using std::swap;
  achievement_.Swap(&other->achievement_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_MarkAchievement::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_MatchStatsUpdate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_MatchStatsUpdate::kUpdateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_MatchStatsUpdate::CCSUsrMsg_MatchStatsUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_MatchStatsUpdate();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_MatchStatsUpdate)
}
CCSUsrMsg_MatchStatsUpdate::CCSUsrMsg_MatchStatsUpdate(const CCSUsrMsg_MatchStatsUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  update_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_update()) {
    update_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.update_);
  }
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_MatchStatsUpdate)
}

void CCSUsrMsg_MatchStatsUpdate::SharedCtor() {
  _cached_size_ = 0;
  update_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CCSUsrMsg_MatchStatsUpdate::~CCSUsrMsg_MatchStatsUpdate() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_MatchStatsUpdate)
  SharedDtor();
}

void CCSUsrMsg_MatchStatsUpdate::SharedDtor() {
  update_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_MatchStatsUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_MatchStatsUpdate::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_MatchStatsUpdate& CCSUsrMsg_MatchStatsUpdate::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_MatchStatsUpdate();
  return *internal_default_instance();
}

CCSUsrMsg_MatchStatsUpdate* CCSUsrMsg_MatchStatsUpdate::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_MatchStatsUpdate* n = new CCSUsrMsg_MatchStatsUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_MatchStatsUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_MatchStatsUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!update_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*update_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_MatchStatsUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_MatchStatsUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string update = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_update()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->update().data(), static_cast<int>(this->update().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_MatchStatsUpdate.update");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_MatchStatsUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_MatchStatsUpdate)
  return false;
#undef DO_
}

void CCSUsrMsg_MatchStatsUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_MatchStatsUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string update = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->update().data(), static_cast<int>(this->update().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_MatchStatsUpdate.update");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->update(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_MatchStatsUpdate)
}

::google::protobuf::uint8* CCSUsrMsg_MatchStatsUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_MatchStatsUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string update = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->update().data(), static_cast<int>(this->update().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_MatchStatsUpdate.update");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->update(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_MatchStatsUpdate)
  return target;
}

size_t CCSUsrMsg_MatchStatsUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_MatchStatsUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string update = 1;
  if (has_update()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->update());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_MatchStatsUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_MatchStatsUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_MatchStatsUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_MatchStatsUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_MatchStatsUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_MatchStatsUpdate)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_MatchStatsUpdate::MergeFrom(const CCSUsrMsg_MatchStatsUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_MatchStatsUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_update()) {
    set_has_update();
    update_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.update_);
  }
}

void CCSUsrMsg_MatchStatsUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_MatchStatsUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_MatchStatsUpdate::CopyFrom(const CCSUsrMsg_MatchStatsUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_MatchStatsUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_MatchStatsUpdate::IsInitialized() const {
  return true;
}

void CCSUsrMsg_MatchStatsUpdate::Swap(CCSUsrMsg_MatchStatsUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_MatchStatsUpdate::InternalSwap(CCSUsrMsg_MatchStatsUpdate* other) {
  using std::swap;
  update_.Swap(&other->update_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_MatchStatsUpdate::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_ItemDrop::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_ItemDrop::kItemidFieldNumber;
const int CCSUsrMsg_ItemDrop::kDeathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_ItemDrop::CCSUsrMsg_ItemDrop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ItemDrop();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_ItemDrop)
}
CCSUsrMsg_ItemDrop::CCSUsrMsg_ItemDrop(const CCSUsrMsg_ItemDrop& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&itemid_, &from.itemid_,
    static_cast<size_t>(reinterpret_cast<char*>(&death_) -
    reinterpret_cast<char*>(&itemid_)) + sizeof(death_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_ItemDrop)
}

void CCSUsrMsg_ItemDrop::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&itemid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&death_) -
      reinterpret_cast<char*>(&itemid_)) + sizeof(death_));
}

CCSUsrMsg_ItemDrop::~CCSUsrMsg_ItemDrop() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_ItemDrop)
  SharedDtor();
}

void CCSUsrMsg_ItemDrop::SharedDtor() {
}

void CCSUsrMsg_ItemDrop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_ItemDrop::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_ItemDrop& CCSUsrMsg_ItemDrop::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ItemDrop();
  return *internal_default_instance();
}

CCSUsrMsg_ItemDrop* CCSUsrMsg_ItemDrop::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_ItemDrop* n = new CCSUsrMsg_ItemDrop;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_ItemDrop::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_ItemDrop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&itemid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&death_) -
        reinterpret_cast<char*>(&itemid_)) + sizeof(death_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_ItemDrop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_ItemDrop)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 itemid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool death = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_death();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &death_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_ItemDrop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_ItemDrop)
  return false;
#undef DO_
}

void CCSUsrMsg_ItemDrop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_ItemDrop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 itemid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->itemid(), output);
  }

  // optional bool death = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->death(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_ItemDrop)
}

::google::protobuf::uint8* CCSUsrMsg_ItemDrop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_ItemDrop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 itemid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->itemid(), target);
  }

  // optional bool death = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->death(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_ItemDrop)
  return target;
}

size_t CCSUsrMsg_ItemDrop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_ItemDrop)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 itemid = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->itemid());
    }

    // optional bool death = 2;
    if (has_death()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_ItemDrop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_ItemDrop)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_ItemDrop* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_ItemDrop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_ItemDrop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_ItemDrop)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_ItemDrop::MergeFrom(const CCSUsrMsg_ItemDrop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_ItemDrop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      itemid_ = from.itemid_;
    }
    if (cached_has_bits & 0x00000002u) {
      death_ = from.death_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_ItemDrop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_ItemDrop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_ItemDrop::CopyFrom(const CCSUsrMsg_ItemDrop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_ItemDrop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_ItemDrop::IsInitialized() const {
  return true;
}

void CCSUsrMsg_ItemDrop::Swap(CCSUsrMsg_ItemDrop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_ItemDrop::InternalSwap(CCSUsrMsg_ItemDrop* other) {
  using std::swap;
  swap(itemid_, other->itemid_);
  swap(death_, other->death_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_ItemDrop::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_GlowPropTurnOff::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_GlowPropTurnOff::kEntidxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_GlowPropTurnOff::CCSUsrMsg_GlowPropTurnOff()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_GlowPropTurnOff();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_GlowPropTurnOff)
}
CCSUsrMsg_GlowPropTurnOff::CCSUsrMsg_GlowPropTurnOff(const CCSUsrMsg_GlowPropTurnOff& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entidx_ = from.entidx_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_GlowPropTurnOff)
}

void CCSUsrMsg_GlowPropTurnOff::SharedCtor() {
  _cached_size_ = 0;
  entidx_ = 0;
}

CCSUsrMsg_GlowPropTurnOff::~CCSUsrMsg_GlowPropTurnOff() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_GlowPropTurnOff)
  SharedDtor();
}

void CCSUsrMsg_GlowPropTurnOff::SharedDtor() {
}

void CCSUsrMsg_GlowPropTurnOff::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_GlowPropTurnOff::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_GlowPropTurnOff& CCSUsrMsg_GlowPropTurnOff::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_GlowPropTurnOff();
  return *internal_default_instance();
}

CCSUsrMsg_GlowPropTurnOff* CCSUsrMsg_GlowPropTurnOff::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_GlowPropTurnOff* n = new CCSUsrMsg_GlowPropTurnOff;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_GlowPropTurnOff::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_GlowPropTurnOff)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entidx_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_GlowPropTurnOff::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_GlowPropTurnOff)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 entidx = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_entidx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entidx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_GlowPropTurnOff)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_GlowPropTurnOff)
  return false;
#undef DO_
}

void CCSUsrMsg_GlowPropTurnOff::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_GlowPropTurnOff)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 entidx = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->entidx(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_GlowPropTurnOff)
}

::google::protobuf::uint8* CCSUsrMsg_GlowPropTurnOff::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_GlowPropTurnOff)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 entidx = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->entidx(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_GlowPropTurnOff)
  return target;
}

size_t CCSUsrMsg_GlowPropTurnOff::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_GlowPropTurnOff)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 entidx = 1;
  if (has_entidx()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->entidx());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_GlowPropTurnOff::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_GlowPropTurnOff)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_GlowPropTurnOff* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_GlowPropTurnOff>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_GlowPropTurnOff)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_GlowPropTurnOff)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_GlowPropTurnOff::MergeFrom(const CCSUsrMsg_GlowPropTurnOff& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_GlowPropTurnOff)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_entidx()) {
    set_entidx(from.entidx());
  }
}

void CCSUsrMsg_GlowPropTurnOff::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_GlowPropTurnOff)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_GlowPropTurnOff::CopyFrom(const CCSUsrMsg_GlowPropTurnOff& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_GlowPropTurnOff)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_GlowPropTurnOff::IsInitialized() const {
  return true;
}

void CCSUsrMsg_GlowPropTurnOff::Swap(CCSUsrMsg_GlowPropTurnOff* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_GlowPropTurnOff::InternalSwap(CCSUsrMsg_GlowPropTurnOff* other) {
  using std::swap;
  swap(entidx_, other->entidx_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_GlowPropTurnOff::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_RoundBackupFilenames::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_RoundBackupFilenames::kCountFieldNumber;
const int CCSUsrMsg_RoundBackupFilenames::kIndexFieldNumber;
const int CCSUsrMsg_RoundBackupFilenames::kFilenameFieldNumber;
const int CCSUsrMsg_RoundBackupFilenames::kNicenameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_RoundBackupFilenames::CCSUsrMsg_RoundBackupFilenames()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_RoundBackupFilenames();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_RoundBackupFilenames)
}
CCSUsrMsg_RoundBackupFilenames::CCSUsrMsg_RoundBackupFilenames(const CCSUsrMsg_RoundBackupFilenames& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  nicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nicename()) {
    nicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nicename_);
  }
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&count_)) + sizeof(index_));
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_RoundBackupFilenames)
}

void CCSUsrMsg_RoundBackupFilenames::SharedCtor() {
  _cached_size_ = 0;
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&count_)) + sizeof(index_));
}

CCSUsrMsg_RoundBackupFilenames::~CCSUsrMsg_RoundBackupFilenames() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_RoundBackupFilenames)
  SharedDtor();
}

void CCSUsrMsg_RoundBackupFilenames::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nicename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CCSUsrMsg_RoundBackupFilenames::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_RoundBackupFilenames::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_RoundBackupFilenames& CCSUsrMsg_RoundBackupFilenames::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_RoundBackupFilenames();
  return *internal_default_instance();
}

CCSUsrMsg_RoundBackupFilenames* CCSUsrMsg_RoundBackupFilenames::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_RoundBackupFilenames* n = new CCSUsrMsg_RoundBackupFilenames;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_RoundBackupFilenames::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_RoundBackupFilenames)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!filename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*filename_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!nicename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nicename_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&count_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&index_) -
        reinterpret_cast<char*>(&count_)) + sizeof(index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_RoundBackupFilenames::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_RoundBackupFilenames)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string filename = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_RoundBackupFilenames.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nicename = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nicename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nicename().data(), static_cast<int>(this->nicename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CCSUsrMsg_RoundBackupFilenames.nicename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_RoundBackupFilenames)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_RoundBackupFilenames)
  return false;
#undef DO_
}

void CCSUsrMsg_RoundBackupFilenames::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_RoundBackupFilenames)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 count = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->count(), output);
  }

  // optional int32 index = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->index(), output);
  }

  // optional string filename = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_RoundBackupFilenames.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->filename(), output);
  }

  // optional string nicename = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nicename().data(), static_cast<int>(this->nicename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_RoundBackupFilenames.nicename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->nicename(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_RoundBackupFilenames)
}

::google::protobuf::uint8* CCSUsrMsg_RoundBackupFilenames::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_RoundBackupFilenames)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 count = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->count(), target);
  }

  // optional int32 index = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->index(), target);
  }

  // optional string filename = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_RoundBackupFilenames.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->filename(), target);
  }

  // optional string nicename = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nicename().data(), static_cast<int>(this->nicename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CCSUsrMsg_RoundBackupFilenames.nicename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->nicename(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_RoundBackupFilenames)
  return target;
}

size_t CCSUsrMsg_RoundBackupFilenames::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_RoundBackupFilenames)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string filename = 3;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional string nicename = 4;
    if (has_nicename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nicename());
    }

    // optional int32 count = 1;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

    // optional int32 index = 2;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_RoundBackupFilenames::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_RoundBackupFilenames)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_RoundBackupFilenames* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_RoundBackupFilenames>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_RoundBackupFilenames)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_RoundBackupFilenames)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_RoundBackupFilenames::MergeFrom(const CCSUsrMsg_RoundBackupFilenames& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_RoundBackupFilenames)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_nicename();
      nicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nicename_);
    }
    if (cached_has_bits & 0x00000004u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000008u) {
      index_ = from.index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CCSUsrMsg_RoundBackupFilenames::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_RoundBackupFilenames)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_RoundBackupFilenames::CopyFrom(const CCSUsrMsg_RoundBackupFilenames& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_RoundBackupFilenames)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_RoundBackupFilenames::IsInitialized() const {
  return true;
}

void CCSUsrMsg_RoundBackupFilenames::Swap(CCSUsrMsg_RoundBackupFilenames* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_RoundBackupFilenames::InternalSwap(CCSUsrMsg_RoundBackupFilenames* other) {
  using std::swap;
  filename_.Swap(&other->filename_);
  nicename_.Swap(&other->nicename_);
  swap(count_, other->count_);
  swap(index_, other->index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_RoundBackupFilenames::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_ResetHud::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_ResetHud::kResetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_ResetHud::CCSUsrMsg_ResetHud()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ResetHud();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_ResetHud)
}
CCSUsrMsg_ResetHud::CCSUsrMsg_ResetHud(const CCSUsrMsg_ResetHud& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reset_ = from.reset_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_ResetHud)
}

void CCSUsrMsg_ResetHud::SharedCtor() {
  _cached_size_ = 0;
  reset_ = false;
}

CCSUsrMsg_ResetHud::~CCSUsrMsg_ResetHud() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_ResetHud)
  SharedDtor();
}

void CCSUsrMsg_ResetHud::SharedDtor() {
}

void CCSUsrMsg_ResetHud::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_ResetHud::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_ResetHud& CCSUsrMsg_ResetHud::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ResetHud();
  return *internal_default_instance();
}

CCSUsrMsg_ResetHud* CCSUsrMsg_ResetHud::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_ResetHud* n = new CCSUsrMsg_ResetHud;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_ResetHud::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_ResetHud)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reset_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_ResetHud::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_ResetHud)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool reset = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_reset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_ResetHud)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_ResetHud)
  return false;
#undef DO_
}

void CCSUsrMsg_ResetHud::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_ResetHud)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool reset = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->reset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_ResetHud)
}

::google::protobuf::uint8* CCSUsrMsg_ResetHud::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_ResetHud)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool reset = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->reset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_ResetHud)
  return target;
}

size_t CCSUsrMsg_ResetHud::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_ResetHud)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool reset = 1;
  if (has_reset()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_ResetHud::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_ResetHud)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_ResetHud* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_ResetHud>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_ResetHud)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_ResetHud)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_ResetHud::MergeFrom(const CCSUsrMsg_ResetHud& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_ResetHud)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_reset()) {
    set_reset(from.reset());
  }
}

void CCSUsrMsg_ResetHud::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_ResetHud)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_ResetHud::CopyFrom(const CCSUsrMsg_ResetHud& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_ResetHud)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_ResetHud::IsInitialized() const {
  return true;
}

void CCSUsrMsg_ResetHud::Swap(CCSUsrMsg_ResetHud* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_ResetHud::InternalSwap(CCSUsrMsg_ResetHud* other) {
  using std::swap;
  swap(reset_, other->reset_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_ResetHud::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_GameTitle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_GameTitle::kDummyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_GameTitle::CCSUsrMsg_GameTitle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_GameTitle();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_GameTitle)
}
CCSUsrMsg_GameTitle::CCSUsrMsg_GameTitle(const CCSUsrMsg_GameTitle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dummy_ = from.dummy_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_GameTitle)
}

void CCSUsrMsg_GameTitle::SharedCtor() {
  _cached_size_ = 0;
  dummy_ = 0;
}

CCSUsrMsg_GameTitle::~CCSUsrMsg_GameTitle() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_GameTitle)
  SharedDtor();
}

void CCSUsrMsg_GameTitle::SharedDtor() {
}

void CCSUsrMsg_GameTitle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_GameTitle::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_GameTitle& CCSUsrMsg_GameTitle::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_GameTitle();
  return *internal_default_instance();
}

CCSUsrMsg_GameTitle* CCSUsrMsg_GameTitle::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_GameTitle* n = new CCSUsrMsg_GameTitle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_GameTitle::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_GameTitle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dummy_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_GameTitle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_GameTitle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 dummy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dummy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_GameTitle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_GameTitle)
  return false;
#undef DO_
}

void CCSUsrMsg_GameTitle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_GameTitle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 dummy = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dummy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_GameTitle)
}

::google::protobuf::uint8* CCSUsrMsg_GameTitle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_GameTitle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 dummy = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dummy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_GameTitle)
  return target;
}

size_t CCSUsrMsg_GameTitle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_GameTitle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 dummy = 1;
  if (has_dummy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dummy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_GameTitle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_GameTitle)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_GameTitle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_GameTitle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_GameTitle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_GameTitle)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_GameTitle::MergeFrom(const CCSUsrMsg_GameTitle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_GameTitle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dummy()) {
    set_dummy(from.dummy());
  }
}

void CCSUsrMsg_GameTitle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_GameTitle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_GameTitle::CopyFrom(const CCSUsrMsg_GameTitle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_GameTitle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_GameTitle::IsInitialized() const {
  return true;
}

void CCSUsrMsg_GameTitle::Swap(CCSUsrMsg_GameTitle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_GameTitle::InternalSwap(CCSUsrMsg_GameTitle* other) {
  using std::swap;
  swap(dummy_, other->dummy_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_GameTitle::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_RequestState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_RequestState::kDummyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_RequestState::CCSUsrMsg_RequestState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_RequestState();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_RequestState)
}
CCSUsrMsg_RequestState::CCSUsrMsg_RequestState(const CCSUsrMsg_RequestState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dummy_ = from.dummy_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_RequestState)
}

void CCSUsrMsg_RequestState::SharedCtor() {
  _cached_size_ = 0;
  dummy_ = 0;
}

CCSUsrMsg_RequestState::~CCSUsrMsg_RequestState() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_RequestState)
  SharedDtor();
}

void CCSUsrMsg_RequestState::SharedDtor() {
}

void CCSUsrMsg_RequestState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_RequestState::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_RequestState& CCSUsrMsg_RequestState::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_RequestState();
  return *internal_default_instance();
}

CCSUsrMsg_RequestState* CCSUsrMsg_RequestState::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_RequestState* n = new CCSUsrMsg_RequestState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_RequestState::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_RequestState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dummy_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_RequestState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_RequestState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 dummy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dummy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_RequestState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_RequestState)
  return false;
#undef DO_
}

void CCSUsrMsg_RequestState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_RequestState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 dummy = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dummy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_RequestState)
}

::google::protobuf::uint8* CCSUsrMsg_RequestState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_RequestState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 dummy = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dummy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_RequestState)
  return target;
}

size_t CCSUsrMsg_RequestState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_RequestState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 dummy = 1;
  if (has_dummy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dummy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_RequestState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_RequestState)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_RequestState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_RequestState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_RequestState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_RequestState)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_RequestState::MergeFrom(const CCSUsrMsg_RequestState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_RequestState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dummy()) {
    set_dummy(from.dummy());
  }
}

void CCSUsrMsg_RequestState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_RequestState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_RequestState::CopyFrom(const CCSUsrMsg_RequestState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_RequestState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_RequestState::IsInitialized() const {
  return true;
}

void CCSUsrMsg_RequestState::Swap(CCSUsrMsg_RequestState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_RequestState::InternalSwap(CCSUsrMsg_RequestState* other) {
  using std::swap;
  swap(dummy_, other->dummy_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_RequestState::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_StopSpectatorMode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_StopSpectatorMode::kDummyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_StopSpectatorMode::CCSUsrMsg_StopSpectatorMode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_StopSpectatorMode();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_StopSpectatorMode)
}
CCSUsrMsg_StopSpectatorMode::CCSUsrMsg_StopSpectatorMode(const CCSUsrMsg_StopSpectatorMode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dummy_ = from.dummy_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_StopSpectatorMode)
}

void CCSUsrMsg_StopSpectatorMode::SharedCtor() {
  _cached_size_ = 0;
  dummy_ = 0;
}

CCSUsrMsg_StopSpectatorMode::~CCSUsrMsg_StopSpectatorMode() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_StopSpectatorMode)
  SharedDtor();
}

void CCSUsrMsg_StopSpectatorMode::SharedDtor() {
}

void CCSUsrMsg_StopSpectatorMode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_StopSpectatorMode::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_StopSpectatorMode& CCSUsrMsg_StopSpectatorMode::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_StopSpectatorMode();
  return *internal_default_instance();
}

CCSUsrMsg_StopSpectatorMode* CCSUsrMsg_StopSpectatorMode::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_StopSpectatorMode* n = new CCSUsrMsg_StopSpectatorMode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_StopSpectatorMode::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_StopSpectatorMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dummy_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_StopSpectatorMode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_StopSpectatorMode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 dummy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dummy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_StopSpectatorMode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_StopSpectatorMode)
  return false;
#undef DO_
}

void CCSUsrMsg_StopSpectatorMode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_StopSpectatorMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 dummy = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dummy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_StopSpectatorMode)
}

::google::protobuf::uint8* CCSUsrMsg_StopSpectatorMode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_StopSpectatorMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 dummy = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dummy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_StopSpectatorMode)
  return target;
}

size_t CCSUsrMsg_StopSpectatorMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_StopSpectatorMode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 dummy = 1;
  if (has_dummy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dummy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_StopSpectatorMode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_StopSpectatorMode)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_StopSpectatorMode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_StopSpectatorMode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_StopSpectatorMode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_StopSpectatorMode)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_StopSpectatorMode::MergeFrom(const CCSUsrMsg_StopSpectatorMode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_StopSpectatorMode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dummy()) {
    set_dummy(from.dummy());
  }
}

void CCSUsrMsg_StopSpectatorMode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_StopSpectatorMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_StopSpectatorMode::CopyFrom(const CCSUsrMsg_StopSpectatorMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_StopSpectatorMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_StopSpectatorMode::IsInitialized() const {
  return true;
}

void CCSUsrMsg_StopSpectatorMode::Swap(CCSUsrMsg_StopSpectatorMode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_StopSpectatorMode::InternalSwap(CCSUsrMsg_StopSpectatorMode* other) {
  using std::swap;
  swap(dummy_, other->dummy_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_StopSpectatorMode::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_DisconnectToLobby::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_DisconnectToLobby::kDummyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_DisconnectToLobby::CCSUsrMsg_DisconnectToLobby()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_DisconnectToLobby();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_DisconnectToLobby)
}
CCSUsrMsg_DisconnectToLobby::CCSUsrMsg_DisconnectToLobby(const CCSUsrMsg_DisconnectToLobby& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dummy_ = from.dummy_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_DisconnectToLobby)
}

void CCSUsrMsg_DisconnectToLobby::SharedCtor() {
  _cached_size_ = 0;
  dummy_ = 0;
}

CCSUsrMsg_DisconnectToLobby::~CCSUsrMsg_DisconnectToLobby() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_DisconnectToLobby)
  SharedDtor();
}

void CCSUsrMsg_DisconnectToLobby::SharedDtor() {
}

void CCSUsrMsg_DisconnectToLobby::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_DisconnectToLobby::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_DisconnectToLobby& CCSUsrMsg_DisconnectToLobby::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_DisconnectToLobby();
  return *internal_default_instance();
}

CCSUsrMsg_DisconnectToLobby* CCSUsrMsg_DisconnectToLobby::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_DisconnectToLobby* n = new CCSUsrMsg_DisconnectToLobby;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_DisconnectToLobby::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_DisconnectToLobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dummy_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_DisconnectToLobby::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_DisconnectToLobby)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 dummy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dummy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_DisconnectToLobby)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_DisconnectToLobby)
  return false;
#undef DO_
}

void CCSUsrMsg_DisconnectToLobby::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_DisconnectToLobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 dummy = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dummy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_DisconnectToLobby)
}

::google::protobuf::uint8* CCSUsrMsg_DisconnectToLobby::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_DisconnectToLobby)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 dummy = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dummy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_DisconnectToLobby)
  return target;
}

size_t CCSUsrMsg_DisconnectToLobby::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_DisconnectToLobby)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 dummy = 1;
  if (has_dummy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dummy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_DisconnectToLobby::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_DisconnectToLobby)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_DisconnectToLobby* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_DisconnectToLobby>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_DisconnectToLobby)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_DisconnectToLobby)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_DisconnectToLobby::MergeFrom(const CCSUsrMsg_DisconnectToLobby& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_DisconnectToLobby)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dummy()) {
    set_dummy(from.dummy());
  }
}

void CCSUsrMsg_DisconnectToLobby::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_DisconnectToLobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_DisconnectToLobby::CopyFrom(const CCSUsrMsg_DisconnectToLobby& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_DisconnectToLobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_DisconnectToLobby::IsInitialized() const {
  return true;
}

void CCSUsrMsg_DisconnectToLobby::Swap(CCSUsrMsg_DisconnectToLobby* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_DisconnectToLobby::InternalSwap(CCSUsrMsg_DisconnectToLobby* other) {
  using std::swap;
  swap(dummy_, other->dummy_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_DisconnectToLobby::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_WarmupHasEnded::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_WarmupHasEnded::kDummyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_WarmupHasEnded::CCSUsrMsg_WarmupHasEnded()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_WarmupHasEnded();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_WarmupHasEnded)
}
CCSUsrMsg_WarmupHasEnded::CCSUsrMsg_WarmupHasEnded(const CCSUsrMsg_WarmupHasEnded& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dummy_ = from.dummy_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_WarmupHasEnded)
}

void CCSUsrMsg_WarmupHasEnded::SharedCtor() {
  _cached_size_ = 0;
  dummy_ = 0;
}

CCSUsrMsg_WarmupHasEnded::~CCSUsrMsg_WarmupHasEnded() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_WarmupHasEnded)
  SharedDtor();
}

void CCSUsrMsg_WarmupHasEnded::SharedDtor() {
}

void CCSUsrMsg_WarmupHasEnded::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_WarmupHasEnded::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_WarmupHasEnded& CCSUsrMsg_WarmupHasEnded::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_WarmupHasEnded();
  return *internal_default_instance();
}

CCSUsrMsg_WarmupHasEnded* CCSUsrMsg_WarmupHasEnded::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_WarmupHasEnded* n = new CCSUsrMsg_WarmupHasEnded;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_WarmupHasEnded::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_WarmupHasEnded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dummy_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_WarmupHasEnded::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_WarmupHasEnded)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 dummy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dummy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_WarmupHasEnded)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_WarmupHasEnded)
  return false;
#undef DO_
}

void CCSUsrMsg_WarmupHasEnded::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_WarmupHasEnded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 dummy = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dummy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_WarmupHasEnded)
}

::google::protobuf::uint8* CCSUsrMsg_WarmupHasEnded::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_WarmupHasEnded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 dummy = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dummy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_WarmupHasEnded)
  return target;
}

size_t CCSUsrMsg_WarmupHasEnded::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_WarmupHasEnded)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 dummy = 1;
  if (has_dummy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dummy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_WarmupHasEnded::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_WarmupHasEnded)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_WarmupHasEnded* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_WarmupHasEnded>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_WarmupHasEnded)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_WarmupHasEnded)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_WarmupHasEnded::MergeFrom(const CCSUsrMsg_WarmupHasEnded& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_WarmupHasEnded)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dummy()) {
    set_dummy(from.dummy());
  }
}

void CCSUsrMsg_WarmupHasEnded::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_WarmupHasEnded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_WarmupHasEnded::CopyFrom(const CCSUsrMsg_WarmupHasEnded& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_WarmupHasEnded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_WarmupHasEnded::IsInitialized() const {
  return true;
}

void CCSUsrMsg_WarmupHasEnded::Swap(CCSUsrMsg_WarmupHasEnded* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_WarmupHasEnded::InternalSwap(CCSUsrMsg_WarmupHasEnded* other) {
  using std::swap;
  swap(dummy_, other->dummy_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_WarmupHasEnded::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_ClientInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_ClientInfo::kDummyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_ClientInfo::CCSUsrMsg_ClientInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ClientInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_ClientInfo)
}
CCSUsrMsg_ClientInfo::CCSUsrMsg_ClientInfo(const CCSUsrMsg_ClientInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dummy_ = from.dummy_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_ClientInfo)
}

void CCSUsrMsg_ClientInfo::SharedCtor() {
  _cached_size_ = 0;
  dummy_ = 0;
}

CCSUsrMsg_ClientInfo::~CCSUsrMsg_ClientInfo() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_ClientInfo)
  SharedDtor();
}

void CCSUsrMsg_ClientInfo::SharedDtor() {
}

void CCSUsrMsg_ClientInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_ClientInfo::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_ClientInfo& CCSUsrMsg_ClientInfo::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ClientInfo();
  return *internal_default_instance();
}

CCSUsrMsg_ClientInfo* CCSUsrMsg_ClientInfo::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_ClientInfo* n = new CCSUsrMsg_ClientInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_ClientInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_ClientInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dummy_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_ClientInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_ClientInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 dummy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dummy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dummy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_ClientInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_ClientInfo)
  return false;
#undef DO_
}

void CCSUsrMsg_ClientInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_ClientInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 dummy = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dummy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_ClientInfo)
}

::google::protobuf::uint8* CCSUsrMsg_ClientInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_ClientInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 dummy = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dummy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_ClientInfo)
  return target;
}

size_t CCSUsrMsg_ClientInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_ClientInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 dummy = 1;
  if (has_dummy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dummy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_ClientInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_ClientInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_ClientInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_ClientInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_ClientInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_ClientInfo)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_ClientInfo::MergeFrom(const CCSUsrMsg_ClientInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_ClientInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dummy()) {
    set_dummy(from.dummy());
  }
}

void CCSUsrMsg_ClientInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_ClientInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_ClientInfo::CopyFrom(const CCSUsrMsg_ClientInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_ClientInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_ClientInfo::IsInitialized() const {
  return true;
}

void CCSUsrMsg_ClientInfo::Swap(CCSUsrMsg_ClientInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_ClientInfo::InternalSwap(CCSUsrMsg_ClientInfo* other) {
  using std::swap;
  swap(dummy_, other->dummy_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_ClientInfo::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CCSUsrMsg_ServerRankRevealAll::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCSUsrMsg_ServerRankRevealAll::kSecondsTillShutdownFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCSUsrMsg_ServerRankRevealAll::CCSUsrMsg_ServerRankRevealAll()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ServerRankRevealAll();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCSUsrMsg_ServerRankRevealAll)
}
CCSUsrMsg_ServerRankRevealAll::CCSUsrMsg_ServerRankRevealAll(const CCSUsrMsg_ServerRankRevealAll& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  seconds_till_shutdown_ = from.seconds_till_shutdown_;
  // @@protoc_insertion_point(copy_constructor:CCSUsrMsg_ServerRankRevealAll)
}

void CCSUsrMsg_ServerRankRevealAll::SharedCtor() {
  _cached_size_ = 0;
  seconds_till_shutdown_ = 0;
}

CCSUsrMsg_ServerRankRevealAll::~CCSUsrMsg_ServerRankRevealAll() {
  // @@protoc_insertion_point(destructor:CCSUsrMsg_ServerRankRevealAll)
  SharedDtor();
}

void CCSUsrMsg_ServerRankRevealAll::SharedDtor() {
}

void CCSUsrMsg_ServerRankRevealAll::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCSUsrMsg_ServerRankRevealAll::descriptor() {
  ::protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CCSUsrMsg_ServerRankRevealAll& CCSUsrMsg_ServerRankRevealAll::default_instance() {
  ::protobuf_cstrike15_5fusermessages_2eproto::InitDefaultsCCSUsrMsg_ServerRankRevealAll();
  return *internal_default_instance();
}

CCSUsrMsg_ServerRankRevealAll* CCSUsrMsg_ServerRankRevealAll::New(::google::protobuf::Arena* arena) const {
  CCSUsrMsg_ServerRankRevealAll* n = new CCSUsrMsg_ServerRankRevealAll;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCSUsrMsg_ServerRankRevealAll::Clear() {
// @@protoc_insertion_point(message_clear_start:CCSUsrMsg_ServerRankRevealAll)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  seconds_till_shutdown_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CCSUsrMsg_ServerRankRevealAll::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCSUsrMsg_ServerRankRevealAll)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 seconds_till_shutdown = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_seconds_till_shutdown();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seconds_till_shutdown_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCSUsrMsg_ServerRankRevealAll)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCSUsrMsg_ServerRankRevealAll)
  return false;
#undef DO_
}

void CCSUsrMsg_ServerRankRevealAll::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCSUsrMsg_ServerRankRevealAll)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 seconds_till_shutdown = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->seconds_till_shutdown(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CCSUsrMsg_ServerRankRevealAll)
}

::google::protobuf::uint8* CCSUsrMsg_ServerRankRevealAll::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCSUsrMsg_ServerRankRevealAll)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 seconds_till_shutdown = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->seconds_till_shutdown(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCSUsrMsg_ServerRankRevealAll)
  return target;
}

size_t CCSUsrMsg_ServerRankRevealAll::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCSUsrMsg_ServerRankRevealAll)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 seconds_till_shutdown = 1;
  if (has_seconds_till_shutdown()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seconds_till_shutdown());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCSUsrMsg_ServerRankRevealAll::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCSUsrMsg_ServerRankRevealAll)
  GOOGLE_DCHECK_NE(&from, this);
  const CCSUsrMsg_ServerRankRevealAll* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCSUsrMsg_ServerRankRevealAll>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCSUsrMsg_ServerRankRevealAll)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCSUsrMsg_ServerRankRevealAll)
    MergeFrom(*source);
  }
}

void CCSUsrMsg_ServerRankRevealAll::MergeFrom(const CCSUsrMsg_ServerRankRevealAll& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCSUsrMsg_ServerRankRevealAll)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_seconds_till_shutdown()) {
    set_seconds_till_shutdown(from.seconds_till_shutdown());
  }
}

void CCSUsrMsg_ServerRankRevealAll::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCSUsrMsg_ServerRankRevealAll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCSUsrMsg_ServerRankRevealAll::CopyFrom(const CCSUsrMsg_ServerRankRevealAll& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCSUsrMsg_ServerRankRevealAll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CCSUsrMsg_ServerRankRevealAll::IsInitialized() const {
  return true;
}

void CCSUsrMsg_ServerRankRevealAll::Swap(CCSUsrMsg_ServerRankRevealAll* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCSUsrMsg_ServerRankRevealAll::InternalSwap(CCSUsrMsg_ServerRankRevealAll* other) {
  using std::swap;
  swap(seconds_till_shutdown_, other->seconds_till_shutdown_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCSUsrMsg_ServerRankRevealAll::GetMetadata() const {
  protobuf_cstrike15_5fusermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cstrike15_5fusermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
