// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gcsdk_gcmessages.proto

#include "gcsdk_gcmessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class CMsgSOIDOwnerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSOIDOwner>
      _instance;
} _CMsgSOIDOwner_default_instance_;
class CMsgSOSingleObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSOSingleObject>
      _instance;
} _CMsgSOSingleObject_default_instance_;
class CMsgSOMultipleObjects_SingleObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSOMultipleObjects_SingleObject>
      _instance;
} _CMsgSOMultipleObjects_SingleObject_default_instance_;
class CMsgSOMultipleObjectsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSOMultipleObjects>
      _instance;
} _CMsgSOMultipleObjects_default_instance_;
class CMsgSOCacheSubscribed_SubscribedTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSOCacheSubscribed_SubscribedType>
      _instance;
} _CMsgSOCacheSubscribed_SubscribedType_default_instance_;
class CMsgSOCacheSubscribedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSOCacheSubscribed>
      _instance;
} _CMsgSOCacheSubscribed_default_instance_;
class CMsgSOCacheUnsubscribedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSOCacheUnsubscribed>
      _instance;
} _CMsgSOCacheUnsubscribed_default_instance_;
class CMsgSOCacheSubscriptionCheckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSOCacheSubscriptionCheck>
      _instance;
} _CMsgSOCacheSubscriptionCheck_default_instance_;
class CMsgSOCacheSubscriptionRefreshDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSOCacheSubscriptionRefresh>
      _instance;
} _CMsgSOCacheSubscriptionRefresh_default_instance_;
class CMsgSOCacheVersionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSOCacheVersion>
      _instance;
} _CMsgSOCacheVersion_default_instance_;
class CMsgAccountDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAccountDetails>
      _instance;
} _CMsgAccountDetails_default_instance_;
class CMsgGCMultiplexMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCMultiplexMessage>
      _instance;
} _CMsgGCMultiplexMessage_default_instance_;
class CMsgGCMultiplexMessage_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCMultiplexMessage_Response>
      _instance;
} _CMsgGCMultiplexMessage_Response_default_instance_;
class CGCToGCMsgMasterAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGCToGCMsgMasterAck>
      _instance;
} _CGCToGCMsgMasterAck_default_instance_;
class CGCToGCMsgMasterAck_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGCToGCMsgMasterAck_Response>
      _instance;
} _CGCToGCMsgMasterAck_Response_default_instance_;
class CGCToGCMsgMasterStartupCompleteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGCToGCMsgMasterStartupComplete>
      _instance;
} _CGCToGCMsgMasterStartupComplete_default_instance_;
class CGCToGCMsgRoutedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGCToGCMsgRouted>
      _instance;
} _CGCToGCMsgRouted_default_instance_;
class CGCToGCMsgRoutedReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGCToGCMsgRoutedReply>
      _instance;
} _CGCToGCMsgRoutedReply_default_instance_;
class CMsgGCUpdateSessionIPDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCUpdateSessionIP>
      _instance;
} _CMsgGCUpdateSessionIP_default_instance_;
class CMsgGCRequestSessionIPDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCRequestSessionIP>
      _instance;
} _CMsgGCRequestSessionIP_default_instance_;
class CMsgGCRequestSessionIPResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCRequestSessionIPResponse>
      _instance;
} _CMsgGCRequestSessionIPResponse_default_instance_;
class CMsgSOCacheHaveVersionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSOCacheHaveVersion>
      _instance;
} _CMsgSOCacheHaveVersion_default_instance_;
class CMsgClientHelloDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientHello>
      _instance;
} _CMsgClientHello_default_instance_;
class CMsgServerHelloDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgServerHello>
      _instance;
} _CMsgServerHello_default_instance_;
class CMsgClientWelcome_LocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientWelcome_Location>
      _instance;
} _CMsgClientWelcome_Location_default_instance_;
class CMsgClientWelcomeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientWelcome>
      _instance;
} _CMsgClientWelcome_default_instance_;
class CMsgConnectionStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgConnectionStatus>
      _instance;
} _CMsgConnectionStatus_default_instance_;
class CWorkshop_PopulateItemDescriptions_Request_SingleItemDescriptionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription>
      _instance;
} _CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription_default_instance_;
class CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock>
      _instance;
} _CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock_default_instance_;
class CWorkshop_PopulateItemDescriptions_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_PopulateItemDescriptions_Request>
      _instance;
} _CWorkshop_PopulateItemDescriptions_Request_default_instance_;
class CWorkshop_GetContributors_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_GetContributors_Request>
      _instance;
} _CWorkshop_GetContributors_Request_default_instance_;
class CWorkshop_GetContributors_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_GetContributors_Response>
      _instance;
} _CWorkshop_GetContributors_Response_default_instance_;
class CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRuleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule>
      _instance;
} _CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule_default_instance_;
class CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRuleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule>
      _instance;
} _CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule_default_instance_;
class CWorkshop_SetItemPaymentRules_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_SetItemPaymentRules_Request>
      _instance;
} _CWorkshop_SetItemPaymentRules_Request_default_instance_;
class CWorkshop_SetItemPaymentRules_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_SetItemPaymentRules_Response>
      _instance;
} _CWorkshop_SetItemPaymentRules_Response_default_instance_;
class CGameServers_AggregationQuery_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGameServers_AggregationQuery_Request>
      _instance;
} _CGameServers_AggregationQuery_Request_default_instance_;
class CGameServers_AggregationQuery_Response_GroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGameServers_AggregationQuery_Response_Group>
      _instance;
} _CGameServers_AggregationQuery_Response_Group_default_instance_;
class CGameServers_AggregationQuery_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGameServers_AggregationQuery_Response>
      _instance;
} _CGameServers_AggregationQuery_Response_default_instance_;
namespace protobuf_gcsdk_5fgcmessages_2eproto {
void InitDefaultsCMsgSOIDOwnerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgSOIDOwner_default_instance_;
    new (ptr) ::CMsgSOIDOwner();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSOIDOwner::InitAsDefaultInstance();
}

void InitDefaultsCMsgSOIDOwner() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgSOIDOwnerImpl);
}

void InitDefaultsCMsgSOSingleObjectImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOIDOwner();
  {
    void* ptr = &::_CMsgSOSingleObject_default_instance_;
    new (ptr) ::CMsgSOSingleObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSOSingleObject::InitAsDefaultInstance();
}

void InitDefaultsCMsgSOSingleObject() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgSOSingleObjectImpl);
}

void InitDefaultsCMsgSOMultipleObjects_SingleObjectImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgSOMultipleObjects_SingleObject_default_instance_;
    new (ptr) ::CMsgSOMultipleObjects_SingleObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSOMultipleObjects_SingleObject::InitAsDefaultInstance();
}

void InitDefaultsCMsgSOMultipleObjects_SingleObject() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgSOMultipleObjects_SingleObjectImpl);
}

void InitDefaultsCMsgSOMultipleObjectsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOMultipleObjects_SingleObject();
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOIDOwner();
  {
    void* ptr = &::_CMsgSOMultipleObjects_default_instance_;
    new (ptr) ::CMsgSOMultipleObjects();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSOMultipleObjects::InitAsDefaultInstance();
}

void InitDefaultsCMsgSOMultipleObjects() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgSOMultipleObjectsImpl);
}

void InitDefaultsCMsgSOCacheSubscribed_SubscribedTypeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgSOCacheSubscribed_SubscribedType_default_instance_;
    new (ptr) ::CMsgSOCacheSubscribed_SubscribedType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSOCacheSubscribed_SubscribedType::InitAsDefaultInstance();
}

void InitDefaultsCMsgSOCacheSubscribed_SubscribedType() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgSOCacheSubscribed_SubscribedTypeImpl);
}

void InitDefaultsCMsgSOCacheSubscribedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOCacheSubscribed_SubscribedType();
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOIDOwner();
  {
    void* ptr = &::_CMsgSOCacheSubscribed_default_instance_;
    new (ptr) ::CMsgSOCacheSubscribed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSOCacheSubscribed::InitAsDefaultInstance();
}

void InitDefaultsCMsgSOCacheSubscribed() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgSOCacheSubscribedImpl);
}

void InitDefaultsCMsgSOCacheUnsubscribedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOIDOwner();
  {
    void* ptr = &::_CMsgSOCacheUnsubscribed_default_instance_;
    new (ptr) ::CMsgSOCacheUnsubscribed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSOCacheUnsubscribed::InitAsDefaultInstance();
}

void InitDefaultsCMsgSOCacheUnsubscribed() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgSOCacheUnsubscribedImpl);
}

void InitDefaultsCMsgSOCacheSubscriptionCheckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOIDOwner();
  {
    void* ptr = &::_CMsgSOCacheSubscriptionCheck_default_instance_;
    new (ptr) ::CMsgSOCacheSubscriptionCheck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSOCacheSubscriptionCheck::InitAsDefaultInstance();
}

void InitDefaultsCMsgSOCacheSubscriptionCheck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgSOCacheSubscriptionCheckImpl);
}

void InitDefaultsCMsgSOCacheSubscriptionRefreshImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOIDOwner();
  {
    void* ptr = &::_CMsgSOCacheSubscriptionRefresh_default_instance_;
    new (ptr) ::CMsgSOCacheSubscriptionRefresh();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSOCacheSubscriptionRefresh::InitAsDefaultInstance();
}

void InitDefaultsCMsgSOCacheSubscriptionRefresh() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgSOCacheSubscriptionRefreshImpl);
}

void InitDefaultsCMsgSOCacheVersionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgSOCacheVersion_default_instance_;
    new (ptr) ::CMsgSOCacheVersion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSOCacheVersion::InitAsDefaultInstance();
}

void InitDefaultsCMsgSOCacheVersion() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgSOCacheVersionImpl);
}

void InitDefaultsCMsgAccountDetailsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgAccountDetails_default_instance_;
    new (ptr) ::CMsgAccountDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgAccountDetails::InitAsDefaultInstance();
}

void InitDefaultsCMsgAccountDetails() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgAccountDetailsImpl);
}

void InitDefaultsCMsgGCMultiplexMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCMultiplexMessage_default_instance_;
    new (ptr) ::CMsgGCMultiplexMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCMultiplexMessage::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCMultiplexMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCMultiplexMessageImpl);
}

void InitDefaultsCMsgGCMultiplexMessage_ResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCMultiplexMessage_Response_default_instance_;
    new (ptr) ::CMsgGCMultiplexMessage_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCMultiplexMessage_Response::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCMultiplexMessage_Response() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCMultiplexMessage_ResponseImpl);
}

void InitDefaultsCGCToGCMsgMasterAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CGCToGCMsgMasterAck_default_instance_;
    new (ptr) ::CGCToGCMsgMasterAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGCToGCMsgMasterAck::InitAsDefaultInstance();
}

void InitDefaultsCGCToGCMsgMasterAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGCToGCMsgMasterAckImpl);
}

void InitDefaultsCGCToGCMsgMasterAck_ResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CGCToGCMsgMasterAck_Response_default_instance_;
    new (ptr) ::CGCToGCMsgMasterAck_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGCToGCMsgMasterAck_Response::InitAsDefaultInstance();
}

void InitDefaultsCGCToGCMsgMasterAck_Response() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGCToGCMsgMasterAck_ResponseImpl);
}

void InitDefaultsCGCToGCMsgMasterStartupCompleteImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CGCToGCMsgMasterStartupComplete_default_instance_;
    new (ptr) ::CGCToGCMsgMasterStartupComplete();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGCToGCMsgMasterStartupComplete::InitAsDefaultInstance();
}

void InitDefaultsCGCToGCMsgMasterStartupComplete() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGCToGCMsgMasterStartupCompleteImpl);
}

void InitDefaultsCGCToGCMsgRoutedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CGCToGCMsgRouted_default_instance_;
    new (ptr) ::CGCToGCMsgRouted();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGCToGCMsgRouted::InitAsDefaultInstance();
}

void InitDefaultsCGCToGCMsgRouted() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGCToGCMsgRoutedImpl);
}

void InitDefaultsCGCToGCMsgRoutedReplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CGCToGCMsgRoutedReply_default_instance_;
    new (ptr) ::CGCToGCMsgRoutedReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGCToGCMsgRoutedReply::InitAsDefaultInstance();
}

void InitDefaultsCGCToGCMsgRoutedReply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGCToGCMsgRoutedReplyImpl);
}

void InitDefaultsCMsgGCUpdateSessionIPImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCUpdateSessionIP_default_instance_;
    new (ptr) ::CMsgGCUpdateSessionIP();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCUpdateSessionIP::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCUpdateSessionIP() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCUpdateSessionIPImpl);
}

void InitDefaultsCMsgGCRequestSessionIPImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCRequestSessionIP_default_instance_;
    new (ptr) ::CMsgGCRequestSessionIP();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCRequestSessionIP::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCRequestSessionIP() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCRequestSessionIPImpl);
}

void InitDefaultsCMsgGCRequestSessionIPResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCRequestSessionIPResponse_default_instance_;
    new (ptr) ::CMsgGCRequestSessionIPResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCRequestSessionIPResponse::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCRequestSessionIPResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCRequestSessionIPResponseImpl);
}

void InitDefaultsCMsgSOCacheHaveVersionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOIDOwner();
  {
    void* ptr = &::_CMsgSOCacheHaveVersion_default_instance_;
    new (ptr) ::CMsgSOCacheHaveVersion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgSOCacheHaveVersion::InitAsDefaultInstance();
}

void InitDefaultsCMsgSOCacheHaveVersion() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgSOCacheHaveVersionImpl);
}

void InitDefaultsCMsgClientHelloImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOCacheHaveVersion();
  {
    void* ptr = &::_CMsgClientHello_default_instance_;
    new (ptr) ::CMsgClientHello();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientHello::InitAsDefaultInstance();
}

void InitDefaultsCMsgClientHello() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgClientHelloImpl);
}

void InitDefaultsCMsgServerHelloImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOCacheHaveVersion();
  {
    void* ptr = &::_CMsgServerHello_default_instance_;
    new (ptr) ::CMsgServerHello();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgServerHello::InitAsDefaultInstance();
}

void InitDefaultsCMsgServerHello() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgServerHelloImpl);
}

void InitDefaultsCMsgClientWelcome_LocationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgClientWelcome_Location_default_instance_;
    new (ptr) ::CMsgClientWelcome_Location();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientWelcome_Location::InitAsDefaultInstance();
}

void InitDefaultsCMsgClientWelcome_Location() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgClientWelcome_LocationImpl);
}

void InitDefaultsCMsgClientWelcomeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOCacheSubscribed();
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOCacheSubscriptionCheck();
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgClientWelcome_Location();
  {
    void* ptr = &::_CMsgClientWelcome_default_instance_;
    new (ptr) ::CMsgClientWelcome();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgClientWelcome::InitAsDefaultInstance();
}

void InitDefaultsCMsgClientWelcome() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgClientWelcomeImpl);
}

void InitDefaultsCMsgConnectionStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgConnectionStatus_default_instance_;
    new (ptr) ::CMsgConnectionStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgConnectionStatus::InitAsDefaultInstance();
}

void InitDefaultsCMsgConnectionStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgConnectionStatusImpl);
}

void InitDefaultsCWorkshop_PopulateItemDescriptions_Request_SingleItemDescriptionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription_default_instance_;
    new (ptr) ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::InitAsDefaultInstance();
}

void InitDefaultsCWorkshop_PopulateItemDescriptions_Request_SingleItemDescription() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCWorkshop_PopulateItemDescriptions_Request_SingleItemDescriptionImpl);
}

void InitDefaultsCWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlockImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCWorkshop_PopulateItemDescriptions_Request_SingleItemDescription();
  {
    void* ptr = &::_CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock_default_instance_;
    new (ptr) ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::InitAsDefaultInstance();
}

void InitDefaultsCWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlockImpl);
}

void InitDefaultsCWorkshop_PopulateItemDescriptions_RequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock();
  {
    void* ptr = &::_CWorkshop_PopulateItemDescriptions_Request_default_instance_;
    new (ptr) ::CWorkshop_PopulateItemDescriptions_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CWorkshop_PopulateItemDescriptions_Request::InitAsDefaultInstance();
}

void InitDefaultsCWorkshop_PopulateItemDescriptions_Request() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCWorkshop_PopulateItemDescriptions_RequestImpl);
}

void InitDefaultsCWorkshop_GetContributors_RequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CWorkshop_GetContributors_Request_default_instance_;
    new (ptr) ::CWorkshop_GetContributors_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CWorkshop_GetContributors_Request::InitAsDefaultInstance();
}

void InitDefaultsCWorkshop_GetContributors_Request() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCWorkshop_GetContributors_RequestImpl);
}

void InitDefaultsCWorkshop_GetContributors_ResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CWorkshop_GetContributors_Response_default_instance_;
    new (ptr) ::CWorkshop_GetContributors_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CWorkshop_GetContributors_Response::InitAsDefaultInstance();
}

void InitDefaultsCWorkshop_GetContributors_Response() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCWorkshop_GetContributors_ResponseImpl);
}

void InitDefaultsCWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRuleImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule_default_instance_;
    new (ptr) ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::InitAsDefaultInstance();
}

void InitDefaultsCWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRuleImpl);
}

void InitDefaultsCWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRuleImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule_default_instance_;
    new (ptr) ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::InitAsDefaultInstance();
}

void InitDefaultsCWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRuleImpl);
}

void InitDefaultsCWorkshop_SetItemPaymentRules_RequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule();
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule();
  {
    void* ptr = &::_CWorkshop_SetItemPaymentRules_Request_default_instance_;
    new (ptr) ::CWorkshop_SetItemPaymentRules_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CWorkshop_SetItemPaymentRules_Request::InitAsDefaultInstance();
}

void InitDefaultsCWorkshop_SetItemPaymentRules_Request() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCWorkshop_SetItemPaymentRules_RequestImpl);
}

void InitDefaultsCWorkshop_SetItemPaymentRules_ResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CWorkshop_SetItemPaymentRules_Response_default_instance_;
    new (ptr) ::CWorkshop_SetItemPaymentRules_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CWorkshop_SetItemPaymentRules_Response::InitAsDefaultInstance();
}

void InitDefaultsCWorkshop_SetItemPaymentRules_Response() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCWorkshop_SetItemPaymentRules_ResponseImpl);
}

void InitDefaultsCGameServers_AggregationQuery_RequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CGameServers_AggregationQuery_Request_default_instance_;
    new (ptr) ::CGameServers_AggregationQuery_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGameServers_AggregationQuery_Request::InitAsDefaultInstance();
}

void InitDefaultsCGameServers_AggregationQuery_Request() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGameServers_AggregationQuery_RequestImpl);
}

void InitDefaultsCGameServers_AggregationQuery_Response_GroupImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CGameServers_AggregationQuery_Response_Group_default_instance_;
    new (ptr) ::CGameServers_AggregationQuery_Response_Group();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGameServers_AggregationQuery_Response_Group::InitAsDefaultInstance();
}

void InitDefaultsCGameServers_AggregationQuery_Response_Group() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGameServers_AggregationQuery_Response_GroupImpl);
}

void InitDefaultsCGameServers_AggregationQuery_ResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCGameServers_AggregationQuery_Response_Group();
  {
    void* ptr = &::_CGameServers_AggregationQuery_Response_default_instance_;
    new (ptr) ::CGameServers_AggregationQuery_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGameServers_AggregationQuery_Response::InitAsDefaultInstance();
}

void InitDefaultsCGameServers_AggregationQuery_Response() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGameServers_AggregationQuery_ResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[39];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOIDOwner, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOIDOwner, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOIDOwner, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOIDOwner, id_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOSingleObject, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOSingleObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOSingleObject, type_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOSingleObject, object_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOSingleObject, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOSingleObject, owner_soid_),
  3,
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOMultipleObjects_SingleObject, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOMultipleObjects_SingleObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOMultipleObjects_SingleObject, type_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOMultipleObjects_SingleObject, object_data_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOMultipleObjects, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOMultipleObjects, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOMultipleObjects, objects_modified_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOMultipleObjects, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOMultipleObjects, objects_added_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOMultipleObjects, objects_removed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOMultipleObjects, owner_soid_),
  ~0u,
  1,
  ~0u,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOCacheSubscribed_SubscribedType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOCacheSubscribed_SubscribedType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOCacheSubscribed_SubscribedType, type_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOCacheSubscribed_SubscribedType, object_data_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOCacheSubscribed, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOCacheSubscribed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOCacheSubscribed, objects_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOCacheSubscribed, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOCacheSubscribed, owner_soid_),
  ~0u,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOCacheUnsubscribed, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOCacheUnsubscribed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOCacheUnsubscribed, owner_soid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOCacheSubscriptionCheck, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOCacheSubscriptionCheck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOCacheSubscriptionCheck, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOCacheSubscriptionCheck, owner_soid_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOCacheSubscriptionRefresh, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOCacheSubscriptionRefresh, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOCacheSubscriptionRefresh, owner_soid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOCacheVersion, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOCacheVersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOCacheVersion, version_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAccountDetails, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAccountDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAccountDetails, valid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAccountDetails, account_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAccountDetails, public_profile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAccountDetails, public_inventory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAccountDetails, vac_banned_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAccountDetails, cyber_cafe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAccountDetails, school_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAccountDetails, free_trial_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAccountDetails, subscribed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAccountDetails, low_violence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAccountDetails, limited_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAccountDetails, trusted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAccountDetails, package_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAccountDetails, time_cached_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAccountDetails, account_locked_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAccountDetails, community_banned_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAccountDetails, trade_banned_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAccountDetails, eligible_for_community_market_),
  1,
  0,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  13,
  14,
  12,
  15,
  16,
  17,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMultiplexMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMultiplexMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMultiplexMessage, msgtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMultiplexMessage, payload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMultiplexMessage, steamids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMultiplexMessage, replytogc_),
  1,
  0,
  ~0u,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMultiplexMessage_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMultiplexMessage_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMultiplexMessage_Response, msgtype_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCToGCMsgMasterAck, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCToGCMsgMasterAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCToGCMsgMasterAck, dir_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCToGCMsgMasterAck, gc_type_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCToGCMsgMasterAck_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCToGCMsgMasterAck_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCToGCMsgMasterAck_Response, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCToGCMsgMasterStartupComplete, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCToGCMsgMasterStartupComplete, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCToGCMsgRouted, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCToGCMsgRouted, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCToGCMsgRouted, msg_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCToGCMsgRouted, sender_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCToGCMsgRouted, net_message_),
  2,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCToGCMsgRoutedReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCToGCMsgRoutedReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCToGCMsgRoutedReply, msg_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCToGCMsgRoutedReply, net_message_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCUpdateSessionIP, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCUpdateSessionIP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCUpdateSessionIP, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCUpdateSessionIP, ip_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCRequestSessionIP, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCRequestSessionIP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCRequestSessionIP, steamid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCRequestSessionIPResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCRequestSessionIPResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCRequestSessionIPResponse, ip_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOCacheHaveVersion, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOCacheHaveVersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOCacheHaveVersion, soid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgSOCacheHaveVersion, version_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientHello, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientHello, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientHello, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientHello, socache_have_versions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientHello, client_session_need_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientHello, client_launcher_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientHello, partner_srcid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientHello, partner_accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientHello, partner_accountflags_),
  0,
  ~0u,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerHello, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerHello, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerHello, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerHello, socache_have_versions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerHello, legacy_client_session_need_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerHello, client_launcher_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgServerHello, steamdatagram_port_),
  0,
  ~0u,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWelcome_Location, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWelcome_Location, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWelcome_Location, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWelcome_Location, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWelcome_Location, country_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWelcome, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWelcome, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWelcome, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWelcome, game_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWelcome, outofdate_subscribed_caches_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWelcome, uptodate_subscribed_caches_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWelcome, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWelcome, game_data2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWelcome, rtime32_gc_welcome_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgClientWelcome, currency_),
  3,
  0,
  ~0u,
  ~0u,
  2,
  1,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgConnectionStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgConnectionStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgConnectionStatus, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgConnectionStatus, client_session_need_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgConnectionStatus, queue_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgConnectionStatus, queue_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgConnectionStatus, wait_seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgConnectionStatus, estimated_wait_seconds_remaining_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription, gameitemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription, item_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription, one_per_account_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock, descriptions_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_PopulateItemDescriptions_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_PopulateItemDescriptions_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_PopulateItemDescriptions_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_PopulateItemDescriptions_Request, languages_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_GetContributors_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_GetContributors_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_GetContributors_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_GetContributors_Request, gameitemid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_GetContributors_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_GetContributors_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_GetContributors_Response, contributors_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule, workshop_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule, revenue_percentage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule, rule_description_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule, revenue_percentage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule, rule_description_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_SetItemPaymentRules_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_SetItemPaymentRules_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_SetItemPaymentRules_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_SetItemPaymentRules_Request, gameitemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_SetItemPaymentRules_Request, associated_workshop_files_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_SetItemPaymentRules_Request, partner_accounts_),
  0,
  1,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_SetItemPaymentRules_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CWorkshop_SetItemPaymentRules_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGameServers_AggregationQuery_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGameServers_AggregationQuery_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGameServers_AggregationQuery_Request, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGameServers_AggregationQuery_Request, group_fields_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGameServers_AggregationQuery_Response_Group, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGameServers_AggregationQuery_Response_Group, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGameServers_AggregationQuery_Response_Group, group_values_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGameServers_AggregationQuery_Response_Group, servers_empty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGameServers_AggregationQuery_Response_Group, servers_full_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGameServers_AggregationQuery_Response_Group, servers_total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGameServers_AggregationQuery_Response_Group, players_humans_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGameServers_AggregationQuery_Response_Group, players_bots_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGameServers_AggregationQuery_Response_Group, player_capacity_),
  ~0u,
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGameServers_AggregationQuery_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGameServers_AggregationQuery_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGameServers_AggregationQuery_Response, groups_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::CMsgSOIDOwner)},
  { 9, 18, sizeof(::CMsgSOSingleObject)},
  { 22, 29, sizeof(::CMsgSOMultipleObjects_SingleObject)},
  { 31, 41, sizeof(::CMsgSOMultipleObjects)},
  { 46, 53, sizeof(::CMsgSOCacheSubscribed_SubscribedType)},
  { 55, 63, sizeof(::CMsgSOCacheSubscribed)},
  { 66, 72, sizeof(::CMsgSOCacheUnsubscribed)},
  { 73, 80, sizeof(::CMsgSOCacheSubscriptionCheck)},
  { 82, 88, sizeof(::CMsgSOCacheSubscriptionRefresh)},
  { 89, 95, sizeof(::CMsgSOCacheVersion)},
  { 96, 119, sizeof(::CMsgAccountDetails)},
  { 137, 146, sizeof(::CMsgGCMultiplexMessage)},
  { 150, 156, sizeof(::CMsgGCMultiplexMessage_Response)},
  { 157, 164, sizeof(::CGCToGCMsgMasterAck)},
  { 166, 172, sizeof(::CGCToGCMsgMasterAck_Response)},
  { 173, 178, sizeof(::CGCToGCMsgMasterStartupComplete)},
  { 178, 186, sizeof(::CGCToGCMsgRouted)},
  { 189, 196, sizeof(::CGCToGCMsgRoutedReply)},
  { 198, 205, sizeof(::CMsgGCUpdateSessionIP)},
  { 207, 213, sizeof(::CMsgGCRequestSessionIP)},
  { 214, 220, sizeof(::CMsgGCRequestSessionIPResponse)},
  { 221, 228, sizeof(::CMsgSOCacheHaveVersion)},
  { 230, 242, sizeof(::CMsgClientHello)},
  { 249, 259, sizeof(::CMsgServerHello)},
  { 264, 272, sizeof(::CMsgClientWelcome_Location)},
  { 275, 288, sizeof(::CMsgClientWelcome)},
  { 296, 307, sizeof(::CMsgConnectionStatus)},
  { 313, 321, sizeof(::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription)},
  { 324, 331, sizeof(::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock)},
  { 333, 340, sizeof(::CWorkshop_PopulateItemDescriptions_Request)},
  { 342, 349, sizeof(::CWorkshop_GetContributors_Request)},
  { 351, 357, sizeof(::CWorkshop_GetContributors_Response)},
  { 358, 366, sizeof(::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule)},
  { 369, 377, sizeof(::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule)},
  { 380, 389, sizeof(::CWorkshop_SetItemPaymentRules_Request)},
  { 393, 398, sizeof(::CWorkshop_SetItemPaymentRules_Response)},
  { 398, 405, sizeof(::CGameServers_AggregationQuery_Request)},
  { 407, 419, sizeof(::CGameServers_AggregationQuery_Response_Group)},
  { 426, 432, sizeof(::CGameServers_AggregationQuery_Response)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSOIDOwner_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSOSingleObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSOMultipleObjects_SingleObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSOMultipleObjects_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSOCacheSubscribed_SubscribedType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSOCacheSubscribed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSOCacheUnsubscribed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSOCacheSubscriptionCheck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSOCacheSubscriptionRefresh_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSOCacheVersion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgAccountDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCMultiplexMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCMultiplexMessage_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGCToGCMsgMasterAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGCToGCMsgMasterAck_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGCToGCMsgMasterStartupComplete_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGCToGCMsgRouted_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGCToGCMsgRoutedReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCUpdateSessionIP_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCRequestSessionIP_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCRequestSessionIPResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgSOCacheHaveVersion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientHello_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgServerHello_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientWelcome_Location_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgClientWelcome_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgConnectionStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CWorkshop_PopulateItemDescriptions_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CWorkshop_GetContributors_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CWorkshop_GetContributors_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CWorkshop_SetItemPaymentRules_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CWorkshop_SetItemPaymentRules_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGameServers_AggregationQuery_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGameServers_AggregationQuery_Response_Group_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGameServers_AggregationQuery_Response_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "gcsdk_gcmessages.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 39);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026gcsdk_gcmessages.proto\032\023steammessages."
      "proto\")\n\rCMsgSOIDOwner\022\014\n\004type\030\001 \001(\r\022\n\n\002"
      "id\030\002 \001(\004\"o\n\022CMsgSOSingleObject\022\017\n\007type_i"
      "d\030\002 \001(\005\022\023\n\013object_data\030\003 \001(\014\022\017\n\007version\030"
      "\004 \001(\006\022\"\n\nowner_soid\030\005 \001(\0132\016.CMsgSOIDOwne"
      "r\"\307\002\n\025CMsgSOMultipleObjects\022=\n\020objects_m"
      "odified\030\002 \003(\0132#.CMsgSOMultipleObjects.Si"
      "ngleObject\022\017\n\007version\030\003 \001(\006\022:\n\robjects_a"
      "dded\030\004 \003(\0132#.CMsgSOMultipleObjects.Singl"
      "eObject\022<\n\017objects_removed\030\005 \003(\0132#.CMsgS"
      "OMultipleObjects.SingleObject\022\"\n\nowner_s"
      "oid\030\006 \001(\0132\016.CMsgSOIDOwner\032@\n\014SingleObjec"
      "t\022\017\n\007type_id\030\001 \001(\005\022\023\n\013object_data\030\002 \001(\014:"
      "\n\200\246\035\200\002\210\246\035\200\010\"\274\001\n\025CMsgSOCacheSubscribed\0226\n"
      "\007objects\030\002 \003(\0132%.CMsgSOCacheSubscribed.S"
      "ubscribedType\022\017\n\007version\030\003 \001(\006\022\"\n\nowner_"
      "soid\030\004 \001(\0132\016.CMsgSOIDOwner\0326\n\016Subscribed"
      "Type\022\017\n\007type_id\030\001 \001(\005\022\023\n\013object_data\030\002 \003"
      "(\014\"=\n\027CMsgSOCacheUnsubscribed\022\"\n\nowner_s"
      "oid\030\002 \001(\0132\016.CMsgSOIDOwner\"S\n\034CMsgSOCache"
      "SubscriptionCheck\022\017\n\007version\030\002 \001(\006\022\"\n\now"
      "ner_soid\030\003 \001(\0132\016.CMsgSOIDOwner\"D\n\036CMsgSO"
      "CacheSubscriptionRefresh\022\"\n\nowner_soid\030\002"
      " \001(\0132\016.CMsgSOIDOwner\"%\n\022CMsgSOCacheVersi"
      "on\022\017\n\007version\030\001 \001(\006\"\250\003\n\022CMsgAccountDetai"
      "ls\022\r\n\005valid\030\001 \001(\010\022\024\n\014account_name\030\002 \001(\t\022"
      "\026\n\016public_profile\030\004 \001(\010\022\030\n\020public_invent"
      "ory\030\005 \001(\010\022\022\n\nvac_banned\030\006 \001(\010\022\022\n\ncyber_c"
      "afe\030\007 \001(\010\022\026\n\016school_account\030\010 \001(\010\022\032\n\022fre"
      "e_trial_account\030\t \001(\010\022\022\n\nsubscribed\030\n \001("
      "\010\022\024\n\014low_violence\030\013 \001(\010\022\017\n\007limited\030\014 \001(\010"
      "\022\017\n\007trusted\030\r \001(\010\022\017\n\007package\030\016 \001(\r\022\023\n\013ti"
      "me_cached\030\017 \001(\007\022\026\n\016account_locked\030\020 \001(\010\022"
      "\030\n\020community_banned\030\021 \001(\010\022\024\n\014trade_banne"
      "d\030\022 \001(\010\022%\n\035eligible_for_community_market"
      "\030\023 \001(\010\"_\n\026CMsgGCMultiplexMessage\022\017\n\007msgt"
      "ype\030\001 \001(\r\022\017\n\007payload\030\002 \001(\014\022\020\n\010steamids\030\003"
      " \003(\006\022\021\n\treplytogc\030\004 \001(\010\"2\n\037CMsgGCMultipl"
      "exMessage_Response\022\017\n\007msgtype\030\001 \001(\r\"9\n\023C"
      "GCToGCMsgMasterAck\022\021\n\tdir_index\030\001 \001(\r\022\017\n"
      "\007gc_type\030\002 \001(\r\"2\n\034CGCToGCMsgMasterAck_Re"
      "sponse\022\022\n\007eresult\030\001 \001(\005:\0012\"!\n\037CGCToGCMsg"
      "MasterStartupComplete\"L\n\020CGCToGCMsgRoute"
      "d\022\020\n\010msg_type\030\001 \001(\r\022\021\n\tsender_id\030\002 \001(\006\022\023"
      "\n\013net_message\030\003 \001(\014\">\n\025CGCToGCMsgRoutedR"
      "eply\022\020\n\010msg_type\030\001 \001(\r\022\023\n\013net_message\030\002 "
      "\001(\014\"4\n\025CMsgGCUpdateSessionIP\022\017\n\007steamid\030"
      "\001 \001(\006\022\n\n\002ip\030\002 \001(\007\")\n\026CMsgGCRequestSessio"
      "nIP\022\017\n\007steamid\030\001 \001(\006\",\n\036CMsgGCRequestSes"
      "sionIPResponse\022\n\n\002ip\030\001 \001(\007\"G\n\026CMsgSOCach"
      "eHaveVersion\022\034\n\004soid\030\001 \001(\0132\016.CMsgSOIDOwn"
      "er\022\017\n\007version\030\002 \001(\006\"\340\001\n\017CMsgClientHello\022"
      "\017\n\007version\030\001 \001(\r\0226\n\025socache_have_version"
      "s\030\002 \003(\0132\027.CMsgSOCacheHaveVersion\022\033\n\023clie"
      "nt_session_need\030\003 \001(\r\022\027\n\017client_launcher"
      "\030\004 \001(\r\022\025\n\rpartner_srcid\030\005 \001(\r\022\031\n\021partner"
      "_accountid\030\006 \001(\r\022\034\n\024partner_accountflags"
      "\030\007 \001(\r\"\263\001\n\017CMsgServerHello\022\017\n\007version\030\001 "
      "\001(\r\0226\n\025socache_have_versions\030\002 \003(\0132\027.CMs"
      "gSOCacheHaveVersion\022\"\n\032legacy_client_ses"
      "sion_need\030\003 \001(\r\022\027\n\017client_launcher\030\004 \001(\r"
      "\022\032\n\022steamdatagram_port\030\005 \001(\r\"\364\002\n\021CMsgCli"
      "entWelcome\022\017\n\007version\030\001 \001(\r\022\021\n\tgame_data"
      "\030\002 \001(\014\022;\n\033outofdate_subscribed_caches\030\003 "
      "\003(\0132\026.CMsgSOCacheSubscribed\022A\n\032uptodate_"
      "subscribed_caches\030\004 \003(\0132\035.CMsgSOCacheSub"
      "scriptionCheck\022-\n\010location\030\005 \001(\0132\033.CMsgC"
      "lientWelcome.Location\022\022\n\ngame_data2\030\006 \001("
      "\014\022$\n\034rtime32_gc_welcome_timestamp\030\007 \001(\r\022"
      "\020\n\010currency\030\010 \001(\r\032@\n\010Location\022\020\n\010latitud"
      "e\030\001 \001(\002\022\021\n\tlongitude\030\002 \001(\002\022\017\n\007country\030\003 "
      "\001(\t\"\345\001\n\024CMsgConnectionStatus\022D\n\006status\030\001"
      " \001(\0162\023.GCConnectionStatus:\037GCConnectionS"
      "tatus_HAVE_SESSION\022\033\n\023client_session_nee"
      "d\030\002 \001(\r\022\026\n\016queue_position\030\003 \001(\005\022\022\n\nqueue"
      "_size\030\004 \001(\005\022\024\n\014wait_seconds\030\005 \001(\005\022(\n est"
      "imated_wait_seconds_remaining\030\006 \001(\005\"\206\003\n*"
      "CWorkshop_PopulateItemDescriptions_Reque"
      "st\022\r\n\005appid\030\001 \001(\r\022\\\n\tlanguages\030\002 \003(\0132I.C"
      "Workshop_PopulateItemDescriptions_Reques"
      "t.ItemDescriptionsLanguageBlock\032^\n\025Singl"
      "eItemDescription\022\022\n\ngameitemid\030\001 \001(\r\022\030\n\020"
      "item_description\030\002 \001(\t\022\027\n\017one_per_accoun"
      "t\030\003 \001(\010\032\212\001\n\035ItemDescriptionsLanguageBloc"
      "k\022\020\n\010language\030\001 \001(\t\022W\n\014descriptions\030\002 \003("
      "\0132A.CWorkshop_PopulateItemDescriptions_R"
      "equest.SingleItemDescription\"F\n!CWorksho"
      "p_GetContributors_Request\022\r\n\005appid\030\001 \001(\r"
      "\022\022\n\ngameitemid\030\002 \001(\r\":\n\"CWorkshop_GetCon"
      "tributors_Response\022\024\n\014contributors\030\001 \003(\006"
      "\"\325\003\n%CWorkshop_SetItemPaymentRules_Reque"
      "st\022\r\n\005appid\030\001 \001(\r\022\022\n\ngameitemid\030\002 \001(\r\022a\n"
      "\031associated_workshop_files\030\003 \003(\0132>.CWork"
      "shop_SetItemPaymentRules_Request.Worksho"
      "pItemPaymentRule\022W\n\020partner_accounts\030\004 \003"
      "(\0132=.CWorkshop_SetItemPaymentRules_Reque"
      "st.PartnerItemPaymentRule\032i\n\027WorkshopIte"
      "mPaymentRule\022\030\n\020workshop_file_id\030\001 \001(\004\022\032"
      "\n\022revenue_percentage\030\002 \001(\002\022\030\n\020rule_descr"
      "iption\030\003 \001(\t\032b\n\026PartnerItemPaymentRule\022\022"
      "\n\naccount_id\030\001 \001(\r\022\032\n\022revenue_percentage"
      "\030\002 \001(\002\022\030\n\020rule_description\030\003 \001(\t\"(\n&CWor"
      "kshop_SetItemPaymentRules_Response\"M\n%CG"
      "ameServers_AggregationQuery_Request\022\016\n\006f"
      "ilter\030\001 \001(\t\022\024\n\014group_fields\030\003 \003(\t\"\222\002\n&CG"
      "ameServers_AggregationQuery_Response\022=\n\006"
      "groups\030\001 \003(\0132-.CGameServers_AggregationQ"
      "uery_Response.Group\032\250\001\n\005Group\022\024\n\014group_v"
      "alues\030\001 \003(\t\022\025\n\rservers_empty\030\002 \001(\r\022\024\n\014se"
      "rvers_full\030\003 \001(\r\022\025\n\rservers_total\030\004 \001(\r\022"
      "\026\n\016players_humans\030\005 \001(\r\022\024\n\014players_bots\030"
      "\006 \001(\r\022\027\n\017player_capacity\030\007 \001(\r*_\n\024GCClie"
      "ntLauncherType\022 \n\034GCClientLauncherType_D"
      "EFAULT\020\000\022%\n!GCClientLauncherType_PERFECT"
      "WORLD\020\001*\325\001\n\022GCConnectionStatus\022#\n\037GCConn"
      "ectionStatus_HAVE_SESSION\020\000\022$\n GCConnect"
      "ionStatus_GC_GOING_DOWN\020\001\022!\n\035GCConnectio"
      "nStatus_NO_SESSION\020\002\0220\n,GCConnectionStat"
      "us_NO_SESSION_IN_LOGON_QUEUE\020\003\022\037\n\033GCConn"
      "ectionStatus_NO_STEAM\020\004B\005H\001\200\001\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4790);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gcsdk_gcmessages.proto", &protobuf_RegisterTypes);
  ::protobuf_steammessages_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_gcsdk_5fgcmessages_2eproto
const ::google::protobuf::EnumDescriptor* GCClientLauncherType_descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_enum_descriptors[0];
}
bool GCClientLauncherType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GCConnectionStatus_descriptor() {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gcsdk_5fgcmessages_2eproto::file_level_enum_descriptors[1];
}
bool GCConnectionStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CMsgSOIDOwner::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSOIDOwner::kTypeFieldNumber;
const int CMsgSOIDOwner::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSOIDOwner::CMsgSOIDOwner()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOIDOwner();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSOIDOwner)
}
CMsgSOIDOwner::CMsgSOIDOwner(const CMsgSOIDOwner& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:CMsgSOIDOwner)
}

void CMsgSOIDOwner::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
}

CMsgSOIDOwner::~CMsgSOIDOwner() {
  // @@protoc_insertion_point(destructor:CMsgSOIDOwner)
  SharedDtor();
}

void CMsgSOIDOwner::SharedDtor() {
}

void CMsgSOIDOwner::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSOIDOwner::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSOIDOwner& CMsgSOIDOwner::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOIDOwner();
  return *internal_default_instance();
}

CMsgSOIDOwner* CMsgSOIDOwner::New(::google::protobuf::Arena* arena) const {
  CMsgSOIDOwner* n = new CMsgSOIDOwner;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSOIDOwner::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSOIDOwner)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&id_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSOIDOwner::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSOIDOwner)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSOIDOwner)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSOIDOwner)
  return false;
#undef DO_
}

void CMsgSOIDOwner::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSOIDOwner)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // optional uint64 id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSOIDOwner)
}

::google::protobuf::uint8* CMsgSOIDOwner::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSOIDOwner)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // optional uint64 id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSOIDOwner)
  return target;
}

size_t CMsgSOIDOwner::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSOIDOwner)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSOIDOwner::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSOIDOwner)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSOIDOwner* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSOIDOwner>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSOIDOwner)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSOIDOwner)
    MergeFrom(*source);
  }
}

void CMsgSOIDOwner::MergeFrom(const CMsgSOIDOwner& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSOIDOwner)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSOIDOwner::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSOIDOwner)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSOIDOwner::CopyFrom(const CMsgSOIDOwner& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSOIDOwner)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSOIDOwner::IsInitialized() const {
  return true;
}

void CMsgSOIDOwner::Swap(CMsgSOIDOwner* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSOIDOwner::InternalSwap(CMsgSOIDOwner* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSOIDOwner::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSOSingleObject::InitAsDefaultInstance() {
  ::_CMsgSOSingleObject_default_instance_._instance.get_mutable()->owner_soid_ = const_cast< ::CMsgSOIDOwner*>(
      ::CMsgSOIDOwner::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSOSingleObject::kTypeIdFieldNumber;
const int CMsgSOSingleObject::kObjectDataFieldNumber;
const int CMsgSOSingleObject::kVersionFieldNumber;
const int CMsgSOSingleObject::kOwnerSoidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSOSingleObject::CMsgSOSingleObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOSingleObject();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSOSingleObject)
}
CMsgSOSingleObject::CMsgSOSingleObject(const CMsgSOSingleObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_object_data()) {
    object_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_data_);
  }
  if (from.has_owner_soid()) {
    owner_soid_ = new ::CMsgSOIDOwner(*from.owner_soid_);
  } else {
    owner_soid_ = NULL;
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_id_) -
    reinterpret_cast<char*>(&version_)) + sizeof(type_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgSOSingleObject)
}

void CMsgSOSingleObject::SharedCtor() {
  _cached_size_ = 0;
  object_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&owner_soid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_id_) -
      reinterpret_cast<char*>(&owner_soid_)) + sizeof(type_id_));
}

CMsgSOSingleObject::~CMsgSOSingleObject() {
  // @@protoc_insertion_point(destructor:CMsgSOSingleObject)
  SharedDtor();
}

void CMsgSOSingleObject::SharedDtor() {
  object_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete owner_soid_;
}

void CMsgSOSingleObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSOSingleObject::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSOSingleObject& CMsgSOSingleObject::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOSingleObject();
  return *internal_default_instance();
}

CMsgSOSingleObject* CMsgSOSingleObject::New(::google::protobuf::Arena* arena) const {
  CMsgSOSingleObject* n = new CMsgSOSingleObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSOSingleObject::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSOSingleObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!object_data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*object_data_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(owner_soid_ != NULL);
      owner_soid_->Clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_id_) -
        reinterpret_cast<char*>(&version_)) + sizeof(type_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSOSingleObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSOSingleObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_type_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes object_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_object_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgSOIDOwner owner_soid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_owner_soid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSOSingleObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSOSingleObject)
  return false;
#undef DO_
}

void CMsgSOSingleObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSOSingleObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type_id = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type_id(), output);
  }

  // optional bytes object_data = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->object_data(), output);
  }

  // optional fixed64 version = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->version(), output);
  }

  // optional .CMsgSOIDOwner owner_soid = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->owner_soid_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSOSingleObject)
}

::google::protobuf::uint8* CMsgSOSingleObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSOSingleObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type_id = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type_id(), target);
  }

  // optional bytes object_data = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->object_data(), target);
  }

  // optional fixed64 version = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->version(), target);
  }

  // optional .CMsgSOIDOwner owner_soid = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->owner_soid_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSOSingleObject)
  return target;
}

size_t CMsgSOSingleObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSOSingleObject)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes object_data = 3;
    if (has_object_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->object_data());
    }

    // optional .CMsgSOIDOwner owner_soid = 5;
    if (has_owner_soid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->owner_soid_);
    }

    // optional fixed64 version = 4;
    if (has_version()) {
      total_size += 1 + 8;
    }

    // optional int32 type_id = 2;
    if (has_type_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSOSingleObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSOSingleObject)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSOSingleObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSOSingleObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSOSingleObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSOSingleObject)
    MergeFrom(*source);
  }
}

void CMsgSOSingleObject::MergeFrom(const CMsgSOSingleObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSOSingleObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_object_data();
      object_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_owner_soid()->::CMsgSOIDOwner::MergeFrom(from.owner_soid());
    }
    if (cached_has_bits & 0x00000004u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000008u) {
      type_id_ = from.type_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSOSingleObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSOSingleObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSOSingleObject::CopyFrom(const CMsgSOSingleObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSOSingleObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSOSingleObject::IsInitialized() const {
  return true;
}

void CMsgSOSingleObject::Swap(CMsgSOSingleObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSOSingleObject::InternalSwap(CMsgSOSingleObject* other) {
  using std::swap;
  object_data_.Swap(&other->object_data_);
  swap(owner_soid_, other->owner_soid_);
  swap(version_, other->version_);
  swap(type_id_, other->type_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSOSingleObject::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSOMultipleObjects_SingleObject::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSOMultipleObjects_SingleObject::kTypeIdFieldNumber;
const int CMsgSOMultipleObjects_SingleObject::kObjectDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSOMultipleObjects_SingleObject::CMsgSOMultipleObjects_SingleObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOMultipleObjects_SingleObject();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSOMultipleObjects.SingleObject)
}
CMsgSOMultipleObjects_SingleObject::CMsgSOMultipleObjects_SingleObject(const CMsgSOMultipleObjects_SingleObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_object_data()) {
    object_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_data_);
  }
  type_id_ = from.type_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgSOMultipleObjects.SingleObject)
}

void CMsgSOMultipleObjects_SingleObject::SharedCtor() {
  _cached_size_ = 0;
  object_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_id_ = 0;
}

CMsgSOMultipleObjects_SingleObject::~CMsgSOMultipleObjects_SingleObject() {
  // @@protoc_insertion_point(destructor:CMsgSOMultipleObjects.SingleObject)
  SharedDtor();
}

void CMsgSOMultipleObjects_SingleObject::SharedDtor() {
  object_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgSOMultipleObjects_SingleObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSOMultipleObjects_SingleObject::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSOMultipleObjects_SingleObject& CMsgSOMultipleObjects_SingleObject::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOMultipleObjects_SingleObject();
  return *internal_default_instance();
}

CMsgSOMultipleObjects_SingleObject* CMsgSOMultipleObjects_SingleObject::New(::google::protobuf::Arena* arena) const {
  CMsgSOMultipleObjects_SingleObject* n = new CMsgSOMultipleObjects_SingleObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSOMultipleObjects_SingleObject::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSOMultipleObjects.SingleObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!object_data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*object_data_.UnsafeRawStringPointer())->clear();
  }
  type_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSOMultipleObjects_SingleObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSOMultipleObjects.SingleObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes object_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_object_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSOMultipleObjects.SingleObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSOMultipleObjects.SingleObject)
  return false;
#undef DO_
}

void CMsgSOMultipleObjects_SingleObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSOMultipleObjects.SingleObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type_id(), output);
  }

  // optional bytes object_data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->object_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSOMultipleObjects.SingleObject)
}

::google::protobuf::uint8* CMsgSOMultipleObjects_SingleObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSOMultipleObjects.SingleObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type_id(), target);
  }

  // optional bytes object_data = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->object_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSOMultipleObjects.SingleObject)
  return target;
}

size_t CMsgSOMultipleObjects_SingleObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSOMultipleObjects.SingleObject)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes object_data = 2;
    if (has_object_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->object_data());
    }

    // optional int32 type_id = 1;
    if (has_type_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSOMultipleObjects_SingleObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSOMultipleObjects.SingleObject)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSOMultipleObjects_SingleObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSOMultipleObjects_SingleObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSOMultipleObjects.SingleObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSOMultipleObjects.SingleObject)
    MergeFrom(*source);
  }
}

void CMsgSOMultipleObjects_SingleObject::MergeFrom(const CMsgSOMultipleObjects_SingleObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSOMultipleObjects.SingleObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_object_data();
      object_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_id_ = from.type_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSOMultipleObjects_SingleObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSOMultipleObjects.SingleObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSOMultipleObjects_SingleObject::CopyFrom(const CMsgSOMultipleObjects_SingleObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSOMultipleObjects.SingleObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSOMultipleObjects_SingleObject::IsInitialized() const {
  return true;
}

void CMsgSOMultipleObjects_SingleObject::Swap(CMsgSOMultipleObjects_SingleObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSOMultipleObjects_SingleObject::InternalSwap(CMsgSOMultipleObjects_SingleObject* other) {
  using std::swap;
  object_data_.Swap(&other->object_data_);
  swap(type_id_, other->type_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSOMultipleObjects_SingleObject::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSOMultipleObjects::InitAsDefaultInstance() {
  ::_CMsgSOMultipleObjects_default_instance_._instance.get_mutable()->owner_soid_ = const_cast< ::CMsgSOIDOwner*>(
      ::CMsgSOIDOwner::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSOMultipleObjects::kObjectsModifiedFieldNumber;
const int CMsgSOMultipleObjects::kVersionFieldNumber;
const int CMsgSOMultipleObjects::kObjectsAddedFieldNumber;
const int CMsgSOMultipleObjects::kObjectsRemovedFieldNumber;
const int CMsgSOMultipleObjects::kOwnerSoidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSOMultipleObjects::CMsgSOMultipleObjects()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOMultipleObjects();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSOMultipleObjects)
}
CMsgSOMultipleObjects::CMsgSOMultipleObjects(const CMsgSOMultipleObjects& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      objects_modified_(from.objects_modified_),
      objects_added_(from.objects_added_),
      objects_removed_(from.objects_removed_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_owner_soid()) {
    owner_soid_ = new ::CMsgSOIDOwner(*from.owner_soid_);
  } else {
    owner_soid_ = NULL;
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:CMsgSOMultipleObjects)
}

void CMsgSOMultipleObjects::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&owner_soid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&owner_soid_)) + sizeof(version_));
}

CMsgSOMultipleObjects::~CMsgSOMultipleObjects() {
  // @@protoc_insertion_point(destructor:CMsgSOMultipleObjects)
  SharedDtor();
}

void CMsgSOMultipleObjects::SharedDtor() {
  if (this != internal_default_instance()) delete owner_soid_;
}

void CMsgSOMultipleObjects::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSOMultipleObjects::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSOMultipleObjects& CMsgSOMultipleObjects::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOMultipleObjects();
  return *internal_default_instance();
}

CMsgSOMultipleObjects* CMsgSOMultipleObjects::New(::google::protobuf::Arena* arena) const {
  CMsgSOMultipleObjects* n = new CMsgSOMultipleObjects;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSOMultipleObjects::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSOMultipleObjects)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objects_modified_.Clear();
  objects_added_.Clear();
  objects_removed_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(owner_soid_ != NULL);
    owner_soid_->Clear();
  }
  version_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSOMultipleObjects::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSOMultipleObjects)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgSOMultipleObjects.SingleObject objects_modified = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_objects_modified()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgSOMultipleObjects.SingleObject objects_added = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_objects_added()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgSOMultipleObjects.SingleObject objects_removed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_objects_removed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgSOIDOwner owner_soid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_owner_soid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSOMultipleObjects)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSOMultipleObjects)
  return false;
#undef DO_
}

void CMsgSOMultipleObjects::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSOMultipleObjects)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgSOMultipleObjects.SingleObject objects_modified = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objects_modified_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->objects_modified(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional fixed64 version = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->version(), output);
  }

  // repeated .CMsgSOMultipleObjects.SingleObject objects_added = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objects_added_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->objects_added(static_cast<int>(i)), output);
  }

  // repeated .CMsgSOMultipleObjects.SingleObject objects_removed = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objects_removed_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->objects_removed(static_cast<int>(i)), output);
  }

  // optional .CMsgSOIDOwner owner_soid = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->owner_soid_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSOMultipleObjects)
}

::google::protobuf::uint8* CMsgSOMultipleObjects::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSOMultipleObjects)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgSOMultipleObjects.SingleObject objects_modified = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objects_modified_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->objects_modified(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional fixed64 version = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->version(), target);
  }

  // repeated .CMsgSOMultipleObjects.SingleObject objects_added = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objects_added_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->objects_added(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CMsgSOMultipleObjects.SingleObject objects_removed = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objects_removed_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->objects_removed(static_cast<int>(i)), deterministic, target);
  }

  // optional .CMsgSOIDOwner owner_soid = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->owner_soid_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSOMultipleObjects)
  return target;
}

size_t CMsgSOMultipleObjects::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSOMultipleObjects)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgSOMultipleObjects.SingleObject objects_modified = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->objects_modified_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->objects_modified(static_cast<int>(i)));
    }
  }

  // repeated .CMsgSOMultipleObjects.SingleObject objects_added = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->objects_added_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->objects_added(static_cast<int>(i)));
    }
  }

  // repeated .CMsgSOMultipleObjects.SingleObject objects_removed = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->objects_removed_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->objects_removed(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional .CMsgSOIDOwner owner_soid = 6;
    if (has_owner_soid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->owner_soid_);
    }

    // optional fixed64 version = 3;
    if (has_version()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSOMultipleObjects::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSOMultipleObjects)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSOMultipleObjects* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSOMultipleObjects>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSOMultipleObjects)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSOMultipleObjects)
    MergeFrom(*source);
  }
}

void CMsgSOMultipleObjects::MergeFrom(const CMsgSOMultipleObjects& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSOMultipleObjects)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  objects_modified_.MergeFrom(from.objects_modified_);
  objects_added_.MergeFrom(from.objects_added_);
  objects_removed_.MergeFrom(from.objects_removed_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_owner_soid()->::CMsgSOIDOwner::MergeFrom(from.owner_soid());
    }
    if (cached_has_bits & 0x00000002u) {
      version_ = from.version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSOMultipleObjects::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSOMultipleObjects)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSOMultipleObjects::CopyFrom(const CMsgSOMultipleObjects& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSOMultipleObjects)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSOMultipleObjects::IsInitialized() const {
  return true;
}

void CMsgSOMultipleObjects::Swap(CMsgSOMultipleObjects* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSOMultipleObjects::InternalSwap(CMsgSOMultipleObjects* other) {
  using std::swap;
  objects_modified_.InternalSwap(&other->objects_modified_);
  objects_added_.InternalSwap(&other->objects_added_);
  objects_removed_.InternalSwap(&other->objects_removed_);
  swap(owner_soid_, other->owner_soid_);
  swap(version_, other->version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSOMultipleObjects::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSOCacheSubscribed_SubscribedType::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSOCacheSubscribed_SubscribedType::kTypeIdFieldNumber;
const int CMsgSOCacheSubscribed_SubscribedType::kObjectDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSOCacheSubscribed_SubscribedType::CMsgSOCacheSubscribed_SubscribedType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOCacheSubscribed_SubscribedType();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSOCacheSubscribed.SubscribedType)
}
CMsgSOCacheSubscribed_SubscribedType::CMsgSOCacheSubscribed_SubscribedType(const CMsgSOCacheSubscribed_SubscribedType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      object_data_(from.object_data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_id_ = from.type_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgSOCacheSubscribed.SubscribedType)
}

void CMsgSOCacheSubscribed_SubscribedType::SharedCtor() {
  _cached_size_ = 0;
  type_id_ = 0;
}

CMsgSOCacheSubscribed_SubscribedType::~CMsgSOCacheSubscribed_SubscribedType() {
  // @@protoc_insertion_point(destructor:CMsgSOCacheSubscribed.SubscribedType)
  SharedDtor();
}

void CMsgSOCacheSubscribed_SubscribedType::SharedDtor() {
}

void CMsgSOCacheSubscribed_SubscribedType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSOCacheSubscribed_SubscribedType::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSOCacheSubscribed_SubscribedType& CMsgSOCacheSubscribed_SubscribedType::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOCacheSubscribed_SubscribedType();
  return *internal_default_instance();
}

CMsgSOCacheSubscribed_SubscribedType* CMsgSOCacheSubscribed_SubscribedType::New(::google::protobuf::Arena* arena) const {
  CMsgSOCacheSubscribed_SubscribedType* n = new CMsgSOCacheSubscribed_SubscribedType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSOCacheSubscribed_SubscribedType::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSOCacheSubscribed.SubscribedType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_data_.Clear();
  type_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSOCacheSubscribed_SubscribedType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSOCacheSubscribed.SubscribedType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes object_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_object_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSOCacheSubscribed.SubscribedType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSOCacheSubscribed.SubscribedType)
  return false;
#undef DO_
}

void CMsgSOCacheSubscribed_SubscribedType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSOCacheSubscribed.SubscribedType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type_id(), output);
  }

  // repeated bytes object_data = 2;
  for (int i = 0, n = this->object_data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->object_data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSOCacheSubscribed.SubscribedType)
}

::google::protobuf::uint8* CMsgSOCacheSubscribed_SubscribedType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSOCacheSubscribed.SubscribedType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type_id(), target);
  }

  // repeated bytes object_data = 2;
  for (int i = 0, n = this->object_data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->object_data(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSOCacheSubscribed.SubscribedType)
  return target;
}

size_t CMsgSOCacheSubscribed_SubscribedType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSOCacheSubscribed.SubscribedType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated bytes object_data = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->object_data_size());
  for (int i = 0, n = this->object_data_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->object_data(i));
  }

  // optional int32 type_id = 1;
  if (has_type_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSOCacheSubscribed_SubscribedType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSOCacheSubscribed.SubscribedType)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSOCacheSubscribed_SubscribedType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSOCacheSubscribed_SubscribedType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSOCacheSubscribed.SubscribedType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSOCacheSubscribed.SubscribedType)
    MergeFrom(*source);
  }
}

void CMsgSOCacheSubscribed_SubscribedType::MergeFrom(const CMsgSOCacheSubscribed_SubscribedType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSOCacheSubscribed.SubscribedType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  object_data_.MergeFrom(from.object_data_);
  if (from.has_type_id()) {
    set_type_id(from.type_id());
  }
}

void CMsgSOCacheSubscribed_SubscribedType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSOCacheSubscribed.SubscribedType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSOCacheSubscribed_SubscribedType::CopyFrom(const CMsgSOCacheSubscribed_SubscribedType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSOCacheSubscribed.SubscribedType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSOCacheSubscribed_SubscribedType::IsInitialized() const {
  return true;
}

void CMsgSOCacheSubscribed_SubscribedType::Swap(CMsgSOCacheSubscribed_SubscribedType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSOCacheSubscribed_SubscribedType::InternalSwap(CMsgSOCacheSubscribed_SubscribedType* other) {
  using std::swap;
  object_data_.InternalSwap(&other->object_data_);
  swap(type_id_, other->type_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSOCacheSubscribed_SubscribedType::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSOCacheSubscribed::InitAsDefaultInstance() {
  ::_CMsgSOCacheSubscribed_default_instance_._instance.get_mutable()->owner_soid_ = const_cast< ::CMsgSOIDOwner*>(
      ::CMsgSOIDOwner::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSOCacheSubscribed::kObjectsFieldNumber;
const int CMsgSOCacheSubscribed::kVersionFieldNumber;
const int CMsgSOCacheSubscribed::kOwnerSoidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSOCacheSubscribed::CMsgSOCacheSubscribed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOCacheSubscribed();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSOCacheSubscribed)
}
CMsgSOCacheSubscribed::CMsgSOCacheSubscribed(const CMsgSOCacheSubscribed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      objects_(from.objects_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_owner_soid()) {
    owner_soid_ = new ::CMsgSOIDOwner(*from.owner_soid_);
  } else {
    owner_soid_ = NULL;
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:CMsgSOCacheSubscribed)
}

void CMsgSOCacheSubscribed::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&owner_soid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&owner_soid_)) + sizeof(version_));
}

CMsgSOCacheSubscribed::~CMsgSOCacheSubscribed() {
  // @@protoc_insertion_point(destructor:CMsgSOCacheSubscribed)
  SharedDtor();
}

void CMsgSOCacheSubscribed::SharedDtor() {
  if (this != internal_default_instance()) delete owner_soid_;
}

void CMsgSOCacheSubscribed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSOCacheSubscribed::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSOCacheSubscribed& CMsgSOCacheSubscribed::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOCacheSubscribed();
  return *internal_default_instance();
}

CMsgSOCacheSubscribed* CMsgSOCacheSubscribed::New(::google::protobuf::Arena* arena) const {
  CMsgSOCacheSubscribed* n = new CMsgSOCacheSubscribed;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSOCacheSubscribed::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSOCacheSubscribed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objects_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(owner_soid_ != NULL);
    owner_soid_->Clear();
  }
  version_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSOCacheSubscribed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSOCacheSubscribed)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgSOCacheSubscribed.SubscribedType objects = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_objects()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgSOIDOwner owner_soid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_owner_soid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSOCacheSubscribed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSOCacheSubscribed)
  return false;
#undef DO_
}

void CMsgSOCacheSubscribed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSOCacheSubscribed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgSOCacheSubscribed.SubscribedType objects = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objects_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->objects(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional fixed64 version = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->version(), output);
  }

  // optional .CMsgSOIDOwner owner_soid = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->owner_soid_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSOCacheSubscribed)
}

::google::protobuf::uint8* CMsgSOCacheSubscribed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSOCacheSubscribed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgSOCacheSubscribed.SubscribedType objects = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objects_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->objects(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional fixed64 version = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->version(), target);
  }

  // optional .CMsgSOIDOwner owner_soid = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->owner_soid_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSOCacheSubscribed)
  return target;
}

size_t CMsgSOCacheSubscribed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSOCacheSubscribed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgSOCacheSubscribed.SubscribedType objects = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->objects_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->objects(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional .CMsgSOIDOwner owner_soid = 4;
    if (has_owner_soid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->owner_soid_);
    }

    // optional fixed64 version = 3;
    if (has_version()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSOCacheSubscribed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSOCacheSubscribed)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSOCacheSubscribed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSOCacheSubscribed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSOCacheSubscribed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSOCacheSubscribed)
    MergeFrom(*source);
  }
}

void CMsgSOCacheSubscribed::MergeFrom(const CMsgSOCacheSubscribed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSOCacheSubscribed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  objects_.MergeFrom(from.objects_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_owner_soid()->::CMsgSOIDOwner::MergeFrom(from.owner_soid());
    }
    if (cached_has_bits & 0x00000002u) {
      version_ = from.version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSOCacheSubscribed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSOCacheSubscribed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSOCacheSubscribed::CopyFrom(const CMsgSOCacheSubscribed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSOCacheSubscribed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSOCacheSubscribed::IsInitialized() const {
  return true;
}

void CMsgSOCacheSubscribed::Swap(CMsgSOCacheSubscribed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSOCacheSubscribed::InternalSwap(CMsgSOCacheSubscribed* other) {
  using std::swap;
  objects_.InternalSwap(&other->objects_);
  swap(owner_soid_, other->owner_soid_);
  swap(version_, other->version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSOCacheSubscribed::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSOCacheUnsubscribed::InitAsDefaultInstance() {
  ::_CMsgSOCacheUnsubscribed_default_instance_._instance.get_mutable()->owner_soid_ = const_cast< ::CMsgSOIDOwner*>(
      ::CMsgSOIDOwner::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSOCacheUnsubscribed::kOwnerSoidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSOCacheUnsubscribed::CMsgSOCacheUnsubscribed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOCacheUnsubscribed();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSOCacheUnsubscribed)
}
CMsgSOCacheUnsubscribed::CMsgSOCacheUnsubscribed(const CMsgSOCacheUnsubscribed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_owner_soid()) {
    owner_soid_ = new ::CMsgSOIDOwner(*from.owner_soid_);
  } else {
    owner_soid_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CMsgSOCacheUnsubscribed)
}

void CMsgSOCacheUnsubscribed::SharedCtor() {
  _cached_size_ = 0;
  owner_soid_ = NULL;
}

CMsgSOCacheUnsubscribed::~CMsgSOCacheUnsubscribed() {
  // @@protoc_insertion_point(destructor:CMsgSOCacheUnsubscribed)
  SharedDtor();
}

void CMsgSOCacheUnsubscribed::SharedDtor() {
  if (this != internal_default_instance()) delete owner_soid_;
}

void CMsgSOCacheUnsubscribed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSOCacheUnsubscribed::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSOCacheUnsubscribed& CMsgSOCacheUnsubscribed::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOCacheUnsubscribed();
  return *internal_default_instance();
}

CMsgSOCacheUnsubscribed* CMsgSOCacheUnsubscribed::New(::google::protobuf::Arena* arena) const {
  CMsgSOCacheUnsubscribed* n = new CMsgSOCacheUnsubscribed;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSOCacheUnsubscribed::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSOCacheUnsubscribed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(owner_soid_ != NULL);
    owner_soid_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSOCacheUnsubscribed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSOCacheUnsubscribed)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgSOIDOwner owner_soid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_owner_soid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSOCacheUnsubscribed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSOCacheUnsubscribed)
  return false;
#undef DO_
}

void CMsgSOCacheUnsubscribed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSOCacheUnsubscribed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgSOIDOwner owner_soid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->owner_soid_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSOCacheUnsubscribed)
}

::google::protobuf::uint8* CMsgSOCacheUnsubscribed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSOCacheUnsubscribed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgSOIDOwner owner_soid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->owner_soid_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSOCacheUnsubscribed)
  return target;
}

size_t CMsgSOCacheUnsubscribed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSOCacheUnsubscribed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .CMsgSOIDOwner owner_soid = 2;
  if (has_owner_soid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->owner_soid_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSOCacheUnsubscribed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSOCacheUnsubscribed)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSOCacheUnsubscribed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSOCacheUnsubscribed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSOCacheUnsubscribed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSOCacheUnsubscribed)
    MergeFrom(*source);
  }
}

void CMsgSOCacheUnsubscribed::MergeFrom(const CMsgSOCacheUnsubscribed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSOCacheUnsubscribed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_owner_soid()) {
    mutable_owner_soid()->::CMsgSOIDOwner::MergeFrom(from.owner_soid());
  }
}

void CMsgSOCacheUnsubscribed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSOCacheUnsubscribed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSOCacheUnsubscribed::CopyFrom(const CMsgSOCacheUnsubscribed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSOCacheUnsubscribed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSOCacheUnsubscribed::IsInitialized() const {
  return true;
}

void CMsgSOCacheUnsubscribed::Swap(CMsgSOCacheUnsubscribed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSOCacheUnsubscribed::InternalSwap(CMsgSOCacheUnsubscribed* other) {
  using std::swap;
  swap(owner_soid_, other->owner_soid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSOCacheUnsubscribed::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSOCacheSubscriptionCheck::InitAsDefaultInstance() {
  ::_CMsgSOCacheSubscriptionCheck_default_instance_._instance.get_mutable()->owner_soid_ = const_cast< ::CMsgSOIDOwner*>(
      ::CMsgSOIDOwner::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSOCacheSubscriptionCheck::kVersionFieldNumber;
const int CMsgSOCacheSubscriptionCheck::kOwnerSoidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSOCacheSubscriptionCheck::CMsgSOCacheSubscriptionCheck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOCacheSubscriptionCheck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSOCacheSubscriptionCheck)
}
CMsgSOCacheSubscriptionCheck::CMsgSOCacheSubscriptionCheck(const CMsgSOCacheSubscriptionCheck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_owner_soid()) {
    owner_soid_ = new ::CMsgSOIDOwner(*from.owner_soid_);
  } else {
    owner_soid_ = NULL;
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:CMsgSOCacheSubscriptionCheck)
}

void CMsgSOCacheSubscriptionCheck::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&owner_soid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&owner_soid_)) + sizeof(version_));
}

CMsgSOCacheSubscriptionCheck::~CMsgSOCacheSubscriptionCheck() {
  // @@protoc_insertion_point(destructor:CMsgSOCacheSubscriptionCheck)
  SharedDtor();
}

void CMsgSOCacheSubscriptionCheck::SharedDtor() {
  if (this != internal_default_instance()) delete owner_soid_;
}

void CMsgSOCacheSubscriptionCheck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSOCacheSubscriptionCheck::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSOCacheSubscriptionCheck& CMsgSOCacheSubscriptionCheck::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOCacheSubscriptionCheck();
  return *internal_default_instance();
}

CMsgSOCacheSubscriptionCheck* CMsgSOCacheSubscriptionCheck::New(::google::protobuf::Arena* arena) const {
  CMsgSOCacheSubscriptionCheck* n = new CMsgSOCacheSubscriptionCheck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSOCacheSubscriptionCheck::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSOCacheSubscriptionCheck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(owner_soid_ != NULL);
    owner_soid_->Clear();
  }
  version_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSOCacheSubscriptionCheck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSOCacheSubscriptionCheck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgSOIDOwner owner_soid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_owner_soid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSOCacheSubscriptionCheck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSOCacheSubscriptionCheck)
  return false;
#undef DO_
}

void CMsgSOCacheSubscriptionCheck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSOCacheSubscriptionCheck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 version = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->version(), output);
  }

  // optional .CMsgSOIDOwner owner_soid = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->owner_soid_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSOCacheSubscriptionCheck)
}

::google::protobuf::uint8* CMsgSOCacheSubscriptionCheck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSOCacheSubscriptionCheck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->version(), target);
  }

  // optional .CMsgSOIDOwner owner_soid = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->owner_soid_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSOCacheSubscriptionCheck)
  return target;
}

size_t CMsgSOCacheSubscriptionCheck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSOCacheSubscriptionCheck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .CMsgSOIDOwner owner_soid = 3;
    if (has_owner_soid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->owner_soid_);
    }

    // optional fixed64 version = 2;
    if (has_version()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSOCacheSubscriptionCheck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSOCacheSubscriptionCheck)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSOCacheSubscriptionCheck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSOCacheSubscriptionCheck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSOCacheSubscriptionCheck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSOCacheSubscriptionCheck)
    MergeFrom(*source);
  }
}

void CMsgSOCacheSubscriptionCheck::MergeFrom(const CMsgSOCacheSubscriptionCheck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSOCacheSubscriptionCheck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_owner_soid()->::CMsgSOIDOwner::MergeFrom(from.owner_soid());
    }
    if (cached_has_bits & 0x00000002u) {
      version_ = from.version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSOCacheSubscriptionCheck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSOCacheSubscriptionCheck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSOCacheSubscriptionCheck::CopyFrom(const CMsgSOCacheSubscriptionCheck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSOCacheSubscriptionCheck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSOCacheSubscriptionCheck::IsInitialized() const {
  return true;
}

void CMsgSOCacheSubscriptionCheck::Swap(CMsgSOCacheSubscriptionCheck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSOCacheSubscriptionCheck::InternalSwap(CMsgSOCacheSubscriptionCheck* other) {
  using std::swap;
  swap(owner_soid_, other->owner_soid_);
  swap(version_, other->version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSOCacheSubscriptionCheck::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSOCacheSubscriptionRefresh::InitAsDefaultInstance() {
  ::_CMsgSOCacheSubscriptionRefresh_default_instance_._instance.get_mutable()->owner_soid_ = const_cast< ::CMsgSOIDOwner*>(
      ::CMsgSOIDOwner::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSOCacheSubscriptionRefresh::kOwnerSoidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSOCacheSubscriptionRefresh::CMsgSOCacheSubscriptionRefresh()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOCacheSubscriptionRefresh();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSOCacheSubscriptionRefresh)
}
CMsgSOCacheSubscriptionRefresh::CMsgSOCacheSubscriptionRefresh(const CMsgSOCacheSubscriptionRefresh& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_owner_soid()) {
    owner_soid_ = new ::CMsgSOIDOwner(*from.owner_soid_);
  } else {
    owner_soid_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CMsgSOCacheSubscriptionRefresh)
}

void CMsgSOCacheSubscriptionRefresh::SharedCtor() {
  _cached_size_ = 0;
  owner_soid_ = NULL;
}

CMsgSOCacheSubscriptionRefresh::~CMsgSOCacheSubscriptionRefresh() {
  // @@protoc_insertion_point(destructor:CMsgSOCacheSubscriptionRefresh)
  SharedDtor();
}

void CMsgSOCacheSubscriptionRefresh::SharedDtor() {
  if (this != internal_default_instance()) delete owner_soid_;
}

void CMsgSOCacheSubscriptionRefresh::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSOCacheSubscriptionRefresh::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSOCacheSubscriptionRefresh& CMsgSOCacheSubscriptionRefresh::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOCacheSubscriptionRefresh();
  return *internal_default_instance();
}

CMsgSOCacheSubscriptionRefresh* CMsgSOCacheSubscriptionRefresh::New(::google::protobuf::Arena* arena) const {
  CMsgSOCacheSubscriptionRefresh* n = new CMsgSOCacheSubscriptionRefresh;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSOCacheSubscriptionRefresh::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSOCacheSubscriptionRefresh)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(owner_soid_ != NULL);
    owner_soid_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSOCacheSubscriptionRefresh::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSOCacheSubscriptionRefresh)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgSOIDOwner owner_soid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_owner_soid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSOCacheSubscriptionRefresh)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSOCacheSubscriptionRefresh)
  return false;
#undef DO_
}

void CMsgSOCacheSubscriptionRefresh::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSOCacheSubscriptionRefresh)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgSOIDOwner owner_soid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->owner_soid_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSOCacheSubscriptionRefresh)
}

::google::protobuf::uint8* CMsgSOCacheSubscriptionRefresh::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSOCacheSubscriptionRefresh)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgSOIDOwner owner_soid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->owner_soid_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSOCacheSubscriptionRefresh)
  return target;
}

size_t CMsgSOCacheSubscriptionRefresh::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSOCacheSubscriptionRefresh)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .CMsgSOIDOwner owner_soid = 2;
  if (has_owner_soid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->owner_soid_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSOCacheSubscriptionRefresh::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSOCacheSubscriptionRefresh)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSOCacheSubscriptionRefresh* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSOCacheSubscriptionRefresh>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSOCacheSubscriptionRefresh)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSOCacheSubscriptionRefresh)
    MergeFrom(*source);
  }
}

void CMsgSOCacheSubscriptionRefresh::MergeFrom(const CMsgSOCacheSubscriptionRefresh& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSOCacheSubscriptionRefresh)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_owner_soid()) {
    mutable_owner_soid()->::CMsgSOIDOwner::MergeFrom(from.owner_soid());
  }
}

void CMsgSOCacheSubscriptionRefresh::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSOCacheSubscriptionRefresh)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSOCacheSubscriptionRefresh::CopyFrom(const CMsgSOCacheSubscriptionRefresh& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSOCacheSubscriptionRefresh)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSOCacheSubscriptionRefresh::IsInitialized() const {
  return true;
}

void CMsgSOCacheSubscriptionRefresh::Swap(CMsgSOCacheSubscriptionRefresh* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSOCacheSubscriptionRefresh::InternalSwap(CMsgSOCacheSubscriptionRefresh* other) {
  using std::swap;
  swap(owner_soid_, other->owner_soid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSOCacheSubscriptionRefresh::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSOCacheVersion::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSOCacheVersion::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSOCacheVersion::CMsgSOCacheVersion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOCacheVersion();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSOCacheVersion)
}
CMsgSOCacheVersion::CMsgSOCacheVersion(const CMsgSOCacheVersion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:CMsgSOCacheVersion)
}

void CMsgSOCacheVersion::SharedCtor() {
  _cached_size_ = 0;
  version_ = GOOGLE_ULONGLONG(0);
}

CMsgSOCacheVersion::~CMsgSOCacheVersion() {
  // @@protoc_insertion_point(destructor:CMsgSOCacheVersion)
  SharedDtor();
}

void CMsgSOCacheVersion::SharedDtor() {
}

void CMsgSOCacheVersion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSOCacheVersion::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSOCacheVersion& CMsgSOCacheVersion::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOCacheVersion();
  return *internal_default_instance();
}

CMsgSOCacheVersion* CMsgSOCacheVersion::New(::google::protobuf::Arena* arena) const {
  CMsgSOCacheVersion* n = new CMsgSOCacheVersion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSOCacheVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSOCacheVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSOCacheVersion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSOCacheVersion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSOCacheVersion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSOCacheVersion)
  return false;
#undef DO_
}

void CMsgSOCacheVersion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSOCacheVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 version = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSOCacheVersion)
}

::google::protobuf::uint8* CMsgSOCacheVersion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSOCacheVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 version = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSOCacheVersion)
  return target;
}

size_t CMsgSOCacheVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSOCacheVersion)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 version = 1;
  if (has_version()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSOCacheVersion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSOCacheVersion)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSOCacheVersion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSOCacheVersion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSOCacheVersion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSOCacheVersion)
    MergeFrom(*source);
  }
}

void CMsgSOCacheVersion::MergeFrom(const CMsgSOCacheVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSOCacheVersion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_version()) {
    set_version(from.version());
  }
}

void CMsgSOCacheVersion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSOCacheVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSOCacheVersion::CopyFrom(const CMsgSOCacheVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSOCacheVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSOCacheVersion::IsInitialized() const {
  return true;
}

void CMsgSOCacheVersion::Swap(CMsgSOCacheVersion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSOCacheVersion::InternalSwap(CMsgSOCacheVersion* other) {
  using std::swap;
  swap(version_, other->version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSOCacheVersion::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgAccountDetails::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAccountDetails::kValidFieldNumber;
const int CMsgAccountDetails::kAccountNameFieldNumber;
const int CMsgAccountDetails::kPublicProfileFieldNumber;
const int CMsgAccountDetails::kPublicInventoryFieldNumber;
const int CMsgAccountDetails::kVacBannedFieldNumber;
const int CMsgAccountDetails::kCyberCafeFieldNumber;
const int CMsgAccountDetails::kSchoolAccountFieldNumber;
const int CMsgAccountDetails::kFreeTrialAccountFieldNumber;
const int CMsgAccountDetails::kSubscribedFieldNumber;
const int CMsgAccountDetails::kLowViolenceFieldNumber;
const int CMsgAccountDetails::kLimitedFieldNumber;
const int CMsgAccountDetails::kTrustedFieldNumber;
const int CMsgAccountDetails::kPackageFieldNumber;
const int CMsgAccountDetails::kTimeCachedFieldNumber;
const int CMsgAccountDetails::kAccountLockedFieldNumber;
const int CMsgAccountDetails::kCommunityBannedFieldNumber;
const int CMsgAccountDetails::kTradeBannedFieldNumber;
const int CMsgAccountDetails::kEligibleForCommunityMarketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAccountDetails::CMsgAccountDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgAccountDetails();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAccountDetails)
}
CMsgAccountDetails::CMsgAccountDetails(const CMsgAccountDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_name()) {
    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  ::memcpy(&valid_, &from.valid_,
    static_cast<size_t>(reinterpret_cast<char*>(&eligible_for_community_market_) -
    reinterpret_cast<char*>(&valid_)) + sizeof(eligible_for_community_market_));
  // @@protoc_insertion_point(copy_constructor:CMsgAccountDetails)
}

void CMsgAccountDetails::SharedCtor() {
  _cached_size_ = 0;
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&valid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&eligible_for_community_market_) -
      reinterpret_cast<char*>(&valid_)) + sizeof(eligible_for_community_market_));
}

CMsgAccountDetails::~CMsgAccountDetails() {
  // @@protoc_insertion_point(destructor:CMsgAccountDetails)
  SharedDtor();
}

void CMsgAccountDetails::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgAccountDetails::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAccountDetails::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAccountDetails& CMsgAccountDetails::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgAccountDetails();
  return *internal_default_instance();
}

CMsgAccountDetails* CMsgAccountDetails::New(::google::protobuf::Arena* arena) const {
  CMsgAccountDetails* n = new CMsgAccountDetails;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAccountDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAccountDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!account_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*account_name_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 254u) {
    ::memset(&valid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&free_trial_account_) -
        reinterpret_cast<char*>(&valid_)) + sizeof(free_trial_account_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&subscribed_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&community_banned_) -
        reinterpret_cast<char*>(&subscribed_)) + sizeof(community_banned_));
  }
  if (cached_has_bits & 196608u) {
    ::memset(&trade_banned_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&eligible_for_community_market_) -
        reinterpret_cast<char*>(&trade_banned_)) + sizeof(eligible_for_community_market_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAccountDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAccountDetails)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool valid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_valid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &valid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account_name().data(), static_cast<int>(this->account_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgAccountDetails.account_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool public_profile = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_public_profile();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &public_profile_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool public_inventory = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_public_inventory();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &public_inventory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool vac_banned = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_vac_banned();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vac_banned_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool cyber_cafe = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_cyber_cafe();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &cyber_cafe_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool school_account = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_school_account();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &school_account_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool free_trial_account = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_free_trial_account();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &free_trial_account_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool subscribed = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_subscribed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &subscribed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool low_violence = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_low_violence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &low_violence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool limited = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_limited();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &limited_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool trusted = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_trusted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &trusted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 package = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_package();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &package_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 time_cached = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(125u /* 125 & 0xFF */)) {
          set_has_time_cached();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &time_cached_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool account_locked = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_account_locked();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &account_locked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool community_banned = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_community_banned();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &community_banned_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool trade_banned = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_trade_banned();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &trade_banned_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool eligible_for_community_market = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_eligible_for_community_market();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &eligible_for_community_market_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAccountDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAccountDetails)
  return false;
#undef DO_
}

void CMsgAccountDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAccountDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool valid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->valid(), output);
  }

  // optional string account_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), static_cast<int>(this->account_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAccountDetails.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account_name(), output);
  }

  // optional bool public_profile = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->public_profile(), output);
  }

  // optional bool public_inventory = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->public_inventory(), output);
  }

  // optional bool vac_banned = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->vac_banned(), output);
  }

  // optional bool cyber_cafe = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->cyber_cafe(), output);
  }

  // optional bool school_account = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->school_account(), output);
  }

  // optional bool free_trial_account = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->free_trial_account(), output);
  }

  // optional bool subscribed = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->subscribed(), output);
  }

  // optional bool low_violence = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->low_violence(), output);
  }

  // optional bool limited = 12;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->limited(), output);
  }

  // optional bool trusted = 13;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->trusted(), output);
  }

  // optional uint32 package = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->package(), output);
  }

  // optional fixed32 time_cached = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(15, this->time_cached(), output);
  }

  // optional bool account_locked = 16;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->account_locked(), output);
  }

  // optional bool community_banned = 17;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->community_banned(), output);
  }

  // optional bool trade_banned = 18;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->trade_banned(), output);
  }

  // optional bool eligible_for_community_market = 19;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->eligible_for_community_market(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAccountDetails)
}

::google::protobuf::uint8* CMsgAccountDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAccountDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool valid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->valid(), target);
  }

  // optional string account_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), static_cast<int>(this->account_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAccountDetails.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account_name(), target);
  }

  // optional bool public_profile = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->public_profile(), target);
  }

  // optional bool public_inventory = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->public_inventory(), target);
  }

  // optional bool vac_banned = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->vac_banned(), target);
  }

  // optional bool cyber_cafe = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->cyber_cafe(), target);
  }

  // optional bool school_account = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->school_account(), target);
  }

  // optional bool free_trial_account = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->free_trial_account(), target);
  }

  // optional bool subscribed = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->subscribed(), target);
  }

  // optional bool low_violence = 11;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->low_violence(), target);
  }

  // optional bool limited = 12;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->limited(), target);
  }

  // optional bool trusted = 13;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->trusted(), target);
  }

  // optional uint32 package = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->package(), target);
  }

  // optional fixed32 time_cached = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(15, this->time_cached(), target);
  }

  // optional bool account_locked = 16;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->account_locked(), target);
  }

  // optional bool community_banned = 17;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->community_banned(), target);
  }

  // optional bool trade_banned = 18;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->trade_banned(), target);
  }

  // optional bool eligible_for_community_market = 19;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->eligible_for_community_market(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAccountDetails)
  return target;
}

size_t CMsgAccountDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAccountDetails)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string account_name = 2;
    if (has_account_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_name());
    }

    // optional bool valid = 1;
    if (has_valid()) {
      total_size += 1 + 1;
    }

    // optional bool public_profile = 4;
    if (has_public_profile()) {
      total_size += 1 + 1;
    }

    // optional bool public_inventory = 5;
    if (has_public_inventory()) {
      total_size += 1 + 1;
    }

    // optional bool vac_banned = 6;
    if (has_vac_banned()) {
      total_size += 1 + 1;
    }

    // optional bool cyber_cafe = 7;
    if (has_cyber_cafe()) {
      total_size += 1 + 1;
    }

    // optional bool school_account = 8;
    if (has_school_account()) {
      total_size += 1 + 1;
    }

    // optional bool free_trial_account = 9;
    if (has_free_trial_account()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional bool subscribed = 10;
    if (has_subscribed()) {
      total_size += 1 + 1;
    }

    // optional bool low_violence = 11;
    if (has_low_violence()) {
      total_size += 1 + 1;
    }

    // optional bool limited = 12;
    if (has_limited()) {
      total_size += 1 + 1;
    }

    // optional bool trusted = 13;
    if (has_trusted()) {
      total_size += 1 + 1;
    }

    // optional bool account_locked = 16;
    if (has_account_locked()) {
      total_size += 2 + 1;
    }

    // optional uint32 package = 14;
    if (has_package()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->package());
    }

    // optional fixed32 time_cached = 15;
    if (has_time_cached()) {
      total_size += 1 + 4;
    }

    // optional bool community_banned = 17;
    if (has_community_banned()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[16 / 32] & 196608u) {
    // optional bool trade_banned = 18;
    if (has_trade_banned()) {
      total_size += 2 + 1;
    }

    // optional bool eligible_for_community_market = 19;
    if (has_eligible_for_community_market()) {
      total_size += 2 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAccountDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAccountDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAccountDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAccountDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAccountDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAccountDetails)
    MergeFrom(*source);
  }
}

void CMsgAccountDetails::MergeFrom(const CMsgAccountDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAccountDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account_name();
      account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      valid_ = from.valid_;
    }
    if (cached_has_bits & 0x00000004u) {
      public_profile_ = from.public_profile_;
    }
    if (cached_has_bits & 0x00000008u) {
      public_inventory_ = from.public_inventory_;
    }
    if (cached_has_bits & 0x00000010u) {
      vac_banned_ = from.vac_banned_;
    }
    if (cached_has_bits & 0x00000020u) {
      cyber_cafe_ = from.cyber_cafe_;
    }
    if (cached_has_bits & 0x00000040u) {
      school_account_ = from.school_account_;
    }
    if (cached_has_bits & 0x00000080u) {
      free_trial_account_ = from.free_trial_account_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      subscribed_ = from.subscribed_;
    }
    if (cached_has_bits & 0x00000200u) {
      low_violence_ = from.low_violence_;
    }
    if (cached_has_bits & 0x00000400u) {
      limited_ = from.limited_;
    }
    if (cached_has_bits & 0x00000800u) {
      trusted_ = from.trusted_;
    }
    if (cached_has_bits & 0x00001000u) {
      account_locked_ = from.account_locked_;
    }
    if (cached_has_bits & 0x00002000u) {
      package_ = from.package_;
    }
    if (cached_has_bits & 0x00004000u) {
      time_cached_ = from.time_cached_;
    }
    if (cached_has_bits & 0x00008000u) {
      community_banned_ = from.community_banned_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 196608u) {
    if (cached_has_bits & 0x00010000u) {
      trade_banned_ = from.trade_banned_;
    }
    if (cached_has_bits & 0x00020000u) {
      eligible_for_community_market_ = from.eligible_for_community_market_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgAccountDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAccountDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAccountDetails::CopyFrom(const CMsgAccountDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAccountDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAccountDetails::IsInitialized() const {
  return true;
}

void CMsgAccountDetails::Swap(CMsgAccountDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAccountDetails::InternalSwap(CMsgAccountDetails* other) {
  using std::swap;
  account_name_.Swap(&other->account_name_);
  swap(valid_, other->valid_);
  swap(public_profile_, other->public_profile_);
  swap(public_inventory_, other->public_inventory_);
  swap(vac_banned_, other->vac_banned_);
  swap(cyber_cafe_, other->cyber_cafe_);
  swap(school_account_, other->school_account_);
  swap(free_trial_account_, other->free_trial_account_);
  swap(subscribed_, other->subscribed_);
  swap(low_violence_, other->low_violence_);
  swap(limited_, other->limited_);
  swap(trusted_, other->trusted_);
  swap(account_locked_, other->account_locked_);
  swap(package_, other->package_);
  swap(time_cached_, other->time_cached_);
  swap(community_banned_, other->community_banned_);
  swap(trade_banned_, other->trade_banned_);
  swap(eligible_for_community_market_, other->eligible_for_community_market_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAccountDetails::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCMultiplexMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCMultiplexMessage::kMsgtypeFieldNumber;
const int CMsgGCMultiplexMessage::kPayloadFieldNumber;
const int CMsgGCMultiplexMessage::kSteamidsFieldNumber;
const int CMsgGCMultiplexMessage::kReplytogcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCMultiplexMessage::CMsgGCMultiplexMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgGCMultiplexMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMultiplexMessage)
}
CMsgGCMultiplexMessage::CMsgGCMultiplexMessage(const CMsgGCMultiplexMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      steamids_(from.steamids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_payload()) {
    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  ::memcpy(&msgtype_, &from.msgtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&replytogc_) -
    reinterpret_cast<char*>(&msgtype_)) + sizeof(replytogc_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCMultiplexMessage)
}

void CMsgGCMultiplexMessage::SharedCtor() {
  _cached_size_ = 0;
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&replytogc_) -
      reinterpret_cast<char*>(&msgtype_)) + sizeof(replytogc_));
}

CMsgGCMultiplexMessage::~CMsgGCMultiplexMessage() {
  // @@protoc_insertion_point(destructor:CMsgGCMultiplexMessage)
  SharedDtor();
}

void CMsgGCMultiplexMessage::SharedDtor() {
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCMultiplexMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMultiplexMessage::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCMultiplexMessage& CMsgGCMultiplexMessage::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgGCMultiplexMessage();
  return *internal_default_instance();
}

CMsgGCMultiplexMessage* CMsgGCMultiplexMessage::New(::google::protobuf::Arena* arena) const {
  CMsgGCMultiplexMessage* n = new CMsgGCMultiplexMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMultiplexMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMultiplexMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steamids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!payload_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*payload_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&msgtype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&replytogc_) -
        reinterpret_cast<char*>(&msgtype_)) + sizeof(replytogc_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCMultiplexMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMultiplexMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 msgtype = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_msgtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes payload = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 steamids = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 25u, input, this->mutable_steamids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_steamids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool replytogc = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_replytogc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &replytogc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMultiplexMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMultiplexMessage)
  return false;
#undef DO_
}

void CMsgGCMultiplexMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMultiplexMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 msgtype = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgtype(), output);
  }

  // optional bytes payload = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->payload(), output);
  }

  // repeated fixed64 steamids = 3;
  for (int i = 0, n = this->steamids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      3, this->steamids(i), output);
  }

  // optional bool replytogc = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->replytogc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMultiplexMessage)
}

::google::protobuf::uint8* CMsgGCMultiplexMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMultiplexMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 msgtype = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgtype(), target);
  }

  // optional bytes payload = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->payload(), target);
  }

  // repeated fixed64 steamids = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(3, this->steamids_, target);

  // optional bool replytogc = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->replytogc(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMultiplexMessage)
  return target;
}

size_t CMsgGCMultiplexMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMultiplexMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated fixed64 steamids = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->steamids_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->steamids_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes payload = 2;
    if (has_payload()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->payload());
    }

    // optional uint32 msgtype = 1;
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgtype());
    }

    // optional bool replytogc = 4;
    if (has_replytogc()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMultiplexMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCMultiplexMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCMultiplexMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMultiplexMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCMultiplexMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCMultiplexMessage)
    MergeFrom(*source);
  }
}

void CMsgGCMultiplexMessage::MergeFrom(const CMsgGCMultiplexMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMultiplexMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  steamids_.MergeFrom(from.steamids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_payload();
      payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
    }
    if (cached_has_bits & 0x00000002u) {
      msgtype_ = from.msgtype_;
    }
    if (cached_has_bits & 0x00000004u) {
      replytogc_ = from.replytogc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCMultiplexMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCMultiplexMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMultiplexMessage::CopyFrom(const CMsgGCMultiplexMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMultiplexMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMultiplexMessage::IsInitialized() const {
  return true;
}

void CMsgGCMultiplexMessage::Swap(CMsgGCMultiplexMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMultiplexMessage::InternalSwap(CMsgGCMultiplexMessage* other) {
  using std::swap;
  steamids_.InternalSwap(&other->steamids_);
  payload_.Swap(&other->payload_);
  swap(msgtype_, other->msgtype_);
  swap(replytogc_, other->replytogc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMultiplexMessage::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCMultiplexMessage_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCMultiplexMessage_Response::kMsgtypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCMultiplexMessage_Response::CMsgGCMultiplexMessage_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgGCMultiplexMessage_Response();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMultiplexMessage_Response)
}
CMsgGCMultiplexMessage_Response::CMsgGCMultiplexMessage_Response(const CMsgGCMultiplexMessage_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgtype_ = from.msgtype_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCMultiplexMessage_Response)
}

void CMsgGCMultiplexMessage_Response::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 0u;
}

CMsgGCMultiplexMessage_Response::~CMsgGCMultiplexMessage_Response() {
  // @@protoc_insertion_point(destructor:CMsgGCMultiplexMessage_Response)
  SharedDtor();
}

void CMsgGCMultiplexMessage_Response::SharedDtor() {
}

void CMsgGCMultiplexMessage_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMultiplexMessage_Response::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCMultiplexMessage_Response& CMsgGCMultiplexMessage_Response::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgGCMultiplexMessage_Response();
  return *internal_default_instance();
}

CMsgGCMultiplexMessage_Response* CMsgGCMultiplexMessage_Response::New(::google::protobuf::Arena* arena) const {
  CMsgGCMultiplexMessage_Response* n = new CMsgGCMultiplexMessage_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMultiplexMessage_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMultiplexMessage_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgtype_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCMultiplexMessage_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMultiplexMessage_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 msgtype = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_msgtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMultiplexMessage_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMultiplexMessage_Response)
  return false;
#undef DO_
}

void CMsgGCMultiplexMessage_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMultiplexMessage_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 msgtype = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgtype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMultiplexMessage_Response)
}

::google::protobuf::uint8* CMsgGCMultiplexMessage_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMultiplexMessage_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 msgtype = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgtype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMultiplexMessage_Response)
  return target;
}

size_t CMsgGCMultiplexMessage_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMultiplexMessage_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 msgtype = 1;
  if (has_msgtype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMultiplexMessage_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCMultiplexMessage_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCMultiplexMessage_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMultiplexMessage_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCMultiplexMessage_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCMultiplexMessage_Response)
    MergeFrom(*source);
  }
}

void CMsgGCMultiplexMessage_Response::MergeFrom(const CMsgGCMultiplexMessage_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMultiplexMessage_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_msgtype()) {
    set_msgtype(from.msgtype());
  }
}

void CMsgGCMultiplexMessage_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCMultiplexMessage_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMultiplexMessage_Response::CopyFrom(const CMsgGCMultiplexMessage_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMultiplexMessage_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMultiplexMessage_Response::IsInitialized() const {
  return true;
}

void CMsgGCMultiplexMessage_Response::Swap(CMsgGCMultiplexMessage_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMultiplexMessage_Response::InternalSwap(CMsgGCMultiplexMessage_Response* other) {
  using std::swap;
  swap(msgtype_, other->msgtype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMultiplexMessage_Response::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CGCToGCMsgMasterAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCToGCMsgMasterAck::kDirIndexFieldNumber;
const int CGCToGCMsgMasterAck::kGcTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCToGCMsgMasterAck::CGCToGCMsgMasterAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCGCToGCMsgMasterAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCToGCMsgMasterAck)
}
CGCToGCMsgMasterAck::CGCToGCMsgMasterAck(const CGCToGCMsgMasterAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dir_index_, &from.dir_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&gc_type_) -
    reinterpret_cast<char*>(&dir_index_)) + sizeof(gc_type_));
  // @@protoc_insertion_point(copy_constructor:CGCToGCMsgMasterAck)
}

void CGCToGCMsgMasterAck::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&dir_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gc_type_) -
      reinterpret_cast<char*>(&dir_index_)) + sizeof(gc_type_));
}

CGCToGCMsgMasterAck::~CGCToGCMsgMasterAck() {
  // @@protoc_insertion_point(destructor:CGCToGCMsgMasterAck)
  SharedDtor();
}

void CGCToGCMsgMasterAck::SharedDtor() {
}

void CGCToGCMsgMasterAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCToGCMsgMasterAck::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGCToGCMsgMasterAck& CGCToGCMsgMasterAck::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCGCToGCMsgMasterAck();
  return *internal_default_instance();
}

CGCToGCMsgMasterAck* CGCToGCMsgMasterAck::New(::google::protobuf::Arena* arena) const {
  CGCToGCMsgMasterAck* n = new CGCToGCMsgMasterAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCToGCMsgMasterAck::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCToGCMsgMasterAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&dir_index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&gc_type_) -
        reinterpret_cast<char*>(&dir_index_)) + sizeof(gc_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCToGCMsgMasterAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCToGCMsgMasterAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 dir_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dir_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dir_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 gc_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_gc_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gc_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCToGCMsgMasterAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCToGCMsgMasterAck)
  return false;
#undef DO_
}

void CGCToGCMsgMasterAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCToGCMsgMasterAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 dir_index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dir_index(), output);
  }

  // optional uint32 gc_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gc_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCToGCMsgMasterAck)
}

::google::protobuf::uint8* CGCToGCMsgMasterAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCToGCMsgMasterAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 dir_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dir_index(), target);
  }

  // optional uint32 gc_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gc_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCToGCMsgMasterAck)
  return target;
}

size_t CGCToGCMsgMasterAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCToGCMsgMasterAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 dir_index = 1;
    if (has_dir_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dir_index());
    }

    // optional uint32 gc_type = 2;
    if (has_gc_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gc_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCToGCMsgMasterAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCToGCMsgMasterAck)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCToGCMsgMasterAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCToGCMsgMasterAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCToGCMsgMasterAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCToGCMsgMasterAck)
    MergeFrom(*source);
  }
}

void CGCToGCMsgMasterAck::MergeFrom(const CGCToGCMsgMasterAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCToGCMsgMasterAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      dir_index_ = from.dir_index_;
    }
    if (cached_has_bits & 0x00000002u) {
      gc_type_ = from.gc_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CGCToGCMsgMasterAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCToGCMsgMasterAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCToGCMsgMasterAck::CopyFrom(const CGCToGCMsgMasterAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCToGCMsgMasterAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCToGCMsgMasterAck::IsInitialized() const {
  return true;
}

void CGCToGCMsgMasterAck::Swap(CGCToGCMsgMasterAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCToGCMsgMasterAck::InternalSwap(CGCToGCMsgMasterAck* other) {
  using std::swap;
  swap(dir_index_, other->dir_index_);
  swap(gc_type_, other->gc_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCToGCMsgMasterAck::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CGCToGCMsgMasterAck_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCToGCMsgMasterAck_Response::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCToGCMsgMasterAck_Response::CGCToGCMsgMasterAck_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCGCToGCMsgMasterAck_Response();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCToGCMsgMasterAck_Response)
}
CGCToGCMsgMasterAck_Response::CGCToGCMsgMasterAck_Response(const CGCToGCMsgMasterAck_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CGCToGCMsgMasterAck_Response)
}

void CGCToGCMsgMasterAck_Response::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 2;
}

CGCToGCMsgMasterAck_Response::~CGCToGCMsgMasterAck_Response() {
  // @@protoc_insertion_point(destructor:CGCToGCMsgMasterAck_Response)
  SharedDtor();
}

void CGCToGCMsgMasterAck_Response::SharedDtor() {
}

void CGCToGCMsgMasterAck_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCToGCMsgMasterAck_Response::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGCToGCMsgMasterAck_Response& CGCToGCMsgMasterAck_Response::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCGCToGCMsgMasterAck_Response();
  return *internal_default_instance();
}

CGCToGCMsgMasterAck_Response* CGCToGCMsgMasterAck_Response::New(::google::protobuf::Arena* arena) const {
  CGCToGCMsgMasterAck_Response* n = new CGCToGCMsgMasterAck_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCToGCMsgMasterAck_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCToGCMsgMasterAck_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCToGCMsgMasterAck_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCToGCMsgMasterAck_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCToGCMsgMasterAck_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCToGCMsgMasterAck_Response)
  return false;
#undef DO_
}

void CGCToGCMsgMasterAck_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCToGCMsgMasterAck_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCToGCMsgMasterAck_Response)
}

::google::protobuf::uint8* CGCToGCMsgMasterAck_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCToGCMsgMasterAck_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCToGCMsgMasterAck_Response)
  return target;
}

size_t CGCToGCMsgMasterAck_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCToGCMsgMasterAck_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCToGCMsgMasterAck_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCToGCMsgMasterAck_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCToGCMsgMasterAck_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCToGCMsgMasterAck_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCToGCMsgMasterAck_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCToGCMsgMasterAck_Response)
    MergeFrom(*source);
  }
}

void CGCToGCMsgMasterAck_Response::MergeFrom(const CGCToGCMsgMasterAck_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCToGCMsgMasterAck_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CGCToGCMsgMasterAck_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCToGCMsgMasterAck_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCToGCMsgMasterAck_Response::CopyFrom(const CGCToGCMsgMasterAck_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCToGCMsgMasterAck_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCToGCMsgMasterAck_Response::IsInitialized() const {
  return true;
}

void CGCToGCMsgMasterAck_Response::Swap(CGCToGCMsgMasterAck_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCToGCMsgMasterAck_Response::InternalSwap(CGCToGCMsgMasterAck_Response* other) {
  using std::swap;
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCToGCMsgMasterAck_Response::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CGCToGCMsgMasterStartupComplete::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCToGCMsgMasterStartupComplete::CGCToGCMsgMasterStartupComplete()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCGCToGCMsgMasterStartupComplete();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCToGCMsgMasterStartupComplete)
}
CGCToGCMsgMasterStartupComplete::CGCToGCMsgMasterStartupComplete(const CGCToGCMsgMasterStartupComplete& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CGCToGCMsgMasterStartupComplete)
}

void CGCToGCMsgMasterStartupComplete::SharedCtor() {
  _cached_size_ = 0;
}

CGCToGCMsgMasterStartupComplete::~CGCToGCMsgMasterStartupComplete() {
  // @@protoc_insertion_point(destructor:CGCToGCMsgMasterStartupComplete)
  SharedDtor();
}

void CGCToGCMsgMasterStartupComplete::SharedDtor() {
}

void CGCToGCMsgMasterStartupComplete::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCToGCMsgMasterStartupComplete::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGCToGCMsgMasterStartupComplete& CGCToGCMsgMasterStartupComplete::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCGCToGCMsgMasterStartupComplete();
  return *internal_default_instance();
}

CGCToGCMsgMasterStartupComplete* CGCToGCMsgMasterStartupComplete::New(::google::protobuf::Arena* arena) const {
  CGCToGCMsgMasterStartupComplete* n = new CGCToGCMsgMasterStartupComplete;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCToGCMsgMasterStartupComplete::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCToGCMsgMasterStartupComplete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCToGCMsgMasterStartupComplete::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCToGCMsgMasterStartupComplete)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CGCToGCMsgMasterStartupComplete)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCToGCMsgMasterStartupComplete)
  return false;
#undef DO_
}

void CGCToGCMsgMasterStartupComplete::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCToGCMsgMasterStartupComplete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCToGCMsgMasterStartupComplete)
}

::google::protobuf::uint8* CGCToGCMsgMasterStartupComplete::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCToGCMsgMasterStartupComplete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCToGCMsgMasterStartupComplete)
  return target;
}

size_t CGCToGCMsgMasterStartupComplete::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCToGCMsgMasterStartupComplete)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCToGCMsgMasterStartupComplete::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCToGCMsgMasterStartupComplete)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCToGCMsgMasterStartupComplete* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCToGCMsgMasterStartupComplete>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCToGCMsgMasterStartupComplete)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCToGCMsgMasterStartupComplete)
    MergeFrom(*source);
  }
}

void CGCToGCMsgMasterStartupComplete::MergeFrom(const CGCToGCMsgMasterStartupComplete& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCToGCMsgMasterStartupComplete)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CGCToGCMsgMasterStartupComplete::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCToGCMsgMasterStartupComplete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCToGCMsgMasterStartupComplete::CopyFrom(const CGCToGCMsgMasterStartupComplete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCToGCMsgMasterStartupComplete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCToGCMsgMasterStartupComplete::IsInitialized() const {
  return true;
}

void CGCToGCMsgMasterStartupComplete::Swap(CGCToGCMsgMasterStartupComplete* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCToGCMsgMasterStartupComplete::InternalSwap(CGCToGCMsgMasterStartupComplete* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCToGCMsgMasterStartupComplete::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CGCToGCMsgRouted::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCToGCMsgRouted::kMsgTypeFieldNumber;
const int CGCToGCMsgRouted::kSenderIdFieldNumber;
const int CGCToGCMsgRouted::kNetMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCToGCMsgRouted::CGCToGCMsgRouted()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCGCToGCMsgRouted();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCToGCMsgRouted)
}
CGCToGCMsgRouted::CGCToGCMsgRouted(const CGCToGCMsgRouted& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  net_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_net_message()) {
    net_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.net_message_);
  }
  ::memcpy(&sender_id_, &from.sender_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&msg_type_) -
    reinterpret_cast<char*>(&sender_id_)) + sizeof(msg_type_));
  // @@protoc_insertion_point(copy_constructor:CGCToGCMsgRouted)
}

void CGCToGCMsgRouted::SharedCtor() {
  _cached_size_ = 0;
  net_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sender_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msg_type_) -
      reinterpret_cast<char*>(&sender_id_)) + sizeof(msg_type_));
}

CGCToGCMsgRouted::~CGCToGCMsgRouted() {
  // @@protoc_insertion_point(destructor:CGCToGCMsgRouted)
  SharedDtor();
}

void CGCToGCMsgRouted::SharedDtor() {
  net_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CGCToGCMsgRouted::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCToGCMsgRouted::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGCToGCMsgRouted& CGCToGCMsgRouted::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCGCToGCMsgRouted();
  return *internal_default_instance();
}

CGCToGCMsgRouted* CGCToGCMsgRouted::New(::google::protobuf::Arena* arena) const {
  CGCToGCMsgRouted* n = new CGCToGCMsgRouted;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCToGCMsgRouted::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCToGCMsgRouted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!net_message_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*net_message_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&sender_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&msg_type_) -
        reinterpret_cast<char*>(&sender_id_)) + sizeof(msg_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCToGCMsgRouted::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCToGCMsgRouted)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 msg_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_msg_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 sender_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_sender_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &sender_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes net_message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_net_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCToGCMsgRouted)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCToGCMsgRouted)
  return false;
#undef DO_
}

void CGCToGCMsgRouted::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCToGCMsgRouted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 msg_type = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msg_type(), output);
  }

  // optional fixed64 sender_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->sender_id(), output);
  }

  // optional bytes net_message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->net_message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCToGCMsgRouted)
}

::google::protobuf::uint8* CGCToGCMsgRouted::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCToGCMsgRouted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 msg_type = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msg_type(), target);
  }

  // optional fixed64 sender_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->sender_id(), target);
  }

  // optional bytes net_message = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->net_message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCToGCMsgRouted)
  return target;
}

size_t CGCToGCMsgRouted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCToGCMsgRouted)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes net_message = 3;
    if (has_net_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->net_message());
    }

    // optional fixed64 sender_id = 2;
    if (has_sender_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 msg_type = 1;
    if (has_msg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msg_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCToGCMsgRouted::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCToGCMsgRouted)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCToGCMsgRouted* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCToGCMsgRouted>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCToGCMsgRouted)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCToGCMsgRouted)
    MergeFrom(*source);
  }
}

void CGCToGCMsgRouted::MergeFrom(const CGCToGCMsgRouted& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCToGCMsgRouted)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_net_message();
      net_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.net_message_);
    }
    if (cached_has_bits & 0x00000002u) {
      sender_id_ = from.sender_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      msg_type_ = from.msg_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CGCToGCMsgRouted::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCToGCMsgRouted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCToGCMsgRouted::CopyFrom(const CGCToGCMsgRouted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCToGCMsgRouted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCToGCMsgRouted::IsInitialized() const {
  return true;
}

void CGCToGCMsgRouted::Swap(CGCToGCMsgRouted* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCToGCMsgRouted::InternalSwap(CGCToGCMsgRouted* other) {
  using std::swap;
  net_message_.Swap(&other->net_message_);
  swap(sender_id_, other->sender_id_);
  swap(msg_type_, other->msg_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCToGCMsgRouted::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CGCToGCMsgRoutedReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCToGCMsgRoutedReply::kMsgTypeFieldNumber;
const int CGCToGCMsgRoutedReply::kNetMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCToGCMsgRoutedReply::CGCToGCMsgRoutedReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCGCToGCMsgRoutedReply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCToGCMsgRoutedReply)
}
CGCToGCMsgRoutedReply::CGCToGCMsgRoutedReply(const CGCToGCMsgRoutedReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  net_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_net_message()) {
    net_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.net_message_);
  }
  msg_type_ = from.msg_type_;
  // @@protoc_insertion_point(copy_constructor:CGCToGCMsgRoutedReply)
}

void CGCToGCMsgRoutedReply::SharedCtor() {
  _cached_size_ = 0;
  net_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_type_ = 0u;
}

CGCToGCMsgRoutedReply::~CGCToGCMsgRoutedReply() {
  // @@protoc_insertion_point(destructor:CGCToGCMsgRoutedReply)
  SharedDtor();
}

void CGCToGCMsgRoutedReply::SharedDtor() {
  net_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CGCToGCMsgRoutedReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCToGCMsgRoutedReply::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGCToGCMsgRoutedReply& CGCToGCMsgRoutedReply::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCGCToGCMsgRoutedReply();
  return *internal_default_instance();
}

CGCToGCMsgRoutedReply* CGCToGCMsgRoutedReply::New(::google::protobuf::Arena* arena) const {
  CGCToGCMsgRoutedReply* n = new CGCToGCMsgRoutedReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCToGCMsgRoutedReply::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCToGCMsgRoutedReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!net_message_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*net_message_.UnsafeRawStringPointer())->clear();
  }
  msg_type_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCToGCMsgRoutedReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCToGCMsgRoutedReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 msg_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_msg_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes net_message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_net_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCToGCMsgRoutedReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCToGCMsgRoutedReply)
  return false;
#undef DO_
}

void CGCToGCMsgRoutedReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCToGCMsgRoutedReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 msg_type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msg_type(), output);
  }

  // optional bytes net_message = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->net_message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCToGCMsgRoutedReply)
}

::google::protobuf::uint8* CGCToGCMsgRoutedReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCToGCMsgRoutedReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 msg_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msg_type(), target);
  }

  // optional bytes net_message = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->net_message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCToGCMsgRoutedReply)
  return target;
}

size_t CGCToGCMsgRoutedReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCToGCMsgRoutedReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes net_message = 2;
    if (has_net_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->net_message());
    }

    // optional uint32 msg_type = 1;
    if (has_msg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msg_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCToGCMsgRoutedReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCToGCMsgRoutedReply)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCToGCMsgRoutedReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCToGCMsgRoutedReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCToGCMsgRoutedReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCToGCMsgRoutedReply)
    MergeFrom(*source);
  }
}

void CGCToGCMsgRoutedReply::MergeFrom(const CGCToGCMsgRoutedReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCToGCMsgRoutedReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_net_message();
      net_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.net_message_);
    }
    if (cached_has_bits & 0x00000002u) {
      msg_type_ = from.msg_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CGCToGCMsgRoutedReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCToGCMsgRoutedReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCToGCMsgRoutedReply::CopyFrom(const CGCToGCMsgRoutedReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCToGCMsgRoutedReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCToGCMsgRoutedReply::IsInitialized() const {
  return true;
}

void CGCToGCMsgRoutedReply::Swap(CGCToGCMsgRoutedReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCToGCMsgRoutedReply::InternalSwap(CGCToGCMsgRoutedReply* other) {
  using std::swap;
  net_message_.Swap(&other->net_message_);
  swap(msg_type_, other->msg_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCToGCMsgRoutedReply::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCUpdateSessionIP::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCUpdateSessionIP::kSteamidFieldNumber;
const int CMsgGCUpdateSessionIP::kIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCUpdateSessionIP::CMsgGCUpdateSessionIP()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgGCUpdateSessionIP();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCUpdateSessionIP)
}
CMsgGCUpdateSessionIP::CMsgGCUpdateSessionIP(const CMsgGCUpdateSessionIP& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ip_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(ip_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCUpdateSessionIP)
}

void CMsgGCUpdateSessionIP::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ip_) -
      reinterpret_cast<char*>(&steamid_)) + sizeof(ip_));
}

CMsgGCUpdateSessionIP::~CMsgGCUpdateSessionIP() {
  // @@protoc_insertion_point(destructor:CMsgGCUpdateSessionIP)
  SharedDtor();
}

void CMsgGCUpdateSessionIP::SharedDtor() {
}

void CMsgGCUpdateSessionIP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCUpdateSessionIP::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCUpdateSessionIP& CMsgGCUpdateSessionIP::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgGCUpdateSessionIP();
  return *internal_default_instance();
}

CMsgGCUpdateSessionIP* CMsgGCUpdateSessionIP::New(::google::protobuf::Arena* arena) const {
  CMsgGCUpdateSessionIP* n = new CMsgGCUpdateSessionIP;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCUpdateSessionIP::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCUpdateSessionIP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ip_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(ip_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCUpdateSessionIP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCUpdateSessionIP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCUpdateSessionIP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCUpdateSessionIP)
  return false;
#undef DO_
}

void CMsgGCUpdateSessionIP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCUpdateSessionIP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional fixed32 ip = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->ip(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCUpdateSessionIP)
}

::google::protobuf::uint8* CMsgGCUpdateSessionIP::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCUpdateSessionIP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional fixed32 ip = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->ip(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCUpdateSessionIP)
  return target;
}

size_t CMsgGCUpdateSessionIP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCUpdateSessionIP)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional fixed32 ip = 2;
    if (has_ip()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCUpdateSessionIP::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCUpdateSessionIP)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCUpdateSessionIP* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCUpdateSessionIP>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCUpdateSessionIP)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCUpdateSessionIP)
    MergeFrom(*source);
  }
}

void CMsgGCUpdateSessionIP::MergeFrom(const CMsgGCUpdateSessionIP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCUpdateSessionIP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      ip_ = from.ip_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCUpdateSessionIP::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCUpdateSessionIP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCUpdateSessionIP::CopyFrom(const CMsgGCUpdateSessionIP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCUpdateSessionIP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCUpdateSessionIP::IsInitialized() const {
  return true;
}

void CMsgGCUpdateSessionIP::Swap(CMsgGCUpdateSessionIP* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCUpdateSessionIP::InternalSwap(CMsgGCUpdateSessionIP* other) {
  using std::swap;
  swap(steamid_, other->steamid_);
  swap(ip_, other->ip_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCUpdateSessionIP::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCRequestSessionIP::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCRequestSessionIP::kSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCRequestSessionIP::CMsgGCRequestSessionIP()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgGCRequestSessionIP();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCRequestSessionIP)
}
CMsgGCRequestSessionIP::CMsgGCRequestSessionIP(const CMsgGCRequestSessionIP& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steamid_ = from.steamid_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCRequestSessionIP)
}

void CMsgGCRequestSessionIP::SharedCtor() {
  _cached_size_ = 0;
  steamid_ = GOOGLE_ULONGLONG(0);
}

CMsgGCRequestSessionIP::~CMsgGCRequestSessionIP() {
  // @@protoc_insertion_point(destructor:CMsgGCRequestSessionIP)
  SharedDtor();
}

void CMsgGCRequestSessionIP::SharedDtor() {
}

void CMsgGCRequestSessionIP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCRequestSessionIP::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCRequestSessionIP& CMsgGCRequestSessionIP::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgGCRequestSessionIP();
  return *internal_default_instance();
}

CMsgGCRequestSessionIP* CMsgGCRequestSessionIP::New(::google::protobuf::Arena* arena) const {
  CMsgGCRequestSessionIP* n = new CMsgGCRequestSessionIP;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCRequestSessionIP::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCRequestSessionIP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steamid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCRequestSessionIP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCRequestSessionIP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCRequestSessionIP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCRequestSessionIP)
  return false;
#undef DO_
}

void CMsgGCRequestSessionIP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCRequestSessionIP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCRequestSessionIP)
}

::google::protobuf::uint8* CMsgGCRequestSessionIP::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCRequestSessionIP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCRequestSessionIP)
  return target;
}

size_t CMsgGCRequestSessionIP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCRequestSessionIP)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCRequestSessionIP::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCRequestSessionIP)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCRequestSessionIP* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCRequestSessionIP>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCRequestSessionIP)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCRequestSessionIP)
    MergeFrom(*source);
  }
}

void CMsgGCRequestSessionIP::MergeFrom(const CMsgGCRequestSessionIP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCRequestSessionIP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steamid()) {
    set_steamid(from.steamid());
  }
}

void CMsgGCRequestSessionIP::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCRequestSessionIP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRequestSessionIP::CopyFrom(const CMsgGCRequestSessionIP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCRequestSessionIP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRequestSessionIP::IsInitialized() const {
  return true;
}

void CMsgGCRequestSessionIP::Swap(CMsgGCRequestSessionIP* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCRequestSessionIP::InternalSwap(CMsgGCRequestSessionIP* other) {
  using std::swap;
  swap(steamid_, other->steamid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCRequestSessionIP::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCRequestSessionIPResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCRequestSessionIPResponse::kIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCRequestSessionIPResponse::CMsgGCRequestSessionIPResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgGCRequestSessionIPResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCRequestSessionIPResponse)
}
CMsgGCRequestSessionIPResponse::CMsgGCRequestSessionIPResponse(const CMsgGCRequestSessionIPResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_ = from.ip_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCRequestSessionIPResponse)
}

void CMsgGCRequestSessionIPResponse::SharedCtor() {
  _cached_size_ = 0;
  ip_ = 0u;
}

CMsgGCRequestSessionIPResponse::~CMsgGCRequestSessionIPResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCRequestSessionIPResponse)
  SharedDtor();
}

void CMsgGCRequestSessionIPResponse::SharedDtor() {
}

void CMsgGCRequestSessionIPResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCRequestSessionIPResponse::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCRequestSessionIPResponse& CMsgGCRequestSessionIPResponse::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgGCRequestSessionIPResponse();
  return *internal_default_instance();
}

CMsgGCRequestSessionIPResponse* CMsgGCRequestSessionIPResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCRequestSessionIPResponse* n = new CMsgGCRequestSessionIPResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCRequestSessionIPResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCRequestSessionIPResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCRequestSessionIPResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCRequestSessionIPResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed32 ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCRequestSessionIPResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCRequestSessionIPResponse)
  return false;
#undef DO_
}

void CMsgGCRequestSessionIPResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCRequestSessionIPResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 ip = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->ip(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCRequestSessionIPResponse)
}

::google::protobuf::uint8* CMsgGCRequestSessionIPResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCRequestSessionIPResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 ip = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->ip(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCRequestSessionIPResponse)
  return target;
}

size_t CMsgGCRequestSessionIPResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCRequestSessionIPResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed32 ip = 1;
  if (has_ip()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCRequestSessionIPResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCRequestSessionIPResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCRequestSessionIPResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCRequestSessionIPResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCRequestSessionIPResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCRequestSessionIPResponse)
    MergeFrom(*source);
  }
}

void CMsgGCRequestSessionIPResponse::MergeFrom(const CMsgGCRequestSessionIPResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCRequestSessionIPResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ip()) {
    set_ip(from.ip());
  }
}

void CMsgGCRequestSessionIPResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCRequestSessionIPResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRequestSessionIPResponse::CopyFrom(const CMsgGCRequestSessionIPResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCRequestSessionIPResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRequestSessionIPResponse::IsInitialized() const {
  return true;
}

void CMsgGCRequestSessionIPResponse::Swap(CMsgGCRequestSessionIPResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCRequestSessionIPResponse::InternalSwap(CMsgGCRequestSessionIPResponse* other) {
  using std::swap;
  swap(ip_, other->ip_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCRequestSessionIPResponse::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgSOCacheHaveVersion::InitAsDefaultInstance() {
  ::_CMsgSOCacheHaveVersion_default_instance_._instance.get_mutable()->soid_ = const_cast< ::CMsgSOIDOwner*>(
      ::CMsgSOIDOwner::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSOCacheHaveVersion::kSoidFieldNumber;
const int CMsgSOCacheHaveVersion::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSOCacheHaveVersion::CMsgSOCacheHaveVersion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOCacheHaveVersion();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgSOCacheHaveVersion)
}
CMsgSOCacheHaveVersion::CMsgSOCacheHaveVersion(const CMsgSOCacheHaveVersion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_soid()) {
    soid_ = new ::CMsgSOIDOwner(*from.soid_);
  } else {
    soid_ = NULL;
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:CMsgSOCacheHaveVersion)
}

void CMsgSOCacheHaveVersion::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&soid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&soid_)) + sizeof(version_));
}

CMsgSOCacheHaveVersion::~CMsgSOCacheHaveVersion() {
  // @@protoc_insertion_point(destructor:CMsgSOCacheHaveVersion)
  SharedDtor();
}

void CMsgSOCacheHaveVersion::SharedDtor() {
  if (this != internal_default_instance()) delete soid_;
}

void CMsgSOCacheHaveVersion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSOCacheHaveVersion::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSOCacheHaveVersion& CMsgSOCacheHaveVersion::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOCacheHaveVersion();
  return *internal_default_instance();
}

CMsgSOCacheHaveVersion* CMsgSOCacheHaveVersion::New(::google::protobuf::Arena* arena) const {
  CMsgSOCacheHaveVersion* n = new CMsgSOCacheHaveVersion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSOCacheHaveVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSOCacheHaveVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(soid_ != NULL);
    soid_->Clear();
  }
  version_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSOCacheHaveVersion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgSOCacheHaveVersion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMsgSOIDOwner soid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_soid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgSOCacheHaveVersion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgSOCacheHaveVersion)
  return false;
#undef DO_
}

void CMsgSOCacheHaveVersion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgSOCacheHaveVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgSOIDOwner soid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->soid_, output);
  }

  // optional fixed64 version = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgSOCacheHaveVersion)
}

::google::protobuf::uint8* CMsgSOCacheHaveVersion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSOCacheHaveVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgSOIDOwner soid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->soid_, deterministic, target);
  }

  // optional fixed64 version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSOCacheHaveVersion)
  return target;
}

size_t CMsgSOCacheHaveVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSOCacheHaveVersion)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .CMsgSOIDOwner soid = 1;
    if (has_soid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->soid_);
    }

    // optional fixed64 version = 2;
    if (has_version()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSOCacheHaveVersion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSOCacheHaveVersion)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSOCacheHaveVersion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSOCacheHaveVersion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSOCacheHaveVersion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSOCacheHaveVersion)
    MergeFrom(*source);
  }
}

void CMsgSOCacheHaveVersion::MergeFrom(const CMsgSOCacheHaveVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSOCacheHaveVersion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_soid()->::CMsgSOIDOwner::MergeFrom(from.soid());
    }
    if (cached_has_bits & 0x00000002u) {
      version_ = from.version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSOCacheHaveVersion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSOCacheHaveVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSOCacheHaveVersion::CopyFrom(const CMsgSOCacheHaveVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSOCacheHaveVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSOCacheHaveVersion::IsInitialized() const {
  return true;
}

void CMsgSOCacheHaveVersion::Swap(CMsgSOCacheHaveVersion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSOCacheHaveVersion::InternalSwap(CMsgSOCacheHaveVersion* other) {
  using std::swap;
  swap(soid_, other->soid_);
  swap(version_, other->version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSOCacheHaveVersion::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientHello::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientHello::kVersionFieldNumber;
const int CMsgClientHello::kSocacheHaveVersionsFieldNumber;
const int CMsgClientHello::kClientSessionNeedFieldNumber;
const int CMsgClientHello::kClientLauncherFieldNumber;
const int CMsgClientHello::kPartnerSrcidFieldNumber;
const int CMsgClientHello::kPartnerAccountidFieldNumber;
const int CMsgClientHello::kPartnerAccountflagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientHello::CMsgClientHello()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgClientHello();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientHello)
}
CMsgClientHello::CMsgClientHello(const CMsgClientHello& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      socache_have_versions_(from.socache_have_versions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&partner_accountflags_) -
    reinterpret_cast<char*>(&version_)) + sizeof(partner_accountflags_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientHello)
}

void CMsgClientHello::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&partner_accountflags_) -
      reinterpret_cast<char*>(&version_)) + sizeof(partner_accountflags_));
}

CMsgClientHello::~CMsgClientHello() {
  // @@protoc_insertion_point(destructor:CMsgClientHello)
  SharedDtor();
}

void CMsgClientHello::SharedDtor() {
}

void CMsgClientHello::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientHello::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientHello& CMsgClientHello::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgClientHello();
  return *internal_default_instance();
}

CMsgClientHello* CMsgClientHello::New(::google::protobuf::Arena* arena) const {
  CMsgClientHello* n = new CMsgClientHello;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientHello::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientHello)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  socache_have_versions_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&partner_accountflags_) -
        reinterpret_cast<char*>(&version_)) + sizeof(partner_accountflags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientHello::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientHello)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgSOCacheHaveVersion socache_have_versions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_socache_have_versions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 client_session_need = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_client_session_need();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_session_need_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 client_launcher = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_client_launcher();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_launcher_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 partner_srcid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_partner_srcid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &partner_srcid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 partner_accountid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_partner_accountid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &partner_accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 partner_accountflags = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_partner_accountflags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &partner_accountflags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientHello)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientHello)
  return false;
#undef DO_
}

void CMsgClientHello::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientHello)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // repeated .CMsgSOCacheHaveVersion socache_have_versions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->socache_have_versions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->socache_have_versions(static_cast<int>(i)), output);
  }

  // optional uint32 client_session_need = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->client_session_need(), output);
  }

  // optional uint32 client_launcher = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->client_launcher(), output);
  }

  // optional uint32 partner_srcid = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->partner_srcid(), output);
  }

  // optional uint32 partner_accountid = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->partner_accountid(), output);
  }

  // optional uint32 partner_accountflags = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->partner_accountflags(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientHello)
}

::google::protobuf::uint8* CMsgClientHello::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientHello)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // repeated .CMsgSOCacheHaveVersion socache_have_versions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->socache_have_versions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->socache_have_versions(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 client_session_need = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->client_session_need(), target);
  }

  // optional uint32 client_launcher = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->client_launcher(), target);
  }

  // optional uint32 partner_srcid = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->partner_srcid(), target);
  }

  // optional uint32 partner_accountid = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->partner_accountid(), target);
  }

  // optional uint32 partner_accountflags = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->partner_accountflags(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientHello)
  return target;
}

size_t CMsgClientHello::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientHello)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgSOCacheHaveVersion socache_have_versions = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->socache_have_versions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->socache_have_versions(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional uint32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional uint32 client_session_need = 3;
    if (has_client_session_need()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->client_session_need());
    }

    // optional uint32 client_launcher = 4;
    if (has_client_launcher()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->client_launcher());
    }

    // optional uint32 partner_srcid = 5;
    if (has_partner_srcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->partner_srcid());
    }

    // optional uint32 partner_accountid = 6;
    if (has_partner_accountid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->partner_accountid());
    }

    // optional uint32 partner_accountflags = 7;
    if (has_partner_accountflags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->partner_accountflags());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientHello::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientHello)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientHello* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientHello>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientHello)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientHello)
    MergeFrom(*source);
  }
}

void CMsgClientHello::MergeFrom(const CMsgClientHello& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientHello)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  socache_have_versions_.MergeFrom(from.socache_have_versions_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000002u) {
      client_session_need_ = from.client_session_need_;
    }
    if (cached_has_bits & 0x00000004u) {
      client_launcher_ = from.client_launcher_;
    }
    if (cached_has_bits & 0x00000008u) {
      partner_srcid_ = from.partner_srcid_;
    }
    if (cached_has_bits & 0x00000010u) {
      partner_accountid_ = from.partner_accountid_;
    }
    if (cached_has_bits & 0x00000020u) {
      partner_accountflags_ = from.partner_accountflags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientHello::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientHello)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientHello::CopyFrom(const CMsgClientHello& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientHello)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientHello::IsInitialized() const {
  return true;
}

void CMsgClientHello::Swap(CMsgClientHello* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientHello::InternalSwap(CMsgClientHello* other) {
  using std::swap;
  socache_have_versions_.InternalSwap(&other->socache_have_versions_);
  swap(version_, other->version_);
  swap(client_session_need_, other->client_session_need_);
  swap(client_launcher_, other->client_launcher_);
  swap(partner_srcid_, other->partner_srcid_);
  swap(partner_accountid_, other->partner_accountid_);
  swap(partner_accountflags_, other->partner_accountflags_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientHello::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgServerHello::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgServerHello::kVersionFieldNumber;
const int CMsgServerHello::kSocacheHaveVersionsFieldNumber;
const int CMsgServerHello::kLegacyClientSessionNeedFieldNumber;
const int CMsgServerHello::kClientLauncherFieldNumber;
const int CMsgServerHello::kSteamdatagramPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgServerHello::CMsgServerHello()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgServerHello();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgServerHello)
}
CMsgServerHello::CMsgServerHello(const CMsgServerHello& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      socache_have_versions_(from.socache_have_versions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&steamdatagram_port_) -
    reinterpret_cast<char*>(&version_)) + sizeof(steamdatagram_port_));
  // @@protoc_insertion_point(copy_constructor:CMsgServerHello)
}

void CMsgServerHello::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&steamdatagram_port_) -
      reinterpret_cast<char*>(&version_)) + sizeof(steamdatagram_port_));
}

CMsgServerHello::~CMsgServerHello() {
  // @@protoc_insertion_point(destructor:CMsgServerHello)
  SharedDtor();
}

void CMsgServerHello::SharedDtor() {
}

void CMsgServerHello::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgServerHello::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgServerHello& CMsgServerHello::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgServerHello();
  return *internal_default_instance();
}

CMsgServerHello* CMsgServerHello::New(::google::protobuf::Arena* arena) const {
  CMsgServerHello* n = new CMsgServerHello;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgServerHello::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgServerHello)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  socache_have_versions_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&steamdatagram_port_) -
        reinterpret_cast<char*>(&version_)) + sizeof(steamdatagram_port_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgServerHello::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgServerHello)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgSOCacheHaveVersion socache_have_versions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_socache_have_versions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 legacy_client_session_need = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_legacy_client_session_need();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &legacy_client_session_need_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 client_launcher = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_client_launcher();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_launcher_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 steamdatagram_port = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_steamdatagram_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &steamdatagram_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgServerHello)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgServerHello)
  return false;
#undef DO_
}

void CMsgServerHello::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgServerHello)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // repeated .CMsgSOCacheHaveVersion socache_have_versions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->socache_have_versions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->socache_have_versions(static_cast<int>(i)), output);
  }

  // optional uint32 legacy_client_session_need = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->legacy_client_session_need(), output);
  }

  // optional uint32 client_launcher = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->client_launcher(), output);
  }

  // optional uint32 steamdatagram_port = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->steamdatagram_port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgServerHello)
}

::google::protobuf::uint8* CMsgServerHello::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgServerHello)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // repeated .CMsgSOCacheHaveVersion socache_have_versions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->socache_have_versions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->socache_have_versions(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 legacy_client_session_need = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->legacy_client_session_need(), target);
  }

  // optional uint32 client_launcher = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->client_launcher(), target);
  }

  // optional uint32 steamdatagram_port = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->steamdatagram_port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgServerHello)
  return target;
}

size_t CMsgServerHello::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgServerHello)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgSOCacheHaveVersion socache_have_versions = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->socache_have_versions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->socache_have_versions(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional uint32 legacy_client_session_need = 3;
    if (has_legacy_client_session_need()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->legacy_client_session_need());
    }

    // optional uint32 client_launcher = 4;
    if (has_client_launcher()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->client_launcher());
    }

    // optional uint32 steamdatagram_port = 5;
    if (has_steamdatagram_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->steamdatagram_port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgServerHello::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgServerHello)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgServerHello* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgServerHello>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgServerHello)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgServerHello)
    MergeFrom(*source);
  }
}

void CMsgServerHello::MergeFrom(const CMsgServerHello& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgServerHello)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  socache_have_versions_.MergeFrom(from.socache_have_versions_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000002u) {
      legacy_client_session_need_ = from.legacy_client_session_need_;
    }
    if (cached_has_bits & 0x00000004u) {
      client_launcher_ = from.client_launcher_;
    }
    if (cached_has_bits & 0x00000008u) {
      steamdatagram_port_ = from.steamdatagram_port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgServerHello::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgServerHello)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgServerHello::CopyFrom(const CMsgServerHello& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgServerHello)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgServerHello::IsInitialized() const {
  return true;
}

void CMsgServerHello::Swap(CMsgServerHello* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgServerHello::InternalSwap(CMsgServerHello* other) {
  using std::swap;
  socache_have_versions_.InternalSwap(&other->socache_have_versions_);
  swap(version_, other->version_);
  swap(legacy_client_session_need_, other->legacy_client_session_need_);
  swap(client_launcher_, other->client_launcher_);
  swap(steamdatagram_port_, other->steamdatagram_port_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgServerHello::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientWelcome_Location::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientWelcome_Location::kLatitudeFieldNumber;
const int CMsgClientWelcome_Location::kLongitudeFieldNumber;
const int CMsgClientWelcome_Location::kCountryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientWelcome_Location::CMsgClientWelcome_Location()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgClientWelcome_Location();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientWelcome.Location)
}
CMsgClientWelcome_Location::CMsgClientWelcome_Location(const CMsgClientWelcome_Location& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_country()) {
    country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
  }
  ::memcpy(&latitude_, &from.latitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&longitude_) -
    reinterpret_cast<char*>(&latitude_)) + sizeof(longitude_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientWelcome.Location)
}

void CMsgClientWelcome_Location::SharedCtor() {
  _cached_size_ = 0;
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&latitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&longitude_) -
      reinterpret_cast<char*>(&latitude_)) + sizeof(longitude_));
}

CMsgClientWelcome_Location::~CMsgClientWelcome_Location() {
  // @@protoc_insertion_point(destructor:CMsgClientWelcome.Location)
  SharedDtor();
}

void CMsgClientWelcome_Location::SharedDtor() {
  country_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientWelcome_Location::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientWelcome_Location::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientWelcome_Location& CMsgClientWelcome_Location::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgClientWelcome_Location();
  return *internal_default_instance();
}

CMsgClientWelcome_Location* CMsgClientWelcome_Location::New(::google::protobuf::Arena* arena) const {
  CMsgClientWelcome_Location* n = new CMsgClientWelcome_Location;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientWelcome_Location::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientWelcome.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!country_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*country_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&latitude_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&longitude_) -
        reinterpret_cast<char*>(&latitude_)) + sizeof(longitude_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientWelcome_Location::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientWelcome.Location)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float latitude = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float longitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string country = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->country().data(), static_cast<int>(this->country().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgClientWelcome.Location.country");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientWelcome.Location)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientWelcome.Location)
  return false;
#undef DO_
}

void CMsgClientWelcome_Location::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientWelcome.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float latitude = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->latitude(), output);
  }

  // optional float longitude = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->longitude(), output);
  }

  // optional string country = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country().data(), static_cast<int>(this->country().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientWelcome.Location.country");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->country(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientWelcome.Location)
}

::google::protobuf::uint8* CMsgClientWelcome_Location::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientWelcome.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float latitude = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->latitude(), target);
  }

  // optional float longitude = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->longitude(), target);
  }

  // optional string country = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country().data(), static_cast<int>(this->country().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgClientWelcome.Location.country");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->country(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientWelcome.Location)
  return target;
}

size_t CMsgClientWelcome_Location::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientWelcome.Location)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string country = 3;
    if (has_country()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country());
    }

    // optional float latitude = 1;
    if (has_latitude()) {
      total_size += 1 + 4;
    }

    // optional float longitude = 2;
    if (has_longitude()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientWelcome_Location::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientWelcome.Location)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWelcome_Location* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientWelcome_Location>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientWelcome.Location)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientWelcome.Location)
    MergeFrom(*source);
  }
}

void CMsgClientWelcome_Location::MergeFrom(const CMsgClientWelcome_Location& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientWelcome.Location)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_country();
      country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
    }
    if (cached_has_bits & 0x00000002u) {
      latitude_ = from.latitude_;
    }
    if (cached_has_bits & 0x00000004u) {
      longitude_ = from.longitude_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientWelcome_Location::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientWelcome.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWelcome_Location::CopyFrom(const CMsgClientWelcome_Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientWelcome.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWelcome_Location::IsInitialized() const {
  return true;
}

void CMsgClientWelcome_Location::Swap(CMsgClientWelcome_Location* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientWelcome_Location::InternalSwap(CMsgClientWelcome_Location* other) {
  using std::swap;
  country_.Swap(&other->country_);
  swap(latitude_, other->latitude_);
  swap(longitude_, other->longitude_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientWelcome_Location::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientWelcome::InitAsDefaultInstance() {
  ::_CMsgClientWelcome_default_instance_._instance.get_mutable()->location_ = const_cast< ::CMsgClientWelcome_Location*>(
      ::CMsgClientWelcome_Location::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientWelcome::kVersionFieldNumber;
const int CMsgClientWelcome::kGameDataFieldNumber;
const int CMsgClientWelcome::kOutofdateSubscribedCachesFieldNumber;
const int CMsgClientWelcome::kUptodateSubscribedCachesFieldNumber;
const int CMsgClientWelcome::kLocationFieldNumber;
const int CMsgClientWelcome::kGameData2FieldNumber;
const int CMsgClientWelcome::kRtime32GcWelcomeTimestampFieldNumber;
const int CMsgClientWelcome::kCurrencyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientWelcome::CMsgClientWelcome()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgClientWelcome();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgClientWelcome)
}
CMsgClientWelcome::CMsgClientWelcome(const CMsgClientWelcome& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      outofdate_subscribed_caches_(from.outofdate_subscribed_caches_),
      uptodate_subscribed_caches_(from.uptodate_subscribed_caches_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  game_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_game_data()) {
    game_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_data_);
  }
  game_data2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_game_data2()) {
    game_data2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_data2_);
  }
  if (from.has_location()) {
    location_ = new ::CMsgClientWelcome_Location(*from.location_);
  } else {
    location_ = NULL;
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&currency_) -
    reinterpret_cast<char*>(&version_)) + sizeof(currency_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientWelcome)
}

void CMsgClientWelcome::SharedCtor() {
  _cached_size_ = 0;
  game_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_data2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&currency_) -
      reinterpret_cast<char*>(&location_)) + sizeof(currency_));
}

CMsgClientWelcome::~CMsgClientWelcome() {
  // @@protoc_insertion_point(destructor:CMsgClientWelcome)
  SharedDtor();
}

void CMsgClientWelcome::SharedDtor() {
  game_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_data2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete location_;
}

void CMsgClientWelcome::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientWelcome::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientWelcome& CMsgClientWelcome::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgClientWelcome();
  return *internal_default_instance();
}

CMsgClientWelcome* CMsgClientWelcome::New(::google::protobuf::Arena* arena) const {
  CMsgClientWelcome* n = new CMsgClientWelcome;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientWelcome::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientWelcome)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  outofdate_subscribed_caches_.Clear();
  uptodate_subscribed_caches_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!game_data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*game_data_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!game_data2_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*game_data2_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(location_ != NULL);
      location_->Clear();
    }
  }
  if (cached_has_bits & 56u) {
    ::memset(&version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&currency_) -
        reinterpret_cast<char*>(&version_)) + sizeof(currency_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientWelcome::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgClientWelcome)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes game_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_game_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgSOCacheSubscribed outofdate_subscribed_caches = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_outofdate_subscribed_caches()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgSOCacheSubscriptionCheck uptodate_subscribed_caches = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_uptodate_subscribed_caches()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgClientWelcome.Location location = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes game_data2 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_game_data2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 rtime32_gc_welcome_timestamp = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_rtime32_gc_welcome_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rtime32_gc_welcome_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 currency = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_currency();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgClientWelcome)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgClientWelcome)
  return false;
#undef DO_
}

void CMsgClientWelcome::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgClientWelcome)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // optional bytes game_data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->game_data(), output);
  }

  // repeated .CMsgSOCacheSubscribed outofdate_subscribed_caches = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outofdate_subscribed_caches_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->outofdate_subscribed_caches(static_cast<int>(i)), output);
  }

  // repeated .CMsgSOCacheSubscriptionCheck uptodate_subscribed_caches = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uptodate_subscribed_caches_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->uptodate_subscribed_caches(static_cast<int>(i)), output);
  }

  // optional .CMsgClientWelcome.Location location = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->location_, output);
  }

  // optional bytes game_data2 = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->game_data2(), output);
  }

  // optional uint32 rtime32_gc_welcome_timestamp = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->rtime32_gc_welcome_timestamp(), output);
  }

  // optional uint32 currency = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->currency(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgClientWelcome)
}

::google::protobuf::uint8* CMsgClientWelcome::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientWelcome)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // optional bytes game_data = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->game_data(), target);
  }

  // repeated .CMsgSOCacheSubscribed outofdate_subscribed_caches = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outofdate_subscribed_caches_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->outofdate_subscribed_caches(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CMsgSOCacheSubscriptionCheck uptodate_subscribed_caches = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->uptodate_subscribed_caches_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->uptodate_subscribed_caches(static_cast<int>(i)), deterministic, target);
  }

  // optional .CMsgClientWelcome.Location location = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->location_, deterministic, target);
  }

  // optional bytes game_data2 = 6;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->game_data2(), target);
  }

  // optional uint32 rtime32_gc_welcome_timestamp = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->rtime32_gc_welcome_timestamp(), target);
  }

  // optional uint32 currency = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->currency(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientWelcome)
  return target;
}

size_t CMsgClientWelcome::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientWelcome)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgSOCacheSubscribed outofdate_subscribed_caches = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->outofdate_subscribed_caches_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->outofdate_subscribed_caches(static_cast<int>(i)));
    }
  }

  // repeated .CMsgSOCacheSubscriptionCheck uptodate_subscribed_caches = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->uptodate_subscribed_caches_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->uptodate_subscribed_caches(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes game_data = 2;
    if (has_game_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->game_data());
    }

    // optional bytes game_data2 = 6;
    if (has_game_data2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->game_data2());
    }

    // optional .CMsgClientWelcome.Location location = 5;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->location_);
    }

    // optional uint32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional uint32 rtime32_gc_welcome_timestamp = 7;
    if (has_rtime32_gc_welcome_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rtime32_gc_welcome_timestamp());
    }

    // optional uint32 currency = 8;
    if (has_currency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->currency());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientWelcome::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientWelcome)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWelcome* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientWelcome>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientWelcome)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientWelcome)
    MergeFrom(*source);
  }
}

void CMsgClientWelcome::MergeFrom(const CMsgClientWelcome& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientWelcome)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  outofdate_subscribed_caches_.MergeFrom(from.outofdate_subscribed_caches_);
  uptodate_subscribed_caches_.MergeFrom(from.uptodate_subscribed_caches_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_game_data();
      game_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_game_data2();
      game_data2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_data2_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_location()->::CMsgClientWelcome_Location::MergeFrom(from.location());
    }
    if (cached_has_bits & 0x00000008u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000010u) {
      rtime32_gc_welcome_timestamp_ = from.rtime32_gc_welcome_timestamp_;
    }
    if (cached_has_bits & 0x00000020u) {
      currency_ = from.currency_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientWelcome::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientWelcome)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWelcome::CopyFrom(const CMsgClientWelcome& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientWelcome)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWelcome::IsInitialized() const {
  return true;
}

void CMsgClientWelcome::Swap(CMsgClientWelcome* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientWelcome::InternalSwap(CMsgClientWelcome* other) {
  using std::swap;
  outofdate_subscribed_caches_.InternalSwap(&other->outofdate_subscribed_caches_);
  uptodate_subscribed_caches_.InternalSwap(&other->uptodate_subscribed_caches_);
  game_data_.Swap(&other->game_data_);
  game_data2_.Swap(&other->game_data2_);
  swap(location_, other->location_);
  swap(version_, other->version_);
  swap(rtime32_gc_welcome_timestamp_, other->rtime32_gc_welcome_timestamp_);
  swap(currency_, other->currency_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientWelcome::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgConnectionStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgConnectionStatus::kStatusFieldNumber;
const int CMsgConnectionStatus::kClientSessionNeedFieldNumber;
const int CMsgConnectionStatus::kQueuePositionFieldNumber;
const int CMsgConnectionStatus::kQueueSizeFieldNumber;
const int CMsgConnectionStatus::kWaitSecondsFieldNumber;
const int CMsgConnectionStatus::kEstimatedWaitSecondsRemainingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgConnectionStatus::CMsgConnectionStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgConnectionStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgConnectionStatus)
}
CMsgConnectionStatus::CMsgConnectionStatus(const CMsgConnectionStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&estimated_wait_seconds_remaining_) -
    reinterpret_cast<char*>(&status_)) + sizeof(estimated_wait_seconds_remaining_));
  // @@protoc_insertion_point(copy_constructor:CMsgConnectionStatus)
}

void CMsgConnectionStatus::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&estimated_wait_seconds_remaining_) -
      reinterpret_cast<char*>(&status_)) + sizeof(estimated_wait_seconds_remaining_));
}

CMsgConnectionStatus::~CMsgConnectionStatus() {
  // @@protoc_insertion_point(destructor:CMsgConnectionStatus)
  SharedDtor();
}

void CMsgConnectionStatus::SharedDtor() {
}

void CMsgConnectionStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgConnectionStatus::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgConnectionStatus& CMsgConnectionStatus::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgConnectionStatus();
  return *internal_default_instance();
}

CMsgConnectionStatus* CMsgConnectionStatus::New(::google::protobuf::Arena* arena) const {
  CMsgConnectionStatus* n = new CMsgConnectionStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgConnectionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgConnectionStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&status_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&estimated_wait_seconds_remaining_) -
        reinterpret_cast<char*>(&status_)) + sizeof(estimated_wait_seconds_remaining_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgConnectionStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgConnectionStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .GCConnectionStatus status = 1 [default = GCConnectionStatus_HAVE_SESSION];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::GCConnectionStatus_IsValid(value)) {
            set_status(static_cast< ::GCConnectionStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 client_session_need = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_client_session_need();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_session_need_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 queue_position = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_queue_position();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &queue_position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 queue_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_queue_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &queue_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 wait_seconds = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_wait_seconds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wait_seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 estimated_wait_seconds_remaining = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_estimated_wait_seconds_remaining();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &estimated_wait_seconds_remaining_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgConnectionStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgConnectionStatus)
  return false;
#undef DO_
}

void CMsgConnectionStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgConnectionStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .GCConnectionStatus status = 1 [default = GCConnectionStatus_HAVE_SESSION];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional uint32 client_session_need = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->client_session_need(), output);
  }

  // optional int32 queue_position = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->queue_position(), output);
  }

  // optional int32 queue_size = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->queue_size(), output);
  }

  // optional int32 wait_seconds = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->wait_seconds(), output);
  }

  // optional int32 estimated_wait_seconds_remaining = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->estimated_wait_seconds_remaining(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgConnectionStatus)
}

::google::protobuf::uint8* CMsgConnectionStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgConnectionStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .GCConnectionStatus status = 1 [default = GCConnectionStatus_HAVE_SESSION];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional uint32 client_session_need = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->client_session_need(), target);
  }

  // optional int32 queue_position = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->queue_position(), target);
  }

  // optional int32 queue_size = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->queue_size(), target);
  }

  // optional int32 wait_seconds = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->wait_seconds(), target);
  }

  // optional int32 estimated_wait_seconds_remaining = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->estimated_wait_seconds_remaining(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgConnectionStatus)
  return target;
}

size_t CMsgConnectionStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgConnectionStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional .GCConnectionStatus status = 1 [default = GCConnectionStatus_HAVE_SESSION];
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional uint32 client_session_need = 2;
    if (has_client_session_need()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->client_session_need());
    }

    // optional int32 queue_position = 3;
    if (has_queue_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->queue_position());
    }

    // optional int32 queue_size = 4;
    if (has_queue_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->queue_size());
    }

    // optional int32 wait_seconds = 5;
    if (has_wait_seconds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wait_seconds());
    }

    // optional int32 estimated_wait_seconds_remaining = 6;
    if (has_estimated_wait_seconds_remaining()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->estimated_wait_seconds_remaining());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgConnectionStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgConnectionStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgConnectionStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgConnectionStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgConnectionStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgConnectionStatus)
    MergeFrom(*source);
  }
}

void CMsgConnectionStatus::MergeFrom(const CMsgConnectionStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgConnectionStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      status_ = from.status_;
    }
    if (cached_has_bits & 0x00000002u) {
      client_session_need_ = from.client_session_need_;
    }
    if (cached_has_bits & 0x00000004u) {
      queue_position_ = from.queue_position_;
    }
    if (cached_has_bits & 0x00000008u) {
      queue_size_ = from.queue_size_;
    }
    if (cached_has_bits & 0x00000010u) {
      wait_seconds_ = from.wait_seconds_;
    }
    if (cached_has_bits & 0x00000020u) {
      estimated_wait_seconds_remaining_ = from.estimated_wait_seconds_remaining_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgConnectionStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgConnectionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgConnectionStatus::CopyFrom(const CMsgConnectionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgConnectionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgConnectionStatus::IsInitialized() const {
  return true;
}

void CMsgConnectionStatus::Swap(CMsgConnectionStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgConnectionStatus::InternalSwap(CMsgConnectionStatus* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(client_session_need_, other->client_session_need_);
  swap(queue_position_, other->queue_position_);
  swap(queue_size_, other->queue_size_);
  swap(wait_seconds_, other->wait_seconds_);
  swap(estimated_wait_seconds_remaining_, other->estimated_wait_seconds_remaining_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgConnectionStatus::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::kGameitemidFieldNumber;
const int CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::kItemDescriptionFieldNumber;
const int CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::kOnePerAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCWorkshop_PopulateItemDescriptions_Request_SingleItemDescription();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
}
CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription(const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  item_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_item_description()) {
    item_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_description_);
  }
  ::memcpy(&gameitemid_, &from.gameitemid_,
    static_cast<size_t>(reinterpret_cast<char*>(&one_per_account_) -
    reinterpret_cast<char*>(&gameitemid_)) + sizeof(one_per_account_));
  // @@protoc_insertion_point(copy_constructor:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
}

void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::SharedCtor() {
  _cached_size_ = 0;
  item_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&gameitemid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&one_per_account_) -
      reinterpret_cast<char*>(&gameitemid_)) + sizeof(one_per_account_));
}

CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::~CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription() {
  // @@protoc_insertion_point(destructor:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
  SharedDtor();
}

void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::SharedDtor() {
  item_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCWorkshop_PopulateItemDescriptions_Request_SingleItemDescription();
  return *internal_default_instance();
}

CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::New(::google::protobuf::Arena* arena) const {
  CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* n = new CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::Clear() {
// @@protoc_insertion_point(message_clear_start:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!item_description_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*item_description_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&gameitemid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&one_per_account_) -
        reinterpret_cast<char*>(&gameitemid_)) + sizeof(one_per_account_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 gameitemid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_gameitemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gameitemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string item_description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_description().data(), static_cast<int>(this->item_description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.item_description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool one_per_account = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_one_per_account();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &one_per_account_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
  return false;
#undef DO_
}

void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 gameitemid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gameitemid(), output);
  }

  // optional string item_description = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_description().data(), static_cast<int>(this->item_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.item_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_description(), output);
  }

  // optional bool one_per_account = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->one_per_account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
}

::google::protobuf::uint8* CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 gameitemid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gameitemid(), target);
  }

  // optional string item_description = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_description().data(), static_cast<int>(this->item_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.item_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_description(), target);
  }

  // optional bool one_per_account = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->one_per_account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
  return target;
}

size_t CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string item_description = 2;
    if (has_item_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_description());
    }

    // optional uint32 gameitemid = 1;
    if (has_gameitemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gameitemid());
    }

    // optional bool one_per_account = 3;
    if (has_one_per_account()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
    MergeFrom(*source);
  }
}

void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::MergeFrom(const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_item_description();
      item_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_description_);
    }
    if (cached_has_bits & 0x00000002u) {
      gameitemid_ = from.gameitemid_;
    }
    if (cached_has_bits & 0x00000004u) {
      one_per_account_ = from.one_per_account_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::CopyFrom(const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::IsInitialized() const {
  return true;
}

void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::Swap(CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::InternalSwap(CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* other) {
  using std::swap;
  item_description_.Swap(&other->item_description_);
  swap(gameitemid_, other->gameitemid_);
  swap(one_per_account_, other->one_per_account_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::kLanguageFieldNumber;
const int CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::kDescriptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
}
CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock(const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      descriptions_(from.descriptions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_language()) {
    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
  // @@protoc_insertion_point(copy_constructor:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
}

void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::SharedCtor() {
  _cached_size_ = 0;
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::~CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock() {
  // @@protoc_insertion_point(destructor:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
  SharedDtor();
}

void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::SharedDtor() {
  language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock();
  return *internal_default_instance();
}

CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::New(::google::protobuf::Arena* arena) const {
  CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* n = new CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  descriptions_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!language_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*language_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string language = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->language().data(), static_cast<int>(this->language().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.language");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription descriptions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_descriptions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
  return false;
#undef DO_
}

void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string language = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.language");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->language(), output);
  }

  // repeated .CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription descriptions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->descriptions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->descriptions(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
}

::google::protobuf::uint8* CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string language = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.language");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->language(), target);
  }

  // repeated .CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription descriptions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->descriptions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->descriptions(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
  return target;
}

size_t CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription descriptions = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->descriptions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->descriptions(static_cast<int>(i)));
    }
  }

  // optional string language = 1;
  if (has_language()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
    MergeFrom(*source);
  }
}

void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::MergeFrom(const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  descriptions_.MergeFrom(from.descriptions_);
  if (from.has_language()) {
    set_has_language();
    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
}

void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::CopyFrom(const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::IsInitialized() const {
  return true;
}

void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::Swap(CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::InternalSwap(CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* other) {
  using std::swap;
  descriptions_.InternalSwap(&other->descriptions_);
  language_.Swap(&other->language_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CWorkshop_PopulateItemDescriptions_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_PopulateItemDescriptions_Request::kAppidFieldNumber;
const int CWorkshop_PopulateItemDescriptions_Request::kLanguagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_PopulateItemDescriptions_Request::CWorkshop_PopulateItemDescriptions_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCWorkshop_PopulateItemDescriptions_Request();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CWorkshop_PopulateItemDescriptions_Request)
}
CWorkshop_PopulateItemDescriptions_Request::CWorkshop_PopulateItemDescriptions_Request(const CWorkshop_PopulateItemDescriptions_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      languages_(from.languages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:CWorkshop_PopulateItemDescriptions_Request)
}

void CWorkshop_PopulateItemDescriptions_Request::SharedCtor() {
  _cached_size_ = 0;
  appid_ = 0u;
}

CWorkshop_PopulateItemDescriptions_Request::~CWorkshop_PopulateItemDescriptions_Request() {
  // @@protoc_insertion_point(destructor:CWorkshop_PopulateItemDescriptions_Request)
  SharedDtor();
}

void CWorkshop_PopulateItemDescriptions_Request::SharedDtor() {
}

void CWorkshop_PopulateItemDescriptions_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_PopulateItemDescriptions_Request::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CWorkshop_PopulateItemDescriptions_Request& CWorkshop_PopulateItemDescriptions_Request::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCWorkshop_PopulateItemDescriptions_Request();
  return *internal_default_instance();
}

CWorkshop_PopulateItemDescriptions_Request* CWorkshop_PopulateItemDescriptions_Request::New(::google::protobuf::Arena* arena) const {
  CWorkshop_PopulateItemDescriptions_Request* n = new CWorkshop_PopulateItemDescriptions_Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CWorkshop_PopulateItemDescriptions_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CWorkshop_PopulateItemDescriptions_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  languages_.Clear();
  appid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CWorkshop_PopulateItemDescriptions_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CWorkshop_PopulateItemDescriptions_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock languages = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_languages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CWorkshop_PopulateItemDescriptions_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CWorkshop_PopulateItemDescriptions_Request)
  return false;
#undef DO_
}

void CWorkshop_PopulateItemDescriptions_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CWorkshop_PopulateItemDescriptions_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // repeated .CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock languages = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->languages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->languages(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CWorkshop_PopulateItemDescriptions_Request)
}

::google::protobuf::uint8* CWorkshop_PopulateItemDescriptions_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CWorkshop_PopulateItemDescriptions_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // repeated .CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock languages = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->languages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->languages(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CWorkshop_PopulateItemDescriptions_Request)
  return target;
}

size_t CWorkshop_PopulateItemDescriptions_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CWorkshop_PopulateItemDescriptions_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock languages = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->languages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->languages(static_cast<int>(i)));
    }
  }

  // optional uint32 appid = 1;
  if (has_appid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_PopulateItemDescriptions_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CWorkshop_PopulateItemDescriptions_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_PopulateItemDescriptions_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CWorkshop_PopulateItemDescriptions_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CWorkshop_PopulateItemDescriptions_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CWorkshop_PopulateItemDescriptions_Request)
    MergeFrom(*source);
  }
}

void CWorkshop_PopulateItemDescriptions_Request::MergeFrom(const CWorkshop_PopulateItemDescriptions_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CWorkshop_PopulateItemDescriptions_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  languages_.MergeFrom(from.languages_);
  if (from.has_appid()) {
    set_appid(from.appid());
  }
}

void CWorkshop_PopulateItemDescriptions_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CWorkshop_PopulateItemDescriptions_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_PopulateItemDescriptions_Request::CopyFrom(const CWorkshop_PopulateItemDescriptions_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CWorkshop_PopulateItemDescriptions_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_PopulateItemDescriptions_Request::IsInitialized() const {
  return true;
}

void CWorkshop_PopulateItemDescriptions_Request::Swap(CWorkshop_PopulateItemDescriptions_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_PopulateItemDescriptions_Request::InternalSwap(CWorkshop_PopulateItemDescriptions_Request* other) {
  using std::swap;
  languages_.InternalSwap(&other->languages_);
  swap(appid_, other->appid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CWorkshop_PopulateItemDescriptions_Request::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CWorkshop_GetContributors_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_GetContributors_Request::kAppidFieldNumber;
const int CWorkshop_GetContributors_Request::kGameitemidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_GetContributors_Request::CWorkshop_GetContributors_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCWorkshop_GetContributors_Request();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CWorkshop_GetContributors_Request)
}
CWorkshop_GetContributors_Request::CWorkshop_GetContributors_Request(const CWorkshop_GetContributors_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&gameitemid_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(gameitemid_));
  // @@protoc_insertion_point(copy_constructor:CWorkshop_GetContributors_Request)
}

void CWorkshop_GetContributors_Request::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gameitemid_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(gameitemid_));
}

CWorkshop_GetContributors_Request::~CWorkshop_GetContributors_Request() {
  // @@protoc_insertion_point(destructor:CWorkshop_GetContributors_Request)
  SharedDtor();
}

void CWorkshop_GetContributors_Request::SharedDtor() {
}

void CWorkshop_GetContributors_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_GetContributors_Request::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CWorkshop_GetContributors_Request& CWorkshop_GetContributors_Request::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCWorkshop_GetContributors_Request();
  return *internal_default_instance();
}

CWorkshop_GetContributors_Request* CWorkshop_GetContributors_Request::New(::google::protobuf::Arena* arena) const {
  CWorkshop_GetContributors_Request* n = new CWorkshop_GetContributors_Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CWorkshop_GetContributors_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CWorkshop_GetContributors_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&appid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&gameitemid_) -
        reinterpret_cast<char*>(&appid_)) + sizeof(gameitemid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CWorkshop_GetContributors_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CWorkshop_GetContributors_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 gameitemid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_gameitemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gameitemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CWorkshop_GetContributors_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CWorkshop_GetContributors_Request)
  return false;
#undef DO_
}

void CWorkshop_GetContributors_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CWorkshop_GetContributors_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional uint32 gameitemid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gameitemid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CWorkshop_GetContributors_Request)
}

::google::protobuf::uint8* CWorkshop_GetContributors_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CWorkshop_GetContributors_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional uint32 gameitemid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gameitemid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CWorkshop_GetContributors_Request)
  return target;
}

size_t CWorkshop_GetContributors_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CWorkshop_GetContributors_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional uint32 gameitemid = 2;
    if (has_gameitemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gameitemid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_GetContributors_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CWorkshop_GetContributors_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_GetContributors_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CWorkshop_GetContributors_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CWorkshop_GetContributors_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CWorkshop_GetContributors_Request)
    MergeFrom(*source);
  }
}

void CWorkshop_GetContributors_Request::MergeFrom(const CWorkshop_GetContributors_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CWorkshop_GetContributors_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000002u) {
      gameitemid_ = from.gameitemid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CWorkshop_GetContributors_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CWorkshop_GetContributors_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_GetContributors_Request::CopyFrom(const CWorkshop_GetContributors_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CWorkshop_GetContributors_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_GetContributors_Request::IsInitialized() const {
  return true;
}

void CWorkshop_GetContributors_Request::Swap(CWorkshop_GetContributors_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_GetContributors_Request::InternalSwap(CWorkshop_GetContributors_Request* other) {
  using std::swap;
  swap(appid_, other->appid_);
  swap(gameitemid_, other->gameitemid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CWorkshop_GetContributors_Request::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CWorkshop_GetContributors_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_GetContributors_Response::kContributorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_GetContributors_Response::CWorkshop_GetContributors_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCWorkshop_GetContributors_Response();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CWorkshop_GetContributors_Response)
}
CWorkshop_GetContributors_Response::CWorkshop_GetContributors_Response(const CWorkshop_GetContributors_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      contributors_(from.contributors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CWorkshop_GetContributors_Response)
}

void CWorkshop_GetContributors_Response::SharedCtor() {
  _cached_size_ = 0;
}

CWorkshop_GetContributors_Response::~CWorkshop_GetContributors_Response() {
  // @@protoc_insertion_point(destructor:CWorkshop_GetContributors_Response)
  SharedDtor();
}

void CWorkshop_GetContributors_Response::SharedDtor() {
}

void CWorkshop_GetContributors_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_GetContributors_Response::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CWorkshop_GetContributors_Response& CWorkshop_GetContributors_Response::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCWorkshop_GetContributors_Response();
  return *internal_default_instance();
}

CWorkshop_GetContributors_Response* CWorkshop_GetContributors_Response::New(::google::protobuf::Arena* arena) const {
  CWorkshop_GetContributors_Response* n = new CWorkshop_GetContributors_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CWorkshop_GetContributors_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CWorkshop_GetContributors_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contributors_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CWorkshop_GetContributors_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CWorkshop_GetContributors_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 contributors = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 9u, input, this->mutable_contributors())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_contributors())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CWorkshop_GetContributors_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CWorkshop_GetContributors_Response)
  return false;
#undef DO_
}

void CWorkshop_GetContributors_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CWorkshop_GetContributors_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 contributors = 1;
  for (int i = 0, n = this->contributors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      1, this->contributors(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CWorkshop_GetContributors_Response)
}

::google::protobuf::uint8* CWorkshop_GetContributors_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CWorkshop_GetContributors_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 contributors = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(1, this->contributors_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CWorkshop_GetContributors_Response)
  return target;
}

size_t CWorkshop_GetContributors_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CWorkshop_GetContributors_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated fixed64 contributors = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->contributors_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->contributors_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_GetContributors_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CWorkshop_GetContributors_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_GetContributors_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CWorkshop_GetContributors_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CWorkshop_GetContributors_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CWorkshop_GetContributors_Response)
    MergeFrom(*source);
  }
}

void CWorkshop_GetContributors_Response::MergeFrom(const CWorkshop_GetContributors_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CWorkshop_GetContributors_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contributors_.MergeFrom(from.contributors_);
}

void CWorkshop_GetContributors_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CWorkshop_GetContributors_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_GetContributors_Response::CopyFrom(const CWorkshop_GetContributors_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CWorkshop_GetContributors_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_GetContributors_Response::IsInitialized() const {
  return true;
}

void CWorkshop_GetContributors_Response::Swap(CWorkshop_GetContributors_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_GetContributors_Response::InternalSwap(CWorkshop_GetContributors_Response* other) {
  using std::swap;
  contributors_.InternalSwap(&other->contributors_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CWorkshop_GetContributors_Response::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::kWorkshopFileIdFieldNumber;
const int CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::kRevenuePercentageFieldNumber;
const int CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::kRuleDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
}
CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule(const CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rule_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_rule_description()) {
    rule_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rule_description_);
  }
  ::memcpy(&workshop_file_id_, &from.workshop_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&revenue_percentage_) -
    reinterpret_cast<char*>(&workshop_file_id_)) + sizeof(revenue_percentage_));
  // @@protoc_insertion_point(copy_constructor:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::SharedCtor() {
  _cached_size_ = 0;
  rule_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&workshop_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&revenue_percentage_) -
      reinterpret_cast<char*>(&workshop_file_id_)) + sizeof(revenue_percentage_));
}

CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::~CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule() {
  // @@protoc_insertion_point(destructor:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
  SharedDtor();
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::SharedDtor() {
  rule_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule();
  return *internal_default_instance();
}

CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::New(::google::protobuf::Arena* arena) const {
  CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* n = new CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::Clear() {
// @@protoc_insertion_point(message_clear_start:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!rule_description_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*rule_description_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&workshop_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&revenue_percentage_) -
        reinterpret_cast<char*>(&workshop_file_id_)) + sizeof(revenue_percentage_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 workshop_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_workshop_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &workshop_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float revenue_percentage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_revenue_percentage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &revenue_percentage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string rule_description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rule_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rule_description().data(), static_cast<int>(this->rule_description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
  return false;
#undef DO_
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 workshop_file_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->workshop_file_id(), output);
  }

  // optional float revenue_percentage = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->revenue_percentage(), output);
  }

  // optional string rule_description = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rule_description().data(), static_cast<int>(this->rule_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->rule_description(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
}

::google::protobuf::uint8* CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 workshop_file_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->workshop_file_id(), target);
  }

  // optional float revenue_percentage = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->revenue_percentage(), target);
  }

  // optional string rule_description = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rule_description().data(), static_cast<int>(this->rule_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->rule_description(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
  return target;
}

size_t CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string rule_description = 3;
    if (has_rule_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rule_description());
    }

    // optional uint64 workshop_file_id = 1;
    if (has_workshop_file_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->workshop_file_id());
    }

    // optional float revenue_percentage = 2;
    if (has_revenue_percentage()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
    MergeFrom(*source);
  }
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::MergeFrom(const CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_rule_description();
      rule_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rule_description_);
    }
    if (cached_has_bits & 0x00000002u) {
      workshop_file_id_ = from.workshop_file_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      revenue_percentage_ = from.revenue_percentage_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::CopyFrom(const CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::IsInitialized() const {
  return true;
}

void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::Swap(CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::InternalSwap(CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* other) {
  using std::swap;
  rule_description_.Swap(&other->rule_description_);
  swap(workshop_file_id_, other->workshop_file_id_);
  swap(revenue_percentage_, other->revenue_percentage_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::kAccountIdFieldNumber;
const int CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::kRevenuePercentageFieldNumber;
const int CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::kRuleDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
}
CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule(const CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rule_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_rule_description()) {
    rule_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rule_description_);
  }
  ::memcpy(&account_id_, &from.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&revenue_percentage_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(revenue_percentage_));
  // @@protoc_insertion_point(copy_constructor:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
}

void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::SharedCtor() {
  _cached_size_ = 0;
  rule_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&revenue_percentage_) -
      reinterpret_cast<char*>(&account_id_)) + sizeof(revenue_percentage_));
}

CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::~CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule() {
  // @@protoc_insertion_point(destructor:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
  SharedDtor();
}

void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::SharedDtor() {
  rule_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule();
  return *internal_default_instance();
}

CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::New(::google::protobuf::Arena* arena) const {
  CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* n = new CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::Clear() {
// @@protoc_insertion_point(message_clear_start:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!rule_description_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*rule_description_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&revenue_percentage_) -
        reinterpret_cast<char*>(&account_id_)) + sizeof(revenue_percentage_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float revenue_percentage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_revenue_percentage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &revenue_percentage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string rule_description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rule_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rule_description().data(), static_cast<int>(this->rule_description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.rule_description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
  return false;
#undef DO_
}

void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional float revenue_percentage = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->revenue_percentage(), output);
  }

  // optional string rule_description = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rule_description().data(), static_cast<int>(this->rule_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.rule_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->rule_description(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
}

::google::protobuf::uint8* CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional float revenue_percentage = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->revenue_percentage(), target);
  }

  // optional string rule_description = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rule_description().data(), static_cast<int>(this->rule_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.rule_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->rule_description(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
  return target;
}

size_t CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string rule_description = 3;
    if (has_rule_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rule_description());
    }

    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional float revenue_percentage = 2;
    if (has_revenue_percentage()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
    MergeFrom(*source);
  }
}

void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::MergeFrom(const CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_rule_description();
      rule_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rule_description_);
    }
    if (cached_has_bits & 0x00000002u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      revenue_percentage_ = from.revenue_percentage_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::CopyFrom(const CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::IsInitialized() const {
  return true;
}

void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::Swap(CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::InternalSwap(CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* other) {
  using std::swap;
  rule_description_.Swap(&other->rule_description_);
  swap(account_id_, other->account_id_);
  swap(revenue_percentage_, other->revenue_percentage_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CWorkshop_SetItemPaymentRules_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_SetItemPaymentRules_Request::kAppidFieldNumber;
const int CWorkshop_SetItemPaymentRules_Request::kGameitemidFieldNumber;
const int CWorkshop_SetItemPaymentRules_Request::kAssociatedWorkshopFilesFieldNumber;
const int CWorkshop_SetItemPaymentRules_Request::kPartnerAccountsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_SetItemPaymentRules_Request::CWorkshop_SetItemPaymentRules_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCWorkshop_SetItemPaymentRules_Request();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CWorkshop_SetItemPaymentRules_Request)
}
CWorkshop_SetItemPaymentRules_Request::CWorkshop_SetItemPaymentRules_Request(const CWorkshop_SetItemPaymentRules_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      associated_workshop_files_(from.associated_workshop_files_),
      partner_accounts_(from.partner_accounts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&gameitemid_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(gameitemid_));
  // @@protoc_insertion_point(copy_constructor:CWorkshop_SetItemPaymentRules_Request)
}

void CWorkshop_SetItemPaymentRules_Request::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gameitemid_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(gameitemid_));
}

CWorkshop_SetItemPaymentRules_Request::~CWorkshop_SetItemPaymentRules_Request() {
  // @@protoc_insertion_point(destructor:CWorkshop_SetItemPaymentRules_Request)
  SharedDtor();
}

void CWorkshop_SetItemPaymentRules_Request::SharedDtor() {
}

void CWorkshop_SetItemPaymentRules_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_SetItemPaymentRules_Request::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CWorkshop_SetItemPaymentRules_Request& CWorkshop_SetItemPaymentRules_Request::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCWorkshop_SetItemPaymentRules_Request();
  return *internal_default_instance();
}

CWorkshop_SetItemPaymentRules_Request* CWorkshop_SetItemPaymentRules_Request::New(::google::protobuf::Arena* arena) const {
  CWorkshop_SetItemPaymentRules_Request* n = new CWorkshop_SetItemPaymentRules_Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CWorkshop_SetItemPaymentRules_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CWorkshop_SetItemPaymentRules_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  associated_workshop_files_.Clear();
  partner_accounts_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&appid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&gameitemid_) -
        reinterpret_cast<char*>(&appid_)) + sizeof(gameitemid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CWorkshop_SetItemPaymentRules_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CWorkshop_SetItemPaymentRules_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 gameitemid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_gameitemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gameitemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule associated_workshop_files = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_associated_workshop_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule partner_accounts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_partner_accounts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CWorkshop_SetItemPaymentRules_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CWorkshop_SetItemPaymentRules_Request)
  return false;
#undef DO_
}

void CWorkshop_SetItemPaymentRules_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CWorkshop_SetItemPaymentRules_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional uint32 gameitemid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gameitemid(), output);
  }

  // repeated .CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule associated_workshop_files = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->associated_workshop_files_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->associated_workshop_files(static_cast<int>(i)), output);
  }

  // repeated .CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule partner_accounts = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->partner_accounts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->partner_accounts(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CWorkshop_SetItemPaymentRules_Request)
}

::google::protobuf::uint8* CWorkshop_SetItemPaymentRules_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CWorkshop_SetItemPaymentRules_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional uint32 gameitemid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gameitemid(), target);
  }

  // repeated .CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule associated_workshop_files = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->associated_workshop_files_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->associated_workshop_files(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule partner_accounts = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->partner_accounts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->partner_accounts(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CWorkshop_SetItemPaymentRules_Request)
  return target;
}

size_t CWorkshop_SetItemPaymentRules_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CWorkshop_SetItemPaymentRules_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule associated_workshop_files = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->associated_workshop_files_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->associated_workshop_files(static_cast<int>(i)));
    }
  }

  // repeated .CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule partner_accounts = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->partner_accounts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->partner_accounts(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional uint32 gameitemid = 2;
    if (has_gameitemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gameitemid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_SetItemPaymentRules_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CWorkshop_SetItemPaymentRules_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_SetItemPaymentRules_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CWorkshop_SetItemPaymentRules_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CWorkshop_SetItemPaymentRules_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CWorkshop_SetItemPaymentRules_Request)
    MergeFrom(*source);
  }
}

void CWorkshop_SetItemPaymentRules_Request::MergeFrom(const CWorkshop_SetItemPaymentRules_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CWorkshop_SetItemPaymentRules_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  associated_workshop_files_.MergeFrom(from.associated_workshop_files_);
  partner_accounts_.MergeFrom(from.partner_accounts_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000002u) {
      gameitemid_ = from.gameitemid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CWorkshop_SetItemPaymentRules_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CWorkshop_SetItemPaymentRules_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_SetItemPaymentRules_Request::CopyFrom(const CWorkshop_SetItemPaymentRules_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CWorkshop_SetItemPaymentRules_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_SetItemPaymentRules_Request::IsInitialized() const {
  return true;
}

void CWorkshop_SetItemPaymentRules_Request::Swap(CWorkshop_SetItemPaymentRules_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_SetItemPaymentRules_Request::InternalSwap(CWorkshop_SetItemPaymentRules_Request* other) {
  using std::swap;
  associated_workshop_files_.InternalSwap(&other->associated_workshop_files_);
  partner_accounts_.InternalSwap(&other->partner_accounts_);
  swap(appid_, other->appid_);
  swap(gameitemid_, other->gameitemid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CWorkshop_SetItemPaymentRules_Request::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CWorkshop_SetItemPaymentRules_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_SetItemPaymentRules_Response::CWorkshop_SetItemPaymentRules_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCWorkshop_SetItemPaymentRules_Response();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CWorkshop_SetItemPaymentRules_Response)
}
CWorkshop_SetItemPaymentRules_Response::CWorkshop_SetItemPaymentRules_Response(const CWorkshop_SetItemPaymentRules_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CWorkshop_SetItemPaymentRules_Response)
}

void CWorkshop_SetItemPaymentRules_Response::SharedCtor() {
  _cached_size_ = 0;
}

CWorkshop_SetItemPaymentRules_Response::~CWorkshop_SetItemPaymentRules_Response() {
  // @@protoc_insertion_point(destructor:CWorkshop_SetItemPaymentRules_Response)
  SharedDtor();
}

void CWorkshop_SetItemPaymentRules_Response::SharedDtor() {
}

void CWorkshop_SetItemPaymentRules_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_SetItemPaymentRules_Response::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CWorkshop_SetItemPaymentRules_Response& CWorkshop_SetItemPaymentRules_Response::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCWorkshop_SetItemPaymentRules_Response();
  return *internal_default_instance();
}

CWorkshop_SetItemPaymentRules_Response* CWorkshop_SetItemPaymentRules_Response::New(::google::protobuf::Arena* arena) const {
  CWorkshop_SetItemPaymentRules_Response* n = new CWorkshop_SetItemPaymentRules_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CWorkshop_SetItemPaymentRules_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CWorkshop_SetItemPaymentRules_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CWorkshop_SetItemPaymentRules_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CWorkshop_SetItemPaymentRules_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CWorkshop_SetItemPaymentRules_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CWorkshop_SetItemPaymentRules_Response)
  return false;
#undef DO_
}

void CWorkshop_SetItemPaymentRules_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CWorkshop_SetItemPaymentRules_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CWorkshop_SetItemPaymentRules_Response)
}

::google::protobuf::uint8* CWorkshop_SetItemPaymentRules_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CWorkshop_SetItemPaymentRules_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CWorkshop_SetItemPaymentRules_Response)
  return target;
}

size_t CWorkshop_SetItemPaymentRules_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CWorkshop_SetItemPaymentRules_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_SetItemPaymentRules_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CWorkshop_SetItemPaymentRules_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_SetItemPaymentRules_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CWorkshop_SetItemPaymentRules_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CWorkshop_SetItemPaymentRules_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CWorkshop_SetItemPaymentRules_Response)
    MergeFrom(*source);
  }
}

void CWorkshop_SetItemPaymentRules_Response::MergeFrom(const CWorkshop_SetItemPaymentRules_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CWorkshop_SetItemPaymentRules_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CWorkshop_SetItemPaymentRules_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CWorkshop_SetItemPaymentRules_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_SetItemPaymentRules_Response::CopyFrom(const CWorkshop_SetItemPaymentRules_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CWorkshop_SetItemPaymentRules_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_SetItemPaymentRules_Response::IsInitialized() const {
  return true;
}

void CWorkshop_SetItemPaymentRules_Response::Swap(CWorkshop_SetItemPaymentRules_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_SetItemPaymentRules_Response::InternalSwap(CWorkshop_SetItemPaymentRules_Response* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CWorkshop_SetItemPaymentRules_Response::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CGameServers_AggregationQuery_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGameServers_AggregationQuery_Request::kFilterFieldNumber;
const int CGameServers_AggregationQuery_Request::kGroupFieldsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGameServers_AggregationQuery_Request::CGameServers_AggregationQuery_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCGameServers_AggregationQuery_Request();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGameServers_AggregationQuery_Request)
}
CGameServers_AggregationQuery_Request::CGameServers_AggregationQuery_Request(const CGameServers_AggregationQuery_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      group_fields_(from.group_fields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filter()) {
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  // @@protoc_insertion_point(copy_constructor:CGameServers_AggregationQuery_Request)
}

void CGameServers_AggregationQuery_Request::SharedCtor() {
  _cached_size_ = 0;
  filter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CGameServers_AggregationQuery_Request::~CGameServers_AggregationQuery_Request() {
  // @@protoc_insertion_point(destructor:CGameServers_AggregationQuery_Request)
  SharedDtor();
}

void CGameServers_AggregationQuery_Request::SharedDtor() {
  filter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CGameServers_AggregationQuery_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGameServers_AggregationQuery_Request::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGameServers_AggregationQuery_Request& CGameServers_AggregationQuery_Request::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCGameServers_AggregationQuery_Request();
  return *internal_default_instance();
}

CGameServers_AggregationQuery_Request* CGameServers_AggregationQuery_Request::New(::google::protobuf::Arena* arena) const {
  CGameServers_AggregationQuery_Request* n = new CGameServers_AggregationQuery_Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGameServers_AggregationQuery_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CGameServers_AggregationQuery_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_fields_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!filter_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*filter_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGameServers_AggregationQuery_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGameServers_AggregationQuery_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string filter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filter().data(), static_cast<int>(this->filter().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CGameServers_AggregationQuery_Request.filter");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string group_fields = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_group_fields()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->group_fields(this->group_fields_size() - 1).data(),
            static_cast<int>(this->group_fields(this->group_fields_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CGameServers_AggregationQuery_Request.group_fields");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGameServers_AggregationQuery_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGameServers_AggregationQuery_Request)
  return false;
#undef DO_
}

void CGameServers_AggregationQuery_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGameServers_AggregationQuery_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filter = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGameServers_AggregationQuery_Request.filter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filter(), output);
  }

  // repeated string group_fields = 3;
  for (int i = 0, n = this->group_fields_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_fields(i).data(), static_cast<int>(this->group_fields(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGameServers_AggregationQuery_Request.group_fields");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->group_fields(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGameServers_AggregationQuery_Request)
}

::google::protobuf::uint8* CGameServers_AggregationQuery_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGameServers_AggregationQuery_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filter = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filter().data(), static_cast<int>(this->filter().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGameServers_AggregationQuery_Request.filter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filter(), target);
  }

  // repeated string group_fields = 3;
  for (int i = 0, n = this->group_fields_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_fields(i).data(), static_cast<int>(this->group_fields(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGameServers_AggregationQuery_Request.group_fields");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->group_fields(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGameServers_AggregationQuery_Request)
  return target;
}

size_t CGameServers_AggregationQuery_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGameServers_AggregationQuery_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string group_fields = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->group_fields_size());
  for (int i = 0, n = this->group_fields_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->group_fields(i));
  }

  // optional string filter = 1;
  if (has_filter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGameServers_AggregationQuery_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGameServers_AggregationQuery_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CGameServers_AggregationQuery_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGameServers_AggregationQuery_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGameServers_AggregationQuery_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGameServers_AggregationQuery_Request)
    MergeFrom(*source);
  }
}

void CGameServers_AggregationQuery_Request::MergeFrom(const CGameServers_AggregationQuery_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGameServers_AggregationQuery_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  group_fields_.MergeFrom(from.group_fields_);
  if (from.has_filter()) {
    set_has_filter();
    filter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
}

void CGameServers_AggregationQuery_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGameServers_AggregationQuery_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGameServers_AggregationQuery_Request::CopyFrom(const CGameServers_AggregationQuery_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGameServers_AggregationQuery_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGameServers_AggregationQuery_Request::IsInitialized() const {
  return true;
}

void CGameServers_AggregationQuery_Request::Swap(CGameServers_AggregationQuery_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGameServers_AggregationQuery_Request::InternalSwap(CGameServers_AggregationQuery_Request* other) {
  using std::swap;
  group_fields_.InternalSwap(&other->group_fields_);
  filter_.Swap(&other->filter_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGameServers_AggregationQuery_Request::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CGameServers_AggregationQuery_Response_Group::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGameServers_AggregationQuery_Response_Group::kGroupValuesFieldNumber;
const int CGameServers_AggregationQuery_Response_Group::kServersEmptyFieldNumber;
const int CGameServers_AggregationQuery_Response_Group::kServersFullFieldNumber;
const int CGameServers_AggregationQuery_Response_Group::kServersTotalFieldNumber;
const int CGameServers_AggregationQuery_Response_Group::kPlayersHumansFieldNumber;
const int CGameServers_AggregationQuery_Response_Group::kPlayersBotsFieldNumber;
const int CGameServers_AggregationQuery_Response_Group::kPlayerCapacityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGameServers_AggregationQuery_Response_Group::CGameServers_AggregationQuery_Response_Group()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCGameServers_AggregationQuery_Response_Group();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGameServers_AggregationQuery_Response.Group)
}
CGameServers_AggregationQuery_Response_Group::CGameServers_AggregationQuery_Response_Group(const CGameServers_AggregationQuery_Response_Group& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      group_values_(from.group_values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&servers_empty_, &from.servers_empty_,
    static_cast<size_t>(reinterpret_cast<char*>(&player_capacity_) -
    reinterpret_cast<char*>(&servers_empty_)) + sizeof(player_capacity_));
  // @@protoc_insertion_point(copy_constructor:CGameServers_AggregationQuery_Response.Group)
}

void CGameServers_AggregationQuery_Response_Group::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&servers_empty_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_capacity_) -
      reinterpret_cast<char*>(&servers_empty_)) + sizeof(player_capacity_));
}

CGameServers_AggregationQuery_Response_Group::~CGameServers_AggregationQuery_Response_Group() {
  // @@protoc_insertion_point(destructor:CGameServers_AggregationQuery_Response.Group)
  SharedDtor();
}

void CGameServers_AggregationQuery_Response_Group::SharedDtor() {
}

void CGameServers_AggregationQuery_Response_Group::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGameServers_AggregationQuery_Response_Group::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGameServers_AggregationQuery_Response_Group& CGameServers_AggregationQuery_Response_Group::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCGameServers_AggregationQuery_Response_Group();
  return *internal_default_instance();
}

CGameServers_AggregationQuery_Response_Group* CGameServers_AggregationQuery_Response_Group::New(::google::protobuf::Arena* arena) const {
  CGameServers_AggregationQuery_Response_Group* n = new CGameServers_AggregationQuery_Response_Group;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGameServers_AggregationQuery_Response_Group::Clear() {
// @@protoc_insertion_point(message_clear_start:CGameServers_AggregationQuery_Response.Group)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_values_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&servers_empty_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&player_capacity_) -
        reinterpret_cast<char*>(&servers_empty_)) + sizeof(player_capacity_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGameServers_AggregationQuery_Response_Group::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGameServers_AggregationQuery_Response.Group)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string group_values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_group_values()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->group_values(this->group_values_size() - 1).data(),
            static_cast<int>(this->group_values(this->group_values_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CGameServers_AggregationQuery_Response.Group.group_values");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 servers_empty = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_servers_empty();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &servers_empty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 servers_full = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_servers_full();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &servers_full_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 servers_total = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_servers_total();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &servers_total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 players_humans = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_players_humans();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &players_humans_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 players_bots = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_players_bots();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &players_bots_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 player_capacity = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_player_capacity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_capacity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGameServers_AggregationQuery_Response.Group)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGameServers_AggregationQuery_Response.Group)
  return false;
#undef DO_
}

void CGameServers_AggregationQuery_Response_Group::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGameServers_AggregationQuery_Response.Group)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string group_values = 1;
  for (int i = 0, n = this->group_values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_values(i).data(), static_cast<int>(this->group_values(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGameServers_AggregationQuery_Response.Group.group_values");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->group_values(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 servers_empty = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->servers_empty(), output);
  }

  // optional uint32 servers_full = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->servers_full(), output);
  }

  // optional uint32 servers_total = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->servers_total(), output);
  }

  // optional uint32 players_humans = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->players_humans(), output);
  }

  // optional uint32 players_bots = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->players_bots(), output);
  }

  // optional uint32 player_capacity = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->player_capacity(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGameServers_AggregationQuery_Response.Group)
}

::google::protobuf::uint8* CGameServers_AggregationQuery_Response_Group::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGameServers_AggregationQuery_Response.Group)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string group_values = 1;
  for (int i = 0, n = this->group_values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_values(i).data(), static_cast<int>(this->group_values(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGameServers_AggregationQuery_Response.Group.group_values");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->group_values(i), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 servers_empty = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->servers_empty(), target);
  }

  // optional uint32 servers_full = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->servers_full(), target);
  }

  // optional uint32 servers_total = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->servers_total(), target);
  }

  // optional uint32 players_humans = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->players_humans(), target);
  }

  // optional uint32 players_bots = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->players_bots(), target);
  }

  // optional uint32 player_capacity = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->player_capacity(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGameServers_AggregationQuery_Response.Group)
  return target;
}

size_t CGameServers_AggregationQuery_Response_Group::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGameServers_AggregationQuery_Response.Group)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string group_values = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->group_values_size());
  for (int i = 0, n = this->group_values_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->group_values(i));
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional uint32 servers_empty = 2;
    if (has_servers_empty()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->servers_empty());
    }

    // optional uint32 servers_full = 3;
    if (has_servers_full()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->servers_full());
    }

    // optional uint32 servers_total = 4;
    if (has_servers_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->servers_total());
    }

    // optional uint32 players_humans = 5;
    if (has_players_humans()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->players_humans());
    }

    // optional uint32 players_bots = 6;
    if (has_players_bots()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->players_bots());
    }

    // optional uint32 player_capacity = 7;
    if (has_player_capacity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->player_capacity());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGameServers_AggregationQuery_Response_Group::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGameServers_AggregationQuery_Response.Group)
  GOOGLE_DCHECK_NE(&from, this);
  const CGameServers_AggregationQuery_Response_Group* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGameServers_AggregationQuery_Response_Group>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGameServers_AggregationQuery_Response.Group)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGameServers_AggregationQuery_Response.Group)
    MergeFrom(*source);
  }
}

void CGameServers_AggregationQuery_Response_Group::MergeFrom(const CGameServers_AggregationQuery_Response_Group& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGameServers_AggregationQuery_Response.Group)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  group_values_.MergeFrom(from.group_values_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      servers_empty_ = from.servers_empty_;
    }
    if (cached_has_bits & 0x00000002u) {
      servers_full_ = from.servers_full_;
    }
    if (cached_has_bits & 0x00000004u) {
      servers_total_ = from.servers_total_;
    }
    if (cached_has_bits & 0x00000008u) {
      players_humans_ = from.players_humans_;
    }
    if (cached_has_bits & 0x00000010u) {
      players_bots_ = from.players_bots_;
    }
    if (cached_has_bits & 0x00000020u) {
      player_capacity_ = from.player_capacity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CGameServers_AggregationQuery_Response_Group::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGameServers_AggregationQuery_Response.Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGameServers_AggregationQuery_Response_Group::CopyFrom(const CGameServers_AggregationQuery_Response_Group& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGameServers_AggregationQuery_Response.Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGameServers_AggregationQuery_Response_Group::IsInitialized() const {
  return true;
}

void CGameServers_AggregationQuery_Response_Group::Swap(CGameServers_AggregationQuery_Response_Group* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGameServers_AggregationQuery_Response_Group::InternalSwap(CGameServers_AggregationQuery_Response_Group* other) {
  using std::swap;
  group_values_.InternalSwap(&other->group_values_);
  swap(servers_empty_, other->servers_empty_);
  swap(servers_full_, other->servers_full_);
  swap(servers_total_, other->servers_total_);
  swap(players_humans_, other->players_humans_);
  swap(players_bots_, other->players_bots_);
  swap(player_capacity_, other->player_capacity_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGameServers_AggregationQuery_Response_Group::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CGameServers_AggregationQuery_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGameServers_AggregationQuery_Response::kGroupsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGameServers_AggregationQuery_Response::CGameServers_AggregationQuery_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCGameServers_AggregationQuery_Response();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGameServers_AggregationQuery_Response)
}
CGameServers_AggregationQuery_Response::CGameServers_AggregationQuery_Response(const CGameServers_AggregationQuery_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      groups_(from.groups_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CGameServers_AggregationQuery_Response)
}

void CGameServers_AggregationQuery_Response::SharedCtor() {
  _cached_size_ = 0;
}

CGameServers_AggregationQuery_Response::~CGameServers_AggregationQuery_Response() {
  // @@protoc_insertion_point(destructor:CGameServers_AggregationQuery_Response)
  SharedDtor();
}

void CGameServers_AggregationQuery_Response::SharedDtor() {
}

void CGameServers_AggregationQuery_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGameServers_AggregationQuery_Response::descriptor() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGameServers_AggregationQuery_Response& CGameServers_AggregationQuery_Response::default_instance() {
  ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCGameServers_AggregationQuery_Response();
  return *internal_default_instance();
}

CGameServers_AggregationQuery_Response* CGameServers_AggregationQuery_Response::New(::google::protobuf::Arena* arena) const {
  CGameServers_AggregationQuery_Response* n = new CGameServers_AggregationQuery_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGameServers_AggregationQuery_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CGameServers_AggregationQuery_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groups_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGameServers_AggregationQuery_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGameServers_AggregationQuery_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CGameServers_AggregationQuery_Response.Group groups = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_groups()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGameServers_AggregationQuery_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGameServers_AggregationQuery_Response)
  return false;
#undef DO_
}

void CGameServers_AggregationQuery_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGameServers_AggregationQuery_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CGameServers_AggregationQuery_Response.Group groups = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->groups_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->groups(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGameServers_AggregationQuery_Response)
}

::google::protobuf::uint8* CGameServers_AggregationQuery_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGameServers_AggregationQuery_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CGameServers_AggregationQuery_Response.Group groups = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->groups_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->groups(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGameServers_AggregationQuery_Response)
  return target;
}

size_t CGameServers_AggregationQuery_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGameServers_AggregationQuery_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CGameServers_AggregationQuery_Response.Group groups = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->groups_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->groups(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGameServers_AggregationQuery_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGameServers_AggregationQuery_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CGameServers_AggregationQuery_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGameServers_AggregationQuery_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGameServers_AggregationQuery_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGameServers_AggregationQuery_Response)
    MergeFrom(*source);
  }
}

void CGameServers_AggregationQuery_Response::MergeFrom(const CGameServers_AggregationQuery_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGameServers_AggregationQuery_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  groups_.MergeFrom(from.groups_);
}

void CGameServers_AggregationQuery_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGameServers_AggregationQuery_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGameServers_AggregationQuery_Response::CopyFrom(const CGameServers_AggregationQuery_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGameServers_AggregationQuery_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGameServers_AggregationQuery_Response::IsInitialized() const {
  return true;
}

void CGameServers_AggregationQuery_Response::Swap(CGameServers_AggregationQuery_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGameServers_AggregationQuery_Response::InternalSwap(CGameServers_AggregationQuery_Response* other) {
  using std::swap;
  groups_.InternalSwap(&other->groups_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGameServers_AggregationQuery_Response::GetMetadata() const {
  protobuf_gcsdk_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gcsdk_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
