// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steamdatagram_messages.proto

#ifndef PROTOBUF_steamdatagram_5fmessages_2eproto__INCLUDED
#define PROTOBUF_steamdatagram_5fmessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_steamdatagram_5fmessages_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[26];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCMsgSteamDatagramRouterPingReplyImpl();
void InitDefaultsCMsgSteamDatagramRouterPingReply();
void InitDefaultsCMsgSteamDatagramGameserverPingImpl();
void InitDefaultsCMsgSteamDatagramGameserverPing();
void InitDefaultsCMsgSteamDatagramGameServerAuthTicket_ExtraFieldImpl();
void InitDefaultsCMsgSteamDatagramGameServerAuthTicket_ExtraField();
void InitDefaultsCMsgSteamDatagramGameServerAuthTicketImpl();
void InitDefaultsCMsgSteamDatagramGameServerAuthTicket();
void InitDefaultsCMsgSteamDatagramGameserverSessionRequestImpl();
void InitDefaultsCMsgSteamDatagramGameserverSessionRequest();
void InitDefaultsCMsgSteamDatagramGameserverSessionEstablishedImpl();
void InitDefaultsCMsgSteamDatagramGameserverSessionEstablished();
void InitDefaultsCMsgSteamDatagramNoSessionImpl();
void InitDefaultsCMsgSteamDatagramNoSession();
void InitDefaultsCMsgSteamDatagramDiagnosticImpl();
void InitDefaultsCMsgSteamDatagramDiagnostic();
void InitDefaultsCMsgSteamDatagramDataCenterState_ServerImpl();
void InitDefaultsCMsgSteamDatagramDataCenterState_Server();
void InitDefaultsCMsgSteamDatagramDataCenterState_DataCenterImpl();
void InitDefaultsCMsgSteamDatagramDataCenterState_DataCenter();
void InitDefaultsCMsgSteamDatagramDataCenterStateImpl();
void InitDefaultsCMsgSteamDatagramDataCenterState();
void InitDefaultsCMsgSteamDatagramLinkInstantaneousStatsImpl();
void InitDefaultsCMsgSteamDatagramLinkInstantaneousStats();
void InitDefaultsCMsgSteamDatagramLinkLifetimeStatsImpl();
void InitDefaultsCMsgSteamDatagramLinkLifetimeStats();
void InitDefaultsCMsgSteamDatagramConnectionQualityImpl();
void InitDefaultsCMsgSteamDatagramConnectionQuality();
void InitDefaultsCMsgSteamDatagramConnectionStatsClientToRouterImpl();
void InitDefaultsCMsgSteamDatagramConnectionStatsClientToRouter();
void InitDefaultsCMsgSteamDatagramConnectionStatsRouterToClientImpl();
void InitDefaultsCMsgSteamDatagramConnectionStatsRouterToClient();
void InitDefaultsCMsgSteamDatagramConnectionStatsRouterToServerImpl();
void InitDefaultsCMsgSteamDatagramConnectionStatsRouterToServer();
void InitDefaultsCMsgSteamDatagramConnectionStatsServerToRouterImpl();
void InitDefaultsCMsgSteamDatagramConnectionStatsServerToRouter();
void InitDefaultsCMsgSteamDatagramClientPingSampleRequestImpl();
void InitDefaultsCMsgSteamDatagramClientPingSampleRequest();
void InitDefaultsCMsgSteamDatagramClientPingSampleReply_RoutingClusterImpl();
void InitDefaultsCMsgSteamDatagramClientPingSampleReply_RoutingCluster();
void InitDefaultsCMsgSteamDatagramClientPingSampleReply_DataCenterImpl();
void InitDefaultsCMsgSteamDatagramClientPingSampleReply_DataCenter();
void InitDefaultsCMsgSteamDatagramClientPingSampleReplyImpl();
void InitDefaultsCMsgSteamDatagramClientPingSampleReply();
void InitDefaultsCMsgSteamDatagramClientSwitchedPrimary_RouterQualityImpl();
void InitDefaultsCMsgSteamDatagramClientSwitchedPrimary_RouterQuality();
void InitDefaultsCMsgSteamDatagramClientSwitchedPrimaryImpl();
void InitDefaultsCMsgSteamDatagramClientSwitchedPrimary();
void InitDefaultsCMsgSteamDatagramRouterHealth_DataCenterImpl();
void InitDefaultsCMsgSteamDatagramRouterHealth_DataCenter();
void InitDefaultsCMsgSteamDatagramRouterHealthImpl();
void InitDefaultsCMsgSteamDatagramRouterHealth();
inline void InitDefaults() {
  InitDefaultsCMsgSteamDatagramRouterPingReply();
  InitDefaultsCMsgSteamDatagramGameserverPing();
  InitDefaultsCMsgSteamDatagramGameServerAuthTicket_ExtraField();
  InitDefaultsCMsgSteamDatagramGameServerAuthTicket();
  InitDefaultsCMsgSteamDatagramGameserverSessionRequest();
  InitDefaultsCMsgSteamDatagramGameserverSessionEstablished();
  InitDefaultsCMsgSteamDatagramNoSession();
  InitDefaultsCMsgSteamDatagramDiagnostic();
  InitDefaultsCMsgSteamDatagramDataCenterState_Server();
  InitDefaultsCMsgSteamDatagramDataCenterState_DataCenter();
  InitDefaultsCMsgSteamDatagramDataCenterState();
  InitDefaultsCMsgSteamDatagramLinkInstantaneousStats();
  InitDefaultsCMsgSteamDatagramLinkLifetimeStats();
  InitDefaultsCMsgSteamDatagramConnectionQuality();
  InitDefaultsCMsgSteamDatagramConnectionStatsClientToRouter();
  InitDefaultsCMsgSteamDatagramConnectionStatsRouterToClient();
  InitDefaultsCMsgSteamDatagramConnectionStatsRouterToServer();
  InitDefaultsCMsgSteamDatagramConnectionStatsServerToRouter();
  InitDefaultsCMsgSteamDatagramClientPingSampleRequest();
  InitDefaultsCMsgSteamDatagramClientPingSampleReply_RoutingCluster();
  InitDefaultsCMsgSteamDatagramClientPingSampleReply_DataCenter();
  InitDefaultsCMsgSteamDatagramClientPingSampleReply();
  InitDefaultsCMsgSteamDatagramClientSwitchedPrimary_RouterQuality();
  InitDefaultsCMsgSteamDatagramClientSwitchedPrimary();
  InitDefaultsCMsgSteamDatagramRouterHealth_DataCenter();
  InitDefaultsCMsgSteamDatagramRouterHealth();
}
}  // namespace protobuf_steamdatagram_5fmessages_2eproto
class CMsgSteamDatagramClientPingSampleReply;
class CMsgSteamDatagramClientPingSampleReplyDefaultTypeInternal;
extern CMsgSteamDatagramClientPingSampleReplyDefaultTypeInternal _CMsgSteamDatagramClientPingSampleReply_default_instance_;
class CMsgSteamDatagramClientPingSampleReply_DataCenter;
class CMsgSteamDatagramClientPingSampleReply_DataCenterDefaultTypeInternal;
extern CMsgSteamDatagramClientPingSampleReply_DataCenterDefaultTypeInternal _CMsgSteamDatagramClientPingSampleReply_DataCenter_default_instance_;
class CMsgSteamDatagramClientPingSampleReply_RoutingCluster;
class CMsgSteamDatagramClientPingSampleReply_RoutingClusterDefaultTypeInternal;
extern CMsgSteamDatagramClientPingSampleReply_RoutingClusterDefaultTypeInternal _CMsgSteamDatagramClientPingSampleReply_RoutingCluster_default_instance_;
class CMsgSteamDatagramClientPingSampleRequest;
class CMsgSteamDatagramClientPingSampleRequestDefaultTypeInternal;
extern CMsgSteamDatagramClientPingSampleRequestDefaultTypeInternal _CMsgSteamDatagramClientPingSampleRequest_default_instance_;
class CMsgSteamDatagramClientSwitchedPrimary;
class CMsgSteamDatagramClientSwitchedPrimaryDefaultTypeInternal;
extern CMsgSteamDatagramClientSwitchedPrimaryDefaultTypeInternal _CMsgSteamDatagramClientSwitchedPrimary_default_instance_;
class CMsgSteamDatagramClientSwitchedPrimary_RouterQuality;
class CMsgSteamDatagramClientSwitchedPrimary_RouterQualityDefaultTypeInternal;
extern CMsgSteamDatagramClientSwitchedPrimary_RouterQualityDefaultTypeInternal _CMsgSteamDatagramClientSwitchedPrimary_RouterQuality_default_instance_;
class CMsgSteamDatagramConnectionQuality;
class CMsgSteamDatagramConnectionQualityDefaultTypeInternal;
extern CMsgSteamDatagramConnectionQualityDefaultTypeInternal _CMsgSteamDatagramConnectionQuality_default_instance_;
class CMsgSteamDatagramConnectionStatsClientToRouter;
class CMsgSteamDatagramConnectionStatsClientToRouterDefaultTypeInternal;
extern CMsgSteamDatagramConnectionStatsClientToRouterDefaultTypeInternal _CMsgSteamDatagramConnectionStatsClientToRouter_default_instance_;
class CMsgSteamDatagramConnectionStatsRouterToClient;
class CMsgSteamDatagramConnectionStatsRouterToClientDefaultTypeInternal;
extern CMsgSteamDatagramConnectionStatsRouterToClientDefaultTypeInternal _CMsgSteamDatagramConnectionStatsRouterToClient_default_instance_;
class CMsgSteamDatagramConnectionStatsRouterToServer;
class CMsgSteamDatagramConnectionStatsRouterToServerDefaultTypeInternal;
extern CMsgSteamDatagramConnectionStatsRouterToServerDefaultTypeInternal _CMsgSteamDatagramConnectionStatsRouterToServer_default_instance_;
class CMsgSteamDatagramConnectionStatsServerToRouter;
class CMsgSteamDatagramConnectionStatsServerToRouterDefaultTypeInternal;
extern CMsgSteamDatagramConnectionStatsServerToRouterDefaultTypeInternal _CMsgSteamDatagramConnectionStatsServerToRouter_default_instance_;
class CMsgSteamDatagramDataCenterState;
class CMsgSteamDatagramDataCenterStateDefaultTypeInternal;
extern CMsgSteamDatagramDataCenterStateDefaultTypeInternal _CMsgSteamDatagramDataCenterState_default_instance_;
class CMsgSteamDatagramDataCenterState_DataCenter;
class CMsgSteamDatagramDataCenterState_DataCenterDefaultTypeInternal;
extern CMsgSteamDatagramDataCenterState_DataCenterDefaultTypeInternal _CMsgSteamDatagramDataCenterState_DataCenter_default_instance_;
class CMsgSteamDatagramDataCenterState_Server;
class CMsgSteamDatagramDataCenterState_ServerDefaultTypeInternal;
extern CMsgSteamDatagramDataCenterState_ServerDefaultTypeInternal _CMsgSteamDatagramDataCenterState_Server_default_instance_;
class CMsgSteamDatagramDiagnostic;
class CMsgSteamDatagramDiagnosticDefaultTypeInternal;
extern CMsgSteamDatagramDiagnosticDefaultTypeInternal _CMsgSteamDatagramDiagnostic_default_instance_;
class CMsgSteamDatagramGameServerAuthTicket;
class CMsgSteamDatagramGameServerAuthTicketDefaultTypeInternal;
extern CMsgSteamDatagramGameServerAuthTicketDefaultTypeInternal _CMsgSteamDatagramGameServerAuthTicket_default_instance_;
class CMsgSteamDatagramGameServerAuthTicket_ExtraField;
class CMsgSteamDatagramGameServerAuthTicket_ExtraFieldDefaultTypeInternal;
extern CMsgSteamDatagramGameServerAuthTicket_ExtraFieldDefaultTypeInternal _CMsgSteamDatagramGameServerAuthTicket_ExtraField_default_instance_;
class CMsgSteamDatagramGameserverPing;
class CMsgSteamDatagramGameserverPingDefaultTypeInternal;
extern CMsgSteamDatagramGameserverPingDefaultTypeInternal _CMsgSteamDatagramGameserverPing_default_instance_;
class CMsgSteamDatagramGameserverSessionEstablished;
class CMsgSteamDatagramGameserverSessionEstablishedDefaultTypeInternal;
extern CMsgSteamDatagramGameserverSessionEstablishedDefaultTypeInternal _CMsgSteamDatagramGameserverSessionEstablished_default_instance_;
class CMsgSteamDatagramGameserverSessionRequest;
class CMsgSteamDatagramGameserverSessionRequestDefaultTypeInternal;
extern CMsgSteamDatagramGameserverSessionRequestDefaultTypeInternal _CMsgSteamDatagramGameserverSessionRequest_default_instance_;
class CMsgSteamDatagramLinkInstantaneousStats;
class CMsgSteamDatagramLinkInstantaneousStatsDefaultTypeInternal;
extern CMsgSteamDatagramLinkInstantaneousStatsDefaultTypeInternal _CMsgSteamDatagramLinkInstantaneousStats_default_instance_;
class CMsgSteamDatagramLinkLifetimeStats;
class CMsgSteamDatagramLinkLifetimeStatsDefaultTypeInternal;
extern CMsgSteamDatagramLinkLifetimeStatsDefaultTypeInternal _CMsgSteamDatagramLinkLifetimeStats_default_instance_;
class CMsgSteamDatagramNoSession;
class CMsgSteamDatagramNoSessionDefaultTypeInternal;
extern CMsgSteamDatagramNoSessionDefaultTypeInternal _CMsgSteamDatagramNoSession_default_instance_;
class CMsgSteamDatagramRouterHealth;
class CMsgSteamDatagramRouterHealthDefaultTypeInternal;
extern CMsgSteamDatagramRouterHealthDefaultTypeInternal _CMsgSteamDatagramRouterHealth_default_instance_;
class CMsgSteamDatagramRouterHealth_DataCenter;
class CMsgSteamDatagramRouterHealth_DataCenterDefaultTypeInternal;
extern CMsgSteamDatagramRouterHealth_DataCenterDefaultTypeInternal _CMsgSteamDatagramRouterHealth_DataCenter_default_instance_;
class CMsgSteamDatagramRouterPingReply;
class CMsgSteamDatagramRouterPingReplyDefaultTypeInternal;
extern CMsgSteamDatagramRouterPingReplyDefaultTypeInternal _CMsgSteamDatagramRouterPingReply_default_instance_;

enum ESteamDatagramMsgID {
  k_ESteamDatagramMsg_Invalid = 0,
  k_ESteamDatagramMsg_RouterPingRequest = 1,
  k_ESteamDatagramMsg_RouterPingReply = 2,
  k_ESteamDatagramMsg_GameserverPingRequest = 3,
  k_ESteamDatagramMsg_GameserverPingReply = 4,
  k_ESteamDatagramMsg_GameserverSessionRequest = 5,
  k_ESteamDatagramMsg_GameserverSessionEstablished = 6,
  k_ESteamDatagramMsg_NoSession = 7,
  k_ESteamDatagramMsg_Diagnostic = 8,
  k_ESteamDatagramMsg_DataClientToRouter = 9,
  k_ESteamDatagramMsg_DataRouterToServer = 10,
  k_ESteamDatagramMsg_DataServerToRouter = 11,
  k_ESteamDatagramMsg_DataRouterToClient = 12,
  k_ESteamDatagramMsg_Stats = 13,
  k_ESteamDatagramMsg_ClientPingSampleRequest = 14,
  k_ESteamDatagramMsg_ClientPingSampleReply = 15,
  k_ESteamDatagramMsg_ClientToRouterSwitchedPrimary = 16,
  k_ESteamDatagramMsg_RelayHealth = 17
};
bool ESteamDatagramMsgID_IsValid(int value);
const ESteamDatagramMsgID ESteamDatagramMsgID_MIN = k_ESteamDatagramMsg_Invalid;
const ESteamDatagramMsgID ESteamDatagramMsgID_MAX = k_ESteamDatagramMsg_RelayHealth;
const int ESteamDatagramMsgID_ARRAYSIZE = ESteamDatagramMsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ESteamDatagramMsgID_descriptor();
inline const ::std::string& ESteamDatagramMsgID_Name(ESteamDatagramMsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ESteamDatagramMsgID_descriptor(), value);
}
inline bool ESteamDatagramMsgID_Parse(
    const ::std::string& name, ESteamDatagramMsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESteamDatagramMsgID>(
    ESteamDatagramMsgID_descriptor(), name, value);
}
// ===================================================================

class CMsgSteamDatagramRouterPingReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramRouterPingReply) */ {
 public:
  CMsgSteamDatagramRouterPingReply();
  virtual ~CMsgSteamDatagramRouterPingReply();

  CMsgSteamDatagramRouterPingReply(const CMsgSteamDatagramRouterPingReply& from);

  inline CMsgSteamDatagramRouterPingReply& operator=(const CMsgSteamDatagramRouterPingReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramRouterPingReply(CMsgSteamDatagramRouterPingReply&& from) noexcept
    : CMsgSteamDatagramRouterPingReply() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramRouterPingReply& operator=(CMsgSteamDatagramRouterPingReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramRouterPingReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramRouterPingReply* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramRouterPingReply*>(
               &_CMsgSteamDatagramRouterPingReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMsgSteamDatagramRouterPingReply* other);
  friend void swap(CMsgSteamDatagramRouterPingReply& a, CMsgSteamDatagramRouterPingReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramRouterPingReply* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamDatagramRouterPingReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamDatagramRouterPingReply& from);
  void MergeFrom(const CMsgSteamDatagramRouterPingReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamDatagramRouterPingReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 latency_datacenter_ids = 2 [packed = true];
  int latency_datacenter_ids_size() const;
  void clear_latency_datacenter_ids();
  static const int kLatencyDatacenterIdsFieldNumber = 2;
  ::google::protobuf::uint32 latency_datacenter_ids(int index) const;
  void set_latency_datacenter_ids(int index, ::google::protobuf::uint32 value);
  void add_latency_datacenter_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      latency_datacenter_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_latency_datacenter_ids();

  // repeated uint32 latency_ping_ms = 3 [packed = true];
  int latency_ping_ms_size() const;
  void clear_latency_ping_ms();
  static const int kLatencyPingMsFieldNumber = 3;
  ::google::protobuf::uint32 latency_ping_ms(int index) const;
  void set_latency_ping_ms(int index, ::google::protobuf::uint32 value);
  void add_latency_ping_ms(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      latency_ping_ms() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_latency_ping_ms();

  // repeated fixed32 scoring_penalty_datacenter_ids = 10 [packed = true];
  int scoring_penalty_datacenter_ids_size() const;
  void clear_scoring_penalty_datacenter_ids();
  static const int kScoringPenaltyDatacenterIdsFieldNumber = 10;
  ::google::protobuf::uint32 scoring_penalty_datacenter_ids(int index) const;
  void set_scoring_penalty_datacenter_ids(int index, ::google::protobuf::uint32 value);
  void add_scoring_penalty_datacenter_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      scoring_penalty_datacenter_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_scoring_penalty_datacenter_ids();

  // repeated uint32 scoring_penalty_values = 11 [packed = true];
  int scoring_penalty_values_size() const;
  void clear_scoring_penalty_values();
  static const int kScoringPenaltyValuesFieldNumber = 11;
  ::google::protobuf::uint32 scoring_penalty_values(int index) const;
  void set_scoring_penalty_values(int index, ::google::protobuf::uint32 value);
  void add_scoring_penalty_values(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      scoring_penalty_values() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_scoring_penalty_values();

  // optional fixed32 client_timestamp = 1;
  bool has_client_timestamp() const;
  void clear_client_timestamp();
  static const int kClientTimestampFieldNumber = 1;
  ::google::protobuf::uint32 client_timestamp() const;
  void set_client_timestamp(::google::protobuf::uint32 value);

  // optional fixed32 your_public_ip = 4;
  bool has_your_public_ip() const;
  void clear_your_public_ip();
  static const int kYourPublicIpFieldNumber = 4;
  ::google::protobuf::uint32 your_public_ip() const;
  void set_your_public_ip(::google::protobuf::uint32 value);

  // optional fixed64 challenge = 6;
  bool has_challenge() const;
  void clear_challenge();
  static const int kChallengeFieldNumber = 6;
  ::google::protobuf::uint64 challenge() const;
  void set_challenge(::google::protobuf::uint64 value);

  // optional fixed32 server_time = 5;
  bool has_server_time() const;
  void clear_server_time();
  static const int kServerTimeFieldNumber = 5;
  ::google::protobuf::uint32 server_time() const;
  void set_server_time(::google::protobuf::uint32 value);

  // optional uint32 seconds_until_shutdown = 7;
  bool has_seconds_until_shutdown() const;
  void clear_seconds_until_shutdown();
  static const int kSecondsUntilShutdownFieldNumber = 7;
  ::google::protobuf::uint32 seconds_until_shutdown() const;
  void set_seconds_until_shutdown(::google::protobuf::uint32 value);

  // optional fixed32 client_cookie = 8;
  bool has_client_cookie() const;
  void clear_client_cookie();
  static const int kClientCookieFieldNumber = 8;
  ::google::protobuf::uint32 client_cookie() const;
  void set_client_cookie(::google::protobuf::uint32 value);

  // optional uint32 scoring_penalty_relay_cluster = 9;
  bool has_scoring_penalty_relay_cluster() const;
  void clear_scoring_penalty_relay_cluster();
  static const int kScoringPenaltyRelayClusterFieldNumber = 9;
  ::google::protobuf::uint32 scoring_penalty_relay_cluster() const;
  void set_scoring_penalty_relay_cluster(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramRouterPingReply)
 private:
  void set_has_client_timestamp();
  void clear_has_client_timestamp();
  void set_has_your_public_ip();
  void clear_has_your_public_ip();
  void set_has_server_time();
  void clear_has_server_time();
  void set_has_challenge();
  void clear_has_challenge();
  void set_has_seconds_until_shutdown();
  void clear_has_seconds_until_shutdown();
  void set_has_client_cookie();
  void clear_has_client_cookie();
  void set_has_scoring_penalty_relay_cluster();
  void clear_has_scoring_penalty_relay_cluster();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > latency_datacenter_ids_;
  mutable int _latency_datacenter_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > latency_ping_ms_;
  mutable int _latency_ping_ms_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > scoring_penalty_datacenter_ids_;
  mutable int _scoring_penalty_datacenter_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > scoring_penalty_values_;
  mutable int _scoring_penalty_values_cached_byte_size_;
  ::google::protobuf::uint32 client_timestamp_;
  ::google::protobuf::uint32 your_public_ip_;
  ::google::protobuf::uint64 challenge_;
  ::google::protobuf::uint32 server_time_;
  ::google::protobuf::uint32 seconds_until_shutdown_;
  ::google::protobuf::uint32 client_cookie_;
  ::google::protobuf::uint32 scoring_penalty_relay_cluster_;
  friend struct ::protobuf_steamdatagram_5fmessages_2eproto::TableStruct;
  friend void ::protobuf_steamdatagram_5fmessages_2eproto::InitDefaultsCMsgSteamDatagramRouterPingReplyImpl();
};
// -------------------------------------------------------------------

class CMsgSteamDatagramGameserverPing : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramGameserverPing) */ {
 public:
  CMsgSteamDatagramGameserverPing();
  virtual ~CMsgSteamDatagramGameserverPing();

  CMsgSteamDatagramGameserverPing(const CMsgSteamDatagramGameserverPing& from);

  inline CMsgSteamDatagramGameserverPing& operator=(const CMsgSteamDatagramGameserverPing& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramGameserverPing(CMsgSteamDatagramGameserverPing&& from) noexcept
    : CMsgSteamDatagramGameserverPing() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramGameserverPing& operator=(CMsgSteamDatagramGameserverPing&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramGameserverPing& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramGameserverPing* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramGameserverPing*>(
               &_CMsgSteamDatagramGameserverPing_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CMsgSteamDatagramGameserverPing* other);
  friend void swap(CMsgSteamDatagramGameserverPing& a, CMsgSteamDatagramGameserverPing& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramGameserverPing* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamDatagramGameserverPing* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamDatagramGameserverPing& from);
  void MergeFrom(const CMsgSteamDatagramGameserverPing& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamDatagramGameserverPing* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 client_steam_id = 2;
  bool has_client_steam_id() const;
  void clear_client_steam_id();
  static const int kClientSteamIdFieldNumber = 2;
  ::google::protobuf::uint64 client_steam_id() const;
  void set_client_steam_id(::google::protobuf::uint64 value);

  // optional uint32 client_session = 1;
  bool has_client_session() const;
  void clear_client_session();
  static const int kClientSessionFieldNumber = 1;
  ::google::protobuf::uint32 client_session() const;
  void set_client_session(::google::protobuf::uint32 value);

  // optional fixed32 client_timestamp = 3;
  bool has_client_timestamp() const;
  void clear_client_timestamp();
  static const int kClientTimestampFieldNumber = 3;
  ::google::protobuf::uint32 client_timestamp() const;
  void set_client_timestamp(::google::protobuf::uint32 value);

  // optional fixed32 router_timestamp = 4;
  bool has_router_timestamp() const;
  void clear_router_timestamp();
  static const int kRouterTimestampFieldNumber = 4;
  ::google::protobuf::uint32 router_timestamp() const;
  void set_router_timestamp(::google::protobuf::uint32 value);

  // optional uint32 router_gameserver_latency = 5;
  bool has_router_gameserver_latency() const;
  void clear_router_gameserver_latency();
  static const int kRouterGameserverLatencyFieldNumber = 5;
  ::google::protobuf::uint32 router_gameserver_latency() const;
  void set_router_gameserver_latency(::google::protobuf::uint32 value);

  // optional uint32 seq_number_router = 6;
  bool has_seq_number_router() const;
  void clear_seq_number_router();
  static const int kSeqNumberRouterFieldNumber = 6;
  ::google::protobuf::uint32 seq_number_router() const;
  void set_seq_number_router(::google::protobuf::uint32 value);

  // optional uint32 seq_number_e2e = 7;
  bool has_seq_number_e2e() const;
  void clear_seq_number_e2e();
  static const int kSeqNumberE2EFieldNumber = 7;
  ::google::protobuf::uint32 seq_number_e2e() const;
  void set_seq_number_e2e(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramGameserverPing)
 private:
  void set_has_client_session();
  void clear_has_client_session();
  void set_has_client_steam_id();
  void clear_has_client_steam_id();
  void set_has_client_timestamp();
  void clear_has_client_timestamp();
  void set_has_router_timestamp();
  void clear_has_router_timestamp();
  void set_has_router_gameserver_latency();
  void clear_has_router_gameserver_latency();
  void set_has_seq_number_router();
  void clear_has_seq_number_router();
  void set_has_seq_number_e2e();
  void clear_has_seq_number_e2e();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 client_steam_id_;
  ::google::protobuf::uint32 client_session_;
  ::google::protobuf::uint32 client_timestamp_;
  ::google::protobuf::uint32 router_timestamp_;
  ::google::protobuf::uint32 router_gameserver_latency_;
  ::google::protobuf::uint32 seq_number_router_;
  ::google::protobuf::uint32 seq_number_e2e_;
  friend struct ::protobuf_steamdatagram_5fmessages_2eproto::TableStruct;
  friend void ::protobuf_steamdatagram_5fmessages_2eproto::InitDefaultsCMsgSteamDatagramGameserverPingImpl();
};
// -------------------------------------------------------------------

class CMsgSteamDatagramGameServerAuthTicket_ExtraField : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramGameServerAuthTicket.ExtraField) */ {
 public:
  CMsgSteamDatagramGameServerAuthTicket_ExtraField();
  virtual ~CMsgSteamDatagramGameServerAuthTicket_ExtraField();

  CMsgSteamDatagramGameServerAuthTicket_ExtraField(const CMsgSteamDatagramGameServerAuthTicket_ExtraField& from);

  inline CMsgSteamDatagramGameServerAuthTicket_ExtraField& operator=(const CMsgSteamDatagramGameServerAuthTicket_ExtraField& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramGameServerAuthTicket_ExtraField(CMsgSteamDatagramGameServerAuthTicket_ExtraField&& from) noexcept
    : CMsgSteamDatagramGameServerAuthTicket_ExtraField() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramGameServerAuthTicket_ExtraField& operator=(CMsgSteamDatagramGameServerAuthTicket_ExtraField&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramGameServerAuthTicket_ExtraField& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramGameServerAuthTicket_ExtraField* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramGameServerAuthTicket_ExtraField*>(
               &_CMsgSteamDatagramGameServerAuthTicket_ExtraField_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CMsgSteamDatagramGameServerAuthTicket_ExtraField* other);
  friend void swap(CMsgSteamDatagramGameServerAuthTicket_ExtraField& a, CMsgSteamDatagramGameServerAuthTicket_ExtraField& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramGameServerAuthTicket_ExtraField* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamDatagramGameServerAuthTicket_ExtraField* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamDatagramGameServerAuthTicket_ExtraField& from);
  void MergeFrom(const CMsgSteamDatagramGameServerAuthTicket_ExtraField& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamDatagramGameServerAuthTicket_ExtraField* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string string_value = 2;
  bool has_string_value() const;
  void clear_string_value();
  static const int kStringValueFieldNumber = 2;
  const ::std::string& string_value() const;
  void set_string_value(const ::std::string& value);
  #if LANG_CXX11
  void set_string_value(::std::string&& value);
  #endif
  void set_string_value(const char* value);
  void set_string_value(const char* value, size_t size);
  ::std::string* mutable_string_value();
  ::std::string* release_string_value();
  void set_allocated_string_value(::std::string* string_value);

  // optional sint32 int32_value = 3;
  bool has_int32_value() const;
  void clear_int32_value();
  static const int kInt32ValueFieldNumber = 3;
  ::google::protobuf::int32 int32_value() const;
  void set_int32_value(::google::protobuf::int32 value);

  // optional fixed32 fixed32_value = 4;
  bool has_fixed32_value() const;
  void clear_fixed32_value();
  static const int kFixed32ValueFieldNumber = 4;
  ::google::protobuf::uint32 fixed32_value() const;
  void set_fixed32_value(::google::protobuf::uint32 value);

  // optional fixed64 fixed64_value = 5;
  bool has_fixed64_value() const;
  void clear_fixed64_value();
  static const int kFixed64ValueFieldNumber = 5;
  ::google::protobuf::uint64 fixed64_value() const;
  void set_fixed64_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramGameServerAuthTicket.ExtraField)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_string_value();
  void clear_has_string_value();
  void set_has_int32_value();
  void clear_has_int32_value();
  void set_has_fixed32_value();
  void clear_has_fixed32_value();
  void set_has_fixed64_value();
  void clear_has_fixed64_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr string_value_;
  ::google::protobuf::int32 int32_value_;
  ::google::protobuf::uint32 fixed32_value_;
  ::google::protobuf::uint64 fixed64_value_;
  friend struct ::protobuf_steamdatagram_5fmessages_2eproto::TableStruct;
  friend void ::protobuf_steamdatagram_5fmessages_2eproto::InitDefaultsCMsgSteamDatagramGameServerAuthTicket_ExtraFieldImpl();
};
// -------------------------------------------------------------------

class CMsgSteamDatagramGameServerAuthTicket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramGameServerAuthTicket) */ {
 public:
  CMsgSteamDatagramGameServerAuthTicket();
  virtual ~CMsgSteamDatagramGameServerAuthTicket();

  CMsgSteamDatagramGameServerAuthTicket(const CMsgSteamDatagramGameServerAuthTicket& from);

  inline CMsgSteamDatagramGameServerAuthTicket& operator=(const CMsgSteamDatagramGameServerAuthTicket& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramGameServerAuthTicket(CMsgSteamDatagramGameServerAuthTicket&& from) noexcept
    : CMsgSteamDatagramGameServerAuthTicket() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramGameServerAuthTicket& operator=(CMsgSteamDatagramGameServerAuthTicket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramGameServerAuthTicket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramGameServerAuthTicket* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramGameServerAuthTicket*>(
               &_CMsgSteamDatagramGameServerAuthTicket_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CMsgSteamDatagramGameServerAuthTicket* other);
  friend void swap(CMsgSteamDatagramGameServerAuthTicket& a, CMsgSteamDatagramGameServerAuthTicket& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramGameServerAuthTicket* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamDatagramGameServerAuthTicket* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamDatagramGameServerAuthTicket& from);
  void MergeFrom(const CMsgSteamDatagramGameServerAuthTicket& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamDatagramGameServerAuthTicket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgSteamDatagramGameServerAuthTicket_ExtraField ExtraField;

  // accessors -------------------------------------------------------

  // repeated .CMsgSteamDatagramGameServerAuthTicket.ExtraField extra_fields = 8;
  int extra_fields_size() const;
  void clear_extra_fields();
  static const int kExtraFieldsFieldNumber = 8;
  const ::CMsgSteamDatagramGameServerAuthTicket_ExtraField& extra_fields(int index) const;
  ::CMsgSteamDatagramGameServerAuthTicket_ExtraField* mutable_extra_fields(int index);
  ::CMsgSteamDatagramGameServerAuthTicket_ExtraField* add_extra_fields();
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramGameServerAuthTicket_ExtraField >*
      mutable_extra_fields();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramGameServerAuthTicket_ExtraField >&
      extra_fields() const;

  // optional bytes signature = 6;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 6;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const void* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // optional fixed64 authorized_steam_id = 2;
  bool has_authorized_steam_id() const;
  void clear_authorized_steam_id();
  static const int kAuthorizedSteamIdFieldNumber = 2;
  ::google::protobuf::uint64 authorized_steam_id() const;
  void set_authorized_steam_id(::google::protobuf::uint64 value);

  // optional fixed32 time_expiry = 1;
  bool has_time_expiry() const;
  void clear_time_expiry();
  static const int kTimeExpiryFieldNumber = 1;
  ::google::protobuf::uint32 time_expiry() const;
  void set_time_expiry(::google::protobuf::uint32 value);

  // optional fixed32 authorized_public_ip = 3;
  bool has_authorized_public_ip() const;
  void clear_authorized_public_ip();
  static const int kAuthorizedPublicIpFieldNumber = 3;
  ::google::protobuf::uint32 authorized_public_ip() const;
  void set_authorized_public_ip(::google::protobuf::uint32 value);

  // optional fixed64 gameserver_steam_id = 4;
  bool has_gameserver_steam_id() const;
  void clear_gameserver_steam_id();
  static const int kGameserverSteamIdFieldNumber = 4;
  ::google::protobuf::uint64 gameserver_steam_id() const;
  void set_gameserver_steam_id(::google::protobuf::uint64 value);

  // optional fixed64 gameserver_net_id = 5;
  bool has_gameserver_net_id() const;
  void clear_gameserver_net_id();
  static const int kGameserverNetIdFieldNumber = 5;
  ::google::protobuf::uint64 gameserver_net_id() const;
  void set_gameserver_net_id(::google::protobuf::uint64 value);

  // optional uint32 app_id = 7;
  bool has_app_id() const;
  void clear_app_id();
  static const int kAppIdFieldNumber = 7;
  ::google::protobuf::uint32 app_id() const;
  void set_app_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramGameServerAuthTicket)
 private:
  void set_has_time_expiry();
  void clear_has_time_expiry();
  void set_has_authorized_steam_id();
  void clear_has_authorized_steam_id();
  void set_has_authorized_public_ip();
  void clear_has_authorized_public_ip();
  void set_has_gameserver_steam_id();
  void clear_has_gameserver_steam_id();
  void set_has_gameserver_net_id();
  void clear_has_gameserver_net_id();
  void set_has_signature();
  void clear_has_signature();
  void set_has_app_id();
  void clear_has_app_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramGameServerAuthTicket_ExtraField > extra_fields_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::google::protobuf::uint64 authorized_steam_id_;
  ::google::protobuf::uint32 time_expiry_;
  ::google::protobuf::uint32 authorized_public_ip_;
  ::google::protobuf::uint64 gameserver_steam_id_;
  ::google::protobuf::uint64 gameserver_net_id_;
  ::google::protobuf::uint32 app_id_;
  friend struct ::protobuf_steamdatagram_5fmessages_2eproto::TableStruct;
  friend void ::protobuf_steamdatagram_5fmessages_2eproto::InitDefaultsCMsgSteamDatagramGameServerAuthTicketImpl();
};
// -------------------------------------------------------------------

class CMsgSteamDatagramGameserverSessionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramGameserverSessionRequest) */ {
 public:
  CMsgSteamDatagramGameserverSessionRequest();
  virtual ~CMsgSteamDatagramGameserverSessionRequest();

  CMsgSteamDatagramGameserverSessionRequest(const CMsgSteamDatagramGameserverSessionRequest& from);

  inline CMsgSteamDatagramGameserverSessionRequest& operator=(const CMsgSteamDatagramGameserverSessionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramGameserverSessionRequest(CMsgSteamDatagramGameserverSessionRequest&& from) noexcept
    : CMsgSteamDatagramGameserverSessionRequest() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramGameserverSessionRequest& operator=(CMsgSteamDatagramGameserverSessionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramGameserverSessionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramGameserverSessionRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramGameserverSessionRequest*>(
               &_CMsgSteamDatagramGameserverSessionRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(CMsgSteamDatagramGameserverSessionRequest* other);
  friend void swap(CMsgSteamDatagramGameserverSessionRequest& a, CMsgSteamDatagramGameserverSessionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramGameserverSessionRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamDatagramGameserverSessionRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamDatagramGameserverSessionRequest& from);
  void MergeFrom(const CMsgSteamDatagramGameserverSessionRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamDatagramGameserverSessionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgSteamDatagramGameServerAuthTicket ticket = 1;
  bool has_ticket() const;
  void clear_ticket();
  static const int kTicketFieldNumber = 1;
  const ::CMsgSteamDatagramGameServerAuthTicket& ticket() const;
  ::CMsgSteamDatagramGameServerAuthTicket* release_ticket();
  ::CMsgSteamDatagramGameServerAuthTicket* mutable_ticket();
  void set_allocated_ticket(::CMsgSteamDatagramGameServerAuthTicket* ticket);

  // optional fixed64 challenge = 4;
  bool has_challenge() const;
  void clear_challenge();
  static const int kChallengeFieldNumber = 4;
  ::google::protobuf::uint64 challenge() const;
  void set_challenge(::google::protobuf::uint64 value);

  // optional fixed32 challenge_time = 3;
  bool has_challenge_time() const;
  void clear_challenge_time();
  static const int kChallengeTimeFieldNumber = 3;
  ::google::protobuf::uint32 challenge_time() const;
  void set_challenge_time(::google::protobuf::uint32 value);

  // optional fixed32 client_cookie = 5;
  bool has_client_cookie() const;
  void clear_client_cookie();
  static const int kClientCookieFieldNumber = 5;
  ::google::protobuf::uint32 client_cookie() const;
  void set_client_cookie(::google::protobuf::uint32 value);

  // optional uint32 network_config_version = 6;
  bool has_network_config_version() const;
  void clear_network_config_version();
  static const int kNetworkConfigVersionFieldNumber = 6;
  ::google::protobuf::uint32 network_config_version() const;
  void set_network_config_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramGameserverSessionRequest)
 private:
  void set_has_ticket();
  void clear_has_ticket();
  void set_has_challenge_time();
  void clear_has_challenge_time();
  void set_has_challenge();
  void clear_has_challenge();
  void set_has_client_cookie();
  void clear_has_client_cookie();
  void set_has_network_config_version();
  void clear_has_network_config_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::CMsgSteamDatagramGameServerAuthTicket* ticket_;
  ::google::protobuf::uint64 challenge_;
  ::google::protobuf::uint32 challenge_time_;
  ::google::protobuf::uint32 client_cookie_;
  ::google::protobuf::uint32 network_config_version_;
  friend struct ::protobuf_steamdatagram_5fmessages_2eproto::TableStruct;
  friend void ::protobuf_steamdatagram_5fmessages_2eproto::InitDefaultsCMsgSteamDatagramGameserverSessionRequestImpl();
};
// -------------------------------------------------------------------

class CMsgSteamDatagramGameserverSessionEstablished : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramGameserverSessionEstablished) */ {
 public:
  CMsgSteamDatagramGameserverSessionEstablished();
  virtual ~CMsgSteamDatagramGameserverSessionEstablished();

  CMsgSteamDatagramGameserverSessionEstablished(const CMsgSteamDatagramGameserverSessionEstablished& from);

  inline CMsgSteamDatagramGameserverSessionEstablished& operator=(const CMsgSteamDatagramGameserverSessionEstablished& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramGameserverSessionEstablished(CMsgSteamDatagramGameserverSessionEstablished&& from) noexcept
    : CMsgSteamDatagramGameserverSessionEstablished() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramGameserverSessionEstablished& operator=(CMsgSteamDatagramGameserverSessionEstablished&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramGameserverSessionEstablished& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramGameserverSessionEstablished* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramGameserverSessionEstablished*>(
               &_CMsgSteamDatagramGameserverSessionEstablished_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(CMsgSteamDatagramGameserverSessionEstablished* other);
  friend void swap(CMsgSteamDatagramGameserverSessionEstablished& a, CMsgSteamDatagramGameserverSessionEstablished& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramGameserverSessionEstablished* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamDatagramGameserverSessionEstablished* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamDatagramGameserverSessionEstablished& from);
  void MergeFrom(const CMsgSteamDatagramGameserverSessionEstablished& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamDatagramGameserverSessionEstablished* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed32 client_cookie = 1;
  bool has_client_cookie() const;
  void clear_client_cookie();
  static const int kClientCookieFieldNumber = 1;
  ::google::protobuf::uint32 client_cookie() const;
  void set_client_cookie(::google::protobuf::uint32 value);

  // optional uint32 seconds_until_shutdown = 4;
  bool has_seconds_until_shutdown() const;
  void clear_seconds_until_shutdown();
  static const int kSecondsUntilShutdownFieldNumber = 4;
  ::google::protobuf::uint32 seconds_until_shutdown() const;
  void set_seconds_until_shutdown(::google::protobuf::uint32 value);

  // optional fixed64 gameserver_steam_id = 3;
  bool has_gameserver_steam_id() const;
  void clear_gameserver_steam_id();
  static const int kGameserverSteamIdFieldNumber = 3;
  ::google::protobuf::uint64 gameserver_steam_id() const;
  void set_gameserver_steam_id(::google::protobuf::uint64 value);

  // optional uint32 session_id = 5;
  bool has_session_id() const;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 5;
  ::google::protobuf::uint32 session_id() const;
  void set_session_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramGameserverSessionEstablished)
 private:
  void set_has_client_cookie();
  void clear_has_client_cookie();
  void set_has_gameserver_steam_id();
  void clear_has_gameserver_steam_id();
  void set_has_seconds_until_shutdown();
  void clear_has_seconds_until_shutdown();
  void set_has_session_id();
  void clear_has_session_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 client_cookie_;
  ::google::protobuf::uint32 seconds_until_shutdown_;
  ::google::protobuf::uint64 gameserver_steam_id_;
  ::google::protobuf::uint32 session_id_;
  friend struct ::protobuf_steamdatagram_5fmessages_2eproto::TableStruct;
  friend void ::protobuf_steamdatagram_5fmessages_2eproto::InitDefaultsCMsgSteamDatagramGameserverSessionEstablishedImpl();
};
// -------------------------------------------------------------------

class CMsgSteamDatagramNoSession : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramNoSession) */ {
 public:
  CMsgSteamDatagramNoSession();
  virtual ~CMsgSteamDatagramNoSession();

  CMsgSteamDatagramNoSession(const CMsgSteamDatagramNoSession& from);

  inline CMsgSteamDatagramNoSession& operator=(const CMsgSteamDatagramNoSession& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramNoSession(CMsgSteamDatagramNoSession&& from) noexcept
    : CMsgSteamDatagramNoSession() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramNoSession& operator=(CMsgSteamDatagramNoSession&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramNoSession& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramNoSession* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramNoSession*>(
               &_CMsgSteamDatagramNoSession_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(CMsgSteamDatagramNoSession* other);
  friend void swap(CMsgSteamDatagramNoSession& a, CMsgSteamDatagramNoSession& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramNoSession* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamDatagramNoSession* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamDatagramNoSession& from);
  void MergeFrom(const CMsgSteamDatagramNoSession& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamDatagramNoSession* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed32 your_public_ip = 2;
  bool has_your_public_ip() const;
  void clear_your_public_ip();
  static const int kYourPublicIpFieldNumber = 2;
  ::google::protobuf::uint32 your_public_ip() const;
  void set_your_public_ip(::google::protobuf::uint32 value);

  // optional fixed32 server_time = 3;
  bool has_server_time() const;
  void clear_server_time();
  static const int kServerTimeFieldNumber = 3;
  ::google::protobuf::uint32 server_time() const;
  void set_server_time(::google::protobuf::uint32 value);

  // optional fixed64 challenge = 4;
  bool has_challenge() const;
  void clear_challenge();
  static const int kChallengeFieldNumber = 4;
  ::google::protobuf::uint64 challenge() const;
  void set_challenge(::google::protobuf::uint64 value);

  // optional uint32 seconds_until_shutdown = 5;
  bool has_seconds_until_shutdown() const;
  void clear_seconds_until_shutdown();
  static const int kSecondsUntilShutdownFieldNumber = 5;
  ::google::protobuf::uint32 seconds_until_shutdown() const;
  void set_seconds_until_shutdown(::google::protobuf::uint32 value);

  // optional fixed32 client_cookie = 7;
  bool has_client_cookie() const;
  void clear_client_cookie();
  static const int kClientCookieFieldNumber = 7;
  ::google::protobuf::uint32 client_cookie() const;
  void set_client_cookie(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramNoSession)
 private:
  void set_has_client_cookie();
  void clear_has_client_cookie();
  void set_has_your_public_ip();
  void clear_has_your_public_ip();
  void set_has_server_time();
  void clear_has_server_time();
  void set_has_challenge();
  void clear_has_challenge();
  void set_has_seconds_until_shutdown();
  void clear_has_seconds_until_shutdown();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 your_public_ip_;
  ::google::protobuf::uint32 server_time_;
  ::google::protobuf::uint64 challenge_;
  ::google::protobuf::uint32 seconds_until_shutdown_;
  ::google::protobuf::uint32 client_cookie_;
  friend struct ::protobuf_steamdatagram_5fmessages_2eproto::TableStruct;
  friend void ::protobuf_steamdatagram_5fmessages_2eproto::InitDefaultsCMsgSteamDatagramNoSessionImpl();
};
// -------------------------------------------------------------------

class CMsgSteamDatagramDiagnostic : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramDiagnostic) */ {
 public:
  CMsgSteamDatagramDiagnostic();
  virtual ~CMsgSteamDatagramDiagnostic();

  CMsgSteamDatagramDiagnostic(const CMsgSteamDatagramDiagnostic& from);

  inline CMsgSteamDatagramDiagnostic& operator=(const CMsgSteamDatagramDiagnostic& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramDiagnostic(CMsgSteamDatagramDiagnostic&& from) noexcept
    : CMsgSteamDatagramDiagnostic() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramDiagnostic& operator=(CMsgSteamDatagramDiagnostic&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramDiagnostic& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramDiagnostic* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramDiagnostic*>(
               &_CMsgSteamDatagramDiagnostic_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(CMsgSteamDatagramDiagnostic* other);
  friend void swap(CMsgSteamDatagramDiagnostic& a, CMsgSteamDatagramDiagnostic& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramDiagnostic* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamDatagramDiagnostic* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamDatagramDiagnostic& from);
  void MergeFrom(const CMsgSteamDatagramDiagnostic& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamDatagramDiagnostic* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string text = 2;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // optional uint32 severity = 1;
  bool has_severity() const;
  void clear_severity();
  static const int kSeverityFieldNumber = 1;
  ::google::protobuf::uint32 severity() const;
  void set_severity(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramDiagnostic)
 private:
  void set_has_severity();
  void clear_has_severity();
  void set_has_text();
  void clear_has_text();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::uint32 severity_;
  friend struct ::protobuf_steamdatagram_5fmessages_2eproto::TableStruct;
  friend void ::protobuf_steamdatagram_5fmessages_2eproto::InitDefaultsCMsgSteamDatagramDiagnosticImpl();
};
// -------------------------------------------------------------------

class CMsgSteamDatagramDataCenterState_Server : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramDataCenterState.Server) */ {
 public:
  CMsgSteamDatagramDataCenterState_Server();
  virtual ~CMsgSteamDatagramDataCenterState_Server();

  CMsgSteamDatagramDataCenterState_Server(const CMsgSteamDatagramDataCenterState_Server& from);

  inline CMsgSteamDatagramDataCenterState_Server& operator=(const CMsgSteamDatagramDataCenterState_Server& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramDataCenterState_Server(CMsgSteamDatagramDataCenterState_Server&& from) noexcept
    : CMsgSteamDatagramDataCenterState_Server() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramDataCenterState_Server& operator=(CMsgSteamDatagramDataCenterState_Server&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramDataCenterState_Server& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramDataCenterState_Server* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramDataCenterState_Server*>(
               &_CMsgSteamDatagramDataCenterState_Server_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(CMsgSteamDatagramDataCenterState_Server* other);
  friend void swap(CMsgSteamDatagramDataCenterState_Server& a, CMsgSteamDatagramDataCenterState_Server& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramDataCenterState_Server* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamDatagramDataCenterState_Server* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamDatagramDataCenterState_Server& from);
  void MergeFrom(const CMsgSteamDatagramDataCenterState_Server& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamDatagramDataCenterState_Server* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string address = 1;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  #if LANG_CXX11
  void set_address(::std::string&& value);
  #endif
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // optional uint32 ping_ms = 2;
  bool has_ping_ms() const;
  void clear_ping_ms();
  static const int kPingMsFieldNumber = 2;
  ::google::protobuf::uint32 ping_ms() const;
  void set_ping_ms(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramDataCenterState.Server)
 private:
  void set_has_address();
  void clear_has_address();
  void set_has_ping_ms();
  void clear_has_ping_ms();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::uint32 ping_ms_;
  friend struct ::protobuf_steamdatagram_5fmessages_2eproto::TableStruct;
  friend void ::protobuf_steamdatagram_5fmessages_2eproto::InitDefaultsCMsgSteamDatagramDataCenterState_ServerImpl();
};
// -------------------------------------------------------------------

class CMsgSteamDatagramDataCenterState_DataCenter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramDataCenterState.DataCenter) */ {
 public:
  CMsgSteamDatagramDataCenterState_DataCenter();
  virtual ~CMsgSteamDatagramDataCenterState_DataCenter();

  CMsgSteamDatagramDataCenterState_DataCenter(const CMsgSteamDatagramDataCenterState_DataCenter& from);

  inline CMsgSteamDatagramDataCenterState_DataCenter& operator=(const CMsgSteamDatagramDataCenterState_DataCenter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramDataCenterState_DataCenter(CMsgSteamDatagramDataCenterState_DataCenter&& from) noexcept
    : CMsgSteamDatagramDataCenterState_DataCenter() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramDataCenterState_DataCenter& operator=(CMsgSteamDatagramDataCenterState_DataCenter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramDataCenterState_DataCenter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramDataCenterState_DataCenter* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramDataCenterState_DataCenter*>(
               &_CMsgSteamDatagramDataCenterState_DataCenter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(CMsgSteamDatagramDataCenterState_DataCenter* other);
  friend void swap(CMsgSteamDatagramDataCenterState_DataCenter& a, CMsgSteamDatagramDataCenterState_DataCenter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramDataCenterState_DataCenter* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamDatagramDataCenterState_DataCenter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamDatagramDataCenterState_DataCenter& from);
  void MergeFrom(const CMsgSteamDatagramDataCenterState_DataCenter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamDatagramDataCenterState_DataCenter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgSteamDatagramDataCenterState.Server server_sample = 2;
  int server_sample_size() const;
  void clear_server_sample();
  static const int kServerSampleFieldNumber = 2;
  const ::CMsgSteamDatagramDataCenterState_Server& server_sample(int index) const;
  ::CMsgSteamDatagramDataCenterState_Server* mutable_server_sample(int index);
  ::CMsgSteamDatagramDataCenterState_Server* add_server_sample();
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramDataCenterState_Server >*
      mutable_server_sample();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramDataCenterState_Server >&
      server_sample() const;

  // optional string code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramDataCenterState.DataCenter)
 private:
  void set_has_code();
  void clear_has_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramDataCenterState_Server > server_sample_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  friend struct ::protobuf_steamdatagram_5fmessages_2eproto::TableStruct;
  friend void ::protobuf_steamdatagram_5fmessages_2eproto::InitDefaultsCMsgSteamDatagramDataCenterState_DataCenterImpl();
};
// -------------------------------------------------------------------

class CMsgSteamDatagramDataCenterState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramDataCenterState) */ {
 public:
  CMsgSteamDatagramDataCenterState();
  virtual ~CMsgSteamDatagramDataCenterState();

  CMsgSteamDatagramDataCenterState(const CMsgSteamDatagramDataCenterState& from);

  inline CMsgSteamDatagramDataCenterState& operator=(const CMsgSteamDatagramDataCenterState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramDataCenterState(CMsgSteamDatagramDataCenterState&& from) noexcept
    : CMsgSteamDatagramDataCenterState() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramDataCenterState& operator=(CMsgSteamDatagramDataCenterState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramDataCenterState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramDataCenterState* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramDataCenterState*>(
               &_CMsgSteamDatagramDataCenterState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(CMsgSteamDatagramDataCenterState* other);
  friend void swap(CMsgSteamDatagramDataCenterState& a, CMsgSteamDatagramDataCenterState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramDataCenterState* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamDatagramDataCenterState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamDatagramDataCenterState& from);
  void MergeFrom(const CMsgSteamDatagramDataCenterState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamDatagramDataCenterState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgSteamDatagramDataCenterState_Server Server;
  typedef CMsgSteamDatagramDataCenterState_DataCenter DataCenter;

  // accessors -------------------------------------------------------

  // repeated .CMsgSteamDatagramDataCenterState.DataCenter data_centers = 1;
  int data_centers_size() const;
  void clear_data_centers();
  static const int kDataCentersFieldNumber = 1;
  const ::CMsgSteamDatagramDataCenterState_DataCenter& data_centers(int index) const;
  ::CMsgSteamDatagramDataCenterState_DataCenter* mutable_data_centers(int index);
  ::CMsgSteamDatagramDataCenterState_DataCenter* add_data_centers();
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramDataCenterState_DataCenter >*
      mutable_data_centers();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramDataCenterState_DataCenter >&
      data_centers() const;

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramDataCenterState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramDataCenterState_DataCenter > data_centers_;
  friend struct ::protobuf_steamdatagram_5fmessages_2eproto::TableStruct;
  friend void ::protobuf_steamdatagram_5fmessages_2eproto::InitDefaultsCMsgSteamDatagramDataCenterStateImpl();
};
// -------------------------------------------------------------------

class CMsgSteamDatagramLinkInstantaneousStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramLinkInstantaneousStats) */ {
 public:
  CMsgSteamDatagramLinkInstantaneousStats();
  virtual ~CMsgSteamDatagramLinkInstantaneousStats();

  CMsgSteamDatagramLinkInstantaneousStats(const CMsgSteamDatagramLinkInstantaneousStats& from);

  inline CMsgSteamDatagramLinkInstantaneousStats& operator=(const CMsgSteamDatagramLinkInstantaneousStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramLinkInstantaneousStats(CMsgSteamDatagramLinkInstantaneousStats&& from) noexcept
    : CMsgSteamDatagramLinkInstantaneousStats() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramLinkInstantaneousStats& operator=(CMsgSteamDatagramLinkInstantaneousStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramLinkInstantaneousStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramLinkInstantaneousStats* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramLinkInstantaneousStats*>(
               &_CMsgSteamDatagramLinkInstantaneousStats_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(CMsgSteamDatagramLinkInstantaneousStats* other);
  friend void swap(CMsgSteamDatagramLinkInstantaneousStats& a, CMsgSteamDatagramLinkInstantaneousStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramLinkInstantaneousStats* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamDatagramLinkInstantaneousStats* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamDatagramLinkInstantaneousStats& from);
  void MergeFrom(const CMsgSteamDatagramLinkInstantaneousStats& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamDatagramLinkInstantaneousStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 out_packets_per_sec_x10 = 1;
  bool has_out_packets_per_sec_x10() const;
  void clear_out_packets_per_sec_x10();
  static const int kOutPacketsPerSecX10FieldNumber = 1;
  ::google::protobuf::uint32 out_packets_per_sec_x10() const;
  void set_out_packets_per_sec_x10(::google::protobuf::uint32 value);

  // optional uint32 out_bytes_per_sec = 2;
  bool has_out_bytes_per_sec() const;
  void clear_out_bytes_per_sec();
  static const int kOutBytesPerSecFieldNumber = 2;
  ::google::protobuf::uint32 out_bytes_per_sec() const;
  void set_out_bytes_per_sec(::google::protobuf::uint32 value);

  // optional uint32 in_packets_per_sec_x10 = 3;
  bool has_in_packets_per_sec_x10() const;
  void clear_in_packets_per_sec_x10();
  static const int kInPacketsPerSecX10FieldNumber = 3;
  ::google::protobuf::uint32 in_packets_per_sec_x10() const;
  void set_in_packets_per_sec_x10(::google::protobuf::uint32 value);

  // optional uint32 in_bytes_per_sec = 4;
  bool has_in_bytes_per_sec() const;
  void clear_in_bytes_per_sec();
  static const int kInBytesPerSecFieldNumber = 4;
  ::google::protobuf::uint32 in_bytes_per_sec() const;
  void set_in_bytes_per_sec(::google::protobuf::uint32 value);

  // optional uint32 ping_ms = 5;
  bool has_ping_ms() const;
  void clear_ping_ms();
  static const int kPingMsFieldNumber = 5;
  ::google::protobuf::uint32 ping_ms() const;
  void set_ping_ms(::google::protobuf::uint32 value);

  // optional uint32 packets_dropped_pct = 6;
  bool has_packets_dropped_pct() const;
  void clear_packets_dropped_pct();
  static const int kPacketsDroppedPctFieldNumber = 6;
  ::google::protobuf::uint32 packets_dropped_pct() const;
  void set_packets_dropped_pct(::google::protobuf::uint32 value);

  // optional uint32 packets_weird_sequence_pct = 7;
  bool has_packets_weird_sequence_pct() const;
  void clear_packets_weird_sequence_pct();
  static const int kPacketsWeirdSequencePctFieldNumber = 7;
  ::google::protobuf::uint32 packets_weird_sequence_pct() const;
  void set_packets_weird_sequence_pct(::google::protobuf::uint32 value);

  // optional uint32 peak_jitter_usec = 8;
  bool has_peak_jitter_usec() const;
  void clear_peak_jitter_usec();
  static const int kPeakJitterUsecFieldNumber = 8;
  ::google::protobuf::uint32 peak_jitter_usec() const;
  void set_peak_jitter_usec(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramLinkInstantaneousStats)
 private:
  void set_has_out_packets_per_sec_x10();
  void clear_has_out_packets_per_sec_x10();
  void set_has_out_bytes_per_sec();
  void clear_has_out_bytes_per_sec();
  void set_has_in_packets_per_sec_x10();
  void clear_has_in_packets_per_sec_x10();
  void set_has_in_bytes_per_sec();
  void clear_has_in_bytes_per_sec();
  void set_has_ping_ms();
  void clear_has_ping_ms();
  void set_has_packets_dropped_pct();
  void clear_has_packets_dropped_pct();
  void set_has_packets_weird_sequence_pct();
  void clear_has_packets_weird_sequence_pct();
  void set_has_peak_jitter_usec();
  void clear_has_peak_jitter_usec();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 out_packets_per_sec_x10_;
  ::google::protobuf::uint32 out_bytes_per_sec_;
  ::google::protobuf::uint32 in_packets_per_sec_x10_;
  ::google::protobuf::uint32 in_bytes_per_sec_;
  ::google::protobuf::uint32 ping_ms_;
  ::google::protobuf::uint32 packets_dropped_pct_;
  ::google::protobuf::uint32 packets_weird_sequence_pct_;
  ::google::protobuf::uint32 peak_jitter_usec_;
  friend struct ::protobuf_steamdatagram_5fmessages_2eproto::TableStruct;
  friend void ::protobuf_steamdatagram_5fmessages_2eproto::InitDefaultsCMsgSteamDatagramLinkInstantaneousStatsImpl();
};
// -------------------------------------------------------------------

class CMsgSteamDatagramLinkLifetimeStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramLinkLifetimeStats) */ {
 public:
  CMsgSteamDatagramLinkLifetimeStats();
  virtual ~CMsgSteamDatagramLinkLifetimeStats();

  CMsgSteamDatagramLinkLifetimeStats(const CMsgSteamDatagramLinkLifetimeStats& from);

  inline CMsgSteamDatagramLinkLifetimeStats& operator=(const CMsgSteamDatagramLinkLifetimeStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramLinkLifetimeStats(CMsgSteamDatagramLinkLifetimeStats&& from) noexcept
    : CMsgSteamDatagramLinkLifetimeStats() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramLinkLifetimeStats& operator=(CMsgSteamDatagramLinkLifetimeStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramLinkLifetimeStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramLinkLifetimeStats* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramLinkLifetimeStats*>(
               &_CMsgSteamDatagramLinkLifetimeStats_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(CMsgSteamDatagramLinkLifetimeStats* other);
  friend void swap(CMsgSteamDatagramLinkLifetimeStats& a, CMsgSteamDatagramLinkLifetimeStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramLinkLifetimeStats* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamDatagramLinkLifetimeStats* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamDatagramLinkLifetimeStats& from);
  void MergeFrom(const CMsgSteamDatagramLinkLifetimeStats& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamDatagramLinkLifetimeStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 packets_sent = 3;
  bool has_packets_sent() const;
  void clear_packets_sent();
  static const int kPacketsSentFieldNumber = 3;
  ::google::protobuf::uint64 packets_sent() const;
  void set_packets_sent(::google::protobuf::uint64 value);

  // optional uint64 kb_sent = 4;
  bool has_kb_sent() const;
  void clear_kb_sent();
  static const int kKbSentFieldNumber = 4;
  ::google::protobuf::uint64 kb_sent() const;
  void set_kb_sent(::google::protobuf::uint64 value);

  // optional uint64 packets_recv = 5;
  bool has_packets_recv() const;
  void clear_packets_recv();
  static const int kPacketsRecvFieldNumber = 5;
  ::google::protobuf::uint64 packets_recv() const;
  void set_packets_recv(::google::protobuf::uint64 value);

  // optional uint64 kb_recv = 6;
  bool has_kb_recv() const;
  void clear_kb_recv();
  static const int kKbRecvFieldNumber = 6;
  ::google::protobuf::uint64 kb_recv() const;
  void set_kb_recv(::google::protobuf::uint64 value);

  // optional uint64 packets_recv_sequenced = 7;
  bool has_packets_recv_sequenced() const;
  void clear_packets_recv_sequenced();
  static const int kPacketsRecvSequencedFieldNumber = 7;
  ::google::protobuf::uint64 packets_recv_sequenced() const;
  void set_packets_recv_sequenced(::google::protobuf::uint64 value);

  // optional uint64 packets_recv_dropped = 8;
  bool has_packets_recv_dropped() const;
  void clear_packets_recv_dropped();
  static const int kPacketsRecvDroppedFieldNumber = 8;
  ::google::protobuf::uint64 packets_recv_dropped() const;
  void set_packets_recv_dropped(::google::protobuf::uint64 value);

  // optional uint64 packets_recv_out_of_order = 9;
  bool has_packets_recv_out_of_order() const;
  void clear_packets_recv_out_of_order();
  static const int kPacketsRecvOutOfOrderFieldNumber = 9;
  ::google::protobuf::uint64 packets_recv_out_of_order() const;
  void set_packets_recv_out_of_order(::google::protobuf::uint64 value);

  // optional uint64 packets_recv_duplicate = 10;
  bool has_packets_recv_duplicate() const;
  void clear_packets_recv_duplicate();
  static const int kPacketsRecvDuplicateFieldNumber = 10;
  ::google::protobuf::uint64 packets_recv_duplicate() const;
  void set_packets_recv_duplicate(::google::protobuf::uint64 value);

  // optional uint64 packets_recv_lurch = 11;
  bool has_packets_recv_lurch() const;
  void clear_packets_recv_lurch();
  static const int kPacketsRecvLurchFieldNumber = 11;
  ::google::protobuf::uint64 packets_recv_lurch() const;
  void set_packets_recv_lurch(::google::protobuf::uint64 value);

  // optional uint32 quality_histogram_100 = 21;
  bool has_quality_histogram_100() const;
  void clear_quality_histogram_100();
  static const int kQualityHistogram100FieldNumber = 21;
  ::google::protobuf::uint32 quality_histogram_100() const;
  void set_quality_histogram_100(::google::protobuf::uint32 value);

  // optional uint32 quality_histogram_99 = 22;
  bool has_quality_histogram_99() const;
  void clear_quality_histogram_99();
  static const int kQualityHistogram99FieldNumber = 22;
  ::google::protobuf::uint32 quality_histogram_99() const;
  void set_quality_histogram_99(::google::protobuf::uint32 value);

  // optional uint32 quality_histogram_97 = 23;
  bool has_quality_histogram_97() const;
  void clear_quality_histogram_97();
  static const int kQualityHistogram97FieldNumber = 23;
  ::google::protobuf::uint32 quality_histogram_97() const;
  void set_quality_histogram_97(::google::protobuf::uint32 value);

  // optional uint32 quality_histogram_95 = 24;
  bool has_quality_histogram_95() const;
  void clear_quality_histogram_95();
  static const int kQualityHistogram95FieldNumber = 24;
  ::google::protobuf::uint32 quality_histogram_95() const;
  void set_quality_histogram_95(::google::protobuf::uint32 value);

  // optional uint32 quality_histogram_90 = 25;
  bool has_quality_histogram_90() const;
  void clear_quality_histogram_90();
  static const int kQualityHistogram90FieldNumber = 25;
  ::google::protobuf::uint32 quality_histogram_90() const;
  void set_quality_histogram_90(::google::protobuf::uint32 value);

  // optional uint32 quality_histogram_75 = 26;
  bool has_quality_histogram_75() const;
  void clear_quality_histogram_75();
  static const int kQualityHistogram75FieldNumber = 26;
  ::google::protobuf::uint32 quality_histogram_75() const;
  void set_quality_histogram_75(::google::protobuf::uint32 value);

  // optional uint32 quality_histogram_50 = 27;
  bool has_quality_histogram_50() const;
  void clear_quality_histogram_50();
  static const int kQualityHistogram50FieldNumber = 27;
  ::google::protobuf::uint32 quality_histogram_50() const;
  void set_quality_histogram_50(::google::protobuf::uint32 value);

  // optional uint32 quality_histogram_1 = 28;
  bool has_quality_histogram_1() const;
  void clear_quality_histogram_1();
  static const int kQualityHistogram1FieldNumber = 28;
  ::google::protobuf::uint32 quality_histogram_1() const;
  void set_quality_histogram_1(::google::protobuf::uint32 value);

  // optional uint32 quality_histogram_dead = 29;
  bool has_quality_histogram_dead() const;
  void clear_quality_histogram_dead();
  static const int kQualityHistogramDeadFieldNumber = 29;
  ::google::protobuf::uint32 quality_histogram_dead() const;
  void set_quality_histogram_dead(::google::protobuf::uint32 value);

  // optional uint32 quality_ntile_2nd = 30;
  bool has_quality_ntile_2nd() const;
  void clear_quality_ntile_2nd();
  static const int kQualityNtile2NdFieldNumber = 30;
  ::google::protobuf::uint32 quality_ntile_2nd() const;
  void set_quality_ntile_2nd(::google::protobuf::uint32 value);

  // optional uint32 quality_ntile_5th = 31;
  bool has_quality_ntile_5th() const;
  void clear_quality_ntile_5th();
  static const int kQualityNtile5ThFieldNumber = 31;
  ::google::protobuf::uint32 quality_ntile_5th() const;
  void set_quality_ntile_5th(::google::protobuf::uint32 value);

  // optional uint32 quality_ntile_25th = 32;
  bool has_quality_ntile_25th() const;
  void clear_quality_ntile_25th();
  static const int kQualityNtile25ThFieldNumber = 32;
  ::google::protobuf::uint32 quality_ntile_25th() const;
  void set_quality_ntile_25th(::google::protobuf::uint32 value);

  // optional uint32 quality_ntile_50th = 33;
  bool has_quality_ntile_50th() const;
  void clear_quality_ntile_50th();
  static const int kQualityNtile50ThFieldNumber = 33;
  ::google::protobuf::uint32 quality_ntile_50th() const;
  void set_quality_ntile_50th(::google::protobuf::uint32 value);

  // optional uint32 ping_histogram_25 = 41;
  bool has_ping_histogram_25() const;
  void clear_ping_histogram_25();
  static const int kPingHistogram25FieldNumber = 41;
  ::google::protobuf::uint32 ping_histogram_25() const;
  void set_ping_histogram_25(::google::protobuf::uint32 value);

  // optional uint32 ping_histogram_50 = 42;
  bool has_ping_histogram_50() const;
  void clear_ping_histogram_50();
  static const int kPingHistogram50FieldNumber = 42;
  ::google::protobuf::uint32 ping_histogram_50() const;
  void set_ping_histogram_50(::google::protobuf::uint32 value);

  // optional uint32 ping_histogram_75 = 43;
  bool has_ping_histogram_75() const;
  void clear_ping_histogram_75();
  static const int kPingHistogram75FieldNumber = 43;
  ::google::protobuf::uint32 ping_histogram_75() const;
  void set_ping_histogram_75(::google::protobuf::uint32 value);

  // optional uint32 jitter_histogram_20 = 66;
  bool has_jitter_histogram_20() const;
  void clear_jitter_histogram_20();
  static const int kJitterHistogram20FieldNumber = 66;
  ::google::protobuf::uint32 jitter_histogram_20() const;
  void set_jitter_histogram_20(::google::protobuf::uint32 value);

  // optional uint32 ping_histogram_100 = 44;
  bool has_ping_histogram_100() const;
  void clear_ping_histogram_100();
  static const int kPingHistogram100FieldNumber = 44;
  ::google::protobuf::uint32 ping_histogram_100() const;
  void set_ping_histogram_100(::google::protobuf::uint32 value);

  // optional uint32 ping_histogram_125 = 45;
  bool has_ping_histogram_125() const;
  void clear_ping_histogram_125();
  static const int kPingHistogram125FieldNumber = 45;
  ::google::protobuf::uint32 ping_histogram_125() const;
  void set_ping_histogram_125(::google::protobuf::uint32 value);

  // optional uint32 ping_histogram_150 = 46;
  bool has_ping_histogram_150() const;
  void clear_ping_histogram_150();
  static const int kPingHistogram150FieldNumber = 46;
  ::google::protobuf::uint32 ping_histogram_150() const;
  void set_ping_histogram_150(::google::protobuf::uint32 value);

  // optional uint32 ping_histogram_200 = 47;
  bool has_ping_histogram_200() const;
  void clear_ping_histogram_200();
  static const int kPingHistogram200FieldNumber = 47;
  ::google::protobuf::uint32 ping_histogram_200() const;
  void set_ping_histogram_200(::google::protobuf::uint32 value);

  // optional uint32 ping_histogram_300 = 48;
  bool has_ping_histogram_300() const;
  void clear_ping_histogram_300();
  static const int kPingHistogram300FieldNumber = 48;
  ::google::protobuf::uint32 ping_histogram_300() const;
  void set_ping_histogram_300(::google::protobuf::uint32 value);

  // optional uint32 ping_histogram_max = 49;
  bool has_ping_histogram_max() const;
  void clear_ping_histogram_max();
  static const int kPingHistogramMaxFieldNumber = 49;
  ::google::protobuf::uint32 ping_histogram_max() const;
  void set_ping_histogram_max(::google::protobuf::uint32 value);

  // optional uint32 ping_ntile_5th = 50;
  bool has_ping_ntile_5th() const;
  void clear_ping_ntile_5th();
  static const int kPingNtile5ThFieldNumber = 50;
  ::google::protobuf::uint32 ping_ntile_5th() const;
  void set_ping_ntile_5th(::google::protobuf::uint32 value);

  // optional uint32 ping_ntile_50th = 51;
  bool has_ping_ntile_50th() const;
  void clear_ping_ntile_50th();
  static const int kPingNtile50ThFieldNumber = 51;
  ::google::protobuf::uint32 ping_ntile_50th() const;
  void set_ping_ntile_50th(::google::protobuf::uint32 value);

  // optional uint32 ping_ntile_75th = 52;
  bool has_ping_ntile_75th() const;
  void clear_ping_ntile_75th();
  static const int kPingNtile75ThFieldNumber = 52;
  ::google::protobuf::uint32 ping_ntile_75th() const;
  void set_ping_ntile_75th(::google::protobuf::uint32 value);

  // optional uint32 ping_ntile_95th = 53;
  bool has_ping_ntile_95th() const;
  void clear_ping_ntile_95th();
  static const int kPingNtile95ThFieldNumber = 53;
  ::google::protobuf::uint32 ping_ntile_95th() const;
  void set_ping_ntile_95th(::google::protobuf::uint32 value);

  // optional uint32 ping_ntile_98th = 54;
  bool has_ping_ntile_98th() const;
  void clear_ping_ntile_98th();
  static const int kPingNtile98ThFieldNumber = 54;
  ::google::protobuf::uint32 ping_ntile_98th() const;
  void set_ping_ntile_98th(::google::protobuf::uint32 value);

  // optional uint32 jitter_histogram_negligible = 61;
  bool has_jitter_histogram_negligible() const;
  void clear_jitter_histogram_negligible();
  static const int kJitterHistogramNegligibleFieldNumber = 61;
  ::google::protobuf::uint32 jitter_histogram_negligible() const;
  void set_jitter_histogram_negligible(::google::protobuf::uint32 value);

  // optional uint32 jitter_histogram_1 = 62;
  bool has_jitter_histogram_1() const;
  void clear_jitter_histogram_1();
  static const int kJitterHistogram1FieldNumber = 62;
  ::google::protobuf::uint32 jitter_histogram_1() const;
  void set_jitter_histogram_1(::google::protobuf::uint32 value);

  // optional uint32 jitter_histogram_2 = 63;
  bool has_jitter_histogram_2() const;
  void clear_jitter_histogram_2();
  static const int kJitterHistogram2FieldNumber = 63;
  ::google::protobuf::uint32 jitter_histogram_2() const;
  void set_jitter_histogram_2(::google::protobuf::uint32 value);

  // optional uint32 jitter_histogram_5 = 64;
  bool has_jitter_histogram_5() const;
  void clear_jitter_histogram_5();
  static const int kJitterHistogram5FieldNumber = 64;
  ::google::protobuf::uint32 jitter_histogram_5() const;
  void set_jitter_histogram_5(::google::protobuf::uint32 value);

  // optional uint32 jitter_histogram_10 = 65;
  bool has_jitter_histogram_10() const;
  void clear_jitter_histogram_10();
  static const int kJitterHistogram10FieldNumber = 65;
  ::google::protobuf::uint32 jitter_histogram_10() const;
  void set_jitter_histogram_10(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramLinkLifetimeStats)
 private:
  void set_has_packets_sent();
  void clear_has_packets_sent();
  void set_has_kb_sent();
  void clear_has_kb_sent();
  void set_has_packets_recv();
  void clear_has_packets_recv();
  void set_has_kb_recv();
  void clear_has_kb_recv();
  void set_has_packets_recv_sequenced();
  void clear_has_packets_recv_sequenced();
  void set_has_packets_recv_dropped();
  void clear_has_packets_recv_dropped();
  void set_has_packets_recv_out_of_order();
  void clear_has_packets_recv_out_of_order();
  void set_has_packets_recv_duplicate();
  void clear_has_packets_recv_duplicate();
  void set_has_packets_recv_lurch();
  void clear_has_packets_recv_lurch();
  void set_has_quality_histogram_100();
  void clear_has_quality_histogram_100();
  void set_has_quality_histogram_99();
  void clear_has_quality_histogram_99();
  void set_has_quality_histogram_97();
  void clear_has_quality_histogram_97();
  void set_has_quality_histogram_95();
  void clear_has_quality_histogram_95();
  void set_has_quality_histogram_90();
  void clear_has_quality_histogram_90();
  void set_has_quality_histogram_75();
  void clear_has_quality_histogram_75();
  void set_has_quality_histogram_50();
  void clear_has_quality_histogram_50();
  void set_has_quality_histogram_1();
  void clear_has_quality_histogram_1();
  void set_has_quality_histogram_dead();
  void clear_has_quality_histogram_dead();
  void set_has_quality_ntile_2nd();
  void clear_has_quality_ntile_2nd();
  void set_has_quality_ntile_5th();
  void clear_has_quality_ntile_5th();
  void set_has_quality_ntile_25th();
  void clear_has_quality_ntile_25th();
  void set_has_quality_ntile_50th();
  void clear_has_quality_ntile_50th();
  void set_has_ping_histogram_25();
  void clear_has_ping_histogram_25();
  void set_has_ping_histogram_50();
  void clear_has_ping_histogram_50();
  void set_has_ping_histogram_75();
  void clear_has_ping_histogram_75();
  void set_has_ping_histogram_100();
  void clear_has_ping_histogram_100();
  void set_has_ping_histogram_125();
  void clear_has_ping_histogram_125();
  void set_has_ping_histogram_150();
  void clear_has_ping_histogram_150();
  void set_has_ping_histogram_200();
  void clear_has_ping_histogram_200();
  void set_has_ping_histogram_300();
  void clear_has_ping_histogram_300();
  void set_has_ping_histogram_max();
  void clear_has_ping_histogram_max();
  void set_has_ping_ntile_5th();
  void clear_has_ping_ntile_5th();
  void set_has_ping_ntile_50th();
  void clear_has_ping_ntile_50th();
  void set_has_ping_ntile_75th();
  void clear_has_ping_ntile_75th();
  void set_has_ping_ntile_95th();
  void clear_has_ping_ntile_95th();
  void set_has_ping_ntile_98th();
  void clear_has_ping_ntile_98th();
  void set_has_jitter_histogram_negligible();
  void clear_has_jitter_histogram_negligible();
  void set_has_jitter_histogram_1();
  void clear_has_jitter_histogram_1();
  void set_has_jitter_histogram_2();
  void clear_has_jitter_histogram_2();
  void set_has_jitter_histogram_5();
  void clear_has_jitter_histogram_5();
  void set_has_jitter_histogram_10();
  void clear_has_jitter_histogram_10();
  void set_has_jitter_histogram_20();
  void clear_has_jitter_histogram_20();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<2> _has_bits_;
  ::google::protobuf::uint64 packets_sent_;
  ::google::protobuf::uint64 kb_sent_;
  ::google::protobuf::uint64 packets_recv_;
  ::google::protobuf::uint64 kb_recv_;
  ::google::protobuf::uint64 packets_recv_sequenced_;
  ::google::protobuf::uint64 packets_recv_dropped_;
  ::google::protobuf::uint64 packets_recv_out_of_order_;
  ::google::protobuf::uint64 packets_recv_duplicate_;
  ::google::protobuf::uint64 packets_recv_lurch_;
  ::google::protobuf::uint32 quality_histogram_100_;
  ::google::protobuf::uint32 quality_histogram_99_;
  ::google::protobuf::uint32 quality_histogram_97_;
  ::google::protobuf::uint32 quality_histogram_95_;
  ::google::protobuf::uint32 quality_histogram_90_;
  ::google::protobuf::uint32 quality_histogram_75_;
  ::google::protobuf::uint32 quality_histogram_50_;
  ::google::protobuf::uint32 quality_histogram_1_;
  ::google::protobuf::uint32 quality_histogram_dead_;
  ::google::protobuf::uint32 quality_ntile_2nd_;
  ::google::protobuf::uint32 quality_ntile_5th_;
  ::google::protobuf::uint32 quality_ntile_25th_;
  ::google::protobuf::uint32 quality_ntile_50th_;
  ::google::protobuf::uint32 ping_histogram_25_;
  ::google::protobuf::uint32 ping_histogram_50_;
  ::google::protobuf::uint32 ping_histogram_75_;
  ::google::protobuf::uint32 jitter_histogram_20_;
  ::google::protobuf::uint32 ping_histogram_100_;
  ::google::protobuf::uint32 ping_histogram_125_;
  ::google::protobuf::uint32 ping_histogram_150_;
  ::google::protobuf::uint32 ping_histogram_200_;
  ::google::protobuf::uint32 ping_histogram_300_;
  ::google::protobuf::uint32 ping_histogram_max_;
  ::google::protobuf::uint32 ping_ntile_5th_;
  ::google::protobuf::uint32 ping_ntile_50th_;
  ::google::protobuf::uint32 ping_ntile_75th_;
  ::google::protobuf::uint32 ping_ntile_95th_;
  ::google::protobuf::uint32 ping_ntile_98th_;
  ::google::protobuf::uint32 jitter_histogram_negligible_;
  ::google::protobuf::uint32 jitter_histogram_1_;
  ::google::protobuf::uint32 jitter_histogram_2_;
  ::google::protobuf::uint32 jitter_histogram_5_;
  ::google::protobuf::uint32 jitter_histogram_10_;
  mutable int _cached_size_;
  friend struct ::protobuf_steamdatagram_5fmessages_2eproto::TableStruct;
  friend void ::protobuf_steamdatagram_5fmessages_2eproto::InitDefaultsCMsgSteamDatagramLinkLifetimeStatsImpl();
};
// -------------------------------------------------------------------

class CMsgSteamDatagramConnectionQuality : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramConnectionQuality) */ {
 public:
  CMsgSteamDatagramConnectionQuality();
  virtual ~CMsgSteamDatagramConnectionQuality();

  CMsgSteamDatagramConnectionQuality(const CMsgSteamDatagramConnectionQuality& from);

  inline CMsgSteamDatagramConnectionQuality& operator=(const CMsgSteamDatagramConnectionQuality& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramConnectionQuality(CMsgSteamDatagramConnectionQuality&& from) noexcept
    : CMsgSteamDatagramConnectionQuality() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramConnectionQuality& operator=(CMsgSteamDatagramConnectionQuality&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramConnectionQuality& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramConnectionQuality* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramConnectionQuality*>(
               &_CMsgSteamDatagramConnectionQuality_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(CMsgSteamDatagramConnectionQuality* other);
  friend void swap(CMsgSteamDatagramConnectionQuality& a, CMsgSteamDatagramConnectionQuality& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramConnectionQuality* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamDatagramConnectionQuality* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamDatagramConnectionQuality& from);
  void MergeFrom(const CMsgSteamDatagramConnectionQuality& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamDatagramConnectionQuality* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgSteamDatagramLinkInstantaneousStats instantaneous = 1;
  bool has_instantaneous() const;
  void clear_instantaneous();
  static const int kInstantaneousFieldNumber = 1;
  const ::CMsgSteamDatagramLinkInstantaneousStats& instantaneous() const;
  ::CMsgSteamDatagramLinkInstantaneousStats* release_instantaneous();
  ::CMsgSteamDatagramLinkInstantaneousStats* mutable_instantaneous();
  void set_allocated_instantaneous(::CMsgSteamDatagramLinkInstantaneousStats* instantaneous);

  // optional .CMsgSteamDatagramLinkLifetimeStats lifetime = 2;
  bool has_lifetime() const;
  void clear_lifetime();
  static const int kLifetimeFieldNumber = 2;
  const ::CMsgSteamDatagramLinkLifetimeStats& lifetime() const;
  ::CMsgSteamDatagramLinkLifetimeStats* release_lifetime();
  ::CMsgSteamDatagramLinkLifetimeStats* mutable_lifetime();
  void set_allocated_lifetime(::CMsgSteamDatagramLinkLifetimeStats* lifetime);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramConnectionQuality)
 private:
  void set_has_instantaneous();
  void clear_has_instantaneous();
  void set_has_lifetime();
  void clear_has_lifetime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::CMsgSteamDatagramLinkInstantaneousStats* instantaneous_;
  ::CMsgSteamDatagramLinkLifetimeStats* lifetime_;
  friend struct ::protobuf_steamdatagram_5fmessages_2eproto::TableStruct;
  friend void ::protobuf_steamdatagram_5fmessages_2eproto::InitDefaultsCMsgSteamDatagramConnectionQualityImpl();
};
// -------------------------------------------------------------------

class CMsgSteamDatagramConnectionStatsClientToRouter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramConnectionStatsClientToRouter) */ {
 public:
  CMsgSteamDatagramConnectionStatsClientToRouter();
  virtual ~CMsgSteamDatagramConnectionStatsClientToRouter();

  CMsgSteamDatagramConnectionStatsClientToRouter(const CMsgSteamDatagramConnectionStatsClientToRouter& from);

  inline CMsgSteamDatagramConnectionStatsClientToRouter& operator=(const CMsgSteamDatagramConnectionStatsClientToRouter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramConnectionStatsClientToRouter(CMsgSteamDatagramConnectionStatsClientToRouter&& from) noexcept
    : CMsgSteamDatagramConnectionStatsClientToRouter() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramConnectionStatsClientToRouter& operator=(CMsgSteamDatagramConnectionStatsClientToRouter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramConnectionStatsClientToRouter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramConnectionStatsClientToRouter* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramConnectionStatsClientToRouter*>(
               &_CMsgSteamDatagramConnectionStatsClientToRouter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(CMsgSteamDatagramConnectionStatsClientToRouter* other);
  friend void swap(CMsgSteamDatagramConnectionStatsClientToRouter& a, CMsgSteamDatagramConnectionStatsClientToRouter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramConnectionStatsClientToRouter* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamDatagramConnectionStatsClientToRouter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamDatagramConnectionStatsClientToRouter& from);
  void MergeFrom(const CMsgSteamDatagramConnectionStatsClientToRouter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamDatagramConnectionStatsClientToRouter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgSteamDatagramConnectionQuality c2r = 1;
  bool has_c2r() const;
  void clear_c2r();
  static const int kC2RFieldNumber = 1;
  const ::CMsgSteamDatagramConnectionQuality& c2r() const;
  ::CMsgSteamDatagramConnectionQuality* release_c2r();
  ::CMsgSteamDatagramConnectionQuality* mutable_c2r();
  void set_allocated_c2r(::CMsgSteamDatagramConnectionQuality* c2r);

  // optional .CMsgSteamDatagramConnectionQuality c2s = 2;
  bool has_c2s() const;
  void clear_c2s();
  static const int kC2SFieldNumber = 2;
  const ::CMsgSteamDatagramConnectionQuality& c2s() const;
  ::CMsgSteamDatagramConnectionQuality* release_c2s();
  ::CMsgSteamDatagramConnectionQuality* mutable_c2s();
  void set_allocated_c2s(::CMsgSteamDatagramConnectionQuality* c2s);

  // optional fixed32 client_timestamp = 3;
  bool has_client_timestamp() const;
  void clear_client_timestamp();
  static const int kClientTimestampFieldNumber = 3;
  ::google::protobuf::uint32 client_timestamp() const;
  void set_client_timestamp(::google::protobuf::uint32 value);

  // optional fixed32 client_cookie = 8;
  bool has_client_cookie() const;
  void clear_client_cookie();
  static const int kClientCookieFieldNumber = 8;
  ::google::protobuf::uint32 client_cookie() const;
  void set_client_cookie(::google::protobuf::uint32 value);

  // optional uint32 seq_num_c2r = 9;
  bool has_seq_num_c2r() const;
  void clear_seq_num_c2r();
  static const int kSeqNumC2RFieldNumber = 9;
  ::google::protobuf::uint32 seq_num_c2r() const;
  void set_seq_num_c2r(::google::protobuf::uint32 value);

  // optional uint32 seq_num_c2s = 10;
  bool has_seq_num_c2s() const;
  void clear_seq_num_c2s();
  static const int kSeqNumC2SFieldNumber = 10;
  ::google::protobuf::uint32 seq_num_c2s() const;
  void set_seq_num_c2s(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramConnectionStatsClientToRouter)
 private:
  void set_has_c2r();
  void clear_has_c2r();
  void set_has_c2s();
  void clear_has_c2s();
  void set_has_client_timestamp();
  void clear_has_client_timestamp();
  void set_has_client_cookie();
  void clear_has_client_cookie();
  void set_has_seq_num_c2r();
  void clear_has_seq_num_c2r();
  void set_has_seq_num_c2s();
  void clear_has_seq_num_c2s();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::CMsgSteamDatagramConnectionQuality* c2r_;
  ::CMsgSteamDatagramConnectionQuality* c2s_;
  ::google::protobuf::uint32 client_timestamp_;
  ::google::protobuf::uint32 client_cookie_;
  ::google::protobuf::uint32 seq_num_c2r_;
  ::google::protobuf::uint32 seq_num_c2s_;
  friend struct ::protobuf_steamdatagram_5fmessages_2eproto::TableStruct;
  friend void ::protobuf_steamdatagram_5fmessages_2eproto::InitDefaultsCMsgSteamDatagramConnectionStatsClientToRouterImpl();
};
// -------------------------------------------------------------------

class CMsgSteamDatagramConnectionStatsRouterToClient : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramConnectionStatsRouterToClient) */ {
 public:
  CMsgSteamDatagramConnectionStatsRouterToClient();
  virtual ~CMsgSteamDatagramConnectionStatsRouterToClient();

  CMsgSteamDatagramConnectionStatsRouterToClient(const CMsgSteamDatagramConnectionStatsRouterToClient& from);

  inline CMsgSteamDatagramConnectionStatsRouterToClient& operator=(const CMsgSteamDatagramConnectionStatsRouterToClient& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramConnectionStatsRouterToClient(CMsgSteamDatagramConnectionStatsRouterToClient&& from) noexcept
    : CMsgSteamDatagramConnectionStatsRouterToClient() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramConnectionStatsRouterToClient& operator=(CMsgSteamDatagramConnectionStatsRouterToClient&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramConnectionStatsRouterToClient& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramConnectionStatsRouterToClient* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramConnectionStatsRouterToClient*>(
               &_CMsgSteamDatagramConnectionStatsRouterToClient_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(CMsgSteamDatagramConnectionStatsRouterToClient* other);
  friend void swap(CMsgSteamDatagramConnectionStatsRouterToClient& a, CMsgSteamDatagramConnectionStatsRouterToClient& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramConnectionStatsRouterToClient* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamDatagramConnectionStatsRouterToClient* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamDatagramConnectionStatsRouterToClient& from);
  void MergeFrom(const CMsgSteamDatagramConnectionStatsRouterToClient& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamDatagramConnectionStatsRouterToClient* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgSteamDatagramConnectionQuality r2c = 1;
  bool has_r2c() const;
  void clear_r2c();
  static const int kR2CFieldNumber = 1;
  const ::CMsgSteamDatagramConnectionQuality& r2c() const;
  ::CMsgSteamDatagramConnectionQuality* release_r2c();
  ::CMsgSteamDatagramConnectionQuality* mutable_r2c();
  void set_allocated_r2c(::CMsgSteamDatagramConnectionQuality* r2c);

  // optional .CMsgSteamDatagramConnectionQuality s2c = 2;
  bool has_s2c() const;
  void clear_s2c();
  static const int kS2CFieldNumber = 2;
  const ::CMsgSteamDatagramConnectionQuality& s2c() const;
  ::CMsgSteamDatagramConnectionQuality* release_s2c();
  ::CMsgSteamDatagramConnectionQuality* mutable_s2c();
  void set_allocated_s2c(::CMsgSteamDatagramConnectionQuality* s2c);

  // optional fixed32 client_timestamp_from_router = 3;
  bool has_client_timestamp_from_router() const;
  void clear_client_timestamp_from_router();
  static const int kClientTimestampFromRouterFieldNumber = 3;
  ::google::protobuf::uint32 client_timestamp_from_router() const;
  void set_client_timestamp_from_router(::google::protobuf::uint32 value);

  // optional fixed32 client_timestamp_from_server = 4;
  bool has_client_timestamp_from_server() const;
  void clear_client_timestamp_from_server();
  static const int kClientTimestampFromServerFieldNumber = 4;
  ::google::protobuf::uint32 client_timestamp_from_server() const;
  void set_client_timestamp_from_server(::google::protobuf::uint32 value);

  // optional uint32 router_gameserver_latency = 5;
  bool has_router_gameserver_latency() const;
  void clear_router_gameserver_latency();
  static const int kRouterGameserverLatencyFieldNumber = 5;
  ::google::protobuf::uint32 router_gameserver_latency() const;
  void set_router_gameserver_latency(::google::protobuf::uint32 value);

  // optional uint32 seconds_until_shutdown = 6;
  bool has_seconds_until_shutdown() const;
  void clear_seconds_until_shutdown();
  static const int kSecondsUntilShutdownFieldNumber = 6;
  ::google::protobuf::uint32 seconds_until_shutdown() const;
  void set_seconds_until_shutdown(::google::protobuf::uint32 value);

  // optional fixed32 client_cookie = 7;
  bool has_client_cookie() const;
  void clear_client_cookie();
  static const int kClientCookieFieldNumber = 7;
  ::google::protobuf::uint32 client_cookie() const;
  void set_client_cookie(::google::protobuf::uint32 value);

  // optional uint32 seq_num_r2c = 8;
  bool has_seq_num_r2c() const;
  void clear_seq_num_r2c();
  static const int kSeqNumR2CFieldNumber = 8;
  ::google::protobuf::uint32 seq_num_r2c() const;
  void set_seq_num_r2c(::google::protobuf::uint32 value);

  // optional uint32 seq_num_s2c = 9;
  bool has_seq_num_s2c() const;
  void clear_seq_num_s2c();
  static const int kSeqNumS2CFieldNumber = 9;
  ::google::protobuf::uint32 seq_num_s2c() const;
  void set_seq_num_s2c(::google::protobuf::uint32 value);

  // optional fixed32 migrate_request_ip = 10;
  bool has_migrate_request_ip() const;
  void clear_migrate_request_ip();
  static const int kMigrateRequestIpFieldNumber = 10;
  ::google::protobuf::uint32 migrate_request_ip() const;
  void set_migrate_request_ip(::google::protobuf::uint32 value);

  // optional uint32 migrate_request_port = 11;
  bool has_migrate_request_port() const;
  void clear_migrate_request_port();
  static const int kMigrateRequestPortFieldNumber = 11;
  ::google::protobuf::uint32 migrate_request_port() const;
  void set_migrate_request_port(::google::protobuf::uint32 value);

  // optional uint32 scoring_penalty_relay_cluster = 12;
  bool has_scoring_penalty_relay_cluster() const;
  void clear_scoring_penalty_relay_cluster();
  static const int kScoringPenaltyRelayClusterFieldNumber = 12;
  ::google::protobuf::uint32 scoring_penalty_relay_cluster() const;
  void set_scoring_penalty_relay_cluster(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramConnectionStatsRouterToClient)
 private:
  void set_has_r2c();
  void clear_has_r2c();
  void set_has_s2c();
  void clear_has_s2c();
  void set_has_client_timestamp_from_router();
  void clear_has_client_timestamp_from_router();
  void set_has_client_timestamp_from_server();
  void clear_has_client_timestamp_from_server();
  void set_has_router_gameserver_latency();
  void clear_has_router_gameserver_latency();
  void set_has_seconds_until_shutdown();
  void clear_has_seconds_until_shutdown();
  void set_has_migrate_request_ip();
  void clear_has_migrate_request_ip();
  void set_has_migrate_request_port();
  void clear_has_migrate_request_port();
  void set_has_scoring_penalty_relay_cluster();
  void clear_has_scoring_penalty_relay_cluster();
  void set_has_client_cookie();
  void clear_has_client_cookie();
  void set_has_seq_num_r2c();
  void clear_has_seq_num_r2c();
  void set_has_seq_num_s2c();
  void clear_has_seq_num_s2c();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::CMsgSteamDatagramConnectionQuality* r2c_;
  ::CMsgSteamDatagramConnectionQuality* s2c_;
  ::google::protobuf::uint32 client_timestamp_from_router_;
  ::google::protobuf::uint32 client_timestamp_from_server_;
  ::google::protobuf::uint32 router_gameserver_latency_;
  ::google::protobuf::uint32 seconds_until_shutdown_;
  ::google::protobuf::uint32 client_cookie_;
  ::google::protobuf::uint32 seq_num_r2c_;
  ::google::protobuf::uint32 seq_num_s2c_;
  ::google::protobuf::uint32 migrate_request_ip_;
  ::google::protobuf::uint32 migrate_request_port_;
  ::google::protobuf::uint32 scoring_penalty_relay_cluster_;
  friend struct ::protobuf_steamdatagram_5fmessages_2eproto::TableStruct;
  friend void ::protobuf_steamdatagram_5fmessages_2eproto::InitDefaultsCMsgSteamDatagramConnectionStatsRouterToClientImpl();
};
// -------------------------------------------------------------------

class CMsgSteamDatagramConnectionStatsRouterToServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramConnectionStatsRouterToServer) */ {
 public:
  CMsgSteamDatagramConnectionStatsRouterToServer();
  virtual ~CMsgSteamDatagramConnectionStatsRouterToServer();

  CMsgSteamDatagramConnectionStatsRouterToServer(const CMsgSteamDatagramConnectionStatsRouterToServer& from);

  inline CMsgSteamDatagramConnectionStatsRouterToServer& operator=(const CMsgSteamDatagramConnectionStatsRouterToServer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramConnectionStatsRouterToServer(CMsgSteamDatagramConnectionStatsRouterToServer&& from) noexcept
    : CMsgSteamDatagramConnectionStatsRouterToServer() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramConnectionStatsRouterToServer& operator=(CMsgSteamDatagramConnectionStatsRouterToServer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramConnectionStatsRouterToServer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramConnectionStatsRouterToServer* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramConnectionStatsRouterToServer*>(
               &_CMsgSteamDatagramConnectionStatsRouterToServer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(CMsgSteamDatagramConnectionStatsRouterToServer* other);
  friend void swap(CMsgSteamDatagramConnectionStatsRouterToServer& a, CMsgSteamDatagramConnectionStatsRouterToServer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramConnectionStatsRouterToServer* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamDatagramConnectionStatsRouterToServer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamDatagramConnectionStatsRouterToServer& from);
  void MergeFrom(const CMsgSteamDatagramConnectionStatsRouterToServer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamDatagramConnectionStatsRouterToServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgSteamDatagramConnectionQuality r2s = 1;
  bool has_r2s() const;
  void clear_r2s();
  static const int kR2SFieldNumber = 1;
  const ::CMsgSteamDatagramConnectionQuality& r2s() const;
  ::CMsgSteamDatagramConnectionQuality* release_r2s();
  ::CMsgSteamDatagramConnectionQuality* mutable_r2s();
  void set_allocated_r2s(::CMsgSteamDatagramConnectionQuality* r2s);

  // optional .CMsgSteamDatagramConnectionQuality c2s = 2;
  bool has_c2s() const;
  void clear_c2s();
  static const int kC2SFieldNumber = 2;
  const ::CMsgSteamDatagramConnectionQuality& c2s() const;
  ::CMsgSteamDatagramConnectionQuality* release_c2s();
  ::CMsgSteamDatagramConnectionQuality* mutable_c2s();
  void set_allocated_c2s(::CMsgSteamDatagramConnectionQuality* c2s);

  // optional fixed32 client_timestamp = 3;
  bool has_client_timestamp() const;
  void clear_client_timestamp();
  static const int kClientTimestampFieldNumber = 3;
  ::google::protobuf::uint32 client_timestamp() const;
  void set_client_timestamp(::google::protobuf::uint32 value);

  // optional fixed32 router_timestamp = 4;
  bool has_router_timestamp() const;
  void clear_router_timestamp();
  static const int kRouterTimestampFieldNumber = 4;
  ::google::protobuf::uint32 router_timestamp() const;
  void set_router_timestamp(::google::protobuf::uint32 value);

  // optional uint32 seq_num_r2s = 5;
  bool has_seq_num_r2s() const;
  void clear_seq_num_r2s();
  static const int kSeqNumR2SFieldNumber = 5;
  ::google::protobuf::uint32 seq_num_r2s() const;
  void set_seq_num_r2s(::google::protobuf::uint32 value);

  // optional uint32 seq_num_c2s = 6;
  bool has_seq_num_c2s() const;
  void clear_seq_num_c2s();
  static const int kSeqNumC2SFieldNumber = 6;
  ::google::protobuf::uint32 seq_num_c2s() const;
  void set_seq_num_c2s(::google::protobuf::uint32 value);

  // optional fixed64 client_steam_id = 7;
  bool has_client_steam_id() const;
  void clear_client_steam_id();
  static const int kClientSteamIdFieldNumber = 7;
  ::google::protobuf::uint64 client_steam_id() const;
  void set_client_steam_id(::google::protobuf::uint64 value);

  // optional uint32 client_session_id = 8;
  bool has_client_session_id() const;
  void clear_client_session_id();
  static const int kClientSessionIdFieldNumber = 8;
  ::google::protobuf::uint32 client_session_id() const;
  void set_client_session_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramConnectionStatsRouterToServer)
 private:
  void set_has_r2s();
  void clear_has_r2s();
  void set_has_c2s();
  void clear_has_c2s();
  void set_has_client_timestamp();
  void clear_has_client_timestamp();
  void set_has_router_timestamp();
  void clear_has_router_timestamp();
  void set_has_seq_num_r2s();
  void clear_has_seq_num_r2s();
  void set_has_seq_num_c2s();
  void clear_has_seq_num_c2s();
  void set_has_client_steam_id();
  void clear_has_client_steam_id();
  void set_has_client_session_id();
  void clear_has_client_session_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::CMsgSteamDatagramConnectionQuality* r2s_;
  ::CMsgSteamDatagramConnectionQuality* c2s_;
  ::google::protobuf::uint32 client_timestamp_;
  ::google::protobuf::uint32 router_timestamp_;
  ::google::protobuf::uint32 seq_num_r2s_;
  ::google::protobuf::uint32 seq_num_c2s_;
  ::google::protobuf::uint64 client_steam_id_;
  ::google::protobuf::uint32 client_session_id_;
  friend struct ::protobuf_steamdatagram_5fmessages_2eproto::TableStruct;
  friend void ::protobuf_steamdatagram_5fmessages_2eproto::InitDefaultsCMsgSteamDatagramConnectionStatsRouterToServerImpl();
};
// -------------------------------------------------------------------

class CMsgSteamDatagramConnectionStatsServerToRouter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramConnectionStatsServerToRouter) */ {
 public:
  CMsgSteamDatagramConnectionStatsServerToRouter();
  virtual ~CMsgSteamDatagramConnectionStatsServerToRouter();

  CMsgSteamDatagramConnectionStatsServerToRouter(const CMsgSteamDatagramConnectionStatsServerToRouter& from);

  inline CMsgSteamDatagramConnectionStatsServerToRouter& operator=(const CMsgSteamDatagramConnectionStatsServerToRouter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramConnectionStatsServerToRouter(CMsgSteamDatagramConnectionStatsServerToRouter&& from) noexcept
    : CMsgSteamDatagramConnectionStatsServerToRouter() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramConnectionStatsServerToRouter& operator=(CMsgSteamDatagramConnectionStatsServerToRouter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramConnectionStatsServerToRouter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramConnectionStatsServerToRouter* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramConnectionStatsServerToRouter*>(
               &_CMsgSteamDatagramConnectionStatsServerToRouter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(CMsgSteamDatagramConnectionStatsServerToRouter* other);
  friend void swap(CMsgSteamDatagramConnectionStatsServerToRouter& a, CMsgSteamDatagramConnectionStatsServerToRouter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramConnectionStatsServerToRouter* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamDatagramConnectionStatsServerToRouter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamDatagramConnectionStatsServerToRouter& from);
  void MergeFrom(const CMsgSteamDatagramConnectionStatsServerToRouter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamDatagramConnectionStatsServerToRouter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgSteamDatagramConnectionQuality s2r = 1;
  bool has_s2r() const;
  void clear_s2r();
  static const int kS2RFieldNumber = 1;
  const ::CMsgSteamDatagramConnectionQuality& s2r() const;
  ::CMsgSteamDatagramConnectionQuality* release_s2r();
  ::CMsgSteamDatagramConnectionQuality* mutable_s2r();
  void set_allocated_s2r(::CMsgSteamDatagramConnectionQuality* s2r);

  // optional .CMsgSteamDatagramConnectionQuality s2c = 2;
  bool has_s2c() const;
  void clear_s2c();
  static const int kS2CFieldNumber = 2;
  const ::CMsgSteamDatagramConnectionQuality& s2c() const;
  ::CMsgSteamDatagramConnectionQuality* release_s2c();
  ::CMsgSteamDatagramConnectionQuality* mutable_s2c();
  void set_allocated_s2c(::CMsgSteamDatagramConnectionQuality* s2c);

  // optional uint32 seq_num_s2r = 3;
  bool has_seq_num_s2r() const;
  void clear_seq_num_s2r();
  static const int kSeqNumS2RFieldNumber = 3;
  ::google::protobuf::uint32 seq_num_s2r() const;
  void set_seq_num_s2r(::google::protobuf::uint32 value);

  // optional uint32 seq_num_s2c = 4;
  bool has_seq_num_s2c() const;
  void clear_seq_num_s2c();
  static const int kSeqNumS2CFieldNumber = 4;
  ::google::protobuf::uint32 seq_num_s2c() const;
  void set_seq_num_s2c(::google::protobuf::uint32 value);

  // optional fixed64 client_steam_id = 5;
  bool has_client_steam_id() const;
  void clear_client_steam_id();
  static const int kClientSteamIdFieldNumber = 5;
  ::google::protobuf::uint64 client_steam_id() const;
  void set_client_steam_id(::google::protobuf::uint64 value);

  // optional uint32 client_session_id = 6;
  bool has_client_session_id() const;
  void clear_client_session_id();
  static const int kClientSessionIdFieldNumber = 6;
  ::google::protobuf::uint32 client_session_id() const;
  void set_client_session_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramConnectionStatsServerToRouter)
 private:
  void set_has_s2r();
  void clear_has_s2r();
  void set_has_s2c();
  void clear_has_s2c();
  void set_has_seq_num_s2r();
  void clear_has_seq_num_s2r();
  void set_has_seq_num_s2c();
  void clear_has_seq_num_s2c();
  void set_has_client_steam_id();
  void clear_has_client_steam_id();
  void set_has_client_session_id();
  void clear_has_client_session_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::CMsgSteamDatagramConnectionQuality* s2r_;
  ::CMsgSteamDatagramConnectionQuality* s2c_;
  ::google::protobuf::uint32 seq_num_s2r_;
  ::google::protobuf::uint32 seq_num_s2c_;
  ::google::protobuf::uint64 client_steam_id_;
  ::google::protobuf::uint32 client_session_id_;
  friend struct ::protobuf_steamdatagram_5fmessages_2eproto::TableStruct;
  friend void ::protobuf_steamdatagram_5fmessages_2eproto::InitDefaultsCMsgSteamDatagramConnectionStatsServerToRouterImpl();
};
// -------------------------------------------------------------------

class CMsgSteamDatagramClientPingSampleRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramClientPingSampleRequest) */ {
 public:
  CMsgSteamDatagramClientPingSampleRequest();
  virtual ~CMsgSteamDatagramClientPingSampleRequest();

  CMsgSteamDatagramClientPingSampleRequest(const CMsgSteamDatagramClientPingSampleRequest& from);

  inline CMsgSteamDatagramClientPingSampleRequest& operator=(const CMsgSteamDatagramClientPingSampleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramClientPingSampleRequest(CMsgSteamDatagramClientPingSampleRequest&& from) noexcept
    : CMsgSteamDatagramClientPingSampleRequest() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramClientPingSampleRequest& operator=(CMsgSteamDatagramClientPingSampleRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramClientPingSampleRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramClientPingSampleRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramClientPingSampleRequest*>(
               &_CMsgSteamDatagramClientPingSampleRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(CMsgSteamDatagramClientPingSampleRequest* other);
  friend void swap(CMsgSteamDatagramClientPingSampleRequest& a, CMsgSteamDatagramClientPingSampleRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramClientPingSampleRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamDatagramClientPingSampleRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamDatagramClientPingSampleRequest& from);
  void MergeFrom(const CMsgSteamDatagramClientPingSampleRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamDatagramClientPingSampleRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed32 client_cookie = 1;
  bool has_client_cookie() const;
  void clear_client_cookie();
  static const int kClientCookieFieldNumber = 1;
  ::google::protobuf::uint32 client_cookie() const;
  void set_client_cookie(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramClientPingSampleRequest)
 private:
  void set_has_client_cookie();
  void clear_has_client_cookie();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 client_cookie_;
  friend struct ::protobuf_steamdatagram_5fmessages_2eproto::TableStruct;
  friend void ::protobuf_steamdatagram_5fmessages_2eproto::InitDefaultsCMsgSteamDatagramClientPingSampleRequestImpl();
};
// -------------------------------------------------------------------

class CMsgSteamDatagramClientPingSampleReply_RoutingCluster : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramClientPingSampleReply.RoutingCluster) */ {
 public:
  CMsgSteamDatagramClientPingSampleReply_RoutingCluster();
  virtual ~CMsgSteamDatagramClientPingSampleReply_RoutingCluster();

  CMsgSteamDatagramClientPingSampleReply_RoutingCluster(const CMsgSteamDatagramClientPingSampleReply_RoutingCluster& from);

  inline CMsgSteamDatagramClientPingSampleReply_RoutingCluster& operator=(const CMsgSteamDatagramClientPingSampleReply_RoutingCluster& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramClientPingSampleReply_RoutingCluster(CMsgSteamDatagramClientPingSampleReply_RoutingCluster&& from) noexcept
    : CMsgSteamDatagramClientPingSampleReply_RoutingCluster() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramClientPingSampleReply_RoutingCluster& operator=(CMsgSteamDatagramClientPingSampleReply_RoutingCluster&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramClientPingSampleReply_RoutingCluster& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramClientPingSampleReply_RoutingCluster* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramClientPingSampleReply_RoutingCluster*>(
               &_CMsgSteamDatagramClientPingSampleReply_RoutingCluster_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(CMsgSteamDatagramClientPingSampleReply_RoutingCluster* other);
  friend void swap(CMsgSteamDatagramClientPingSampleReply_RoutingCluster& a, CMsgSteamDatagramClientPingSampleReply_RoutingCluster& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramClientPingSampleReply_RoutingCluster* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamDatagramClientPingSampleReply_RoutingCluster* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamDatagramClientPingSampleReply_RoutingCluster& from);
  void MergeFrom(const CMsgSteamDatagramClientPingSampleReply_RoutingCluster& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamDatagramClientPingSampleReply_RoutingCluster* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 front_ping_ms = 2;
  bool has_front_ping_ms() const;
  void clear_front_ping_ms();
  static const int kFrontPingMsFieldNumber = 2;
  ::google::protobuf::uint32 front_ping_ms() const;
  void set_front_ping_ms(::google::protobuf::uint32 value);

  // optional uint32 e2e_ping_ms = 3;
  bool has_e2e_ping_ms() const;
  void clear_e2e_ping_ms();
  static const int kE2EPingMsFieldNumber = 3;
  ::google::protobuf::uint32 e2e_ping_ms() const;
  void set_e2e_ping_ms(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramClientPingSampleReply.RoutingCluster)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_front_ping_ms();
  void clear_has_front_ping_ms();
  void set_has_e2e_ping_ms();
  void clear_has_e2e_ping_ms();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 front_ping_ms_;
  ::google::protobuf::uint32 e2e_ping_ms_;
  friend struct ::protobuf_steamdatagram_5fmessages_2eproto::TableStruct;
  friend void ::protobuf_steamdatagram_5fmessages_2eproto::InitDefaultsCMsgSteamDatagramClientPingSampleReply_RoutingClusterImpl();
};
// -------------------------------------------------------------------

class CMsgSteamDatagramClientPingSampleReply_DataCenter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramClientPingSampleReply.DataCenter) */ {
 public:
  CMsgSteamDatagramClientPingSampleReply_DataCenter();
  virtual ~CMsgSteamDatagramClientPingSampleReply_DataCenter();

  CMsgSteamDatagramClientPingSampleReply_DataCenter(const CMsgSteamDatagramClientPingSampleReply_DataCenter& from);

  inline CMsgSteamDatagramClientPingSampleReply_DataCenter& operator=(const CMsgSteamDatagramClientPingSampleReply_DataCenter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramClientPingSampleReply_DataCenter(CMsgSteamDatagramClientPingSampleReply_DataCenter&& from) noexcept
    : CMsgSteamDatagramClientPingSampleReply_DataCenter() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramClientPingSampleReply_DataCenter& operator=(CMsgSteamDatagramClientPingSampleReply_DataCenter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramClientPingSampleReply_DataCenter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramClientPingSampleReply_DataCenter* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramClientPingSampleReply_DataCenter*>(
               &_CMsgSteamDatagramClientPingSampleReply_DataCenter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(CMsgSteamDatagramClientPingSampleReply_DataCenter* other);
  friend void swap(CMsgSteamDatagramClientPingSampleReply_DataCenter& a, CMsgSteamDatagramClientPingSampleReply_DataCenter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramClientPingSampleReply_DataCenter* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamDatagramClientPingSampleReply_DataCenter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamDatagramClientPingSampleReply_DataCenter& from);
  void MergeFrom(const CMsgSteamDatagramClientPingSampleReply_DataCenter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamDatagramClientPingSampleReply_DataCenter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed32 data_center_id = 1;
  bool has_data_center_id() const;
  void clear_data_center_id();
  static const int kDataCenterIdFieldNumber = 1;
  ::google::protobuf::uint32 data_center_id() const;
  void set_data_center_id(::google::protobuf::uint32 value);

  // optional fixed32 via_relay_id = 2;
  bool has_via_relay_id() const;
  void clear_via_relay_id();
  static const int kViaRelayIdFieldNumber = 2;
  ::google::protobuf::uint32 via_relay_id() const;
  void set_via_relay_id(::google::protobuf::uint32 value);

  // optional uint32 e2e_ping_ms = 3;
  bool has_e2e_ping_ms() const;
  void clear_e2e_ping_ms();
  static const int kE2EPingMsFieldNumber = 3;
  ::google::protobuf::uint32 e2e_ping_ms() const;
  void set_e2e_ping_ms(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramClientPingSampleReply.DataCenter)
 private:
  void set_has_data_center_id();
  void clear_has_data_center_id();
  void set_has_via_relay_id();
  void clear_has_via_relay_id();
  void set_has_e2e_ping_ms();
  void clear_has_e2e_ping_ms();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 data_center_id_;
  ::google::protobuf::uint32 via_relay_id_;
  ::google::protobuf::uint32 e2e_ping_ms_;
  friend struct ::protobuf_steamdatagram_5fmessages_2eproto::TableStruct;
  friend void ::protobuf_steamdatagram_5fmessages_2eproto::InitDefaultsCMsgSteamDatagramClientPingSampleReply_DataCenterImpl();
};
// -------------------------------------------------------------------

class CMsgSteamDatagramClientPingSampleReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramClientPingSampleReply) */ {
 public:
  CMsgSteamDatagramClientPingSampleReply();
  virtual ~CMsgSteamDatagramClientPingSampleReply();

  CMsgSteamDatagramClientPingSampleReply(const CMsgSteamDatagramClientPingSampleReply& from);

  inline CMsgSteamDatagramClientPingSampleReply& operator=(const CMsgSteamDatagramClientPingSampleReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramClientPingSampleReply(CMsgSteamDatagramClientPingSampleReply&& from) noexcept
    : CMsgSteamDatagramClientPingSampleReply() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramClientPingSampleReply& operator=(CMsgSteamDatagramClientPingSampleReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramClientPingSampleReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramClientPingSampleReply* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramClientPingSampleReply*>(
               &_CMsgSteamDatagramClientPingSampleReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(CMsgSteamDatagramClientPingSampleReply* other);
  friend void swap(CMsgSteamDatagramClientPingSampleReply& a, CMsgSteamDatagramClientPingSampleReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramClientPingSampleReply* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamDatagramClientPingSampleReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamDatagramClientPingSampleReply& from);
  void MergeFrom(const CMsgSteamDatagramClientPingSampleReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamDatagramClientPingSampleReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgSteamDatagramClientPingSampleReply_RoutingCluster RoutingCluster;
  typedef CMsgSteamDatagramClientPingSampleReply_DataCenter DataCenter;

  // accessors -------------------------------------------------------

  // repeated .CMsgSteamDatagramClientPingSampleReply.RoutingCluster routing_clusters = 2;
  int routing_clusters_size() const;
  void clear_routing_clusters();
  static const int kRoutingClustersFieldNumber = 2;
  const ::CMsgSteamDatagramClientPingSampleReply_RoutingCluster& routing_clusters(int index) const;
  ::CMsgSteamDatagramClientPingSampleReply_RoutingCluster* mutable_routing_clusters(int index);
  ::CMsgSteamDatagramClientPingSampleReply_RoutingCluster* add_routing_clusters();
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramClientPingSampleReply_RoutingCluster >*
      mutable_routing_clusters();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramClientPingSampleReply_RoutingCluster >&
      routing_clusters() const;

  // repeated .CMsgSteamDatagramClientPingSampleReply.DataCenter data_centers = 3;
  int data_centers_size() const;
  void clear_data_centers();
  static const int kDataCentersFieldNumber = 3;
  const ::CMsgSteamDatagramClientPingSampleReply_DataCenter& data_centers(int index) const;
  ::CMsgSteamDatagramClientPingSampleReply_DataCenter* mutable_data_centers(int index);
  ::CMsgSteamDatagramClientPingSampleReply_DataCenter* add_data_centers();
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramClientPingSampleReply_DataCenter >*
      mutable_data_centers();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramClientPingSampleReply_DataCenter >&
      data_centers() const;

  // optional fixed32 client_cookie = 1;
  bool has_client_cookie() const;
  void clear_client_cookie();
  static const int kClientCookieFieldNumber = 1;
  ::google::protobuf::uint32 client_cookie() const;
  void set_client_cookie(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramClientPingSampleReply)
 private:
  void set_has_client_cookie();
  void clear_has_client_cookie();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramClientPingSampleReply_RoutingCluster > routing_clusters_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramClientPingSampleReply_DataCenter > data_centers_;
  ::google::protobuf::uint32 client_cookie_;
  friend struct ::protobuf_steamdatagram_5fmessages_2eproto::TableStruct;
  friend void ::protobuf_steamdatagram_5fmessages_2eproto::InitDefaultsCMsgSteamDatagramClientPingSampleReplyImpl();
};
// -------------------------------------------------------------------

class CMsgSteamDatagramClientSwitchedPrimary_RouterQuality : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality) */ {
 public:
  CMsgSteamDatagramClientSwitchedPrimary_RouterQuality();
  virtual ~CMsgSteamDatagramClientSwitchedPrimary_RouterQuality();

  CMsgSteamDatagramClientSwitchedPrimary_RouterQuality(const CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& from);

  inline CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& operator=(const CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramClientSwitchedPrimary_RouterQuality(CMsgSteamDatagramClientSwitchedPrimary_RouterQuality&& from) noexcept
    : CMsgSteamDatagramClientSwitchedPrimary_RouterQuality() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& operator=(CMsgSteamDatagramClientSwitchedPrimary_RouterQuality&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramClientSwitchedPrimary_RouterQuality*>(
               &_CMsgSteamDatagramClientSwitchedPrimary_RouterQuality_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* other);
  friend void swap(CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& a, CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& from);
  void MergeFrom(const CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 score = 1;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 1;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // optional uint32 front_ping = 2;
  bool has_front_ping() const;
  void clear_front_ping();
  static const int kFrontPingFieldNumber = 2;
  ::google::protobuf::uint32 front_ping() const;
  void set_front_ping(::google::protobuf::uint32 value);

  // optional uint32 back_ping = 3;
  bool has_back_ping() const;
  void clear_back_ping();
  static const int kBackPingFieldNumber = 3;
  ::google::protobuf::uint32 back_ping() const;
  void set_back_ping(::google::protobuf::uint32 value);

  // optional uint32 seconds_until_down = 4;
  bool has_seconds_until_down() const;
  void clear_seconds_until_down();
  static const int kSecondsUntilDownFieldNumber = 4;
  ::google::protobuf::uint32 seconds_until_down() const;
  void set_seconds_until_down(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality)
 private:
  void set_has_score();
  void clear_has_score();
  void set_has_front_ping();
  void clear_has_front_ping();
  void set_has_back_ping();
  void clear_has_back_ping();
  void set_has_seconds_until_down();
  void clear_has_seconds_until_down();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 front_ping_;
  ::google::protobuf::uint32 back_ping_;
  ::google::protobuf::uint32 seconds_until_down_;
  friend struct ::protobuf_steamdatagram_5fmessages_2eproto::TableStruct;
  friend void ::protobuf_steamdatagram_5fmessages_2eproto::InitDefaultsCMsgSteamDatagramClientSwitchedPrimary_RouterQualityImpl();
};
// -------------------------------------------------------------------

class CMsgSteamDatagramClientSwitchedPrimary : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramClientSwitchedPrimary) */ {
 public:
  CMsgSteamDatagramClientSwitchedPrimary();
  virtual ~CMsgSteamDatagramClientSwitchedPrimary();

  CMsgSteamDatagramClientSwitchedPrimary(const CMsgSteamDatagramClientSwitchedPrimary& from);

  inline CMsgSteamDatagramClientSwitchedPrimary& operator=(const CMsgSteamDatagramClientSwitchedPrimary& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramClientSwitchedPrimary(CMsgSteamDatagramClientSwitchedPrimary&& from) noexcept
    : CMsgSteamDatagramClientSwitchedPrimary() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramClientSwitchedPrimary& operator=(CMsgSteamDatagramClientSwitchedPrimary&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramClientSwitchedPrimary& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramClientSwitchedPrimary* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramClientSwitchedPrimary*>(
               &_CMsgSteamDatagramClientSwitchedPrimary_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(CMsgSteamDatagramClientSwitchedPrimary* other);
  friend void swap(CMsgSteamDatagramClientSwitchedPrimary& a, CMsgSteamDatagramClientSwitchedPrimary& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramClientSwitchedPrimary* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamDatagramClientSwitchedPrimary* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamDatagramClientSwitchedPrimary& from);
  void MergeFrom(const CMsgSteamDatagramClientSwitchedPrimary& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamDatagramClientSwitchedPrimary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgSteamDatagramClientSwitchedPrimary_RouterQuality RouterQuality;

  // accessors -------------------------------------------------------

  // optional string from_dropped_reason = 7;
  bool has_from_dropped_reason() const;
  void clear_from_dropped_reason();
  static const int kFromDroppedReasonFieldNumber = 7;
  const ::std::string& from_dropped_reason() const;
  void set_from_dropped_reason(const ::std::string& value);
  #if LANG_CXX11
  void set_from_dropped_reason(::std::string&& value);
  #endif
  void set_from_dropped_reason(const char* value);
  void set_from_dropped_reason(const char* value, size_t size);
  ::std::string* mutable_from_dropped_reason();
  ::std::string* release_from_dropped_reason();
  void set_allocated_from_dropped_reason(::std::string* from_dropped_reason);

  // optional .CMsgSteamDatagramClientSwitchedPrimary.RouterQuality from_quality_now = 9;
  bool has_from_quality_now() const;
  void clear_from_quality_now();
  static const int kFromQualityNowFieldNumber = 9;
  const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& from_quality_now() const;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* release_from_quality_now();
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* mutable_from_quality_now();
  void set_allocated_from_quality_now(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* from_quality_now);

  // optional .CMsgSteamDatagramClientSwitchedPrimary.RouterQuality to_quality_now = 10;
  bool has_to_quality_now() const;
  void clear_to_quality_now();
  static const int kToQualityNowFieldNumber = 10;
  const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& to_quality_now() const;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* release_to_quality_now();
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* mutable_to_quality_now();
  void set_allocated_to_quality_now(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* to_quality_now);

  // optional .CMsgSteamDatagramClientSwitchedPrimary.RouterQuality from_quality_then = 11;
  bool has_from_quality_then() const;
  void clear_from_quality_then();
  static const int kFromQualityThenFieldNumber = 11;
  const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& from_quality_then() const;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* release_from_quality_then();
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* mutable_from_quality_then();
  void set_allocated_from_quality_then(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* from_quality_then);

  // optional .CMsgSteamDatagramClientSwitchedPrimary.RouterQuality to_quality_then = 12;
  bool has_to_quality_then() const;
  void clear_to_quality_then();
  static const int kToQualityThenFieldNumber = 12;
  const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& to_quality_then() const;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* release_to_quality_then();
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* mutable_to_quality_then();
  void set_allocated_to_quality_then(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* to_quality_then);

  // optional fixed32 client_cookie = 1;
  bool has_client_cookie() const;
  void clear_client_cookie();
  static const int kClientCookieFieldNumber = 1;
  ::google::protobuf::uint32 client_cookie() const;
  void set_client_cookie(::google::protobuf::uint32 value);

  // optional fixed32 from_ip = 2;
  bool has_from_ip() const;
  void clear_from_ip();
  static const int kFromIpFieldNumber = 2;
  ::google::protobuf::uint32 from_ip() const;
  void set_from_ip(::google::protobuf::uint32 value);

  // optional uint32 from_port = 3;
  bool has_from_port() const;
  void clear_from_port();
  static const int kFromPortFieldNumber = 3;
  ::google::protobuf::uint32 from_port() const;
  void set_from_port(::google::protobuf::uint32 value);

  // optional fixed32 from_router_cluster = 4;
  bool has_from_router_cluster() const;
  void clear_from_router_cluster();
  static const int kFromRouterClusterFieldNumber = 4;
  ::google::protobuf::uint32 from_router_cluster() const;
  void set_from_router_cluster(::google::protobuf::uint32 value);

  // optional uint32 from_active_time = 5;
  bool has_from_active_time() const;
  void clear_from_active_time();
  static const int kFromActiveTimeFieldNumber = 5;
  ::google::protobuf::uint32 from_active_time() const;
  void set_from_active_time(::google::protobuf::uint32 value);

  // optional uint32 from_active_packets_recv = 6;
  bool has_from_active_packets_recv() const;
  void clear_from_active_packets_recv();
  static const int kFromActivePacketsRecvFieldNumber = 6;
  ::google::protobuf::uint32 from_active_packets_recv() const;
  void set_from_active_packets_recv(::google::protobuf::uint32 value);

  // optional uint32 gap_ms = 8;
  bool has_gap_ms() const;
  void clear_gap_ms();
  static const int kGapMsFieldNumber = 8;
  ::google::protobuf::uint32 gap_ms() const;
  void set_gap_ms(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramClientSwitchedPrimary)
 private:
  void set_has_client_cookie();
  void clear_has_client_cookie();
  void set_has_from_ip();
  void clear_has_from_ip();
  void set_has_from_port();
  void clear_has_from_port();
  void set_has_from_router_cluster();
  void clear_has_from_router_cluster();
  void set_has_from_active_time();
  void clear_has_from_active_time();
  void set_has_from_active_packets_recv();
  void clear_has_from_active_packets_recv();
  void set_has_from_dropped_reason();
  void clear_has_from_dropped_reason();
  void set_has_gap_ms();
  void clear_has_gap_ms();
  void set_has_from_quality_now();
  void clear_has_from_quality_now();
  void set_has_to_quality_now();
  void clear_has_to_quality_now();
  void set_has_from_quality_then();
  void clear_has_from_quality_then();
  void set_has_to_quality_then();
  void clear_has_to_quality_then();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr from_dropped_reason_;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* from_quality_now_;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* to_quality_now_;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* from_quality_then_;
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* to_quality_then_;
  ::google::protobuf::uint32 client_cookie_;
  ::google::protobuf::uint32 from_ip_;
  ::google::protobuf::uint32 from_port_;
  ::google::protobuf::uint32 from_router_cluster_;
  ::google::protobuf::uint32 from_active_time_;
  ::google::protobuf::uint32 from_active_packets_recv_;
  ::google::protobuf::uint32 gap_ms_;
  friend struct ::protobuf_steamdatagram_5fmessages_2eproto::TableStruct;
  friend void ::protobuf_steamdatagram_5fmessages_2eproto::InitDefaultsCMsgSteamDatagramClientSwitchedPrimaryImpl();
};
// -------------------------------------------------------------------

class CMsgSteamDatagramRouterHealth_DataCenter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramRouterHealth.DataCenter) */ {
 public:
  CMsgSteamDatagramRouterHealth_DataCenter();
  virtual ~CMsgSteamDatagramRouterHealth_DataCenter();

  CMsgSteamDatagramRouterHealth_DataCenter(const CMsgSteamDatagramRouterHealth_DataCenter& from);

  inline CMsgSteamDatagramRouterHealth_DataCenter& operator=(const CMsgSteamDatagramRouterHealth_DataCenter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramRouterHealth_DataCenter(CMsgSteamDatagramRouterHealth_DataCenter&& from) noexcept
    : CMsgSteamDatagramRouterHealth_DataCenter() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramRouterHealth_DataCenter& operator=(CMsgSteamDatagramRouterHealth_DataCenter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramRouterHealth_DataCenter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramRouterHealth_DataCenter* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramRouterHealth_DataCenter*>(
               &_CMsgSteamDatagramRouterHealth_DataCenter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(CMsgSteamDatagramRouterHealth_DataCenter* other);
  friend void swap(CMsgSteamDatagramRouterHealth_DataCenter& a, CMsgSteamDatagramRouterHealth_DataCenter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramRouterHealth_DataCenter* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamDatagramRouterHealth_DataCenter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamDatagramRouterHealth_DataCenter& from);
  void MergeFrom(const CMsgSteamDatagramRouterHealth_DataCenter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamDatagramRouterHealth_DataCenter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed32 datacenter_id = 1;
  bool has_datacenter_id() const;
  void clear_datacenter_id();
  static const int kDatacenterIdFieldNumber = 1;
  ::google::protobuf::uint32 datacenter_id() const;
  void set_datacenter_id(::google::protobuf::uint32 value);

  // optional uint32 state = 2;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::google::protobuf::uint32 state() const;
  void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramRouterHealth.DataCenter)
 private:
  void set_has_datacenter_id();
  void clear_has_datacenter_id();
  void set_has_state();
  void clear_has_state();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 datacenter_id_;
  ::google::protobuf::uint32 state_;
  friend struct ::protobuf_steamdatagram_5fmessages_2eproto::TableStruct;
  friend void ::protobuf_steamdatagram_5fmessages_2eproto::InitDefaultsCMsgSteamDatagramRouterHealth_DataCenterImpl();
};
// -------------------------------------------------------------------

class CMsgSteamDatagramRouterHealth : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSteamDatagramRouterHealth) */ {
 public:
  CMsgSteamDatagramRouterHealth();
  virtual ~CMsgSteamDatagramRouterHealth();

  CMsgSteamDatagramRouterHealth(const CMsgSteamDatagramRouterHealth& from);

  inline CMsgSteamDatagramRouterHealth& operator=(const CMsgSteamDatagramRouterHealth& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSteamDatagramRouterHealth(CMsgSteamDatagramRouterHealth&& from) noexcept
    : CMsgSteamDatagramRouterHealth() {
    *this = ::std::move(from);
  }

  inline CMsgSteamDatagramRouterHealth& operator=(CMsgSteamDatagramRouterHealth&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamDatagramRouterHealth& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSteamDatagramRouterHealth* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamDatagramRouterHealth*>(
               &_CMsgSteamDatagramRouterHealth_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(CMsgSteamDatagramRouterHealth* other);
  friend void swap(CMsgSteamDatagramRouterHealth& a, CMsgSteamDatagramRouterHealth& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSteamDatagramRouterHealth* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamDatagramRouterHealth* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamDatagramRouterHealth& from);
  void MergeFrom(const CMsgSteamDatagramRouterHealth& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamDatagramRouterHealth* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgSteamDatagramRouterHealth_DataCenter DataCenter;

  // accessors -------------------------------------------------------

  // repeated .CMsgSteamDatagramRouterHealth.DataCenter data_centers = 6;
  int data_centers_size() const;
  void clear_data_centers();
  static const int kDataCentersFieldNumber = 6;
  const ::CMsgSteamDatagramRouterHealth_DataCenter& data_centers(int index) const;
  ::CMsgSteamDatagramRouterHealth_DataCenter* mutable_data_centers(int index);
  ::CMsgSteamDatagramRouterHealth_DataCenter* add_data_centers();
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramRouterHealth_DataCenter >*
      mutable_data_centers();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramRouterHealth_DataCenter >&
      data_centers() const;

  // optional float cpu_load = 1;
  bool has_cpu_load() const;
  void clear_cpu_load();
  static const int kCpuLoadFieldNumber = 1;
  float cpu_load() const;
  void set_cpu_load(float value);

  // optional uint32 active_sessions = 2;
  bool has_active_sessions() const;
  void clear_active_sessions();
  static const int kActiveSessionsFieldNumber = 2;
  ::google::protobuf::uint32 active_sessions() const;
  void set_active_sessions(::google::protobuf::uint32 value);

  // optional uint32 data_pkts_sec = 3;
  bool has_data_pkts_sec() const;
  void clear_data_pkts_sec();
  static const int kDataPktsSecFieldNumber = 3;
  ::google::protobuf::uint32 data_pkts_sec() const;
  void set_data_pkts_sec(::google::protobuf::uint32 value);

  // optional uint32 other_pkts_sec = 4;
  bool has_other_pkts_sec() const;
  void clear_other_pkts_sec();
  static const int kOtherPktsSecFieldNumber = 4;
  ::google::protobuf::uint32 other_pkts_sec() const;
  void set_other_pkts_sec(::google::protobuf::uint32 value);

  // optional uint32 seconds_until_shutdown = 5;
  bool has_seconds_until_shutdown() const;
  void clear_seconds_until_shutdown();
  static const int kSecondsUntilShutdownFieldNumber = 5;
  ::google::protobuf::uint32 seconds_until_shutdown() const;
  void set_seconds_until_shutdown(::google::protobuf::uint32 value);

  // optional float cpu_cost_per_user = 8;
  bool has_cpu_cost_per_user() const;
  void clear_cpu_cost_per_user();
  static const int kCpuCostPerUserFieldNumber = 8;
  float cpu_cost_per_user() const;
  void set_cpu_cost_per_user(float value);

  // optional fixed64 magic = 7;
  bool has_magic() const;
  void clear_magic();
  static const int kMagicFieldNumber = 7;
  ::google::protobuf::uint64 magic() const;
  void set_magic(::google::protobuf::uint64 value);

  // optional float cpu_cost_per_packet = 9;
  bool has_cpu_cost_per_packet() const;
  void clear_cpu_cost_per_packet();
  static const int kCpuCostPerPacketFieldNumber = 9;
  float cpu_cost_per_packet() const;
  void set_cpu_cost_per_packet(float value);

  // @@protoc_insertion_point(class_scope:CMsgSteamDatagramRouterHealth)
 private:
  void set_has_cpu_load();
  void clear_has_cpu_load();
  void set_has_active_sessions();
  void clear_has_active_sessions();
  void set_has_data_pkts_sec();
  void clear_has_data_pkts_sec();
  void set_has_other_pkts_sec();
  void clear_has_other_pkts_sec();
  void set_has_seconds_until_shutdown();
  void clear_has_seconds_until_shutdown();
  void set_has_cpu_cost_per_user();
  void clear_has_cpu_cost_per_user();
  void set_has_cpu_cost_per_packet();
  void clear_has_cpu_cost_per_packet();
  void set_has_magic();
  void clear_has_magic();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramRouterHealth_DataCenter > data_centers_;
  float cpu_load_;
  ::google::protobuf::uint32 active_sessions_;
  ::google::protobuf::uint32 data_pkts_sec_;
  ::google::protobuf::uint32 other_pkts_sec_;
  ::google::protobuf::uint32 seconds_until_shutdown_;
  float cpu_cost_per_user_;
  ::google::protobuf::uint64 magic_;
  float cpu_cost_per_packet_;
  friend struct ::protobuf_steamdatagram_5fmessages_2eproto::TableStruct;
  friend void ::protobuf_steamdatagram_5fmessages_2eproto::InitDefaultsCMsgSteamDatagramRouterHealthImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMsgSteamDatagramRouterPingReply

// optional fixed32 client_timestamp = 1;
inline bool CMsgSteamDatagramRouterPingReply::has_client_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramRouterPingReply::set_has_client_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramRouterPingReply::clear_has_client_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramRouterPingReply::clear_client_timestamp() {
  client_timestamp_ = 0u;
  clear_has_client_timestamp();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRouterPingReply::client_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.client_timestamp)
  return client_timestamp_;
}
inline void CMsgSteamDatagramRouterPingReply::set_client_timestamp(::google::protobuf::uint32 value) {
  set_has_client_timestamp();
  client_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.client_timestamp)
}

// repeated fixed32 latency_datacenter_ids = 2 [packed = true];
inline int CMsgSteamDatagramRouterPingReply::latency_datacenter_ids_size() const {
  return latency_datacenter_ids_.size();
}
inline void CMsgSteamDatagramRouterPingReply::clear_latency_datacenter_ids() {
  latency_datacenter_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRouterPingReply::latency_datacenter_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.latency_datacenter_ids)
  return latency_datacenter_ids_.Get(index);
}
inline void CMsgSteamDatagramRouterPingReply::set_latency_datacenter_ids(int index, ::google::protobuf::uint32 value) {
  latency_datacenter_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.latency_datacenter_ids)
}
inline void CMsgSteamDatagramRouterPingReply::add_latency_datacenter_ids(::google::protobuf::uint32 value) {
  latency_datacenter_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramRouterPingReply.latency_datacenter_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgSteamDatagramRouterPingReply::latency_datacenter_ids() const {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramRouterPingReply.latency_datacenter_ids)
  return latency_datacenter_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgSteamDatagramRouterPingReply::mutable_latency_datacenter_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramRouterPingReply.latency_datacenter_ids)
  return &latency_datacenter_ids_;
}

// repeated uint32 latency_ping_ms = 3 [packed = true];
inline int CMsgSteamDatagramRouterPingReply::latency_ping_ms_size() const {
  return latency_ping_ms_.size();
}
inline void CMsgSteamDatagramRouterPingReply::clear_latency_ping_ms() {
  latency_ping_ms_.Clear();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRouterPingReply::latency_ping_ms(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.latency_ping_ms)
  return latency_ping_ms_.Get(index);
}
inline void CMsgSteamDatagramRouterPingReply::set_latency_ping_ms(int index, ::google::protobuf::uint32 value) {
  latency_ping_ms_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.latency_ping_ms)
}
inline void CMsgSteamDatagramRouterPingReply::add_latency_ping_ms(::google::protobuf::uint32 value) {
  latency_ping_ms_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramRouterPingReply.latency_ping_ms)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgSteamDatagramRouterPingReply::latency_ping_ms() const {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramRouterPingReply.latency_ping_ms)
  return latency_ping_ms_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgSteamDatagramRouterPingReply::mutable_latency_ping_ms() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramRouterPingReply.latency_ping_ms)
  return &latency_ping_ms_;
}

// optional fixed32 your_public_ip = 4;
inline bool CMsgSteamDatagramRouterPingReply::has_your_public_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramRouterPingReply::set_has_your_public_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramRouterPingReply::clear_has_your_public_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramRouterPingReply::clear_your_public_ip() {
  your_public_ip_ = 0u;
  clear_has_your_public_ip();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRouterPingReply::your_public_ip() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.your_public_ip)
  return your_public_ip_;
}
inline void CMsgSteamDatagramRouterPingReply::set_your_public_ip(::google::protobuf::uint32 value) {
  set_has_your_public_ip();
  your_public_ip_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.your_public_ip)
}

// optional fixed32 server_time = 5;
inline bool CMsgSteamDatagramRouterPingReply::has_server_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramRouterPingReply::set_has_server_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramRouterPingReply::clear_has_server_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramRouterPingReply::clear_server_time() {
  server_time_ = 0u;
  clear_has_server_time();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRouterPingReply::server_time() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.server_time)
  return server_time_;
}
inline void CMsgSteamDatagramRouterPingReply::set_server_time(::google::protobuf::uint32 value) {
  set_has_server_time();
  server_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.server_time)
}

// optional fixed64 challenge = 6;
inline bool CMsgSteamDatagramRouterPingReply::has_challenge() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramRouterPingReply::set_has_challenge() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramRouterPingReply::clear_has_challenge() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramRouterPingReply::clear_challenge() {
  challenge_ = GOOGLE_ULONGLONG(0);
  clear_has_challenge();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramRouterPingReply::challenge() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.challenge)
  return challenge_;
}
inline void CMsgSteamDatagramRouterPingReply::set_challenge(::google::protobuf::uint64 value) {
  set_has_challenge();
  challenge_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.challenge)
}

// optional uint32 seconds_until_shutdown = 7;
inline bool CMsgSteamDatagramRouterPingReply::has_seconds_until_shutdown() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSteamDatagramRouterPingReply::set_has_seconds_until_shutdown() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSteamDatagramRouterPingReply::clear_has_seconds_until_shutdown() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSteamDatagramRouterPingReply::clear_seconds_until_shutdown() {
  seconds_until_shutdown_ = 0u;
  clear_has_seconds_until_shutdown();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRouterPingReply::seconds_until_shutdown() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.seconds_until_shutdown)
  return seconds_until_shutdown_;
}
inline void CMsgSteamDatagramRouterPingReply::set_seconds_until_shutdown(::google::protobuf::uint32 value) {
  set_has_seconds_until_shutdown();
  seconds_until_shutdown_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.seconds_until_shutdown)
}

// optional fixed32 client_cookie = 8;
inline bool CMsgSteamDatagramRouterPingReply::has_client_cookie() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSteamDatagramRouterPingReply::set_has_client_cookie() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSteamDatagramRouterPingReply::clear_has_client_cookie() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSteamDatagramRouterPingReply::clear_client_cookie() {
  client_cookie_ = 0u;
  clear_has_client_cookie();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRouterPingReply::client_cookie() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.client_cookie)
  return client_cookie_;
}
inline void CMsgSteamDatagramRouterPingReply::set_client_cookie(::google::protobuf::uint32 value) {
  set_has_client_cookie();
  client_cookie_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.client_cookie)
}

// optional uint32 scoring_penalty_relay_cluster = 9;
inline bool CMsgSteamDatagramRouterPingReply::has_scoring_penalty_relay_cluster() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgSteamDatagramRouterPingReply::set_has_scoring_penalty_relay_cluster() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgSteamDatagramRouterPingReply::clear_has_scoring_penalty_relay_cluster() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgSteamDatagramRouterPingReply::clear_scoring_penalty_relay_cluster() {
  scoring_penalty_relay_cluster_ = 0u;
  clear_has_scoring_penalty_relay_cluster();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRouterPingReply::scoring_penalty_relay_cluster() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.scoring_penalty_relay_cluster)
  return scoring_penalty_relay_cluster_;
}
inline void CMsgSteamDatagramRouterPingReply::set_scoring_penalty_relay_cluster(::google::protobuf::uint32 value) {
  set_has_scoring_penalty_relay_cluster();
  scoring_penalty_relay_cluster_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.scoring_penalty_relay_cluster)
}

// repeated fixed32 scoring_penalty_datacenter_ids = 10 [packed = true];
inline int CMsgSteamDatagramRouterPingReply::scoring_penalty_datacenter_ids_size() const {
  return scoring_penalty_datacenter_ids_.size();
}
inline void CMsgSteamDatagramRouterPingReply::clear_scoring_penalty_datacenter_ids() {
  scoring_penalty_datacenter_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRouterPingReply::scoring_penalty_datacenter_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.scoring_penalty_datacenter_ids)
  return scoring_penalty_datacenter_ids_.Get(index);
}
inline void CMsgSteamDatagramRouterPingReply::set_scoring_penalty_datacenter_ids(int index, ::google::protobuf::uint32 value) {
  scoring_penalty_datacenter_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.scoring_penalty_datacenter_ids)
}
inline void CMsgSteamDatagramRouterPingReply::add_scoring_penalty_datacenter_ids(::google::protobuf::uint32 value) {
  scoring_penalty_datacenter_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramRouterPingReply.scoring_penalty_datacenter_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgSteamDatagramRouterPingReply::scoring_penalty_datacenter_ids() const {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramRouterPingReply.scoring_penalty_datacenter_ids)
  return scoring_penalty_datacenter_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgSteamDatagramRouterPingReply::mutable_scoring_penalty_datacenter_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramRouterPingReply.scoring_penalty_datacenter_ids)
  return &scoring_penalty_datacenter_ids_;
}

// repeated uint32 scoring_penalty_values = 11 [packed = true];
inline int CMsgSteamDatagramRouterPingReply::scoring_penalty_values_size() const {
  return scoring_penalty_values_.size();
}
inline void CMsgSteamDatagramRouterPingReply::clear_scoring_penalty_values() {
  scoring_penalty_values_.Clear();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRouterPingReply::scoring_penalty_values(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterPingReply.scoring_penalty_values)
  return scoring_penalty_values_.Get(index);
}
inline void CMsgSteamDatagramRouterPingReply::set_scoring_penalty_values(int index, ::google::protobuf::uint32 value) {
  scoring_penalty_values_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterPingReply.scoring_penalty_values)
}
inline void CMsgSteamDatagramRouterPingReply::add_scoring_penalty_values(::google::protobuf::uint32 value) {
  scoring_penalty_values_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramRouterPingReply.scoring_penalty_values)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgSteamDatagramRouterPingReply::scoring_penalty_values() const {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramRouterPingReply.scoring_penalty_values)
  return scoring_penalty_values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgSteamDatagramRouterPingReply::mutable_scoring_penalty_values() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramRouterPingReply.scoring_penalty_values)
  return &scoring_penalty_values_;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramGameserverPing

// optional uint32 client_session = 1;
inline bool CMsgSteamDatagramGameserverPing::has_client_session() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramGameserverPing::set_has_client_session() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramGameserverPing::clear_has_client_session() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramGameserverPing::clear_client_session() {
  client_session_ = 0u;
  clear_has_client_session();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameserverPing::client_session() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPing.client_session)
  return client_session_;
}
inline void CMsgSteamDatagramGameserverPing::set_client_session(::google::protobuf::uint32 value) {
  set_has_client_session();
  client_session_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPing.client_session)
}

// optional fixed64 client_steam_id = 2;
inline bool CMsgSteamDatagramGameserverPing::has_client_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramGameserverPing::set_has_client_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramGameserverPing::clear_has_client_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramGameserverPing::clear_client_steam_id() {
  client_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_client_steam_id();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramGameserverPing::client_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPing.client_steam_id)
  return client_steam_id_;
}
inline void CMsgSteamDatagramGameserverPing::set_client_steam_id(::google::protobuf::uint64 value) {
  set_has_client_steam_id();
  client_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPing.client_steam_id)
}

// optional fixed32 client_timestamp = 3;
inline bool CMsgSteamDatagramGameserverPing::has_client_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramGameserverPing::set_has_client_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramGameserverPing::clear_has_client_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramGameserverPing::clear_client_timestamp() {
  client_timestamp_ = 0u;
  clear_has_client_timestamp();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameserverPing::client_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPing.client_timestamp)
  return client_timestamp_;
}
inline void CMsgSteamDatagramGameserverPing::set_client_timestamp(::google::protobuf::uint32 value) {
  set_has_client_timestamp();
  client_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPing.client_timestamp)
}

// optional fixed32 router_timestamp = 4;
inline bool CMsgSteamDatagramGameserverPing::has_router_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramGameserverPing::set_has_router_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramGameserverPing::clear_has_router_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramGameserverPing::clear_router_timestamp() {
  router_timestamp_ = 0u;
  clear_has_router_timestamp();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameserverPing::router_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPing.router_timestamp)
  return router_timestamp_;
}
inline void CMsgSteamDatagramGameserverPing::set_router_timestamp(::google::protobuf::uint32 value) {
  set_has_router_timestamp();
  router_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPing.router_timestamp)
}

// optional uint32 router_gameserver_latency = 5;
inline bool CMsgSteamDatagramGameserverPing::has_router_gameserver_latency() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSteamDatagramGameserverPing::set_has_router_gameserver_latency() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSteamDatagramGameserverPing::clear_has_router_gameserver_latency() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSteamDatagramGameserverPing::clear_router_gameserver_latency() {
  router_gameserver_latency_ = 0u;
  clear_has_router_gameserver_latency();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameserverPing::router_gameserver_latency() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPing.router_gameserver_latency)
  return router_gameserver_latency_;
}
inline void CMsgSteamDatagramGameserverPing::set_router_gameserver_latency(::google::protobuf::uint32 value) {
  set_has_router_gameserver_latency();
  router_gameserver_latency_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPing.router_gameserver_latency)
}

// optional uint32 seq_number_router = 6;
inline bool CMsgSteamDatagramGameserverPing::has_seq_number_router() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSteamDatagramGameserverPing::set_has_seq_number_router() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSteamDatagramGameserverPing::clear_has_seq_number_router() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSteamDatagramGameserverPing::clear_seq_number_router() {
  seq_number_router_ = 0u;
  clear_has_seq_number_router();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameserverPing::seq_number_router() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPing.seq_number_router)
  return seq_number_router_;
}
inline void CMsgSteamDatagramGameserverPing::set_seq_number_router(::google::protobuf::uint32 value) {
  set_has_seq_number_router();
  seq_number_router_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPing.seq_number_router)
}

// optional uint32 seq_number_e2e = 7;
inline bool CMsgSteamDatagramGameserverPing::has_seq_number_e2e() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgSteamDatagramGameserverPing::set_has_seq_number_e2e() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgSteamDatagramGameserverPing::clear_has_seq_number_e2e() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgSteamDatagramGameserverPing::clear_seq_number_e2e() {
  seq_number_e2e_ = 0u;
  clear_has_seq_number_e2e();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameserverPing::seq_number_e2e() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverPing.seq_number_e2e)
  return seq_number_e2e_;
}
inline void CMsgSteamDatagramGameserverPing::set_seq_number_e2e(::google::protobuf::uint32 value) {
  set_has_seq_number_e2e();
  seq_number_e2e_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverPing.seq_number_e2e)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramGameServerAuthTicket_ExtraField

// optional string name = 1;
inline bool CMsgSteamDatagramGameServerAuthTicket_ExtraField::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CMsgSteamDatagramGameServerAuthTicket_ExtraField::name() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameServerAuthTicket.ExtraField.name)
  return name_.GetNoArena();
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameServerAuthTicket.ExtraField.name)
}
#if LANG_CXX11
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgSteamDatagramGameServerAuthTicket.ExtraField.name)
}
#endif
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgSteamDatagramGameServerAuthTicket.ExtraField.name)
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgSteamDatagramGameServerAuthTicket.ExtraField.name)
}
inline ::std::string* CMsgSteamDatagramGameServerAuthTicket_ExtraField::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramGameServerAuthTicket.ExtraField.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSteamDatagramGameServerAuthTicket_ExtraField::release_name() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramGameServerAuthTicket.ExtraField.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramGameServerAuthTicket.ExtraField.name)
}

// optional string string_value = 2;
inline bool CMsgSteamDatagramGameServerAuthTicket_ExtraField::has_string_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_has_string_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::clear_has_string_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::clear_string_value() {
  string_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_string_value();
}
inline const ::std::string& CMsgSteamDatagramGameServerAuthTicket_ExtraField::string_value() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameServerAuthTicket.ExtraField.string_value)
  return string_value_.GetNoArena();
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_string_value(const ::std::string& value) {
  set_has_string_value();
  string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameServerAuthTicket.ExtraField.string_value)
}
#if LANG_CXX11
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_string_value(::std::string&& value) {
  set_has_string_value();
  string_value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgSteamDatagramGameServerAuthTicket.ExtraField.string_value)
}
#endif
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_string_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_string_value();
  string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgSteamDatagramGameServerAuthTicket.ExtraField.string_value)
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_string_value(const char* value, size_t size) {
  set_has_string_value();
  string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgSteamDatagramGameServerAuthTicket.ExtraField.string_value)
}
inline ::std::string* CMsgSteamDatagramGameServerAuthTicket_ExtraField::mutable_string_value() {
  set_has_string_value();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramGameServerAuthTicket.ExtraField.string_value)
  return string_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSteamDatagramGameServerAuthTicket_ExtraField::release_string_value() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramGameServerAuthTicket.ExtraField.string_value)
  clear_has_string_value();
  return string_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_allocated_string_value(::std::string* string_value) {
  if (string_value != NULL) {
    set_has_string_value();
  } else {
    clear_has_string_value();
  }
  string_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_value);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramGameServerAuthTicket.ExtraField.string_value)
}

// optional sint32 int32_value = 3;
inline bool CMsgSteamDatagramGameServerAuthTicket_ExtraField::has_int32_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_has_int32_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::clear_has_int32_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::clear_int32_value() {
  int32_value_ = 0;
  clear_has_int32_value();
}
inline ::google::protobuf::int32 CMsgSteamDatagramGameServerAuthTicket_ExtraField::int32_value() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameServerAuthTicket.ExtraField.int32_value)
  return int32_value_;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_int32_value(::google::protobuf::int32 value) {
  set_has_int32_value();
  int32_value_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameServerAuthTicket.ExtraField.int32_value)
}

// optional fixed32 fixed32_value = 4;
inline bool CMsgSteamDatagramGameServerAuthTicket_ExtraField::has_fixed32_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_has_fixed32_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::clear_has_fixed32_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::clear_fixed32_value() {
  fixed32_value_ = 0u;
  clear_has_fixed32_value();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameServerAuthTicket_ExtraField::fixed32_value() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameServerAuthTicket.ExtraField.fixed32_value)
  return fixed32_value_;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_fixed32_value(::google::protobuf::uint32 value) {
  set_has_fixed32_value();
  fixed32_value_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameServerAuthTicket.ExtraField.fixed32_value)
}

// optional fixed64 fixed64_value = 5;
inline bool CMsgSteamDatagramGameServerAuthTicket_ExtraField::has_fixed64_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_has_fixed64_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::clear_has_fixed64_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::clear_fixed64_value() {
  fixed64_value_ = GOOGLE_ULONGLONG(0);
  clear_has_fixed64_value();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramGameServerAuthTicket_ExtraField::fixed64_value() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameServerAuthTicket.ExtraField.fixed64_value)
  return fixed64_value_;
}
inline void CMsgSteamDatagramGameServerAuthTicket_ExtraField::set_fixed64_value(::google::protobuf::uint64 value) {
  set_has_fixed64_value();
  fixed64_value_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameServerAuthTicket.ExtraField.fixed64_value)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramGameServerAuthTicket

// optional fixed32 time_expiry = 1;
inline bool CMsgSteamDatagramGameServerAuthTicket::has_time_expiry() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_has_time_expiry() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_has_time_expiry() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_time_expiry() {
  time_expiry_ = 0u;
  clear_has_time_expiry();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameServerAuthTicket::time_expiry() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameServerAuthTicket.time_expiry)
  return time_expiry_;
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_time_expiry(::google::protobuf::uint32 value) {
  set_has_time_expiry();
  time_expiry_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameServerAuthTicket.time_expiry)
}

// optional fixed64 authorized_steam_id = 2;
inline bool CMsgSteamDatagramGameServerAuthTicket::has_authorized_steam_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_has_authorized_steam_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_has_authorized_steam_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_authorized_steam_id() {
  authorized_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_authorized_steam_id();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramGameServerAuthTicket::authorized_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameServerAuthTicket.authorized_steam_id)
  return authorized_steam_id_;
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_authorized_steam_id(::google::protobuf::uint64 value) {
  set_has_authorized_steam_id();
  authorized_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameServerAuthTicket.authorized_steam_id)
}

// optional fixed32 authorized_public_ip = 3;
inline bool CMsgSteamDatagramGameServerAuthTicket::has_authorized_public_ip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_has_authorized_public_ip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_has_authorized_public_ip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_authorized_public_ip() {
  authorized_public_ip_ = 0u;
  clear_has_authorized_public_ip();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameServerAuthTicket::authorized_public_ip() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameServerAuthTicket.authorized_public_ip)
  return authorized_public_ip_;
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_authorized_public_ip(::google::protobuf::uint32 value) {
  set_has_authorized_public_ip();
  authorized_public_ip_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameServerAuthTicket.authorized_public_ip)
}

// optional fixed64 gameserver_steam_id = 4;
inline bool CMsgSteamDatagramGameServerAuthTicket::has_gameserver_steam_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_has_gameserver_steam_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_has_gameserver_steam_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_gameserver_steam_id() {
  gameserver_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_gameserver_steam_id();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramGameServerAuthTicket::gameserver_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameServerAuthTicket.gameserver_steam_id)
  return gameserver_steam_id_;
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_gameserver_steam_id(::google::protobuf::uint64 value) {
  set_has_gameserver_steam_id();
  gameserver_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameServerAuthTicket.gameserver_steam_id)
}

// optional fixed64 gameserver_net_id = 5;
inline bool CMsgSteamDatagramGameServerAuthTicket::has_gameserver_net_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_has_gameserver_net_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_has_gameserver_net_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_gameserver_net_id() {
  gameserver_net_id_ = GOOGLE_ULONGLONG(0);
  clear_has_gameserver_net_id();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramGameServerAuthTicket::gameserver_net_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameServerAuthTicket.gameserver_net_id)
  return gameserver_net_id_;
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_gameserver_net_id(::google::protobuf::uint64 value) {
  set_has_gameserver_net_id();
  gameserver_net_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameServerAuthTicket.gameserver_net_id)
}

// optional bytes signature = 6;
inline bool CMsgSteamDatagramGameServerAuthTicket::has_signature() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_has_signature() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_has_signature() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_signature();
}
inline const ::std::string& CMsgSteamDatagramGameServerAuthTicket::signature() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameServerAuthTicket.signature)
  return signature_.GetNoArena();
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_signature(const ::std::string& value) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameServerAuthTicket.signature)
}
#if LANG_CXX11
inline void CMsgSteamDatagramGameServerAuthTicket::set_signature(::std::string&& value) {
  set_has_signature();
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgSteamDatagramGameServerAuthTicket.signature)
}
#endif
inline void CMsgSteamDatagramGameServerAuthTicket::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgSteamDatagramGameServerAuthTicket.signature)
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_signature(const void* value, size_t size) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgSteamDatagramGameServerAuthTicket.signature)
}
inline ::std::string* CMsgSteamDatagramGameServerAuthTicket::mutable_signature() {
  set_has_signature();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramGameServerAuthTicket.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSteamDatagramGameServerAuthTicket::release_signature() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramGameServerAuthTicket.signature)
  clear_has_signature();
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    set_has_signature();
  } else {
    clear_has_signature();
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramGameServerAuthTicket.signature)
}

// optional uint32 app_id = 7;
inline bool CMsgSteamDatagramGameServerAuthTicket::has_app_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_has_app_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameServerAuthTicket::app_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameServerAuthTicket.app_id)
  return app_id_;
}
inline void CMsgSteamDatagramGameServerAuthTicket::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameServerAuthTicket.app_id)
}

// repeated .CMsgSteamDatagramGameServerAuthTicket.ExtraField extra_fields = 8;
inline int CMsgSteamDatagramGameServerAuthTicket::extra_fields_size() const {
  return extra_fields_.size();
}
inline void CMsgSteamDatagramGameServerAuthTicket::clear_extra_fields() {
  extra_fields_.Clear();
}
inline const ::CMsgSteamDatagramGameServerAuthTicket_ExtraField& CMsgSteamDatagramGameServerAuthTicket::extra_fields(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameServerAuthTicket.extra_fields)
  return extra_fields_.Get(index);
}
inline ::CMsgSteamDatagramGameServerAuthTicket_ExtraField* CMsgSteamDatagramGameServerAuthTicket::mutable_extra_fields(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramGameServerAuthTicket.extra_fields)
  return extra_fields_.Mutable(index);
}
inline ::CMsgSteamDatagramGameServerAuthTicket_ExtraField* CMsgSteamDatagramGameServerAuthTicket::add_extra_fields() {
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramGameServerAuthTicket.extra_fields)
  return extra_fields_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramGameServerAuthTicket_ExtraField >*
CMsgSteamDatagramGameServerAuthTicket::mutable_extra_fields() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramGameServerAuthTicket.extra_fields)
  return &extra_fields_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramGameServerAuthTicket_ExtraField >&
CMsgSteamDatagramGameServerAuthTicket::extra_fields() const {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramGameServerAuthTicket.extra_fields)
  return extra_fields_;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramGameserverSessionRequest

// optional .CMsgSteamDatagramGameServerAuthTicket ticket = 1;
inline bool CMsgSteamDatagramGameserverSessionRequest::has_ticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_has_ticket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_has_ticket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_ticket() {
  if (ticket_ != NULL) ticket_->Clear();
  clear_has_ticket();
}
inline const ::CMsgSteamDatagramGameServerAuthTicket& CMsgSteamDatagramGameserverSessionRequest::ticket() const {
  const ::CMsgSteamDatagramGameServerAuthTicket* p = ticket_;
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionRequest.ticket)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgSteamDatagramGameServerAuthTicket*>(
      &::_CMsgSteamDatagramGameServerAuthTicket_default_instance_);
}
inline ::CMsgSteamDatagramGameServerAuthTicket* CMsgSteamDatagramGameserverSessionRequest::release_ticket() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramGameserverSessionRequest.ticket)
  clear_has_ticket();
  ::CMsgSteamDatagramGameServerAuthTicket* temp = ticket_;
  ticket_ = NULL;
  return temp;
}
inline ::CMsgSteamDatagramGameServerAuthTicket* CMsgSteamDatagramGameserverSessionRequest::mutable_ticket() {
  set_has_ticket();
  if (ticket_ == NULL) {
    ticket_ = new ::CMsgSteamDatagramGameServerAuthTicket;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramGameserverSessionRequest.ticket)
  return ticket_;
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_allocated_ticket(::CMsgSteamDatagramGameServerAuthTicket* ticket) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ticket_;
  }
  if (ticket) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ticket = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ticket, submessage_arena);
    }
    set_has_ticket();
  } else {
    clear_has_ticket();
  }
  ticket_ = ticket;
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramGameserverSessionRequest.ticket)
}

// optional fixed32 challenge_time = 3;
inline bool CMsgSteamDatagramGameserverSessionRequest::has_challenge_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_has_challenge_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_has_challenge_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_challenge_time() {
  challenge_time_ = 0u;
  clear_has_challenge_time();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameserverSessionRequest::challenge_time() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionRequest.challenge_time)
  return challenge_time_;
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_challenge_time(::google::protobuf::uint32 value) {
  set_has_challenge_time();
  challenge_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionRequest.challenge_time)
}

// optional fixed64 challenge = 4;
inline bool CMsgSteamDatagramGameserverSessionRequest::has_challenge() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_has_challenge() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_has_challenge() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_challenge() {
  challenge_ = GOOGLE_ULONGLONG(0);
  clear_has_challenge();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramGameserverSessionRequest::challenge() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionRequest.challenge)
  return challenge_;
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_challenge(::google::protobuf::uint64 value) {
  set_has_challenge();
  challenge_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionRequest.challenge)
}

// optional fixed32 client_cookie = 5;
inline bool CMsgSteamDatagramGameserverSessionRequest::has_client_cookie() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_has_client_cookie() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_has_client_cookie() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_client_cookie() {
  client_cookie_ = 0u;
  clear_has_client_cookie();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameserverSessionRequest::client_cookie() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionRequest.client_cookie)
  return client_cookie_;
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_client_cookie(::google::protobuf::uint32 value) {
  set_has_client_cookie();
  client_cookie_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionRequest.client_cookie)
}

// optional uint32 network_config_version = 6;
inline bool CMsgSteamDatagramGameserverSessionRequest::has_network_config_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_has_network_config_version() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_has_network_config_version() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSteamDatagramGameserverSessionRequest::clear_network_config_version() {
  network_config_version_ = 0u;
  clear_has_network_config_version();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameserverSessionRequest::network_config_version() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionRequest.network_config_version)
  return network_config_version_;
}
inline void CMsgSteamDatagramGameserverSessionRequest::set_network_config_version(::google::protobuf::uint32 value) {
  set_has_network_config_version();
  network_config_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionRequest.network_config_version)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramGameserverSessionEstablished

// optional fixed32 client_cookie = 1;
inline bool CMsgSteamDatagramGameserverSessionEstablished::has_client_cookie() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::set_has_client_cookie() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::clear_has_client_cookie() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::clear_client_cookie() {
  client_cookie_ = 0u;
  clear_has_client_cookie();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameserverSessionEstablished::client_cookie() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionEstablished.client_cookie)
  return client_cookie_;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::set_client_cookie(::google::protobuf::uint32 value) {
  set_has_client_cookie();
  client_cookie_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionEstablished.client_cookie)
}

// optional fixed64 gameserver_steam_id = 3;
inline bool CMsgSteamDatagramGameserverSessionEstablished::has_gameserver_steam_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::set_has_gameserver_steam_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::clear_has_gameserver_steam_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::clear_gameserver_steam_id() {
  gameserver_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_gameserver_steam_id();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramGameserverSessionEstablished::gameserver_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionEstablished.gameserver_steam_id)
  return gameserver_steam_id_;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::set_gameserver_steam_id(::google::protobuf::uint64 value) {
  set_has_gameserver_steam_id();
  gameserver_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionEstablished.gameserver_steam_id)
}

// optional uint32 seconds_until_shutdown = 4;
inline bool CMsgSteamDatagramGameserverSessionEstablished::has_seconds_until_shutdown() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::set_has_seconds_until_shutdown() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::clear_has_seconds_until_shutdown() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::clear_seconds_until_shutdown() {
  seconds_until_shutdown_ = 0u;
  clear_has_seconds_until_shutdown();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameserverSessionEstablished::seconds_until_shutdown() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionEstablished.seconds_until_shutdown)
  return seconds_until_shutdown_;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::set_seconds_until_shutdown(::google::protobuf::uint32 value) {
  set_has_seconds_until_shutdown();
  seconds_until_shutdown_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionEstablished.seconds_until_shutdown)
}

// optional uint32 session_id = 5;
inline bool CMsgSteamDatagramGameserverSessionEstablished::has_session_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::set_has_session_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::clear_session_id() {
  session_id_ = 0u;
  clear_has_session_id();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramGameserverSessionEstablished::session_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramGameserverSessionEstablished.session_id)
  return session_id_;
}
inline void CMsgSteamDatagramGameserverSessionEstablished::set_session_id(::google::protobuf::uint32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramGameserverSessionEstablished.session_id)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramNoSession

// optional fixed32 client_cookie = 7;
inline bool CMsgSteamDatagramNoSession::has_client_cookie() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSteamDatagramNoSession::set_has_client_cookie() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSteamDatagramNoSession::clear_has_client_cookie() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSteamDatagramNoSession::clear_client_cookie() {
  client_cookie_ = 0u;
  clear_has_client_cookie();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramNoSession::client_cookie() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoSession.client_cookie)
  return client_cookie_;
}
inline void CMsgSteamDatagramNoSession::set_client_cookie(::google::protobuf::uint32 value) {
  set_has_client_cookie();
  client_cookie_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoSession.client_cookie)
}

// optional fixed32 your_public_ip = 2;
inline bool CMsgSteamDatagramNoSession::has_your_public_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramNoSession::set_has_your_public_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramNoSession::clear_has_your_public_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramNoSession::clear_your_public_ip() {
  your_public_ip_ = 0u;
  clear_has_your_public_ip();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramNoSession::your_public_ip() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoSession.your_public_ip)
  return your_public_ip_;
}
inline void CMsgSteamDatagramNoSession::set_your_public_ip(::google::protobuf::uint32 value) {
  set_has_your_public_ip();
  your_public_ip_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoSession.your_public_ip)
}

// optional fixed32 server_time = 3;
inline bool CMsgSteamDatagramNoSession::has_server_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramNoSession::set_has_server_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramNoSession::clear_has_server_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramNoSession::clear_server_time() {
  server_time_ = 0u;
  clear_has_server_time();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramNoSession::server_time() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoSession.server_time)
  return server_time_;
}
inline void CMsgSteamDatagramNoSession::set_server_time(::google::protobuf::uint32 value) {
  set_has_server_time();
  server_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoSession.server_time)
}

// optional fixed64 challenge = 4;
inline bool CMsgSteamDatagramNoSession::has_challenge() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramNoSession::set_has_challenge() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramNoSession::clear_has_challenge() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramNoSession::clear_challenge() {
  challenge_ = GOOGLE_ULONGLONG(0);
  clear_has_challenge();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramNoSession::challenge() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoSession.challenge)
  return challenge_;
}
inline void CMsgSteamDatagramNoSession::set_challenge(::google::protobuf::uint64 value) {
  set_has_challenge();
  challenge_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoSession.challenge)
}

// optional uint32 seconds_until_shutdown = 5;
inline bool CMsgSteamDatagramNoSession::has_seconds_until_shutdown() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramNoSession::set_has_seconds_until_shutdown() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramNoSession::clear_has_seconds_until_shutdown() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramNoSession::clear_seconds_until_shutdown() {
  seconds_until_shutdown_ = 0u;
  clear_has_seconds_until_shutdown();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramNoSession::seconds_until_shutdown() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramNoSession.seconds_until_shutdown)
  return seconds_until_shutdown_;
}
inline void CMsgSteamDatagramNoSession::set_seconds_until_shutdown(::google::protobuf::uint32 value) {
  set_has_seconds_until_shutdown();
  seconds_until_shutdown_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramNoSession.seconds_until_shutdown)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramDiagnostic

// optional uint32 severity = 1;
inline bool CMsgSteamDatagramDiagnostic::has_severity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramDiagnostic::set_has_severity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramDiagnostic::clear_has_severity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramDiagnostic::clear_severity() {
  severity_ = 0u;
  clear_has_severity();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramDiagnostic::severity() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramDiagnostic.severity)
  return severity_;
}
inline void CMsgSteamDatagramDiagnostic::set_severity(::google::protobuf::uint32 value) {
  set_has_severity();
  severity_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramDiagnostic.severity)
}

// optional string text = 2;
inline bool CMsgSteamDatagramDiagnostic::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramDiagnostic::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramDiagnostic::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramDiagnostic::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& CMsgSteamDatagramDiagnostic::text() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramDiagnostic.text)
  return text_.GetNoArena();
}
inline void CMsgSteamDatagramDiagnostic::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramDiagnostic.text)
}
#if LANG_CXX11
inline void CMsgSteamDatagramDiagnostic::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgSteamDatagramDiagnostic.text)
}
#endif
inline void CMsgSteamDatagramDiagnostic::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgSteamDatagramDiagnostic.text)
}
inline void CMsgSteamDatagramDiagnostic::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgSteamDatagramDiagnostic.text)
}
inline ::std::string* CMsgSteamDatagramDiagnostic::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramDiagnostic.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSteamDatagramDiagnostic::release_text() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramDiagnostic.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSteamDatagramDiagnostic::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramDiagnostic.text)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramDataCenterState_Server

// optional string address = 1;
inline bool CMsgSteamDatagramDataCenterState_Server::has_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramDataCenterState_Server::set_has_address() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramDataCenterState_Server::clear_has_address() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramDataCenterState_Server::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address();
}
inline const ::std::string& CMsgSteamDatagramDataCenterState_Server::address() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramDataCenterState.Server.address)
  return address_.GetNoArena();
}
inline void CMsgSteamDatagramDataCenterState_Server::set_address(const ::std::string& value) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramDataCenterState.Server.address)
}
#if LANG_CXX11
inline void CMsgSteamDatagramDataCenterState_Server::set_address(::std::string&& value) {
  set_has_address();
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgSteamDatagramDataCenterState.Server.address)
}
#endif
inline void CMsgSteamDatagramDataCenterState_Server::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgSteamDatagramDataCenterState.Server.address)
}
inline void CMsgSteamDatagramDataCenterState_Server::set_address(const char* value, size_t size) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgSteamDatagramDataCenterState.Server.address)
}
inline ::std::string* CMsgSteamDatagramDataCenterState_Server::mutable_address() {
  set_has_address();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramDataCenterState.Server.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSteamDatagramDataCenterState_Server::release_address() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramDataCenterState.Server.address)
  clear_has_address();
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSteamDatagramDataCenterState_Server::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    set_has_address();
  } else {
    clear_has_address();
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramDataCenterState.Server.address)
}

// optional uint32 ping_ms = 2;
inline bool CMsgSteamDatagramDataCenterState_Server::has_ping_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramDataCenterState_Server::set_has_ping_ms() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramDataCenterState_Server::clear_has_ping_ms() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramDataCenterState_Server::clear_ping_ms() {
  ping_ms_ = 0u;
  clear_has_ping_ms();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramDataCenterState_Server::ping_ms() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramDataCenterState.Server.ping_ms)
  return ping_ms_;
}
inline void CMsgSteamDatagramDataCenterState_Server::set_ping_ms(::google::protobuf::uint32 value) {
  set_has_ping_ms();
  ping_ms_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramDataCenterState.Server.ping_ms)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramDataCenterState_DataCenter

// optional string code = 1;
inline bool CMsgSteamDatagramDataCenterState_DataCenter::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramDataCenterState_DataCenter::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramDataCenterState_DataCenter::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramDataCenterState_DataCenter::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_code();
}
inline const ::std::string& CMsgSteamDatagramDataCenterState_DataCenter::code() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramDataCenterState.DataCenter.code)
  return code_.GetNoArena();
}
inline void CMsgSteamDatagramDataCenterState_DataCenter::set_code(const ::std::string& value) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramDataCenterState.DataCenter.code)
}
#if LANG_CXX11
inline void CMsgSteamDatagramDataCenterState_DataCenter::set_code(::std::string&& value) {
  set_has_code();
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgSteamDatagramDataCenterState.DataCenter.code)
}
#endif
inline void CMsgSteamDatagramDataCenterState_DataCenter::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgSteamDatagramDataCenterState.DataCenter.code)
}
inline void CMsgSteamDatagramDataCenterState_DataCenter::set_code(const char* value, size_t size) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgSteamDatagramDataCenterState.DataCenter.code)
}
inline ::std::string* CMsgSteamDatagramDataCenterState_DataCenter::mutable_code() {
  set_has_code();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramDataCenterState.DataCenter.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSteamDatagramDataCenterState_DataCenter::release_code() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramDataCenterState.DataCenter.code)
  clear_has_code();
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSteamDatagramDataCenterState_DataCenter::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    set_has_code();
  } else {
    clear_has_code();
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramDataCenterState.DataCenter.code)
}

// repeated .CMsgSteamDatagramDataCenterState.Server server_sample = 2;
inline int CMsgSteamDatagramDataCenterState_DataCenter::server_sample_size() const {
  return server_sample_.size();
}
inline void CMsgSteamDatagramDataCenterState_DataCenter::clear_server_sample() {
  server_sample_.Clear();
}
inline const ::CMsgSteamDatagramDataCenterState_Server& CMsgSteamDatagramDataCenterState_DataCenter::server_sample(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramDataCenterState.DataCenter.server_sample)
  return server_sample_.Get(index);
}
inline ::CMsgSteamDatagramDataCenterState_Server* CMsgSteamDatagramDataCenterState_DataCenter::mutable_server_sample(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramDataCenterState.DataCenter.server_sample)
  return server_sample_.Mutable(index);
}
inline ::CMsgSteamDatagramDataCenterState_Server* CMsgSteamDatagramDataCenterState_DataCenter::add_server_sample() {
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramDataCenterState.DataCenter.server_sample)
  return server_sample_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramDataCenterState_Server >*
CMsgSteamDatagramDataCenterState_DataCenter::mutable_server_sample() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramDataCenterState.DataCenter.server_sample)
  return &server_sample_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramDataCenterState_Server >&
CMsgSteamDatagramDataCenterState_DataCenter::server_sample() const {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramDataCenterState.DataCenter.server_sample)
  return server_sample_;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramDataCenterState

// repeated .CMsgSteamDatagramDataCenterState.DataCenter data_centers = 1;
inline int CMsgSteamDatagramDataCenterState::data_centers_size() const {
  return data_centers_.size();
}
inline void CMsgSteamDatagramDataCenterState::clear_data_centers() {
  data_centers_.Clear();
}
inline const ::CMsgSteamDatagramDataCenterState_DataCenter& CMsgSteamDatagramDataCenterState::data_centers(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramDataCenterState.data_centers)
  return data_centers_.Get(index);
}
inline ::CMsgSteamDatagramDataCenterState_DataCenter* CMsgSteamDatagramDataCenterState::mutable_data_centers(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramDataCenterState.data_centers)
  return data_centers_.Mutable(index);
}
inline ::CMsgSteamDatagramDataCenterState_DataCenter* CMsgSteamDatagramDataCenterState::add_data_centers() {
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramDataCenterState.data_centers)
  return data_centers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramDataCenterState_DataCenter >*
CMsgSteamDatagramDataCenterState::mutable_data_centers() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramDataCenterState.data_centers)
  return &data_centers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramDataCenterState_DataCenter >&
CMsgSteamDatagramDataCenterState::data_centers() const {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramDataCenterState.data_centers)
  return data_centers_;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramLinkInstantaneousStats

// optional uint32 out_packets_per_sec_x10 = 1;
inline bool CMsgSteamDatagramLinkInstantaneousStats::has_out_packets_per_sec_x10() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_has_out_packets_per_sec_x10() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_has_out_packets_per_sec_x10() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_out_packets_per_sec_x10() {
  out_packets_per_sec_x10_ = 0u;
  clear_has_out_packets_per_sec_x10();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkInstantaneousStats::out_packets_per_sec_x10() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkInstantaneousStats.out_packets_per_sec_x10)
  return out_packets_per_sec_x10_;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_out_packets_per_sec_x10(::google::protobuf::uint32 value) {
  set_has_out_packets_per_sec_x10();
  out_packets_per_sec_x10_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkInstantaneousStats.out_packets_per_sec_x10)
}

// optional uint32 out_bytes_per_sec = 2;
inline bool CMsgSteamDatagramLinkInstantaneousStats::has_out_bytes_per_sec() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_has_out_bytes_per_sec() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_has_out_bytes_per_sec() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_out_bytes_per_sec() {
  out_bytes_per_sec_ = 0u;
  clear_has_out_bytes_per_sec();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkInstantaneousStats::out_bytes_per_sec() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkInstantaneousStats.out_bytes_per_sec)
  return out_bytes_per_sec_;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_out_bytes_per_sec(::google::protobuf::uint32 value) {
  set_has_out_bytes_per_sec();
  out_bytes_per_sec_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkInstantaneousStats.out_bytes_per_sec)
}

// optional uint32 in_packets_per_sec_x10 = 3;
inline bool CMsgSteamDatagramLinkInstantaneousStats::has_in_packets_per_sec_x10() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_has_in_packets_per_sec_x10() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_has_in_packets_per_sec_x10() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_in_packets_per_sec_x10() {
  in_packets_per_sec_x10_ = 0u;
  clear_has_in_packets_per_sec_x10();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkInstantaneousStats::in_packets_per_sec_x10() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkInstantaneousStats.in_packets_per_sec_x10)
  return in_packets_per_sec_x10_;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_in_packets_per_sec_x10(::google::protobuf::uint32 value) {
  set_has_in_packets_per_sec_x10();
  in_packets_per_sec_x10_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkInstantaneousStats.in_packets_per_sec_x10)
}

// optional uint32 in_bytes_per_sec = 4;
inline bool CMsgSteamDatagramLinkInstantaneousStats::has_in_bytes_per_sec() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_has_in_bytes_per_sec() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_has_in_bytes_per_sec() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_in_bytes_per_sec() {
  in_bytes_per_sec_ = 0u;
  clear_has_in_bytes_per_sec();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkInstantaneousStats::in_bytes_per_sec() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkInstantaneousStats.in_bytes_per_sec)
  return in_bytes_per_sec_;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_in_bytes_per_sec(::google::protobuf::uint32 value) {
  set_has_in_bytes_per_sec();
  in_bytes_per_sec_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkInstantaneousStats.in_bytes_per_sec)
}

// optional uint32 ping_ms = 5;
inline bool CMsgSteamDatagramLinkInstantaneousStats::has_ping_ms() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_has_ping_ms() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_has_ping_ms() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_ping_ms() {
  ping_ms_ = 0u;
  clear_has_ping_ms();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkInstantaneousStats::ping_ms() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkInstantaneousStats.ping_ms)
  return ping_ms_;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_ping_ms(::google::protobuf::uint32 value) {
  set_has_ping_ms();
  ping_ms_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkInstantaneousStats.ping_ms)
}

// optional uint32 packets_dropped_pct = 6;
inline bool CMsgSteamDatagramLinkInstantaneousStats::has_packets_dropped_pct() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_has_packets_dropped_pct() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_has_packets_dropped_pct() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_packets_dropped_pct() {
  packets_dropped_pct_ = 0u;
  clear_has_packets_dropped_pct();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkInstantaneousStats::packets_dropped_pct() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkInstantaneousStats.packets_dropped_pct)
  return packets_dropped_pct_;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_packets_dropped_pct(::google::protobuf::uint32 value) {
  set_has_packets_dropped_pct();
  packets_dropped_pct_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkInstantaneousStats.packets_dropped_pct)
}

// optional uint32 packets_weird_sequence_pct = 7;
inline bool CMsgSteamDatagramLinkInstantaneousStats::has_packets_weird_sequence_pct() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_has_packets_weird_sequence_pct() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_has_packets_weird_sequence_pct() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_packets_weird_sequence_pct() {
  packets_weird_sequence_pct_ = 0u;
  clear_has_packets_weird_sequence_pct();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkInstantaneousStats::packets_weird_sequence_pct() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkInstantaneousStats.packets_weird_sequence_pct)
  return packets_weird_sequence_pct_;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_packets_weird_sequence_pct(::google::protobuf::uint32 value) {
  set_has_packets_weird_sequence_pct();
  packets_weird_sequence_pct_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkInstantaneousStats.packets_weird_sequence_pct)
}

// optional uint32 peak_jitter_usec = 8;
inline bool CMsgSteamDatagramLinkInstantaneousStats::has_peak_jitter_usec() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_has_peak_jitter_usec() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_has_peak_jitter_usec() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::clear_peak_jitter_usec() {
  peak_jitter_usec_ = 0u;
  clear_has_peak_jitter_usec();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkInstantaneousStats::peak_jitter_usec() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkInstantaneousStats.peak_jitter_usec)
  return peak_jitter_usec_;
}
inline void CMsgSteamDatagramLinkInstantaneousStats::set_peak_jitter_usec(::google::protobuf::uint32 value) {
  set_has_peak_jitter_usec();
  peak_jitter_usec_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkInstantaneousStats.peak_jitter_usec)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramLinkLifetimeStats

// optional uint64 packets_sent = 3;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_packets_sent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_packets_sent() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_packets_sent() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_packets_sent() {
  packets_sent_ = GOOGLE_ULONGLONG(0);
  clear_has_packets_sent();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramLinkLifetimeStats::packets_sent() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.packets_sent)
  return packets_sent_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_packets_sent(::google::protobuf::uint64 value) {
  set_has_packets_sent();
  packets_sent_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.packets_sent)
}

// optional uint64 kb_sent = 4;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_kb_sent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_kb_sent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_kb_sent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_kb_sent() {
  kb_sent_ = GOOGLE_ULONGLONG(0);
  clear_has_kb_sent();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramLinkLifetimeStats::kb_sent() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.kb_sent)
  return kb_sent_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_kb_sent(::google::protobuf::uint64 value) {
  set_has_kb_sent();
  kb_sent_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.kb_sent)
}

// optional uint64 packets_recv = 5;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_packets_recv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_packets_recv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_packets_recv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_packets_recv() {
  packets_recv_ = GOOGLE_ULONGLONG(0);
  clear_has_packets_recv();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramLinkLifetimeStats::packets_recv() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.packets_recv)
  return packets_recv_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_packets_recv(::google::protobuf::uint64 value) {
  set_has_packets_recv();
  packets_recv_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.packets_recv)
}

// optional uint64 kb_recv = 6;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_kb_recv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_kb_recv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_kb_recv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_kb_recv() {
  kb_recv_ = GOOGLE_ULONGLONG(0);
  clear_has_kb_recv();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramLinkLifetimeStats::kb_recv() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.kb_recv)
  return kb_recv_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_kb_recv(::google::protobuf::uint64 value) {
  set_has_kb_recv();
  kb_recv_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.kb_recv)
}

// optional uint64 packets_recv_sequenced = 7;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_packets_recv_sequenced() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_packets_recv_sequenced() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_packets_recv_sequenced() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_packets_recv_sequenced() {
  packets_recv_sequenced_ = GOOGLE_ULONGLONG(0);
  clear_has_packets_recv_sequenced();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramLinkLifetimeStats::packets_recv_sequenced() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.packets_recv_sequenced)
  return packets_recv_sequenced_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_packets_recv_sequenced(::google::protobuf::uint64 value) {
  set_has_packets_recv_sequenced();
  packets_recv_sequenced_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.packets_recv_sequenced)
}

// optional uint64 packets_recv_dropped = 8;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_packets_recv_dropped() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_packets_recv_dropped() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_packets_recv_dropped() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_packets_recv_dropped() {
  packets_recv_dropped_ = GOOGLE_ULONGLONG(0);
  clear_has_packets_recv_dropped();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramLinkLifetimeStats::packets_recv_dropped() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.packets_recv_dropped)
  return packets_recv_dropped_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_packets_recv_dropped(::google::protobuf::uint64 value) {
  set_has_packets_recv_dropped();
  packets_recv_dropped_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.packets_recv_dropped)
}

// optional uint64 packets_recv_out_of_order = 9;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_packets_recv_out_of_order() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_packets_recv_out_of_order() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_packets_recv_out_of_order() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_packets_recv_out_of_order() {
  packets_recv_out_of_order_ = GOOGLE_ULONGLONG(0);
  clear_has_packets_recv_out_of_order();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramLinkLifetimeStats::packets_recv_out_of_order() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.packets_recv_out_of_order)
  return packets_recv_out_of_order_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_packets_recv_out_of_order(::google::protobuf::uint64 value) {
  set_has_packets_recv_out_of_order();
  packets_recv_out_of_order_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.packets_recv_out_of_order)
}

// optional uint64 packets_recv_duplicate = 10;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_packets_recv_duplicate() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_packets_recv_duplicate() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_packets_recv_duplicate() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_packets_recv_duplicate() {
  packets_recv_duplicate_ = GOOGLE_ULONGLONG(0);
  clear_has_packets_recv_duplicate();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramLinkLifetimeStats::packets_recv_duplicate() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.packets_recv_duplicate)
  return packets_recv_duplicate_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_packets_recv_duplicate(::google::protobuf::uint64 value) {
  set_has_packets_recv_duplicate();
  packets_recv_duplicate_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.packets_recv_duplicate)
}

// optional uint64 packets_recv_lurch = 11;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_packets_recv_lurch() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_packets_recv_lurch() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_packets_recv_lurch() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_packets_recv_lurch() {
  packets_recv_lurch_ = GOOGLE_ULONGLONG(0);
  clear_has_packets_recv_lurch();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramLinkLifetimeStats::packets_recv_lurch() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.packets_recv_lurch)
  return packets_recv_lurch_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_packets_recv_lurch(::google::protobuf::uint64 value) {
  set_has_packets_recv_lurch();
  packets_recv_lurch_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.packets_recv_lurch)
}

// optional uint32 quality_histogram_100 = 21;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_quality_histogram_100() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_quality_histogram_100() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_quality_histogram_100() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_quality_histogram_100() {
  quality_histogram_100_ = 0u;
  clear_has_quality_histogram_100();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::quality_histogram_100() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.quality_histogram_100)
  return quality_histogram_100_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_quality_histogram_100(::google::protobuf::uint32 value) {
  set_has_quality_histogram_100();
  quality_histogram_100_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.quality_histogram_100)
}

// optional uint32 quality_histogram_99 = 22;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_quality_histogram_99() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_quality_histogram_99() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_quality_histogram_99() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_quality_histogram_99() {
  quality_histogram_99_ = 0u;
  clear_has_quality_histogram_99();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::quality_histogram_99() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.quality_histogram_99)
  return quality_histogram_99_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_quality_histogram_99(::google::protobuf::uint32 value) {
  set_has_quality_histogram_99();
  quality_histogram_99_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.quality_histogram_99)
}

// optional uint32 quality_histogram_97 = 23;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_quality_histogram_97() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_quality_histogram_97() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_quality_histogram_97() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_quality_histogram_97() {
  quality_histogram_97_ = 0u;
  clear_has_quality_histogram_97();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::quality_histogram_97() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.quality_histogram_97)
  return quality_histogram_97_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_quality_histogram_97(::google::protobuf::uint32 value) {
  set_has_quality_histogram_97();
  quality_histogram_97_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.quality_histogram_97)
}

// optional uint32 quality_histogram_95 = 24;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_quality_histogram_95() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_quality_histogram_95() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_quality_histogram_95() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_quality_histogram_95() {
  quality_histogram_95_ = 0u;
  clear_has_quality_histogram_95();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::quality_histogram_95() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.quality_histogram_95)
  return quality_histogram_95_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_quality_histogram_95(::google::protobuf::uint32 value) {
  set_has_quality_histogram_95();
  quality_histogram_95_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.quality_histogram_95)
}

// optional uint32 quality_histogram_90 = 25;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_quality_histogram_90() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_quality_histogram_90() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_quality_histogram_90() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_quality_histogram_90() {
  quality_histogram_90_ = 0u;
  clear_has_quality_histogram_90();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::quality_histogram_90() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.quality_histogram_90)
  return quality_histogram_90_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_quality_histogram_90(::google::protobuf::uint32 value) {
  set_has_quality_histogram_90();
  quality_histogram_90_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.quality_histogram_90)
}

// optional uint32 quality_histogram_75 = 26;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_quality_histogram_75() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_quality_histogram_75() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_quality_histogram_75() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_quality_histogram_75() {
  quality_histogram_75_ = 0u;
  clear_has_quality_histogram_75();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::quality_histogram_75() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.quality_histogram_75)
  return quality_histogram_75_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_quality_histogram_75(::google::protobuf::uint32 value) {
  set_has_quality_histogram_75();
  quality_histogram_75_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.quality_histogram_75)
}

// optional uint32 quality_histogram_50 = 27;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_quality_histogram_50() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_quality_histogram_50() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_quality_histogram_50() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_quality_histogram_50() {
  quality_histogram_50_ = 0u;
  clear_has_quality_histogram_50();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::quality_histogram_50() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.quality_histogram_50)
  return quality_histogram_50_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_quality_histogram_50(::google::protobuf::uint32 value) {
  set_has_quality_histogram_50();
  quality_histogram_50_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.quality_histogram_50)
}

// optional uint32 quality_histogram_1 = 28;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_quality_histogram_1() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_quality_histogram_1() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_quality_histogram_1() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_quality_histogram_1() {
  quality_histogram_1_ = 0u;
  clear_has_quality_histogram_1();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::quality_histogram_1() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.quality_histogram_1)
  return quality_histogram_1_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_quality_histogram_1(::google::protobuf::uint32 value) {
  set_has_quality_histogram_1();
  quality_histogram_1_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.quality_histogram_1)
}

// optional uint32 quality_histogram_dead = 29;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_quality_histogram_dead() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_quality_histogram_dead() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_quality_histogram_dead() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_quality_histogram_dead() {
  quality_histogram_dead_ = 0u;
  clear_has_quality_histogram_dead();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::quality_histogram_dead() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.quality_histogram_dead)
  return quality_histogram_dead_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_quality_histogram_dead(::google::protobuf::uint32 value) {
  set_has_quality_histogram_dead();
  quality_histogram_dead_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.quality_histogram_dead)
}

// optional uint32 quality_ntile_2nd = 30;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_quality_ntile_2nd() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_quality_ntile_2nd() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_quality_ntile_2nd() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_quality_ntile_2nd() {
  quality_ntile_2nd_ = 0u;
  clear_has_quality_ntile_2nd();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::quality_ntile_2nd() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.quality_ntile_2nd)
  return quality_ntile_2nd_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_quality_ntile_2nd(::google::protobuf::uint32 value) {
  set_has_quality_ntile_2nd();
  quality_ntile_2nd_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.quality_ntile_2nd)
}

// optional uint32 quality_ntile_5th = 31;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_quality_ntile_5th() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_quality_ntile_5th() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_quality_ntile_5th() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_quality_ntile_5th() {
  quality_ntile_5th_ = 0u;
  clear_has_quality_ntile_5th();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::quality_ntile_5th() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.quality_ntile_5th)
  return quality_ntile_5th_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_quality_ntile_5th(::google::protobuf::uint32 value) {
  set_has_quality_ntile_5th();
  quality_ntile_5th_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.quality_ntile_5th)
}

// optional uint32 quality_ntile_25th = 32;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_quality_ntile_25th() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_quality_ntile_25th() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_quality_ntile_25th() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_quality_ntile_25th() {
  quality_ntile_25th_ = 0u;
  clear_has_quality_ntile_25th();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::quality_ntile_25th() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.quality_ntile_25th)
  return quality_ntile_25th_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_quality_ntile_25th(::google::protobuf::uint32 value) {
  set_has_quality_ntile_25th();
  quality_ntile_25th_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.quality_ntile_25th)
}

// optional uint32 quality_ntile_50th = 33;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_quality_ntile_50th() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_quality_ntile_50th() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_quality_ntile_50th() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_quality_ntile_50th() {
  quality_ntile_50th_ = 0u;
  clear_has_quality_ntile_50th();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::quality_ntile_50th() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.quality_ntile_50th)
  return quality_ntile_50th_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_quality_ntile_50th(::google::protobuf::uint32 value) {
  set_has_quality_ntile_50th();
  quality_ntile_50th_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.quality_ntile_50th)
}

// optional uint32 ping_histogram_25 = 41;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_ping_histogram_25() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_ping_histogram_25() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_ping_histogram_25() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_ping_histogram_25() {
  ping_histogram_25_ = 0u;
  clear_has_ping_histogram_25();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::ping_histogram_25() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.ping_histogram_25)
  return ping_histogram_25_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_ping_histogram_25(::google::protobuf::uint32 value) {
  set_has_ping_histogram_25();
  ping_histogram_25_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.ping_histogram_25)
}

// optional uint32 ping_histogram_50 = 42;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_ping_histogram_50() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_ping_histogram_50() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_ping_histogram_50() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_ping_histogram_50() {
  ping_histogram_50_ = 0u;
  clear_has_ping_histogram_50();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::ping_histogram_50() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.ping_histogram_50)
  return ping_histogram_50_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_ping_histogram_50(::google::protobuf::uint32 value) {
  set_has_ping_histogram_50();
  ping_histogram_50_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.ping_histogram_50)
}

// optional uint32 ping_histogram_75 = 43;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_ping_histogram_75() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_ping_histogram_75() {
  _has_bits_[0] |= 0x01000000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_ping_histogram_75() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_ping_histogram_75() {
  ping_histogram_75_ = 0u;
  clear_has_ping_histogram_75();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::ping_histogram_75() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.ping_histogram_75)
  return ping_histogram_75_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_ping_histogram_75(::google::protobuf::uint32 value) {
  set_has_ping_histogram_75();
  ping_histogram_75_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.ping_histogram_75)
}

// optional uint32 ping_histogram_100 = 44;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_ping_histogram_100() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_ping_histogram_100() {
  _has_bits_[0] |= 0x04000000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_ping_histogram_100() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_ping_histogram_100() {
  ping_histogram_100_ = 0u;
  clear_has_ping_histogram_100();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::ping_histogram_100() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.ping_histogram_100)
  return ping_histogram_100_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_ping_histogram_100(::google::protobuf::uint32 value) {
  set_has_ping_histogram_100();
  ping_histogram_100_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.ping_histogram_100)
}

// optional uint32 ping_histogram_125 = 45;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_ping_histogram_125() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_ping_histogram_125() {
  _has_bits_[0] |= 0x08000000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_ping_histogram_125() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_ping_histogram_125() {
  ping_histogram_125_ = 0u;
  clear_has_ping_histogram_125();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::ping_histogram_125() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.ping_histogram_125)
  return ping_histogram_125_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_ping_histogram_125(::google::protobuf::uint32 value) {
  set_has_ping_histogram_125();
  ping_histogram_125_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.ping_histogram_125)
}

// optional uint32 ping_histogram_150 = 46;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_ping_histogram_150() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_ping_histogram_150() {
  _has_bits_[0] |= 0x10000000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_ping_histogram_150() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_ping_histogram_150() {
  ping_histogram_150_ = 0u;
  clear_has_ping_histogram_150();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::ping_histogram_150() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.ping_histogram_150)
  return ping_histogram_150_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_ping_histogram_150(::google::protobuf::uint32 value) {
  set_has_ping_histogram_150();
  ping_histogram_150_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.ping_histogram_150)
}

// optional uint32 ping_histogram_200 = 47;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_ping_histogram_200() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_ping_histogram_200() {
  _has_bits_[0] |= 0x20000000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_ping_histogram_200() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_ping_histogram_200() {
  ping_histogram_200_ = 0u;
  clear_has_ping_histogram_200();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::ping_histogram_200() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.ping_histogram_200)
  return ping_histogram_200_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_ping_histogram_200(::google::protobuf::uint32 value) {
  set_has_ping_histogram_200();
  ping_histogram_200_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.ping_histogram_200)
}

// optional uint32 ping_histogram_300 = 48;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_ping_histogram_300() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_ping_histogram_300() {
  _has_bits_[0] |= 0x40000000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_ping_histogram_300() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_ping_histogram_300() {
  ping_histogram_300_ = 0u;
  clear_has_ping_histogram_300();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::ping_histogram_300() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.ping_histogram_300)
  return ping_histogram_300_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_ping_histogram_300(::google::protobuf::uint32 value) {
  set_has_ping_histogram_300();
  ping_histogram_300_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.ping_histogram_300)
}

// optional uint32 ping_histogram_max = 49;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_ping_histogram_max() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_ping_histogram_max() {
  _has_bits_[0] |= 0x80000000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_ping_histogram_max() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_ping_histogram_max() {
  ping_histogram_max_ = 0u;
  clear_has_ping_histogram_max();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::ping_histogram_max() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.ping_histogram_max)
  return ping_histogram_max_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_ping_histogram_max(::google::protobuf::uint32 value) {
  set_has_ping_histogram_max();
  ping_histogram_max_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.ping_histogram_max)
}

// optional uint32 ping_ntile_5th = 50;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_ping_ntile_5th() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_ping_ntile_5th() {
  _has_bits_[1] |= 0x00000001u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_ping_ntile_5th() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_ping_ntile_5th() {
  ping_ntile_5th_ = 0u;
  clear_has_ping_ntile_5th();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::ping_ntile_5th() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.ping_ntile_5th)
  return ping_ntile_5th_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_ping_ntile_5th(::google::protobuf::uint32 value) {
  set_has_ping_ntile_5th();
  ping_ntile_5th_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.ping_ntile_5th)
}

// optional uint32 ping_ntile_50th = 51;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_ping_ntile_50th() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_ping_ntile_50th() {
  _has_bits_[1] |= 0x00000002u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_ping_ntile_50th() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_ping_ntile_50th() {
  ping_ntile_50th_ = 0u;
  clear_has_ping_ntile_50th();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::ping_ntile_50th() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.ping_ntile_50th)
  return ping_ntile_50th_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_ping_ntile_50th(::google::protobuf::uint32 value) {
  set_has_ping_ntile_50th();
  ping_ntile_50th_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.ping_ntile_50th)
}

// optional uint32 ping_ntile_75th = 52;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_ping_ntile_75th() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_ping_ntile_75th() {
  _has_bits_[1] |= 0x00000004u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_ping_ntile_75th() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_ping_ntile_75th() {
  ping_ntile_75th_ = 0u;
  clear_has_ping_ntile_75th();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::ping_ntile_75th() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.ping_ntile_75th)
  return ping_ntile_75th_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_ping_ntile_75th(::google::protobuf::uint32 value) {
  set_has_ping_ntile_75th();
  ping_ntile_75th_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.ping_ntile_75th)
}

// optional uint32 ping_ntile_95th = 53;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_ping_ntile_95th() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_ping_ntile_95th() {
  _has_bits_[1] |= 0x00000008u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_ping_ntile_95th() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_ping_ntile_95th() {
  ping_ntile_95th_ = 0u;
  clear_has_ping_ntile_95th();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::ping_ntile_95th() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.ping_ntile_95th)
  return ping_ntile_95th_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_ping_ntile_95th(::google::protobuf::uint32 value) {
  set_has_ping_ntile_95th();
  ping_ntile_95th_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.ping_ntile_95th)
}

// optional uint32 ping_ntile_98th = 54;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_ping_ntile_98th() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_ping_ntile_98th() {
  _has_bits_[1] |= 0x00000010u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_ping_ntile_98th() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_ping_ntile_98th() {
  ping_ntile_98th_ = 0u;
  clear_has_ping_ntile_98th();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::ping_ntile_98th() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.ping_ntile_98th)
  return ping_ntile_98th_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_ping_ntile_98th(::google::protobuf::uint32 value) {
  set_has_ping_ntile_98th();
  ping_ntile_98th_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.ping_ntile_98th)
}

// optional uint32 jitter_histogram_negligible = 61;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_jitter_histogram_negligible() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_jitter_histogram_negligible() {
  _has_bits_[1] |= 0x00000020u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_jitter_histogram_negligible() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_jitter_histogram_negligible() {
  jitter_histogram_negligible_ = 0u;
  clear_has_jitter_histogram_negligible();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::jitter_histogram_negligible() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.jitter_histogram_negligible)
  return jitter_histogram_negligible_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_jitter_histogram_negligible(::google::protobuf::uint32 value) {
  set_has_jitter_histogram_negligible();
  jitter_histogram_negligible_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.jitter_histogram_negligible)
}

// optional uint32 jitter_histogram_1 = 62;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_jitter_histogram_1() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_jitter_histogram_1() {
  _has_bits_[1] |= 0x00000040u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_jitter_histogram_1() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_jitter_histogram_1() {
  jitter_histogram_1_ = 0u;
  clear_has_jitter_histogram_1();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::jitter_histogram_1() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.jitter_histogram_1)
  return jitter_histogram_1_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_jitter_histogram_1(::google::protobuf::uint32 value) {
  set_has_jitter_histogram_1();
  jitter_histogram_1_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.jitter_histogram_1)
}

// optional uint32 jitter_histogram_2 = 63;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_jitter_histogram_2() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_jitter_histogram_2() {
  _has_bits_[1] |= 0x00000080u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_jitter_histogram_2() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_jitter_histogram_2() {
  jitter_histogram_2_ = 0u;
  clear_has_jitter_histogram_2();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::jitter_histogram_2() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.jitter_histogram_2)
  return jitter_histogram_2_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_jitter_histogram_2(::google::protobuf::uint32 value) {
  set_has_jitter_histogram_2();
  jitter_histogram_2_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.jitter_histogram_2)
}

// optional uint32 jitter_histogram_5 = 64;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_jitter_histogram_5() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_jitter_histogram_5() {
  _has_bits_[1] |= 0x00000100u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_jitter_histogram_5() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_jitter_histogram_5() {
  jitter_histogram_5_ = 0u;
  clear_has_jitter_histogram_5();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::jitter_histogram_5() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.jitter_histogram_5)
  return jitter_histogram_5_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_jitter_histogram_5(::google::protobuf::uint32 value) {
  set_has_jitter_histogram_5();
  jitter_histogram_5_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.jitter_histogram_5)
}

// optional uint32 jitter_histogram_10 = 65;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_jitter_histogram_10() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_jitter_histogram_10() {
  _has_bits_[1] |= 0x00000200u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_jitter_histogram_10() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_jitter_histogram_10() {
  jitter_histogram_10_ = 0u;
  clear_has_jitter_histogram_10();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::jitter_histogram_10() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.jitter_histogram_10)
  return jitter_histogram_10_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_jitter_histogram_10(::google::protobuf::uint32 value) {
  set_has_jitter_histogram_10();
  jitter_histogram_10_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.jitter_histogram_10)
}

// optional uint32 jitter_histogram_20 = 66;
inline bool CMsgSteamDatagramLinkLifetimeStats::has_jitter_histogram_20() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_has_jitter_histogram_20() {
  _has_bits_[0] |= 0x02000000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_has_jitter_histogram_20() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void CMsgSteamDatagramLinkLifetimeStats::clear_jitter_histogram_20() {
  jitter_histogram_20_ = 0u;
  clear_has_jitter_histogram_20();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramLinkLifetimeStats::jitter_histogram_20() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramLinkLifetimeStats.jitter_histogram_20)
  return jitter_histogram_20_;
}
inline void CMsgSteamDatagramLinkLifetimeStats::set_jitter_histogram_20(::google::protobuf::uint32 value) {
  set_has_jitter_histogram_20();
  jitter_histogram_20_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramLinkLifetimeStats.jitter_histogram_20)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramConnectionQuality

// optional .CMsgSteamDatagramLinkInstantaneousStats instantaneous = 1;
inline bool CMsgSteamDatagramConnectionQuality::has_instantaneous() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramConnectionQuality::set_has_instantaneous() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramConnectionQuality::clear_has_instantaneous() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramConnectionQuality::clear_instantaneous() {
  if (instantaneous_ != NULL) instantaneous_->Clear();
  clear_has_instantaneous();
}
inline const ::CMsgSteamDatagramLinkInstantaneousStats& CMsgSteamDatagramConnectionQuality::instantaneous() const {
  const ::CMsgSteamDatagramLinkInstantaneousStats* p = instantaneous_;
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionQuality.instantaneous)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgSteamDatagramLinkInstantaneousStats*>(
      &::_CMsgSteamDatagramLinkInstantaneousStats_default_instance_);
}
inline ::CMsgSteamDatagramLinkInstantaneousStats* CMsgSteamDatagramConnectionQuality::release_instantaneous() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionQuality.instantaneous)
  clear_has_instantaneous();
  ::CMsgSteamDatagramLinkInstantaneousStats* temp = instantaneous_;
  instantaneous_ = NULL;
  return temp;
}
inline ::CMsgSteamDatagramLinkInstantaneousStats* CMsgSteamDatagramConnectionQuality::mutable_instantaneous() {
  set_has_instantaneous();
  if (instantaneous_ == NULL) {
    instantaneous_ = new ::CMsgSteamDatagramLinkInstantaneousStats;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionQuality.instantaneous)
  return instantaneous_;
}
inline void CMsgSteamDatagramConnectionQuality::set_allocated_instantaneous(::CMsgSteamDatagramLinkInstantaneousStats* instantaneous) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete instantaneous_;
  }
  if (instantaneous) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instantaneous = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instantaneous, submessage_arena);
    }
    set_has_instantaneous();
  } else {
    clear_has_instantaneous();
  }
  instantaneous_ = instantaneous;
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionQuality.instantaneous)
}

// optional .CMsgSteamDatagramLinkLifetimeStats lifetime = 2;
inline bool CMsgSteamDatagramConnectionQuality::has_lifetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramConnectionQuality::set_has_lifetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramConnectionQuality::clear_has_lifetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramConnectionQuality::clear_lifetime() {
  if (lifetime_ != NULL) lifetime_->Clear();
  clear_has_lifetime();
}
inline const ::CMsgSteamDatagramLinkLifetimeStats& CMsgSteamDatagramConnectionQuality::lifetime() const {
  const ::CMsgSteamDatagramLinkLifetimeStats* p = lifetime_;
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionQuality.lifetime)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgSteamDatagramLinkLifetimeStats*>(
      &::_CMsgSteamDatagramLinkLifetimeStats_default_instance_);
}
inline ::CMsgSteamDatagramLinkLifetimeStats* CMsgSteamDatagramConnectionQuality::release_lifetime() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionQuality.lifetime)
  clear_has_lifetime();
  ::CMsgSteamDatagramLinkLifetimeStats* temp = lifetime_;
  lifetime_ = NULL;
  return temp;
}
inline ::CMsgSteamDatagramLinkLifetimeStats* CMsgSteamDatagramConnectionQuality::mutable_lifetime() {
  set_has_lifetime();
  if (lifetime_ == NULL) {
    lifetime_ = new ::CMsgSteamDatagramLinkLifetimeStats;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionQuality.lifetime)
  return lifetime_;
}
inline void CMsgSteamDatagramConnectionQuality::set_allocated_lifetime(::CMsgSteamDatagramLinkLifetimeStats* lifetime) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete lifetime_;
  }
  if (lifetime) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      lifetime = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, lifetime, submessage_arena);
    }
    set_has_lifetime();
  } else {
    clear_has_lifetime();
  }
  lifetime_ = lifetime;
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionQuality.lifetime)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramConnectionStatsClientToRouter

// optional .CMsgSteamDatagramConnectionQuality c2r = 1;
inline bool CMsgSteamDatagramConnectionStatsClientToRouter::has_c2r() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_has_c2r() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_has_c2r() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_c2r() {
  if (c2r_ != NULL) c2r_->Clear();
  clear_has_c2r();
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsClientToRouter::c2r() const {
  const ::CMsgSteamDatagramConnectionQuality* p = c2r_;
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsClientToRouter.c2r)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgSteamDatagramConnectionQuality*>(
      &::_CMsgSteamDatagramConnectionQuality_default_instance_);
}
inline ::CMsgSteamDatagramConnectionQuality* CMsgSteamDatagramConnectionStatsClientToRouter::release_c2r() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionStatsClientToRouter.c2r)
  clear_has_c2r();
  ::CMsgSteamDatagramConnectionQuality* temp = c2r_;
  c2r_ = NULL;
  return temp;
}
inline ::CMsgSteamDatagramConnectionQuality* CMsgSteamDatagramConnectionStatsClientToRouter::mutable_c2r() {
  set_has_c2r();
  if (c2r_ == NULL) {
    c2r_ = new ::CMsgSteamDatagramConnectionQuality;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsClientToRouter.c2r)
  return c2r_;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_allocated_c2r(::CMsgSteamDatagramConnectionQuality* c2r) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete c2r_;
  }
  if (c2r) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      c2r = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, c2r, submessage_arena);
    }
    set_has_c2r();
  } else {
    clear_has_c2r();
  }
  c2r_ = c2r;
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsClientToRouter.c2r)
}

// optional .CMsgSteamDatagramConnectionQuality c2s = 2;
inline bool CMsgSteamDatagramConnectionStatsClientToRouter::has_c2s() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_has_c2s() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_has_c2s() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_c2s() {
  if (c2s_ != NULL) c2s_->Clear();
  clear_has_c2s();
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsClientToRouter::c2s() const {
  const ::CMsgSteamDatagramConnectionQuality* p = c2s_;
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsClientToRouter.c2s)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgSteamDatagramConnectionQuality*>(
      &::_CMsgSteamDatagramConnectionQuality_default_instance_);
}
inline ::CMsgSteamDatagramConnectionQuality* CMsgSteamDatagramConnectionStatsClientToRouter::release_c2s() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionStatsClientToRouter.c2s)
  clear_has_c2s();
  ::CMsgSteamDatagramConnectionQuality* temp = c2s_;
  c2s_ = NULL;
  return temp;
}
inline ::CMsgSteamDatagramConnectionQuality* CMsgSteamDatagramConnectionStatsClientToRouter::mutable_c2s() {
  set_has_c2s();
  if (c2s_ == NULL) {
    c2s_ = new ::CMsgSteamDatagramConnectionQuality;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsClientToRouter.c2s)
  return c2s_;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_allocated_c2s(::CMsgSteamDatagramConnectionQuality* c2s) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete c2s_;
  }
  if (c2s) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      c2s = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, c2s, submessage_arena);
    }
    set_has_c2s();
  } else {
    clear_has_c2s();
  }
  c2s_ = c2s;
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsClientToRouter.c2s)
}

// optional fixed32 client_timestamp = 3;
inline bool CMsgSteamDatagramConnectionStatsClientToRouter::has_client_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_has_client_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_has_client_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_client_timestamp() {
  client_timestamp_ = 0u;
  clear_has_client_timestamp();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsClientToRouter::client_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsClientToRouter.client_timestamp)
  return client_timestamp_;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_client_timestamp(::google::protobuf::uint32 value) {
  set_has_client_timestamp();
  client_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsClientToRouter.client_timestamp)
}

// optional fixed32 client_cookie = 8;
inline bool CMsgSteamDatagramConnectionStatsClientToRouter::has_client_cookie() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_has_client_cookie() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_has_client_cookie() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_client_cookie() {
  client_cookie_ = 0u;
  clear_has_client_cookie();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsClientToRouter::client_cookie() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsClientToRouter.client_cookie)
  return client_cookie_;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_client_cookie(::google::protobuf::uint32 value) {
  set_has_client_cookie();
  client_cookie_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsClientToRouter.client_cookie)
}

// optional uint32 seq_num_c2r = 9;
inline bool CMsgSteamDatagramConnectionStatsClientToRouter::has_seq_num_c2r() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_has_seq_num_c2r() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_has_seq_num_c2r() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_seq_num_c2r() {
  seq_num_c2r_ = 0u;
  clear_has_seq_num_c2r();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsClientToRouter::seq_num_c2r() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsClientToRouter.seq_num_c2r)
  return seq_num_c2r_;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_seq_num_c2r(::google::protobuf::uint32 value) {
  set_has_seq_num_c2r();
  seq_num_c2r_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsClientToRouter.seq_num_c2r)
}

// optional uint32 seq_num_c2s = 10;
inline bool CMsgSteamDatagramConnectionStatsClientToRouter::has_seq_num_c2s() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_has_seq_num_c2s() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_has_seq_num_c2s() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::clear_seq_num_c2s() {
  seq_num_c2s_ = 0u;
  clear_has_seq_num_c2s();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsClientToRouter::seq_num_c2s() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsClientToRouter.seq_num_c2s)
  return seq_num_c2s_;
}
inline void CMsgSteamDatagramConnectionStatsClientToRouter::set_seq_num_c2s(::google::protobuf::uint32 value) {
  set_has_seq_num_c2s();
  seq_num_c2s_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsClientToRouter.seq_num_c2s)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramConnectionStatsRouterToClient

// optional .CMsgSteamDatagramConnectionQuality r2c = 1;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_r2c() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_has_r2c() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_has_r2c() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_r2c() {
  if (r2c_ != NULL) r2c_->Clear();
  clear_has_r2c();
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsRouterToClient::r2c() const {
  const ::CMsgSteamDatagramConnectionQuality* p = r2c_;
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.r2c)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgSteamDatagramConnectionQuality*>(
      &::_CMsgSteamDatagramConnectionQuality_default_instance_);
}
inline ::CMsgSteamDatagramConnectionQuality* CMsgSteamDatagramConnectionStatsRouterToClient::release_r2c() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionStatsRouterToClient.r2c)
  clear_has_r2c();
  ::CMsgSteamDatagramConnectionQuality* temp = r2c_;
  r2c_ = NULL;
  return temp;
}
inline ::CMsgSteamDatagramConnectionQuality* CMsgSteamDatagramConnectionStatsRouterToClient::mutable_r2c() {
  set_has_r2c();
  if (r2c_ == NULL) {
    r2c_ = new ::CMsgSteamDatagramConnectionQuality;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsRouterToClient.r2c)
  return r2c_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_allocated_r2c(::CMsgSteamDatagramConnectionQuality* r2c) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete r2c_;
  }
  if (r2c) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      r2c = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, r2c, submessage_arena);
    }
    set_has_r2c();
  } else {
    clear_has_r2c();
  }
  r2c_ = r2c;
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsRouterToClient.r2c)
}

// optional .CMsgSteamDatagramConnectionQuality s2c = 2;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_s2c() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_has_s2c() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_has_s2c() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_s2c() {
  if (s2c_ != NULL) s2c_->Clear();
  clear_has_s2c();
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsRouterToClient::s2c() const {
  const ::CMsgSteamDatagramConnectionQuality* p = s2c_;
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.s2c)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgSteamDatagramConnectionQuality*>(
      &::_CMsgSteamDatagramConnectionQuality_default_instance_);
}
inline ::CMsgSteamDatagramConnectionQuality* CMsgSteamDatagramConnectionStatsRouterToClient::release_s2c() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionStatsRouterToClient.s2c)
  clear_has_s2c();
  ::CMsgSteamDatagramConnectionQuality* temp = s2c_;
  s2c_ = NULL;
  return temp;
}
inline ::CMsgSteamDatagramConnectionQuality* CMsgSteamDatagramConnectionStatsRouterToClient::mutable_s2c() {
  set_has_s2c();
  if (s2c_ == NULL) {
    s2c_ = new ::CMsgSteamDatagramConnectionQuality;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsRouterToClient.s2c)
  return s2c_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_allocated_s2c(::CMsgSteamDatagramConnectionQuality* s2c) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete s2c_;
  }
  if (s2c) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      s2c = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, s2c, submessage_arena);
    }
    set_has_s2c();
  } else {
    clear_has_s2c();
  }
  s2c_ = s2c;
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsRouterToClient.s2c)
}

// optional fixed32 client_timestamp_from_router = 3;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_client_timestamp_from_router() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_has_client_timestamp_from_router() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_has_client_timestamp_from_router() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_client_timestamp_from_router() {
  client_timestamp_from_router_ = 0u;
  clear_has_client_timestamp_from_router();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsRouterToClient::client_timestamp_from_router() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.client_timestamp_from_router)
  return client_timestamp_from_router_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_client_timestamp_from_router(::google::protobuf::uint32 value) {
  set_has_client_timestamp_from_router();
  client_timestamp_from_router_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToClient.client_timestamp_from_router)
}

// optional fixed32 client_timestamp_from_server = 4;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_client_timestamp_from_server() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_has_client_timestamp_from_server() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_has_client_timestamp_from_server() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_client_timestamp_from_server() {
  client_timestamp_from_server_ = 0u;
  clear_has_client_timestamp_from_server();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsRouterToClient::client_timestamp_from_server() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.client_timestamp_from_server)
  return client_timestamp_from_server_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_client_timestamp_from_server(::google::protobuf::uint32 value) {
  set_has_client_timestamp_from_server();
  client_timestamp_from_server_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToClient.client_timestamp_from_server)
}

// optional uint32 router_gameserver_latency = 5;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_router_gameserver_latency() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_has_router_gameserver_latency() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_has_router_gameserver_latency() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_router_gameserver_latency() {
  router_gameserver_latency_ = 0u;
  clear_has_router_gameserver_latency();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsRouterToClient::router_gameserver_latency() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.router_gameserver_latency)
  return router_gameserver_latency_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_router_gameserver_latency(::google::protobuf::uint32 value) {
  set_has_router_gameserver_latency();
  router_gameserver_latency_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToClient.router_gameserver_latency)
}

// optional uint32 seconds_until_shutdown = 6;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_seconds_until_shutdown() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_has_seconds_until_shutdown() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_has_seconds_until_shutdown() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_seconds_until_shutdown() {
  seconds_until_shutdown_ = 0u;
  clear_has_seconds_until_shutdown();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsRouterToClient::seconds_until_shutdown() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.seconds_until_shutdown)
  return seconds_until_shutdown_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_seconds_until_shutdown(::google::protobuf::uint32 value) {
  set_has_seconds_until_shutdown();
  seconds_until_shutdown_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToClient.seconds_until_shutdown)
}

// optional fixed32 migrate_request_ip = 10;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_migrate_request_ip() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_has_migrate_request_ip() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_has_migrate_request_ip() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_migrate_request_ip() {
  migrate_request_ip_ = 0u;
  clear_has_migrate_request_ip();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsRouterToClient::migrate_request_ip() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.migrate_request_ip)
  return migrate_request_ip_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_migrate_request_ip(::google::protobuf::uint32 value) {
  set_has_migrate_request_ip();
  migrate_request_ip_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToClient.migrate_request_ip)
}

// optional uint32 migrate_request_port = 11;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_migrate_request_port() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_has_migrate_request_port() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_has_migrate_request_port() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_migrate_request_port() {
  migrate_request_port_ = 0u;
  clear_has_migrate_request_port();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsRouterToClient::migrate_request_port() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.migrate_request_port)
  return migrate_request_port_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_migrate_request_port(::google::protobuf::uint32 value) {
  set_has_migrate_request_port();
  migrate_request_port_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToClient.migrate_request_port)
}

// optional uint32 scoring_penalty_relay_cluster = 12;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_scoring_penalty_relay_cluster() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_has_scoring_penalty_relay_cluster() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_has_scoring_penalty_relay_cluster() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_scoring_penalty_relay_cluster() {
  scoring_penalty_relay_cluster_ = 0u;
  clear_has_scoring_penalty_relay_cluster();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsRouterToClient::scoring_penalty_relay_cluster() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.scoring_penalty_relay_cluster)
  return scoring_penalty_relay_cluster_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_scoring_penalty_relay_cluster(::google::protobuf::uint32 value) {
  set_has_scoring_penalty_relay_cluster();
  scoring_penalty_relay_cluster_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToClient.scoring_penalty_relay_cluster)
}

// optional fixed32 client_cookie = 7;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_client_cookie() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_has_client_cookie() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_has_client_cookie() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_client_cookie() {
  client_cookie_ = 0u;
  clear_has_client_cookie();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsRouterToClient::client_cookie() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.client_cookie)
  return client_cookie_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_client_cookie(::google::protobuf::uint32 value) {
  set_has_client_cookie();
  client_cookie_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToClient.client_cookie)
}

// optional uint32 seq_num_r2c = 8;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_seq_num_r2c() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_has_seq_num_r2c() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_has_seq_num_r2c() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_seq_num_r2c() {
  seq_num_r2c_ = 0u;
  clear_has_seq_num_r2c();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsRouterToClient::seq_num_r2c() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.seq_num_r2c)
  return seq_num_r2c_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_seq_num_r2c(::google::protobuf::uint32 value) {
  set_has_seq_num_r2c();
  seq_num_r2c_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToClient.seq_num_r2c)
}

// optional uint32 seq_num_s2c = 9;
inline bool CMsgSteamDatagramConnectionStatsRouterToClient::has_seq_num_s2c() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_has_seq_num_s2c() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_has_seq_num_s2c() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::clear_seq_num_s2c() {
  seq_num_s2c_ = 0u;
  clear_has_seq_num_s2c();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsRouterToClient::seq_num_s2c() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToClient.seq_num_s2c)
  return seq_num_s2c_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToClient::set_seq_num_s2c(::google::protobuf::uint32 value) {
  set_has_seq_num_s2c();
  seq_num_s2c_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToClient.seq_num_s2c)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramConnectionStatsRouterToServer

// optional .CMsgSteamDatagramConnectionQuality r2s = 1;
inline bool CMsgSteamDatagramConnectionStatsRouterToServer::has_r2s() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_has_r2s() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_has_r2s() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_r2s() {
  if (r2s_ != NULL) r2s_->Clear();
  clear_has_r2s();
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsRouterToServer::r2s() const {
  const ::CMsgSteamDatagramConnectionQuality* p = r2s_;
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToServer.r2s)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgSteamDatagramConnectionQuality*>(
      &::_CMsgSteamDatagramConnectionQuality_default_instance_);
}
inline ::CMsgSteamDatagramConnectionQuality* CMsgSteamDatagramConnectionStatsRouterToServer::release_r2s() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionStatsRouterToServer.r2s)
  clear_has_r2s();
  ::CMsgSteamDatagramConnectionQuality* temp = r2s_;
  r2s_ = NULL;
  return temp;
}
inline ::CMsgSteamDatagramConnectionQuality* CMsgSteamDatagramConnectionStatsRouterToServer::mutable_r2s() {
  set_has_r2s();
  if (r2s_ == NULL) {
    r2s_ = new ::CMsgSteamDatagramConnectionQuality;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsRouterToServer.r2s)
  return r2s_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_allocated_r2s(::CMsgSteamDatagramConnectionQuality* r2s) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete r2s_;
  }
  if (r2s) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      r2s = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, r2s, submessage_arena);
    }
    set_has_r2s();
  } else {
    clear_has_r2s();
  }
  r2s_ = r2s;
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsRouterToServer.r2s)
}

// optional .CMsgSteamDatagramConnectionQuality c2s = 2;
inline bool CMsgSteamDatagramConnectionStatsRouterToServer::has_c2s() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_has_c2s() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_has_c2s() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_c2s() {
  if (c2s_ != NULL) c2s_->Clear();
  clear_has_c2s();
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsRouterToServer::c2s() const {
  const ::CMsgSteamDatagramConnectionQuality* p = c2s_;
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToServer.c2s)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgSteamDatagramConnectionQuality*>(
      &::_CMsgSteamDatagramConnectionQuality_default_instance_);
}
inline ::CMsgSteamDatagramConnectionQuality* CMsgSteamDatagramConnectionStatsRouterToServer::release_c2s() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionStatsRouterToServer.c2s)
  clear_has_c2s();
  ::CMsgSteamDatagramConnectionQuality* temp = c2s_;
  c2s_ = NULL;
  return temp;
}
inline ::CMsgSteamDatagramConnectionQuality* CMsgSteamDatagramConnectionStatsRouterToServer::mutable_c2s() {
  set_has_c2s();
  if (c2s_ == NULL) {
    c2s_ = new ::CMsgSteamDatagramConnectionQuality;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsRouterToServer.c2s)
  return c2s_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_allocated_c2s(::CMsgSteamDatagramConnectionQuality* c2s) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete c2s_;
  }
  if (c2s) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      c2s = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, c2s, submessage_arena);
    }
    set_has_c2s();
  } else {
    clear_has_c2s();
  }
  c2s_ = c2s;
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsRouterToServer.c2s)
}

// optional fixed32 client_timestamp = 3;
inline bool CMsgSteamDatagramConnectionStatsRouterToServer::has_client_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_has_client_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_has_client_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_client_timestamp() {
  client_timestamp_ = 0u;
  clear_has_client_timestamp();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsRouterToServer::client_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToServer.client_timestamp)
  return client_timestamp_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_client_timestamp(::google::protobuf::uint32 value) {
  set_has_client_timestamp();
  client_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToServer.client_timestamp)
}

// optional fixed32 router_timestamp = 4;
inline bool CMsgSteamDatagramConnectionStatsRouterToServer::has_router_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_has_router_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_has_router_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_router_timestamp() {
  router_timestamp_ = 0u;
  clear_has_router_timestamp();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsRouterToServer::router_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToServer.router_timestamp)
  return router_timestamp_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_router_timestamp(::google::protobuf::uint32 value) {
  set_has_router_timestamp();
  router_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToServer.router_timestamp)
}

// optional uint32 seq_num_r2s = 5;
inline bool CMsgSteamDatagramConnectionStatsRouterToServer::has_seq_num_r2s() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_has_seq_num_r2s() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_has_seq_num_r2s() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_seq_num_r2s() {
  seq_num_r2s_ = 0u;
  clear_has_seq_num_r2s();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsRouterToServer::seq_num_r2s() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToServer.seq_num_r2s)
  return seq_num_r2s_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_seq_num_r2s(::google::protobuf::uint32 value) {
  set_has_seq_num_r2s();
  seq_num_r2s_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToServer.seq_num_r2s)
}

// optional uint32 seq_num_c2s = 6;
inline bool CMsgSteamDatagramConnectionStatsRouterToServer::has_seq_num_c2s() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_has_seq_num_c2s() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_has_seq_num_c2s() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_seq_num_c2s() {
  seq_num_c2s_ = 0u;
  clear_has_seq_num_c2s();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsRouterToServer::seq_num_c2s() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToServer.seq_num_c2s)
  return seq_num_c2s_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_seq_num_c2s(::google::protobuf::uint32 value) {
  set_has_seq_num_c2s();
  seq_num_c2s_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToServer.seq_num_c2s)
}

// optional fixed64 client_steam_id = 7;
inline bool CMsgSteamDatagramConnectionStatsRouterToServer::has_client_steam_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_has_client_steam_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_has_client_steam_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_client_steam_id() {
  client_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_client_steam_id();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramConnectionStatsRouterToServer::client_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToServer.client_steam_id)
  return client_steam_id_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_client_steam_id(::google::protobuf::uint64 value) {
  set_has_client_steam_id();
  client_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToServer.client_steam_id)
}

// optional uint32 client_session_id = 8;
inline bool CMsgSteamDatagramConnectionStatsRouterToServer::has_client_session_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_has_client_session_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_has_client_session_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::clear_client_session_id() {
  client_session_id_ = 0u;
  clear_has_client_session_id();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsRouterToServer::client_session_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsRouterToServer.client_session_id)
  return client_session_id_;
}
inline void CMsgSteamDatagramConnectionStatsRouterToServer::set_client_session_id(::google::protobuf::uint32 value) {
  set_has_client_session_id();
  client_session_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsRouterToServer.client_session_id)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramConnectionStatsServerToRouter

// optional .CMsgSteamDatagramConnectionQuality s2r = 1;
inline bool CMsgSteamDatagramConnectionStatsServerToRouter::has_s2r() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::set_has_s2r() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::clear_has_s2r() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::clear_s2r() {
  if (s2r_ != NULL) s2r_->Clear();
  clear_has_s2r();
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsServerToRouter::s2r() const {
  const ::CMsgSteamDatagramConnectionQuality* p = s2r_;
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsServerToRouter.s2r)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgSteamDatagramConnectionQuality*>(
      &::_CMsgSteamDatagramConnectionQuality_default_instance_);
}
inline ::CMsgSteamDatagramConnectionQuality* CMsgSteamDatagramConnectionStatsServerToRouter::release_s2r() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionStatsServerToRouter.s2r)
  clear_has_s2r();
  ::CMsgSteamDatagramConnectionQuality* temp = s2r_;
  s2r_ = NULL;
  return temp;
}
inline ::CMsgSteamDatagramConnectionQuality* CMsgSteamDatagramConnectionStatsServerToRouter::mutable_s2r() {
  set_has_s2r();
  if (s2r_ == NULL) {
    s2r_ = new ::CMsgSteamDatagramConnectionQuality;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsServerToRouter.s2r)
  return s2r_;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::set_allocated_s2r(::CMsgSteamDatagramConnectionQuality* s2r) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete s2r_;
  }
  if (s2r) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      s2r = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, s2r, submessage_arena);
    }
    set_has_s2r();
  } else {
    clear_has_s2r();
  }
  s2r_ = s2r;
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsServerToRouter.s2r)
}

// optional .CMsgSteamDatagramConnectionQuality s2c = 2;
inline bool CMsgSteamDatagramConnectionStatsServerToRouter::has_s2c() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::set_has_s2c() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::clear_has_s2c() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::clear_s2c() {
  if (s2c_ != NULL) s2c_->Clear();
  clear_has_s2c();
}
inline const ::CMsgSteamDatagramConnectionQuality& CMsgSteamDatagramConnectionStatsServerToRouter::s2c() const {
  const ::CMsgSteamDatagramConnectionQuality* p = s2c_;
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsServerToRouter.s2c)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgSteamDatagramConnectionQuality*>(
      &::_CMsgSteamDatagramConnectionQuality_default_instance_);
}
inline ::CMsgSteamDatagramConnectionQuality* CMsgSteamDatagramConnectionStatsServerToRouter::release_s2c() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramConnectionStatsServerToRouter.s2c)
  clear_has_s2c();
  ::CMsgSteamDatagramConnectionQuality* temp = s2c_;
  s2c_ = NULL;
  return temp;
}
inline ::CMsgSteamDatagramConnectionQuality* CMsgSteamDatagramConnectionStatsServerToRouter::mutable_s2c() {
  set_has_s2c();
  if (s2c_ == NULL) {
    s2c_ = new ::CMsgSteamDatagramConnectionQuality;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramConnectionStatsServerToRouter.s2c)
  return s2c_;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::set_allocated_s2c(::CMsgSteamDatagramConnectionQuality* s2c) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete s2c_;
  }
  if (s2c) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      s2c = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, s2c, submessage_arena);
    }
    set_has_s2c();
  } else {
    clear_has_s2c();
  }
  s2c_ = s2c;
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramConnectionStatsServerToRouter.s2c)
}

// optional uint32 seq_num_s2r = 3;
inline bool CMsgSteamDatagramConnectionStatsServerToRouter::has_seq_num_s2r() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::set_has_seq_num_s2r() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::clear_has_seq_num_s2r() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::clear_seq_num_s2r() {
  seq_num_s2r_ = 0u;
  clear_has_seq_num_s2r();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsServerToRouter::seq_num_s2r() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsServerToRouter.seq_num_s2r)
  return seq_num_s2r_;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::set_seq_num_s2r(::google::protobuf::uint32 value) {
  set_has_seq_num_s2r();
  seq_num_s2r_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsServerToRouter.seq_num_s2r)
}

// optional uint32 seq_num_s2c = 4;
inline bool CMsgSteamDatagramConnectionStatsServerToRouter::has_seq_num_s2c() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::set_has_seq_num_s2c() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::clear_has_seq_num_s2c() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::clear_seq_num_s2c() {
  seq_num_s2c_ = 0u;
  clear_has_seq_num_s2c();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsServerToRouter::seq_num_s2c() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsServerToRouter.seq_num_s2c)
  return seq_num_s2c_;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::set_seq_num_s2c(::google::protobuf::uint32 value) {
  set_has_seq_num_s2c();
  seq_num_s2c_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsServerToRouter.seq_num_s2c)
}

// optional fixed64 client_steam_id = 5;
inline bool CMsgSteamDatagramConnectionStatsServerToRouter::has_client_steam_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::set_has_client_steam_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::clear_has_client_steam_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::clear_client_steam_id() {
  client_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_client_steam_id();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramConnectionStatsServerToRouter::client_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsServerToRouter.client_steam_id)
  return client_steam_id_;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::set_client_steam_id(::google::protobuf::uint64 value) {
  set_has_client_steam_id();
  client_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsServerToRouter.client_steam_id)
}

// optional uint32 client_session_id = 6;
inline bool CMsgSteamDatagramConnectionStatsServerToRouter::has_client_session_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::set_has_client_session_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::clear_has_client_session_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::clear_client_session_id() {
  client_session_id_ = 0u;
  clear_has_client_session_id();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramConnectionStatsServerToRouter::client_session_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramConnectionStatsServerToRouter.client_session_id)
  return client_session_id_;
}
inline void CMsgSteamDatagramConnectionStatsServerToRouter::set_client_session_id(::google::protobuf::uint32 value) {
  set_has_client_session_id();
  client_session_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramConnectionStatsServerToRouter.client_session_id)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramClientPingSampleRequest

// optional fixed32 client_cookie = 1;
inline bool CMsgSteamDatagramClientPingSampleRequest::has_client_cookie() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramClientPingSampleRequest::set_has_client_cookie() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramClientPingSampleRequest::clear_has_client_cookie() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramClientPingSampleRequest::clear_client_cookie() {
  client_cookie_ = 0u;
  clear_has_client_cookie();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientPingSampleRequest::client_cookie() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleRequest.client_cookie)
  return client_cookie_;
}
inline void CMsgSteamDatagramClientPingSampleRequest::set_client_cookie(::google::protobuf::uint32 value) {
  set_has_client_cookie();
  client_cookie_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleRequest.client_cookie)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramClientPingSampleReply_RoutingCluster

// optional fixed32 id = 1;
inline bool CMsgSteamDatagramClientPingSampleReply_RoutingCluster::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramClientPingSampleReply_RoutingCluster::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramClientPingSampleReply_RoutingCluster::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramClientPingSampleReply_RoutingCluster::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientPingSampleReply_RoutingCluster::id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.RoutingCluster.id)
  return id_;
}
inline void CMsgSteamDatagramClientPingSampleReply_RoutingCluster::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.RoutingCluster.id)
}

// optional uint32 front_ping_ms = 2;
inline bool CMsgSteamDatagramClientPingSampleReply_RoutingCluster::has_front_ping_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramClientPingSampleReply_RoutingCluster::set_has_front_ping_ms() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramClientPingSampleReply_RoutingCluster::clear_has_front_ping_ms() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramClientPingSampleReply_RoutingCluster::clear_front_ping_ms() {
  front_ping_ms_ = 0u;
  clear_has_front_ping_ms();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientPingSampleReply_RoutingCluster::front_ping_ms() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.RoutingCluster.front_ping_ms)
  return front_ping_ms_;
}
inline void CMsgSteamDatagramClientPingSampleReply_RoutingCluster::set_front_ping_ms(::google::protobuf::uint32 value) {
  set_has_front_ping_ms();
  front_ping_ms_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.RoutingCluster.front_ping_ms)
}

// optional uint32 e2e_ping_ms = 3;
inline bool CMsgSteamDatagramClientPingSampleReply_RoutingCluster::has_e2e_ping_ms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramClientPingSampleReply_RoutingCluster::set_has_e2e_ping_ms() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramClientPingSampleReply_RoutingCluster::clear_has_e2e_ping_ms() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramClientPingSampleReply_RoutingCluster::clear_e2e_ping_ms() {
  e2e_ping_ms_ = 0u;
  clear_has_e2e_ping_ms();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientPingSampleReply_RoutingCluster::e2e_ping_ms() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.RoutingCluster.e2e_ping_ms)
  return e2e_ping_ms_;
}
inline void CMsgSteamDatagramClientPingSampleReply_RoutingCluster::set_e2e_ping_ms(::google::protobuf::uint32 value) {
  set_has_e2e_ping_ms();
  e2e_ping_ms_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.RoutingCluster.e2e_ping_ms)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramClientPingSampleReply_DataCenter

// optional fixed32 data_center_id = 1;
inline bool CMsgSteamDatagramClientPingSampleReply_DataCenter::has_data_center_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramClientPingSampleReply_DataCenter::set_has_data_center_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramClientPingSampleReply_DataCenter::clear_has_data_center_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramClientPingSampleReply_DataCenter::clear_data_center_id() {
  data_center_id_ = 0u;
  clear_has_data_center_id();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientPingSampleReply_DataCenter::data_center_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.DataCenter.data_center_id)
  return data_center_id_;
}
inline void CMsgSteamDatagramClientPingSampleReply_DataCenter::set_data_center_id(::google::protobuf::uint32 value) {
  set_has_data_center_id();
  data_center_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.DataCenter.data_center_id)
}

// optional fixed32 via_relay_id = 2;
inline bool CMsgSteamDatagramClientPingSampleReply_DataCenter::has_via_relay_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramClientPingSampleReply_DataCenter::set_has_via_relay_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramClientPingSampleReply_DataCenter::clear_has_via_relay_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramClientPingSampleReply_DataCenter::clear_via_relay_id() {
  via_relay_id_ = 0u;
  clear_has_via_relay_id();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientPingSampleReply_DataCenter::via_relay_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.DataCenter.via_relay_id)
  return via_relay_id_;
}
inline void CMsgSteamDatagramClientPingSampleReply_DataCenter::set_via_relay_id(::google::protobuf::uint32 value) {
  set_has_via_relay_id();
  via_relay_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.DataCenter.via_relay_id)
}

// optional uint32 e2e_ping_ms = 3;
inline bool CMsgSteamDatagramClientPingSampleReply_DataCenter::has_e2e_ping_ms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramClientPingSampleReply_DataCenter::set_has_e2e_ping_ms() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramClientPingSampleReply_DataCenter::clear_has_e2e_ping_ms() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramClientPingSampleReply_DataCenter::clear_e2e_ping_ms() {
  e2e_ping_ms_ = 0u;
  clear_has_e2e_ping_ms();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientPingSampleReply_DataCenter::e2e_ping_ms() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.DataCenter.e2e_ping_ms)
  return e2e_ping_ms_;
}
inline void CMsgSteamDatagramClientPingSampleReply_DataCenter::set_e2e_ping_ms(::google::protobuf::uint32 value) {
  set_has_e2e_ping_ms();
  e2e_ping_ms_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.DataCenter.e2e_ping_ms)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramClientPingSampleReply

// optional fixed32 client_cookie = 1;
inline bool CMsgSteamDatagramClientPingSampleReply::has_client_cookie() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramClientPingSampleReply::set_has_client_cookie() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramClientPingSampleReply::clear_has_client_cookie() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramClientPingSampleReply::clear_client_cookie() {
  client_cookie_ = 0u;
  clear_has_client_cookie();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientPingSampleReply::client_cookie() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.client_cookie)
  return client_cookie_;
}
inline void CMsgSteamDatagramClientPingSampleReply::set_client_cookie(::google::protobuf::uint32 value) {
  set_has_client_cookie();
  client_cookie_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientPingSampleReply.client_cookie)
}

// repeated .CMsgSteamDatagramClientPingSampleReply.RoutingCluster routing_clusters = 2;
inline int CMsgSteamDatagramClientPingSampleReply::routing_clusters_size() const {
  return routing_clusters_.size();
}
inline void CMsgSteamDatagramClientPingSampleReply::clear_routing_clusters() {
  routing_clusters_.Clear();
}
inline const ::CMsgSteamDatagramClientPingSampleReply_RoutingCluster& CMsgSteamDatagramClientPingSampleReply::routing_clusters(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.routing_clusters)
  return routing_clusters_.Get(index);
}
inline ::CMsgSteamDatagramClientPingSampleReply_RoutingCluster* CMsgSteamDatagramClientPingSampleReply::mutable_routing_clusters(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramClientPingSampleReply.routing_clusters)
  return routing_clusters_.Mutable(index);
}
inline ::CMsgSteamDatagramClientPingSampleReply_RoutingCluster* CMsgSteamDatagramClientPingSampleReply::add_routing_clusters() {
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramClientPingSampleReply.routing_clusters)
  return routing_clusters_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramClientPingSampleReply_RoutingCluster >*
CMsgSteamDatagramClientPingSampleReply::mutable_routing_clusters() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramClientPingSampleReply.routing_clusters)
  return &routing_clusters_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramClientPingSampleReply_RoutingCluster >&
CMsgSteamDatagramClientPingSampleReply::routing_clusters() const {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramClientPingSampleReply.routing_clusters)
  return routing_clusters_;
}

// repeated .CMsgSteamDatagramClientPingSampleReply.DataCenter data_centers = 3;
inline int CMsgSteamDatagramClientPingSampleReply::data_centers_size() const {
  return data_centers_.size();
}
inline void CMsgSteamDatagramClientPingSampleReply::clear_data_centers() {
  data_centers_.Clear();
}
inline const ::CMsgSteamDatagramClientPingSampleReply_DataCenter& CMsgSteamDatagramClientPingSampleReply::data_centers(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientPingSampleReply.data_centers)
  return data_centers_.Get(index);
}
inline ::CMsgSteamDatagramClientPingSampleReply_DataCenter* CMsgSteamDatagramClientPingSampleReply::mutable_data_centers(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramClientPingSampleReply.data_centers)
  return data_centers_.Mutable(index);
}
inline ::CMsgSteamDatagramClientPingSampleReply_DataCenter* CMsgSteamDatagramClientPingSampleReply::add_data_centers() {
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramClientPingSampleReply.data_centers)
  return data_centers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramClientPingSampleReply_DataCenter >*
CMsgSteamDatagramClientPingSampleReply::mutable_data_centers() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramClientPingSampleReply.data_centers)
  return &data_centers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramClientPingSampleReply_DataCenter >&
CMsgSteamDatagramClientPingSampleReply::data_centers() const {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramClientPingSampleReply.data_centers)
  return data_centers_;
}

// -------------------------------------------------------------------

// CMsgSteamDatagramClientSwitchedPrimary_RouterQuality

// optional uint32 score = 1;
inline bool CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::score() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality.score)
  return score_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality.score)
}

// optional uint32 front_ping = 2;
inline bool CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::has_front_ping() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::set_has_front_ping() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::clear_has_front_ping() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::clear_front_ping() {
  front_ping_ = 0u;
  clear_has_front_ping();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::front_ping() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality.front_ping)
  return front_ping_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::set_front_ping(::google::protobuf::uint32 value) {
  set_has_front_ping();
  front_ping_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality.front_ping)
}

// optional uint32 back_ping = 3;
inline bool CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::has_back_ping() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::set_has_back_ping() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::clear_has_back_ping() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::clear_back_ping() {
  back_ping_ = 0u;
  clear_has_back_ping();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::back_ping() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality.back_ping)
  return back_ping_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::set_back_ping(::google::protobuf::uint32 value) {
  set_has_back_ping();
  back_ping_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality.back_ping)
}

// optional uint32 seconds_until_down = 4;
inline bool CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::has_seconds_until_down() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::set_has_seconds_until_down() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::clear_has_seconds_until_down() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::clear_seconds_until_down() {
  seconds_until_down_ = 0u;
  clear_has_seconds_until_down();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::seconds_until_down() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality.seconds_until_down)
  return seconds_until_down_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary_RouterQuality::set_seconds_until_down(::google::protobuf::uint32 value) {
  set_has_seconds_until_down();
  seconds_until_down_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.RouterQuality.seconds_until_down)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramClientSwitchedPrimary

// optional fixed32 client_cookie = 1;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_client_cookie() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_has_client_cookie() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_has_client_cookie() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_client_cookie() {
  client_cookie_ = 0u;
  clear_has_client_cookie();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientSwitchedPrimary::client_cookie() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.client_cookie)
  return client_cookie_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_client_cookie(::google::protobuf::uint32 value) {
  set_has_client_cookie();
  client_cookie_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.client_cookie)
}

// optional fixed32 from_ip = 2;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_from_ip() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_has_from_ip() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_has_from_ip() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_from_ip() {
  from_ip_ = 0u;
  clear_has_from_ip();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientSwitchedPrimary::from_ip() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.from_ip)
  return from_ip_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_from_ip(::google::protobuf::uint32 value) {
  set_has_from_ip();
  from_ip_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.from_ip)
}

// optional uint32 from_port = 3;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_from_port() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_has_from_port() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_has_from_port() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_from_port() {
  from_port_ = 0u;
  clear_has_from_port();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientSwitchedPrimary::from_port() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.from_port)
  return from_port_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_from_port(::google::protobuf::uint32 value) {
  set_has_from_port();
  from_port_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.from_port)
}

// optional fixed32 from_router_cluster = 4;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_from_router_cluster() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_has_from_router_cluster() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_has_from_router_cluster() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_from_router_cluster() {
  from_router_cluster_ = 0u;
  clear_has_from_router_cluster();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientSwitchedPrimary::from_router_cluster() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.from_router_cluster)
  return from_router_cluster_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_from_router_cluster(::google::protobuf::uint32 value) {
  set_has_from_router_cluster();
  from_router_cluster_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.from_router_cluster)
}

// optional uint32 from_active_time = 5;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_from_active_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_has_from_active_time() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_has_from_active_time() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_from_active_time() {
  from_active_time_ = 0u;
  clear_has_from_active_time();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientSwitchedPrimary::from_active_time() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.from_active_time)
  return from_active_time_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_from_active_time(::google::protobuf::uint32 value) {
  set_has_from_active_time();
  from_active_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.from_active_time)
}

// optional uint32 from_active_packets_recv = 6;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_from_active_packets_recv() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_has_from_active_packets_recv() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_has_from_active_packets_recv() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_from_active_packets_recv() {
  from_active_packets_recv_ = 0u;
  clear_has_from_active_packets_recv();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientSwitchedPrimary::from_active_packets_recv() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.from_active_packets_recv)
  return from_active_packets_recv_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_from_active_packets_recv(::google::protobuf::uint32 value) {
  set_has_from_active_packets_recv();
  from_active_packets_recv_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.from_active_packets_recv)
}

// optional string from_dropped_reason = 7;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_from_dropped_reason() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_has_from_dropped_reason() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_has_from_dropped_reason() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_from_dropped_reason() {
  from_dropped_reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_from_dropped_reason();
}
inline const ::std::string& CMsgSteamDatagramClientSwitchedPrimary::from_dropped_reason() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.from_dropped_reason)
  return from_dropped_reason_.GetNoArena();
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_from_dropped_reason(const ::std::string& value) {
  set_has_from_dropped_reason();
  from_dropped_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.from_dropped_reason)
}
#if LANG_CXX11
inline void CMsgSteamDatagramClientSwitchedPrimary::set_from_dropped_reason(::std::string&& value) {
  set_has_from_dropped_reason();
  from_dropped_reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgSteamDatagramClientSwitchedPrimary.from_dropped_reason)
}
#endif
inline void CMsgSteamDatagramClientSwitchedPrimary::set_from_dropped_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_from_dropped_reason();
  from_dropped_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgSteamDatagramClientSwitchedPrimary.from_dropped_reason)
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_from_dropped_reason(const char* value, size_t size) {
  set_has_from_dropped_reason();
  from_dropped_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgSteamDatagramClientSwitchedPrimary.from_dropped_reason)
}
inline ::std::string* CMsgSteamDatagramClientSwitchedPrimary::mutable_from_dropped_reason() {
  set_has_from_dropped_reason();
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramClientSwitchedPrimary.from_dropped_reason)
  return from_dropped_reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSteamDatagramClientSwitchedPrimary::release_from_dropped_reason() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramClientSwitchedPrimary.from_dropped_reason)
  clear_has_from_dropped_reason();
  return from_dropped_reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_allocated_from_dropped_reason(::std::string* from_dropped_reason) {
  if (from_dropped_reason != NULL) {
    set_has_from_dropped_reason();
  } else {
    clear_has_from_dropped_reason();
  }
  from_dropped_reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_dropped_reason);
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramClientSwitchedPrimary.from_dropped_reason)
}

// optional uint32 gap_ms = 8;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_gap_ms() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_has_gap_ms() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_has_gap_ms() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_gap_ms() {
  gap_ms_ = 0u;
  clear_has_gap_ms();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramClientSwitchedPrimary::gap_ms() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.gap_ms)
  return gap_ms_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_gap_ms(::google::protobuf::uint32 value) {
  set_has_gap_ms();
  gap_ms_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramClientSwitchedPrimary.gap_ms)
}

// optional .CMsgSteamDatagramClientSwitchedPrimary.RouterQuality from_quality_now = 9;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_from_quality_now() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_has_from_quality_now() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_has_from_quality_now() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_from_quality_now() {
  if (from_quality_now_ != NULL) from_quality_now_->Clear();
  clear_has_from_quality_now();
}
inline const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& CMsgSteamDatagramClientSwitchedPrimary::from_quality_now() const {
  const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* p = from_quality_now_;
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.from_quality_now)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality*>(
      &::_CMsgSteamDatagramClientSwitchedPrimary_RouterQuality_default_instance_);
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* CMsgSteamDatagramClientSwitchedPrimary::release_from_quality_now() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramClientSwitchedPrimary.from_quality_now)
  clear_has_from_quality_now();
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* temp = from_quality_now_;
  from_quality_now_ = NULL;
  return temp;
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* CMsgSteamDatagramClientSwitchedPrimary::mutable_from_quality_now() {
  set_has_from_quality_now();
  if (from_quality_now_ == NULL) {
    from_quality_now_ = new ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramClientSwitchedPrimary.from_quality_now)
  return from_quality_now_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_allocated_from_quality_now(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* from_quality_now) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete from_quality_now_;
  }
  if (from_quality_now) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      from_quality_now = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, from_quality_now, submessage_arena);
    }
    set_has_from_quality_now();
  } else {
    clear_has_from_quality_now();
  }
  from_quality_now_ = from_quality_now;
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramClientSwitchedPrimary.from_quality_now)
}

// optional .CMsgSteamDatagramClientSwitchedPrimary.RouterQuality to_quality_now = 10;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_to_quality_now() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_has_to_quality_now() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_has_to_quality_now() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_to_quality_now() {
  if (to_quality_now_ != NULL) to_quality_now_->Clear();
  clear_has_to_quality_now();
}
inline const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& CMsgSteamDatagramClientSwitchedPrimary::to_quality_now() const {
  const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* p = to_quality_now_;
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.to_quality_now)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality*>(
      &::_CMsgSteamDatagramClientSwitchedPrimary_RouterQuality_default_instance_);
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* CMsgSteamDatagramClientSwitchedPrimary::release_to_quality_now() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramClientSwitchedPrimary.to_quality_now)
  clear_has_to_quality_now();
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* temp = to_quality_now_;
  to_quality_now_ = NULL;
  return temp;
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* CMsgSteamDatagramClientSwitchedPrimary::mutable_to_quality_now() {
  set_has_to_quality_now();
  if (to_quality_now_ == NULL) {
    to_quality_now_ = new ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramClientSwitchedPrimary.to_quality_now)
  return to_quality_now_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_allocated_to_quality_now(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* to_quality_now) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete to_quality_now_;
  }
  if (to_quality_now) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      to_quality_now = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, to_quality_now, submessage_arena);
    }
    set_has_to_quality_now();
  } else {
    clear_has_to_quality_now();
  }
  to_quality_now_ = to_quality_now;
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramClientSwitchedPrimary.to_quality_now)
}

// optional .CMsgSteamDatagramClientSwitchedPrimary.RouterQuality from_quality_then = 11;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_from_quality_then() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_has_from_quality_then() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_has_from_quality_then() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_from_quality_then() {
  if (from_quality_then_ != NULL) from_quality_then_->Clear();
  clear_has_from_quality_then();
}
inline const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& CMsgSteamDatagramClientSwitchedPrimary::from_quality_then() const {
  const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* p = from_quality_then_;
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.from_quality_then)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality*>(
      &::_CMsgSteamDatagramClientSwitchedPrimary_RouterQuality_default_instance_);
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* CMsgSteamDatagramClientSwitchedPrimary::release_from_quality_then() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramClientSwitchedPrimary.from_quality_then)
  clear_has_from_quality_then();
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* temp = from_quality_then_;
  from_quality_then_ = NULL;
  return temp;
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* CMsgSteamDatagramClientSwitchedPrimary::mutable_from_quality_then() {
  set_has_from_quality_then();
  if (from_quality_then_ == NULL) {
    from_quality_then_ = new ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramClientSwitchedPrimary.from_quality_then)
  return from_quality_then_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_allocated_from_quality_then(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* from_quality_then) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete from_quality_then_;
  }
  if (from_quality_then) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      from_quality_then = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, from_quality_then, submessage_arena);
    }
    set_has_from_quality_then();
  } else {
    clear_has_from_quality_then();
  }
  from_quality_then_ = from_quality_then;
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramClientSwitchedPrimary.from_quality_then)
}

// optional .CMsgSteamDatagramClientSwitchedPrimary.RouterQuality to_quality_then = 12;
inline bool CMsgSteamDatagramClientSwitchedPrimary::has_to_quality_then() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_has_to_quality_then() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_has_to_quality_then() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::clear_to_quality_then() {
  if (to_quality_then_ != NULL) to_quality_then_->Clear();
  clear_has_to_quality_then();
}
inline const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality& CMsgSteamDatagramClientSwitchedPrimary::to_quality_then() const {
  const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* p = to_quality_then_;
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramClientSwitchedPrimary.to_quality_then)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality*>(
      &::_CMsgSteamDatagramClientSwitchedPrimary_RouterQuality_default_instance_);
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* CMsgSteamDatagramClientSwitchedPrimary::release_to_quality_then() {
  // @@protoc_insertion_point(field_release:CMsgSteamDatagramClientSwitchedPrimary.to_quality_then)
  clear_has_to_quality_then();
  ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* temp = to_quality_then_;
  to_quality_then_ = NULL;
  return temp;
}
inline ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* CMsgSteamDatagramClientSwitchedPrimary::mutable_to_quality_then() {
  set_has_to_quality_then();
  if (to_quality_then_ == NULL) {
    to_quality_then_ = new ::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramClientSwitchedPrimary.to_quality_then)
  return to_quality_then_;
}
inline void CMsgSteamDatagramClientSwitchedPrimary::set_allocated_to_quality_then(::CMsgSteamDatagramClientSwitchedPrimary_RouterQuality* to_quality_then) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete to_quality_then_;
  }
  if (to_quality_then) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      to_quality_then = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, to_quality_then, submessage_arena);
    }
    set_has_to_quality_then();
  } else {
    clear_has_to_quality_then();
  }
  to_quality_then_ = to_quality_then;
  // @@protoc_insertion_point(field_set_allocated:CMsgSteamDatagramClientSwitchedPrimary.to_quality_then)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramRouterHealth_DataCenter

// optional fixed32 datacenter_id = 1;
inline bool CMsgSteamDatagramRouterHealth_DataCenter::has_datacenter_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramRouterHealth_DataCenter::set_has_datacenter_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramRouterHealth_DataCenter::clear_has_datacenter_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramRouterHealth_DataCenter::clear_datacenter_id() {
  datacenter_id_ = 0u;
  clear_has_datacenter_id();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRouterHealth_DataCenter::datacenter_id() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterHealth.DataCenter.datacenter_id)
  return datacenter_id_;
}
inline void CMsgSteamDatagramRouterHealth_DataCenter::set_datacenter_id(::google::protobuf::uint32 value) {
  set_has_datacenter_id();
  datacenter_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterHealth.DataCenter.datacenter_id)
}

// optional uint32 state = 2;
inline bool CMsgSteamDatagramRouterHealth_DataCenter::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramRouterHealth_DataCenter::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramRouterHealth_DataCenter::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramRouterHealth_DataCenter::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRouterHealth_DataCenter::state() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterHealth.DataCenter.state)
  return state_;
}
inline void CMsgSteamDatagramRouterHealth_DataCenter::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterHealth.DataCenter.state)
}

// -------------------------------------------------------------------

// CMsgSteamDatagramRouterHealth

// optional float cpu_load = 1;
inline bool CMsgSteamDatagramRouterHealth::has_cpu_load() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamDatagramRouterHealth::set_has_cpu_load() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamDatagramRouterHealth::clear_has_cpu_load() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamDatagramRouterHealth::clear_cpu_load() {
  cpu_load_ = 0;
  clear_has_cpu_load();
}
inline float CMsgSteamDatagramRouterHealth::cpu_load() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterHealth.cpu_load)
  return cpu_load_;
}
inline void CMsgSteamDatagramRouterHealth::set_cpu_load(float value) {
  set_has_cpu_load();
  cpu_load_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterHealth.cpu_load)
}

// optional uint32 active_sessions = 2;
inline bool CMsgSteamDatagramRouterHealth::has_active_sessions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSteamDatagramRouterHealth::set_has_active_sessions() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSteamDatagramRouterHealth::clear_has_active_sessions() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSteamDatagramRouterHealth::clear_active_sessions() {
  active_sessions_ = 0u;
  clear_has_active_sessions();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRouterHealth::active_sessions() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterHealth.active_sessions)
  return active_sessions_;
}
inline void CMsgSteamDatagramRouterHealth::set_active_sessions(::google::protobuf::uint32 value) {
  set_has_active_sessions();
  active_sessions_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterHealth.active_sessions)
}

// optional uint32 data_pkts_sec = 3;
inline bool CMsgSteamDatagramRouterHealth::has_data_pkts_sec() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSteamDatagramRouterHealth::set_has_data_pkts_sec() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSteamDatagramRouterHealth::clear_has_data_pkts_sec() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSteamDatagramRouterHealth::clear_data_pkts_sec() {
  data_pkts_sec_ = 0u;
  clear_has_data_pkts_sec();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRouterHealth::data_pkts_sec() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterHealth.data_pkts_sec)
  return data_pkts_sec_;
}
inline void CMsgSteamDatagramRouterHealth::set_data_pkts_sec(::google::protobuf::uint32 value) {
  set_has_data_pkts_sec();
  data_pkts_sec_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterHealth.data_pkts_sec)
}

// optional uint32 other_pkts_sec = 4;
inline bool CMsgSteamDatagramRouterHealth::has_other_pkts_sec() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSteamDatagramRouterHealth::set_has_other_pkts_sec() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSteamDatagramRouterHealth::clear_has_other_pkts_sec() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSteamDatagramRouterHealth::clear_other_pkts_sec() {
  other_pkts_sec_ = 0u;
  clear_has_other_pkts_sec();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRouterHealth::other_pkts_sec() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterHealth.other_pkts_sec)
  return other_pkts_sec_;
}
inline void CMsgSteamDatagramRouterHealth::set_other_pkts_sec(::google::protobuf::uint32 value) {
  set_has_other_pkts_sec();
  other_pkts_sec_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterHealth.other_pkts_sec)
}

// optional uint32 seconds_until_shutdown = 5;
inline bool CMsgSteamDatagramRouterHealth::has_seconds_until_shutdown() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSteamDatagramRouterHealth::set_has_seconds_until_shutdown() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSteamDatagramRouterHealth::clear_has_seconds_until_shutdown() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSteamDatagramRouterHealth::clear_seconds_until_shutdown() {
  seconds_until_shutdown_ = 0u;
  clear_has_seconds_until_shutdown();
}
inline ::google::protobuf::uint32 CMsgSteamDatagramRouterHealth::seconds_until_shutdown() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterHealth.seconds_until_shutdown)
  return seconds_until_shutdown_;
}
inline void CMsgSteamDatagramRouterHealth::set_seconds_until_shutdown(::google::protobuf::uint32 value) {
  set_has_seconds_until_shutdown();
  seconds_until_shutdown_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterHealth.seconds_until_shutdown)
}

// optional float cpu_cost_per_user = 8;
inline bool CMsgSteamDatagramRouterHealth::has_cpu_cost_per_user() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSteamDatagramRouterHealth::set_has_cpu_cost_per_user() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSteamDatagramRouterHealth::clear_has_cpu_cost_per_user() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSteamDatagramRouterHealth::clear_cpu_cost_per_user() {
  cpu_cost_per_user_ = 0;
  clear_has_cpu_cost_per_user();
}
inline float CMsgSteamDatagramRouterHealth::cpu_cost_per_user() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterHealth.cpu_cost_per_user)
  return cpu_cost_per_user_;
}
inline void CMsgSteamDatagramRouterHealth::set_cpu_cost_per_user(float value) {
  set_has_cpu_cost_per_user();
  cpu_cost_per_user_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterHealth.cpu_cost_per_user)
}

// optional float cpu_cost_per_packet = 9;
inline bool CMsgSteamDatagramRouterHealth::has_cpu_cost_per_packet() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgSteamDatagramRouterHealth::set_has_cpu_cost_per_packet() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgSteamDatagramRouterHealth::clear_has_cpu_cost_per_packet() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgSteamDatagramRouterHealth::clear_cpu_cost_per_packet() {
  cpu_cost_per_packet_ = 0;
  clear_has_cpu_cost_per_packet();
}
inline float CMsgSteamDatagramRouterHealth::cpu_cost_per_packet() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterHealth.cpu_cost_per_packet)
  return cpu_cost_per_packet_;
}
inline void CMsgSteamDatagramRouterHealth::set_cpu_cost_per_packet(float value) {
  set_has_cpu_cost_per_packet();
  cpu_cost_per_packet_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterHealth.cpu_cost_per_packet)
}

// repeated .CMsgSteamDatagramRouterHealth.DataCenter data_centers = 6;
inline int CMsgSteamDatagramRouterHealth::data_centers_size() const {
  return data_centers_.size();
}
inline void CMsgSteamDatagramRouterHealth::clear_data_centers() {
  data_centers_.Clear();
}
inline const ::CMsgSteamDatagramRouterHealth_DataCenter& CMsgSteamDatagramRouterHealth::data_centers(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterHealth.data_centers)
  return data_centers_.Get(index);
}
inline ::CMsgSteamDatagramRouterHealth_DataCenter* CMsgSteamDatagramRouterHealth::mutable_data_centers(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSteamDatagramRouterHealth.data_centers)
  return data_centers_.Mutable(index);
}
inline ::CMsgSteamDatagramRouterHealth_DataCenter* CMsgSteamDatagramRouterHealth::add_data_centers() {
  // @@protoc_insertion_point(field_add:CMsgSteamDatagramRouterHealth.data_centers)
  return data_centers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramRouterHealth_DataCenter >*
CMsgSteamDatagramRouterHealth::mutable_data_centers() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSteamDatagramRouterHealth.data_centers)
  return &data_centers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSteamDatagramRouterHealth_DataCenter >&
CMsgSteamDatagramRouterHealth::data_centers() const {
  // @@protoc_insertion_point(field_list:CMsgSteamDatagramRouterHealth.data_centers)
  return data_centers_;
}

// optional fixed64 magic = 7;
inline bool CMsgSteamDatagramRouterHealth::has_magic() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgSteamDatagramRouterHealth::set_has_magic() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgSteamDatagramRouterHealth::clear_has_magic() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgSteamDatagramRouterHealth::clear_magic() {
  magic_ = GOOGLE_ULONGLONG(0);
  clear_has_magic();
}
inline ::google::protobuf::uint64 CMsgSteamDatagramRouterHealth::magic() const {
  // @@protoc_insertion_point(field_get:CMsgSteamDatagramRouterHealth.magic)
  return magic_;
}
inline void CMsgSteamDatagramRouterHealth::set_magic(::google::protobuf::uint64 value) {
  set_has_magic();
  magic_ = value;
  // @@protoc_insertion_point(field_set:CMsgSteamDatagramRouterHealth.magic)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ESteamDatagramMsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ESteamDatagramMsgID>() {
  return ::ESteamDatagramMsgID_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_steamdatagram_5fmessages_2eproto__INCLUDED
