// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gcsystemmsgs.proto

#ifndef PROTOBUF_gcsystemmsgs_2eproto__INCLUDED
#define PROTOBUF_gcsystemmsgs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_gcsystemmsgs_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCMsgGCHVacVerificationChangeImpl();
void InitDefaultsCMsgGCHVacVerificationChange();
void InitDefaultsCMsgGCHAccountPhoneNumberChangeImpl();
void InitDefaultsCMsgGCHAccountPhoneNumberChange();
void InitDefaultsCMsgGCHInviteUserToLobbyImpl();
void InitDefaultsCMsgGCHInviteUserToLobby();
inline void InitDefaults() {
  InitDefaultsCMsgGCHVacVerificationChange();
  InitDefaultsCMsgGCHAccountPhoneNumberChange();
  InitDefaultsCMsgGCHInviteUserToLobby();
}
}  // namespace protobuf_gcsystemmsgs_2eproto
class CMsgGCHAccountPhoneNumberChange;
class CMsgGCHAccountPhoneNumberChangeDefaultTypeInternal;
extern CMsgGCHAccountPhoneNumberChangeDefaultTypeInternal _CMsgGCHAccountPhoneNumberChange_default_instance_;
class CMsgGCHInviteUserToLobby;
class CMsgGCHInviteUserToLobbyDefaultTypeInternal;
extern CMsgGCHInviteUserToLobbyDefaultTypeInternal _CMsgGCHInviteUserToLobby_default_instance_;
class CMsgGCHVacVerificationChange;
class CMsgGCHVacVerificationChangeDefaultTypeInternal;
extern CMsgGCHVacVerificationChangeDefaultTypeInternal _CMsgGCHVacVerificationChange_default_instance_;

enum EGCSystemMsg {
  k_EGCMsgInvalid = 0,
  k_EGCMsgMulti = 1,
  k_EGCMsgGenericReply = 10,
  k_EGCMsgSystemBase = 50,
  k_EGCMsgAchievementAwarded = 51,
  k_EGCMsgConCommand = 52,
  k_EGCMsgStartPlaying = 53,
  k_EGCMsgStopPlaying = 54,
  k_EGCMsgStartGameserver = 55,
  k_EGCMsgStopGameserver = 56,
  k_EGCMsgWGRequest = 57,
  k_EGCMsgWGResponse = 58,
  k_EGCMsgGetUserGameStatsSchema = 59,
  k_EGCMsgGetUserGameStatsSchemaResponse = 60,
  k_EGCMsgGetUserStatsDEPRECATED = 61,
  k_EGCMsgGetUserStatsResponse = 62,
  k_EGCMsgAppInfoUpdated = 63,
  k_EGCMsgValidateSession = 64,
  k_EGCMsgValidateSessionResponse = 65,
  k_EGCMsgLookupAccountFromInput = 66,
  k_EGCMsgSendHTTPRequest = 67,
  k_EGCMsgSendHTTPRequestResponse = 68,
  k_EGCMsgPreTestSetup = 69,
  k_EGCMsgRecordSupportAction = 70,
  k_EGCMsgGetAccountDetails_DEPRECATED = 71,
  k_EGCMsgReceiveInterAppMessage = 73,
  k_EGCMsgFindAccounts = 74,
  k_EGCMsgPostAlert = 75,
  k_EGCMsgGetLicenses = 76,
  k_EGCMsgGetUserStats = 77,
  k_EGCMsgGetCommands = 78,
  k_EGCMsgGetCommandsResponse = 79,
  k_EGCMsgAddFreeLicense = 80,
  k_EGCMsgAddFreeLicenseResponse = 81,
  k_EGCMsgGetIPLocation = 82,
  k_EGCMsgGetIPLocationResponse = 83,
  k_EGCMsgSystemStatsSchema = 84,
  k_EGCMsgGetSystemStats = 85,
  k_EGCMsgGetSystemStatsResponse = 86,
  k_EGCMsgSendEmail = 87,
  k_EGCMsgSendEmailResponse = 88,
  k_EGCMsgGetEmailTemplate = 89,
  k_EGCMsgGetEmailTemplateResponse = 90,
  k_EGCMsgGrantGuestPass = 91,
  k_EGCMsgGrantGuestPassResponse = 92,
  k_EGCMsgGetAccountDetails = 93,
  k_EGCMsgGetAccountDetailsResponse = 94,
  k_EGCMsgGetPersonaNames = 95,
  k_EGCMsgGetPersonaNamesResponse = 96,
  k_EGCMsgMultiplexMsg = 97,
  k_EGCMsgMultiplexMsgResponse = 98,
  k_EGCMsgWebAPIRegisterInterfaces = 101,
  k_EGCMsgWebAPIJobRequest = 102,
  k_EGCMsgWebAPIJobRequestHttpResponse = 104,
  k_EGCMsgWebAPIJobRequestForwardResponse = 105,
  k_EGCMsgMemCachedGet = 200,
  k_EGCMsgMemCachedGetResponse = 201,
  k_EGCMsgMemCachedSet = 202,
  k_EGCMsgMemCachedDelete = 203,
  k_EGCMsgMemCachedStats = 204,
  k_EGCMsgMemCachedStatsResponse = 205,
  k_EGCMsgMasterSetDirectory = 220,
  k_EGCMsgMasterSetDirectoryResponse = 221,
  k_EGCMsgMasterSetWebAPIRouting = 222,
  k_EGCMsgMasterSetWebAPIRoutingResponse = 223,
  k_EGCMsgMasterSetClientMsgRouting = 224,
  k_EGCMsgMasterSetClientMsgRoutingResponse = 225,
  k_EGCMsgSetOptions = 226,
  k_EGCMsgSetOptionsResponse = 227,
  k_EGCMsgSystemBase2 = 500,
  k_EGCMsgGetPurchaseTrustStatus = 501,
  k_EGCMsgGetPurchaseTrustStatusResponse = 502,
  k_EGCMsgUpdateSession = 503,
  k_EGCMsgGCAccountVacStatusChange = 504,
  k_EGCMsgCheckFriendship = 505,
  k_EGCMsgCheckFriendshipResponse = 506,
  k_EGCMsgGetPartnerAccountLink = 507,
  k_EGCMsgGetPartnerAccountLinkResponse = 508,
  k_EGCMsgDPPartnerMicroTxns = 512,
  k_EGCMsgDPPartnerMicroTxnsResponse = 513,
  k_EGCMsgVacVerificationChange = 518,
  k_EGCMsgAccountPhoneNumberChange = 519,
  k_EGCMsgInviteUserToLobby = 523
};
bool EGCSystemMsg_IsValid(int value);
const EGCSystemMsg EGCSystemMsg_MIN = k_EGCMsgInvalid;
const EGCSystemMsg EGCSystemMsg_MAX = k_EGCMsgInviteUserToLobby;
const int EGCSystemMsg_ARRAYSIZE = EGCSystemMsg_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGCSystemMsg_descriptor();
inline const ::std::string& EGCSystemMsg_Name(EGCSystemMsg value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGCSystemMsg_descriptor(), value);
}
inline bool EGCSystemMsg_Parse(
    const ::std::string& name, EGCSystemMsg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGCSystemMsg>(
    EGCSystemMsg_descriptor(), name, value);
}
enum ESOMsg {
  k_ESOMsg_Create = 21,
  k_ESOMsg_Update = 22,
  k_ESOMsg_Destroy = 23,
  k_ESOMsg_CacheSubscribed = 24,
  k_ESOMsg_CacheUnsubscribed = 25,
  k_ESOMsg_UpdateMultiple = 26,
  k_ESOMsg_CacheSubscriptionCheck = 27,
  k_ESOMsg_CacheSubscriptionRefresh = 28
};
bool ESOMsg_IsValid(int value);
const ESOMsg ESOMsg_MIN = k_ESOMsg_Create;
const ESOMsg ESOMsg_MAX = k_ESOMsg_CacheSubscriptionRefresh;
const int ESOMsg_ARRAYSIZE = ESOMsg_MAX + 1;

const ::google::protobuf::EnumDescriptor* ESOMsg_descriptor();
inline const ::std::string& ESOMsg_Name(ESOMsg value) {
  return ::google::protobuf::internal::NameOfEnum(
    ESOMsg_descriptor(), value);
}
inline bool ESOMsg_Parse(
    const ::std::string& name, ESOMsg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESOMsg>(
    ESOMsg_descriptor(), name, value);
}
enum EGCBaseClientMsg {
  k_EMsgGCClientWelcome = 4004,
  k_EMsgGCServerWelcome = 4005,
  k_EMsgGCClientHello = 4006,
  k_EMsgGCServerHello = 4007,
  k_EMsgGCClientConnectionStatus = 4009,
  k_EMsgGCServerConnectionStatus = 4010,
  k_EMsgGCClientHelloPartner = 4011,
  k_EMsgGCClientHelloPW = 4012,
  k_EMsgGCClientHelloR2 = 4013,
  k_EMsgGCClientHelloR3 = 4014,
  k_EMsgGCClientHelloR4 = 4015
};
bool EGCBaseClientMsg_IsValid(int value);
const EGCBaseClientMsg EGCBaseClientMsg_MIN = k_EMsgGCClientWelcome;
const EGCBaseClientMsg EGCBaseClientMsg_MAX = k_EMsgGCClientHelloR4;
const int EGCBaseClientMsg_ARRAYSIZE = EGCBaseClientMsg_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGCBaseClientMsg_descriptor();
inline const ::std::string& EGCBaseClientMsg_Name(EGCBaseClientMsg value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGCBaseClientMsg_descriptor(), value);
}
inline bool EGCBaseClientMsg_Parse(
    const ::std::string& name, EGCBaseClientMsg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGCBaseClientMsg>(
    EGCBaseClientMsg_descriptor(), name, value);
}
enum EGCToGCMsg {
  k_EGCToGCMsgMasterAck = 150,
  k_EGCToGCMsgMasterAckResponse = 151,
  k_EGCToGCMsgRouted = 152,
  k_EGCToGCMsgRoutedReply = 153,
  k_EMsgUpdateSessionIP = 154,
  k_EMsgRequestSessionIP = 155,
  k_EMsgRequestSessionIPResponse = 156,
  k_EGCToGCMsgMasterStartupComplete = 157
};
bool EGCToGCMsg_IsValid(int value);
const EGCToGCMsg EGCToGCMsg_MIN = k_EGCToGCMsgMasterAck;
const EGCToGCMsg EGCToGCMsg_MAX = k_EGCToGCMsgMasterStartupComplete;
const int EGCToGCMsg_ARRAYSIZE = EGCToGCMsg_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGCToGCMsg_descriptor();
inline const ::std::string& EGCToGCMsg_Name(EGCToGCMsg value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGCToGCMsg_descriptor(), value);
}
inline bool EGCToGCMsg_Parse(
    const ::std::string& name, EGCToGCMsg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGCToGCMsg>(
    EGCToGCMsg_descriptor(), name, value);
}
// ===================================================================

class CMsgGCHVacVerificationChange : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCHVacVerificationChange) */ {
 public:
  CMsgGCHVacVerificationChange();
  virtual ~CMsgGCHVacVerificationChange();

  CMsgGCHVacVerificationChange(const CMsgGCHVacVerificationChange& from);

  inline CMsgGCHVacVerificationChange& operator=(const CMsgGCHVacVerificationChange& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCHVacVerificationChange(CMsgGCHVacVerificationChange&& from) noexcept
    : CMsgGCHVacVerificationChange() {
    *this = ::std::move(from);
  }

  inline CMsgGCHVacVerificationChange& operator=(CMsgGCHVacVerificationChange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCHVacVerificationChange& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCHVacVerificationChange* internal_default_instance() {
    return reinterpret_cast<const CMsgGCHVacVerificationChange*>(
               &_CMsgGCHVacVerificationChange_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMsgGCHVacVerificationChange* other);
  friend void swap(CMsgGCHVacVerificationChange& a, CMsgGCHVacVerificationChange& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCHVacVerificationChange* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCHVacVerificationChange* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCHVacVerificationChange& from);
  void MergeFrom(const CMsgGCHVacVerificationChange& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCHVacVerificationChange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint32 appid = 2;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 2;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional bool is_verified = 3;
  bool has_is_verified() const;
  void clear_is_verified();
  static const int kIsVerifiedFieldNumber = 3;
  bool is_verified() const;
  void set_is_verified(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCHVacVerificationChange)
 private:
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_appid();
  void clear_has_appid();
  void set_has_is_verified();
  void clear_has_is_verified();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint32 appid_;
  bool is_verified_;
  friend struct ::protobuf_gcsystemmsgs_2eproto::TableStruct;
  friend void ::protobuf_gcsystemmsgs_2eproto::InitDefaultsCMsgGCHVacVerificationChangeImpl();
};
// -------------------------------------------------------------------

class CMsgGCHAccountPhoneNumberChange : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCHAccountPhoneNumberChange) */ {
 public:
  CMsgGCHAccountPhoneNumberChange();
  virtual ~CMsgGCHAccountPhoneNumberChange();

  CMsgGCHAccountPhoneNumberChange(const CMsgGCHAccountPhoneNumberChange& from);

  inline CMsgGCHAccountPhoneNumberChange& operator=(const CMsgGCHAccountPhoneNumberChange& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCHAccountPhoneNumberChange(CMsgGCHAccountPhoneNumberChange&& from) noexcept
    : CMsgGCHAccountPhoneNumberChange() {
    *this = ::std::move(from);
  }

  inline CMsgGCHAccountPhoneNumberChange& operator=(CMsgGCHAccountPhoneNumberChange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCHAccountPhoneNumberChange& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCHAccountPhoneNumberChange* internal_default_instance() {
    return reinterpret_cast<const CMsgGCHAccountPhoneNumberChange*>(
               &_CMsgGCHAccountPhoneNumberChange_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CMsgGCHAccountPhoneNumberChange* other);
  friend void swap(CMsgGCHAccountPhoneNumberChange& a, CMsgGCHAccountPhoneNumberChange& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCHAccountPhoneNumberChange* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCHAccountPhoneNumberChange* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCHAccountPhoneNumberChange& from);
  void MergeFrom(const CMsgGCHAccountPhoneNumberChange& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCHAccountPhoneNumberChange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint64 phone_id = 3;
  bool has_phone_id() const;
  void clear_phone_id();
  static const int kPhoneIdFieldNumber = 3;
  ::google::protobuf::uint64 phone_id() const;
  void set_phone_id(::google::protobuf::uint64 value);

  // optional uint32 appid = 2;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 2;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional bool is_verified = 4;
  bool has_is_verified() const;
  void clear_is_verified();
  static const int kIsVerifiedFieldNumber = 4;
  bool is_verified() const;
  void set_is_verified(bool value);

  // optional bool is_identifying = 5;
  bool has_is_identifying() const;
  void clear_is_identifying();
  static const int kIsIdentifyingFieldNumber = 5;
  bool is_identifying() const;
  void set_is_identifying(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCHAccountPhoneNumberChange)
 private:
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_appid();
  void clear_has_appid();
  void set_has_phone_id();
  void clear_has_phone_id();
  void set_has_is_verified();
  void clear_has_is_verified();
  void set_has_is_identifying();
  void clear_has_is_identifying();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint64 phone_id_;
  ::google::protobuf::uint32 appid_;
  bool is_verified_;
  bool is_identifying_;
  friend struct ::protobuf_gcsystemmsgs_2eproto::TableStruct;
  friend void ::protobuf_gcsystemmsgs_2eproto::InitDefaultsCMsgGCHAccountPhoneNumberChangeImpl();
};
// -------------------------------------------------------------------

class CMsgGCHInviteUserToLobby : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCHInviteUserToLobby) */ {
 public:
  CMsgGCHInviteUserToLobby();
  virtual ~CMsgGCHInviteUserToLobby();

  CMsgGCHInviteUserToLobby(const CMsgGCHInviteUserToLobby& from);

  inline CMsgGCHInviteUserToLobby& operator=(const CMsgGCHInviteUserToLobby& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCHInviteUserToLobby(CMsgGCHInviteUserToLobby&& from) noexcept
    : CMsgGCHInviteUserToLobby() {
    *this = ::std::move(from);
  }

  inline CMsgGCHInviteUserToLobby& operator=(CMsgGCHInviteUserToLobby&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCHInviteUserToLobby& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCHInviteUserToLobby* internal_default_instance() {
    return reinterpret_cast<const CMsgGCHInviteUserToLobby*>(
               &_CMsgGCHInviteUserToLobby_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CMsgGCHInviteUserToLobby* other);
  friend void swap(CMsgGCHInviteUserToLobby& a, CMsgGCHInviteUserToLobby& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCHInviteUserToLobby* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCHInviteUserToLobby* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCHInviteUserToLobby& from);
  void MergeFrom(const CMsgGCHInviteUserToLobby& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCHInviteUserToLobby* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional fixed64 steamid_invited = 3;
  bool has_steamid_invited() const;
  void clear_steamid_invited();
  static const int kSteamidInvitedFieldNumber = 3;
  ::google::protobuf::uint64 steamid_invited() const;
  void set_steamid_invited(::google::protobuf::uint64 value);

  // optional fixed64 steamid_lobby = 4;
  bool has_steamid_lobby() const;
  void clear_steamid_lobby();
  static const int kSteamidLobbyFieldNumber = 4;
  ::google::protobuf::uint64 steamid_lobby() const;
  void set_steamid_lobby(::google::protobuf::uint64 value);

  // optional uint32 appid = 2;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 2;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCHInviteUserToLobby)
 private:
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_appid();
  void clear_has_appid();
  void set_has_steamid_invited();
  void clear_has_steamid_invited();
  void set_has_steamid_lobby();
  void clear_has_steamid_lobby();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint64 steamid_invited_;
  ::google::protobuf::uint64 steamid_lobby_;
  ::google::protobuf::uint32 appid_;
  friend struct ::protobuf_gcsystemmsgs_2eproto::TableStruct;
  friend void ::protobuf_gcsystemmsgs_2eproto::InitDefaultsCMsgGCHInviteUserToLobbyImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMsgGCHVacVerificationChange

// optional fixed64 steamid = 1;
inline bool CMsgGCHVacVerificationChange::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCHVacVerificationChange::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCHVacVerificationChange::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCHVacVerificationChange::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgGCHVacVerificationChange::steamid() const {
  // @@protoc_insertion_point(field_get:CMsgGCHVacVerificationChange.steamid)
  return steamid_;
}
inline void CMsgGCHVacVerificationChange::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCHVacVerificationChange.steamid)
}

// optional uint32 appid = 2;
inline bool CMsgGCHVacVerificationChange::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCHVacVerificationChange::set_has_appid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCHVacVerificationChange::clear_has_appid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCHVacVerificationChange::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CMsgGCHVacVerificationChange::appid() const {
  // @@protoc_insertion_point(field_get:CMsgGCHVacVerificationChange.appid)
  return appid_;
}
inline void CMsgGCHVacVerificationChange::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCHVacVerificationChange.appid)
}

// optional bool is_verified = 3;
inline bool CMsgGCHVacVerificationChange::has_is_verified() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCHVacVerificationChange::set_has_is_verified() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCHVacVerificationChange::clear_has_is_verified() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCHVacVerificationChange::clear_is_verified() {
  is_verified_ = false;
  clear_has_is_verified();
}
inline bool CMsgGCHVacVerificationChange::is_verified() const {
  // @@protoc_insertion_point(field_get:CMsgGCHVacVerificationChange.is_verified)
  return is_verified_;
}
inline void CMsgGCHVacVerificationChange::set_is_verified(bool value) {
  set_has_is_verified();
  is_verified_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCHVacVerificationChange.is_verified)
}

// -------------------------------------------------------------------

// CMsgGCHAccountPhoneNumberChange

// optional fixed64 steamid = 1;
inline bool CMsgGCHAccountPhoneNumberChange::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCHAccountPhoneNumberChange::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCHAccountPhoneNumberChange::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCHAccountPhoneNumberChange::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgGCHAccountPhoneNumberChange::steamid() const {
  // @@protoc_insertion_point(field_get:CMsgGCHAccountPhoneNumberChange.steamid)
  return steamid_;
}
inline void CMsgGCHAccountPhoneNumberChange::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCHAccountPhoneNumberChange.steamid)
}

// optional uint32 appid = 2;
inline bool CMsgGCHAccountPhoneNumberChange::has_appid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCHAccountPhoneNumberChange::set_has_appid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCHAccountPhoneNumberChange::clear_has_appid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCHAccountPhoneNumberChange::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CMsgGCHAccountPhoneNumberChange::appid() const {
  // @@protoc_insertion_point(field_get:CMsgGCHAccountPhoneNumberChange.appid)
  return appid_;
}
inline void CMsgGCHAccountPhoneNumberChange::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCHAccountPhoneNumberChange.appid)
}

// optional uint64 phone_id = 3;
inline bool CMsgGCHAccountPhoneNumberChange::has_phone_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCHAccountPhoneNumberChange::set_has_phone_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCHAccountPhoneNumberChange::clear_has_phone_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCHAccountPhoneNumberChange::clear_phone_id() {
  phone_id_ = GOOGLE_ULONGLONG(0);
  clear_has_phone_id();
}
inline ::google::protobuf::uint64 CMsgGCHAccountPhoneNumberChange::phone_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCHAccountPhoneNumberChange.phone_id)
  return phone_id_;
}
inline void CMsgGCHAccountPhoneNumberChange::set_phone_id(::google::protobuf::uint64 value) {
  set_has_phone_id();
  phone_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCHAccountPhoneNumberChange.phone_id)
}

// optional bool is_verified = 4;
inline bool CMsgGCHAccountPhoneNumberChange::has_is_verified() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCHAccountPhoneNumberChange::set_has_is_verified() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCHAccountPhoneNumberChange::clear_has_is_verified() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCHAccountPhoneNumberChange::clear_is_verified() {
  is_verified_ = false;
  clear_has_is_verified();
}
inline bool CMsgGCHAccountPhoneNumberChange::is_verified() const {
  // @@protoc_insertion_point(field_get:CMsgGCHAccountPhoneNumberChange.is_verified)
  return is_verified_;
}
inline void CMsgGCHAccountPhoneNumberChange::set_is_verified(bool value) {
  set_has_is_verified();
  is_verified_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCHAccountPhoneNumberChange.is_verified)
}

// optional bool is_identifying = 5;
inline bool CMsgGCHAccountPhoneNumberChange::has_is_identifying() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCHAccountPhoneNumberChange::set_has_is_identifying() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCHAccountPhoneNumberChange::clear_has_is_identifying() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCHAccountPhoneNumberChange::clear_is_identifying() {
  is_identifying_ = false;
  clear_has_is_identifying();
}
inline bool CMsgGCHAccountPhoneNumberChange::is_identifying() const {
  // @@protoc_insertion_point(field_get:CMsgGCHAccountPhoneNumberChange.is_identifying)
  return is_identifying_;
}
inline void CMsgGCHAccountPhoneNumberChange::set_is_identifying(bool value) {
  set_has_is_identifying();
  is_identifying_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCHAccountPhoneNumberChange.is_identifying)
}

// -------------------------------------------------------------------

// CMsgGCHInviteUserToLobby

// optional fixed64 steamid = 1;
inline bool CMsgGCHInviteUserToLobby::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCHInviteUserToLobby::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCHInviteUserToLobby::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCHInviteUserToLobby::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgGCHInviteUserToLobby::steamid() const {
  // @@protoc_insertion_point(field_get:CMsgGCHInviteUserToLobby.steamid)
  return steamid_;
}
inline void CMsgGCHInviteUserToLobby::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCHInviteUserToLobby.steamid)
}

// optional uint32 appid = 2;
inline bool CMsgGCHInviteUserToLobby::has_appid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCHInviteUserToLobby::set_has_appid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCHInviteUserToLobby::clear_has_appid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCHInviteUserToLobby::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CMsgGCHInviteUserToLobby::appid() const {
  // @@protoc_insertion_point(field_get:CMsgGCHInviteUserToLobby.appid)
  return appid_;
}
inline void CMsgGCHInviteUserToLobby::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCHInviteUserToLobby.appid)
}

// optional fixed64 steamid_invited = 3;
inline bool CMsgGCHInviteUserToLobby::has_steamid_invited() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCHInviteUserToLobby::set_has_steamid_invited() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCHInviteUserToLobby::clear_has_steamid_invited() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCHInviteUserToLobby::clear_steamid_invited() {
  steamid_invited_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid_invited();
}
inline ::google::protobuf::uint64 CMsgGCHInviteUserToLobby::steamid_invited() const {
  // @@protoc_insertion_point(field_get:CMsgGCHInviteUserToLobby.steamid_invited)
  return steamid_invited_;
}
inline void CMsgGCHInviteUserToLobby::set_steamid_invited(::google::protobuf::uint64 value) {
  set_has_steamid_invited();
  steamid_invited_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCHInviteUserToLobby.steamid_invited)
}

// optional fixed64 steamid_lobby = 4;
inline bool CMsgGCHInviteUserToLobby::has_steamid_lobby() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCHInviteUserToLobby::set_has_steamid_lobby() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCHInviteUserToLobby::clear_has_steamid_lobby() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCHInviteUserToLobby::clear_steamid_lobby() {
  steamid_lobby_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid_lobby();
}
inline ::google::protobuf::uint64 CMsgGCHInviteUserToLobby::steamid_lobby() const {
  // @@protoc_insertion_point(field_get:CMsgGCHInviteUserToLobby.steamid_lobby)
  return steamid_lobby_;
}
inline void CMsgGCHInviteUserToLobby::set_steamid_lobby(::google::protobuf::uint64 value) {
  set_has_steamid_lobby();
  steamid_lobby_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCHInviteUserToLobby.steamid_lobby)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::EGCSystemMsg> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EGCSystemMsg>() {
  return ::EGCSystemMsg_descriptor();
}
template <> struct is_proto_enum< ::ESOMsg> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ESOMsg>() {
  return ::ESOMsg_descriptor();
}
template <> struct is_proto_enum< ::EGCBaseClientMsg> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EGCBaseClientMsg>() {
  return ::EGCBaseClientMsg_descriptor();
}
template <> struct is_proto_enum< ::EGCToGCMsg> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EGCToGCMsg>() {
  return ::EGCToGCMsg_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gcsystemmsgs_2eproto__INCLUDED
