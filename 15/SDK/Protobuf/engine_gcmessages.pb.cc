// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: engine_gcmessages.proto

#include "engine_gcmessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class CEngineGotvSyncPacketDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CEngineGotvSyncPacket>
      _instance;
} _CEngineGotvSyncPacket_default_instance_;
namespace protobuf_engine_5fgcmessages_2eproto {
void InitDefaultsCEngineGotvSyncPacketImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CEngineGotvSyncPacket_default_instance_;
    new (ptr) ::CEngineGotvSyncPacket();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CEngineGotvSyncPacket::InitAsDefaultInstance();
}

void InitDefaultsCEngineGotvSyncPacket() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCEngineGotvSyncPacketImpl);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEngineGotvSyncPacket, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEngineGotvSyncPacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEngineGotvSyncPacket, match_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEngineGotvSyncPacket, instance_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEngineGotvSyncPacket, signupfragment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEngineGotvSyncPacket, currentfragment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEngineGotvSyncPacket, tickrate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEngineGotvSyncPacket, tick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEngineGotvSyncPacket, rtdelay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEngineGotvSyncPacket, rcvage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CEngineGotvSyncPacket, keyframe_interval_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 14, sizeof(::CEngineGotvSyncPacket)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CEngineGotvSyncPacket_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "engine_gcmessages.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027engine_gcmessages.proto\032 google/protob"
      "uf/descriptor.proto\"\313\001\n\025CEngineGotvSyncP"
      "acket\022\020\n\010match_id\030\001 \001(\004\022\023\n\013instance_id\030\002"
      " \001(\r\022\026\n\016signupfragment\030\003 \001(\r\022\027\n\017currentf"
      "ragment\030\004 \001(\r\022\020\n\010tickrate\030\005 \001(\002\022\014\n\004tick\030"
      "\006 \001(\r\022\017\n\007rtdelay\030\010 \001(\002\022\016\n\006rcvage\030\t \001(\002\022\031"
      "\n\021keyframe_interval\030\n \001(\002B\003\200\001\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 270);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "engine_gcmessages.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fdescriptor_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_engine_5fgcmessages_2eproto

// ===================================================================

void CEngineGotvSyncPacket::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CEngineGotvSyncPacket::kMatchIdFieldNumber;
const int CEngineGotvSyncPacket::kInstanceIdFieldNumber;
const int CEngineGotvSyncPacket::kSignupfragmentFieldNumber;
const int CEngineGotvSyncPacket::kCurrentfragmentFieldNumber;
const int CEngineGotvSyncPacket::kTickrateFieldNumber;
const int CEngineGotvSyncPacket::kTickFieldNumber;
const int CEngineGotvSyncPacket::kRtdelayFieldNumber;
const int CEngineGotvSyncPacket::kRcvageFieldNumber;
const int CEngineGotvSyncPacket::kKeyframeIntervalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CEngineGotvSyncPacket::CEngineGotvSyncPacket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_engine_5fgcmessages_2eproto::InitDefaultsCEngineGotvSyncPacket();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CEngineGotvSyncPacket)
}
CEngineGotvSyncPacket::CEngineGotvSyncPacket(const CEngineGotvSyncPacket& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&match_id_, &from.match_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&keyframe_interval_) -
    reinterpret_cast<char*>(&match_id_)) + sizeof(keyframe_interval_));
  // @@protoc_insertion_point(copy_constructor:CEngineGotvSyncPacket)
}

void CEngineGotvSyncPacket::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&match_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&keyframe_interval_) -
      reinterpret_cast<char*>(&match_id_)) + sizeof(keyframe_interval_));
}

CEngineGotvSyncPacket::~CEngineGotvSyncPacket() {
  // @@protoc_insertion_point(destructor:CEngineGotvSyncPacket)
  SharedDtor();
}

void CEngineGotvSyncPacket::SharedDtor() {
}

void CEngineGotvSyncPacket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CEngineGotvSyncPacket::descriptor() {
  ::protobuf_engine_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_engine_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CEngineGotvSyncPacket& CEngineGotvSyncPacket::default_instance() {
  ::protobuf_engine_5fgcmessages_2eproto::InitDefaultsCEngineGotvSyncPacket();
  return *internal_default_instance();
}

CEngineGotvSyncPacket* CEngineGotvSyncPacket::New(::google::protobuf::Arena* arena) const {
  CEngineGotvSyncPacket* n = new CEngineGotvSyncPacket;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CEngineGotvSyncPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:CEngineGotvSyncPacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&match_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rcvage_) -
        reinterpret_cast<char*>(&match_id_)) + sizeof(rcvage_));
  }
  keyframe_interval_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CEngineGotvSyncPacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CEngineGotvSyncPacket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 match_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_match_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &match_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 instance_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_instance_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &instance_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 signupfragment = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_signupfragment();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &signupfragment_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 currentfragment = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_currentfragment();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currentfragment_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float tickrate = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_tickrate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &tickrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 tick = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_tick();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tick_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float rtdelay = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          set_has_rtdelay();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rtdelay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float rcvage = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          set_has_rcvage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rcvage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float keyframe_interval = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {
          set_has_keyframe_interval();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &keyframe_interval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CEngineGotvSyncPacket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CEngineGotvSyncPacket)
  return false;
#undef DO_
}

void CEngineGotvSyncPacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CEngineGotvSyncPacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 match_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->match_id(), output);
  }

  // optional uint32 instance_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->instance_id(), output);
  }

  // optional uint32 signupfragment = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->signupfragment(), output);
  }

  // optional uint32 currentfragment = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->currentfragment(), output);
  }

  // optional float tickrate = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->tickrate(), output);
  }

  // optional uint32 tick = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->tick(), output);
  }

  // optional float rtdelay = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->rtdelay(), output);
  }

  // optional float rcvage = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->rcvage(), output);
  }

  // optional float keyframe_interval = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->keyframe_interval(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CEngineGotvSyncPacket)
}

::google::protobuf::uint8* CEngineGotvSyncPacket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CEngineGotvSyncPacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 match_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->match_id(), target);
  }

  // optional uint32 instance_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->instance_id(), target);
  }

  // optional uint32 signupfragment = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->signupfragment(), target);
  }

  // optional uint32 currentfragment = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->currentfragment(), target);
  }

  // optional float tickrate = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->tickrate(), target);
  }

  // optional uint32 tick = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->tick(), target);
  }

  // optional float rtdelay = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->rtdelay(), target);
  }

  // optional float rcvage = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->rcvage(), target);
  }

  // optional float keyframe_interval = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->keyframe_interval(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CEngineGotvSyncPacket)
  return target;
}

size_t CEngineGotvSyncPacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CEngineGotvSyncPacket)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional uint64 match_id = 1;
    if (has_match_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->match_id());
    }

    // optional uint32 instance_id = 2;
    if (has_instance_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->instance_id());
    }

    // optional uint32 signupfragment = 3;
    if (has_signupfragment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->signupfragment());
    }

    // optional uint32 currentfragment = 4;
    if (has_currentfragment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->currentfragment());
    }

    // optional float tickrate = 5;
    if (has_tickrate()) {
      total_size += 1 + 4;
    }

    // optional uint32 tick = 6;
    if (has_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tick());
    }

    // optional float rtdelay = 8;
    if (has_rtdelay()) {
      total_size += 1 + 4;
    }

    // optional float rcvage = 9;
    if (has_rcvage()) {
      total_size += 1 + 4;
    }

  }
  // optional float keyframe_interval = 10;
  if (has_keyframe_interval()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CEngineGotvSyncPacket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CEngineGotvSyncPacket)
  GOOGLE_DCHECK_NE(&from, this);
  const CEngineGotvSyncPacket* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CEngineGotvSyncPacket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CEngineGotvSyncPacket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CEngineGotvSyncPacket)
    MergeFrom(*source);
  }
}

void CEngineGotvSyncPacket::MergeFrom(const CEngineGotvSyncPacket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CEngineGotvSyncPacket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      match_id_ = from.match_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      instance_id_ = from.instance_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      signupfragment_ = from.signupfragment_;
    }
    if (cached_has_bits & 0x00000008u) {
      currentfragment_ = from.currentfragment_;
    }
    if (cached_has_bits & 0x00000010u) {
      tickrate_ = from.tickrate_;
    }
    if (cached_has_bits & 0x00000020u) {
      tick_ = from.tick_;
    }
    if (cached_has_bits & 0x00000040u) {
      rtdelay_ = from.rtdelay_;
    }
    if (cached_has_bits & 0x00000080u) {
      rcvage_ = from.rcvage_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_keyframe_interval(from.keyframe_interval());
  }
}

void CEngineGotvSyncPacket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CEngineGotvSyncPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CEngineGotvSyncPacket::CopyFrom(const CEngineGotvSyncPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CEngineGotvSyncPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CEngineGotvSyncPacket::IsInitialized() const {
  return true;
}

void CEngineGotvSyncPacket::Swap(CEngineGotvSyncPacket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CEngineGotvSyncPacket::InternalSwap(CEngineGotvSyncPacket* other) {
  using std::swap;
  swap(match_id_, other->match_id_);
  swap(instance_id_, other->instance_id_);
  swap(signupfragment_, other->signupfragment_);
  swap(currentfragment_, other->currentfragment_);
  swap(tickrate_, other->tickrate_);
  swap(tick_, other->tick_);
  swap(rtdelay_, other->rtdelay_);
  swap(rcvage_, other->rcvage_);
  swap(keyframe_interval_, other->keyframe_interval_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CEngineGotvSyncPacket::GetMetadata() const {
  protobuf_engine_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_engine_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
